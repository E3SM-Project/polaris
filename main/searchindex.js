Search.setIndex({"alltitles": {"100layerE3SMv1": [[395, "id1"]], "1D Grid type": [[395, "d-grid-type"]], "3D vertical coordinates": [[395, "d-vertical-coordinates"]], "60layerPHC": [[395, "layerphc"]], "80layerE3SMv1": [[395, "layere3smv1"]], "<Category of task>": [[412, null], [417, null]], "A \u201cuser\u201d config file": [[385, "a-user-config-file"]], "API reference": [[3, null]], "Activating the environment": [[365, "activating-the-environment"]], "Adding E3SM component as an input": [[14, "adding-e3sm-component-as-an-input"]], "Adding a Machine Config File": [[141, "adding-a-machine-config-file"]], "Adding a New Supported Machine": [[141, "adding-a-new-supported-machine"]], "Adding a config file": [[384, "adding-a-config-file"]], "Adding a namelist file": [[14, "adding-a-namelist-file"]], "Adding a parameter study": [[384, "adding-a-parameter-study"]], "Adding a second task": [[384, "adding-a-second-task"]], "Adding a shared \u201csuperclass\u201d for tasks": [[384, "adding-a-shared-superclass-for-tasks"]], "Adding a streams file": [[14, "adding-a-streams-file"]], "Adding a template streams file": [[14, "adding-a-template-streams-file"]], "Adding a visualization step": [[384, "adding-a-visualization-step"]], "Adding a yaml file": [[14, "adding-a-yaml-file"]], "Adding a \u201cdefault\u201d task": [[384, "adding-a-default-task"]], "Adding dynamic model config options": [[384, "adding-dynamic-model-config-options"]], "Adding model config options": [[14, "adding-model-config-options"]], "Adding model config options in code": [[384, "adding-model-config-options-in-code"]], "Adding more validation": [[384, "adding-more-validation"]], "Adding other steps as dependencies": [[361, "adding-other-steps-as-dependencies"]], "Adding plots": [[384, "adding-plots"]], "Adding step outputs": [[384, "adding-step-outputs"]], "Adding the analysis step": [[384, "adding-the-analysis-step"]], "Adding the forward step": [[384, "adding-the-forward-step"]], "Adding the forward step to the task": [[384, "adding-the-forward-step-to-the-task"]], "Adding the init step": [[384, "adding-the-init-step"]], "Adding the step to the task": [[384, "adding-the-step-to-the-task"]], "Adding the steps to the task": [[384, "adding-the-steps-to-the-task"]], "Adding the viz step to the task": [[384, "adding-the-viz-step-to-the-task"]], "Adding validation": [[384, "adding-validation"], [384, "id1"]], "Adding yaml, namelist and streams files": [[14, "adding-yaml-namelist-and-streams-files"]], "Algorithm Design (optional)": [[2, "algorithm-design-optional"]], "Algorithm Design: name-of-topic-here (same as Requirement)": [[2, "algorithm-design-name-of-topic-here-same-as-requirement"]], "Anvil": [[136, null], [386, null]], "Area": [[15, "area"]], "Base Classes": [[3, "base-classes"]], "Boundary conditions": [[342, "boundary-conditions"]], "Building E3SM components": [[365, "building-e3sm-components"]], "Building supported E3SM components as standalone models": [[413, "building-supported-e3sm-components-as-standalone-models"]], "Building the Documentation": [[4, null]], "Building the Spack Environment": [[141, "building-the-spack-environment"]], "Cached output files": [[361, "cached-output-files"]], "Categories of tasks": [[357, null]], "Chicoma": [[137, null], [387, null]], "Chicoma-CPU": [[387, "chicoma-cpu"]], "Chrysalis": [[138, null], [388, null]], "Classes": [[364, "classes"]], "Code Style": [[364, "code-style"]], "Code sharing": [[364, "code-sharing"]], "Code style for polaris": [[365, "code-style-for-polaris"]], "Command-line interface": [[3, "command-line-interface"], [5, null]], "Comments in config files": [[9, "comments-in-config-files"]], "Compass": [[383, "compass"]], "Component": [[3, "component"]], "Components": [[3, "components"], [358, null]], "Computing the cell count": [[384, "computing-the-cell-count"]], "CompyMcNodeFace": [[139, null], [389, null]], "Conda": [[6, "conda"]], "Config Files": [[385, null]], "Config file": [[358, "config-file"]], "Config files": [[9, null]], "Config options describing E3SM machines": [[6, "config-options-describing-e3sm-machines"]], "Constructor": [[358, "constructor"]], "Convergence Tests": [[143, "convergence-tests"], [144, "convergence-tests"]], "Copying input files": [[361, "copying-input-files"]], "Creating a horizontal mesh": [[384, "creating-a-horizontal-mesh"]], "Creating a vertical coordinate": [[384, "creating-a-vertical-coordinate"]], "Creating an initial condition": [[384, "creating-an-initial-condition"]], "Creating spack environments": [[6, "creating-spack-environments"]], "Creating/updating only the polaris environment": [[365, "creating-updating-only-the-polaris-environment"]], "Datasets": [[18, "datasets"]], "Defining model config options and streams": [[384, "defining-model-config-options-and-streams"]], "Deploy spack for polaris without Albany or PETSc": [[6, "deploy-spack-for-polaris-without-albany-or-petsc"]], "Deploying a new spack environment": [[6, null]], "Deploying shared spack environments": [[6, "deploying-shared-spack-environments"]], "Deploying spack with Albany": [[6, "deploying-spack-with-albany"]], "Deploying spack with PETSc (and Netlib LAPACK)": [[6, "deploying-spack-with-petsc-and-netlib-lapack"]], "Describing a Spack Environment": [[141, "describing-a-spack-environment"]], "Design Documents": [[0, null]], "Developer Tutorial: Adding a new test group": [[384, null]], "Developer's guide": [[383, null]], "Directory structure": [[359, null]], "Docstrings": [[7, "docstrings"]], "Documentation": [[7, null], [384, "documentation"]], "Download": [[11, "download"]], "Downloading and symlinking input files": [[361, "downloading-and-symlinking-input-files"]], "Dynamic model config options": [[14, "dynamic-model-config-options"]], "E3SM supported machines": [[413, "e3sm-supported-machines"]], "Enhancements": [[384, "enhancements"]], "Environments with Albany": [[365, "environments-with-albany"]], "Environments with PETSc and Netlib-LAPACK": [[365, "environments-with-petsc-and-netlib-lapack"]], "Forcing": [[342, "forcing"], [378, "forcing"]], "Framework": [[10, null], [394, null]], "Frontier": [[140, null], [390, null]], "General planar meshes": [[13, "general-planar-meshes"]], "Getting started": [[384, "getting-started"]], "Glossary": [[382, null], [383, null]], "How to (and how not to) pass data between steps": [[384, "how-to-and-how-not-to-pass-data-between-steps"]], "IO": [[11, null]], "Ice Shelf": [[143, "ice-shelf"]], "Ice Shelf Tasks": [[144, "ice-shelf-tasks"]], "Ice shelf": [[393, null]], "Identifying E3SM machines": [[6, "identifying-e3sm-machines"]], "Implementation": [[1, "implementation"], [2, "implementation"]], "Implementation: Shared steps are not daughters of a task": [[1, "implementation-shared-steps-are-not-daughters-of-a-task"]], "Implementation: Shared steps are run before steps that depend on their output.": [[1, "implementation-shared-steps-are-run-before-steps-that-depend-on-their-output"]], "Implementation: Shared steps are set up once.": [[1, "implementation-shared-steps-are-set-up-once"]], "Implementation: The output of shared steps may be used by multiple tasks.": [[1, "implementation-the-output-of-shared-steps-may-be-used-by-multiple-tasks"]], "Implementation: Working directory step paths are easily discoverable by users.": [[1, "implementation-working-directory-step-paths-are-easily-discoverable-by-users"]], "Implementation: Working directory structure is intuitive.": [[1, "implementation-working-directory-structure-is-intuitive"]], "Implementation: name-of-topic-here (same as Requirement)": [[2, "implementation-name-of-topic-here-same-as-requirement"]], "Implementation: tasks do not rely on outputs from steps in other tasks": [[1, "implementation-tasks-do-not-rely-on-outputs-from-steps-in-other-tasks"]], "Initial conditions": [[342, "initial-conditions"], [378, "initial-conditions"]], "Input and output from an E3SM component": [[144, "input-and-output-from-an-e3sm-component"]], "Input files": [[361, "input-files"]], "Jupyter notebook on remote data": [[392, "jupyter-notebook-on-remote-data"]], "Loading and running Polaris on Anvil": [[386, "loading-and-running-polaris-on-anvil"]], "Loading and running Polaris on Chicoma": [[387, "loading-and-running-polaris-on-chicoma"]], "Loading and running Polaris on Chrysalis": [[388, "loading-and-running-polaris-on-chrysalis"]], "Loading and running Polaris on CompyMcNodeFace": [[389, "loading-and-running-polaris-on-compymcnodeface"]], "Loading and running Polaris on Frontier": [[390, "loading-and-running-polaris-on-frontier"]], "Loading and running Polaris on Perlmutter": [[392, "loading-and-running-polaris-on-perlmutter"]], "Loading polaris conda and spack environments": [[413, "loading-polaris-conda-and-spack-environments"]], "Logging": [[12, null]], "MALI": [[365, "mali"]], "MPAS": [[15, null]], "MPAS-Ocean": [[342, null], [365, "mpas-ocean"]], "MPICH": [[391, "mpich"]], "Mache": [[6, "mache"], [6, "id1"]], "Machines": [[141, null], [391, null]], "Making a graph file": [[14, "making-a-graph-file"]], "Making a new test group": [[384, "making-a-new-test-group"]], "Mapping from MPAS-Ocean to Omega config options": [[144, "mapping-from-mpas-ocean-to-omega-config-options"]], "Mesh": [[13, null]], "Model": [[14, null], [144, "model"]], "Model config options and streams": [[144, "model-config-options-and-streams"]], "ModelStep": [[3, "modelstep"]], "Models": [[341, null]], "Modules": [[364, "modules"]], "Modules for polaris commands": [[8, null]], "Modules, env. variables, etc. for  E3SM machines": [[6, "modules-env-variables-etc-for-e3sm-machines"]], "Nightly suite": [[362, "nightly-suite"]], "No MPI from conda-forge": [[391, "no-mpi-from-conda-forge"]], "Norms": [[18, "norms"]], "Ocean Framework": [[143, "ocean-framework"]], "Ocean Model": [[143, "ocean-model"]], "Ocean component": [[340, null], [396, null]], "Ocean framework": [[144, null]], "Omega": [[365, "omega"]], "OpenMPI": [[391, "openmpi"]], "Optional flags": [[365, "optional-flags"]], "Organization of Tasks": [[360, null]], "Other Machines": [[141, "other-machines"], [391, "other-machines"]], "Other machines": [[413, "other-machines"]], "Output files": [[361, "output-files"]], "Overview": [[364, null]], "Packages": [[364, "packages"]], "Packages and Modules": [[364, "packages-and-modules"]], "Partitioning the mesh": [[14, "partitioning-the-mesh"]], "Perlmutter": [[142, null], [392, null]], "Perlmutter-CPU": [[392, "perlmutter-cpu"]], "Permissions": [[11, "permissions"]], "Planar Meshes": [[13, "planar-meshes"]], "Polaris": [[383, null]], "Provenance": [[16, null]], "Proxy on LANL Macs": [[381, "proxy-on-lanl-macs"]], "Pull-Request (PR) suite": [[362, "pull-request-pr-suite"]], "Quasi-uniform and Icosahedral Spherical Meshes": [[144, "quasi-uniform-and-icosahedral-spherical-meshes"]], "Quick Start for Developers": [[365, null]], "Quick Start for Users": [[413, null]], "Quick Start for Users is not yet valid": [[413, null]], "RPE task": [[407, "rpe-task"]], "Reference Potential Energy (RPE)": [[143, "reference-potential-energy-rpe"]], "Remapping": [[17, null]], "Requirement: Shared steps are not daughters of a task": [[1, "requirement-shared-steps-are-not-daughters-of-a-task"]], "Requirement: Shared steps are run before steps that depend on their output.": [[1, "requirement-shared-steps-are-run-before-steps-that-depend-on-their-output"]], "Requirement: Shared steps are run once.": [[1, "requirement-shared-steps-are-run-once"]], "Requirement: The output of shared steps may be used by multiple tasks.": [[1, "requirement-the-output-of-shared-steps-may-be-used-by-multiple-tasks"]], "Requirement: Working directory step paths are easily discoverable by users.": [[1, "requirement-working-directory-step-paths-are-easily-discoverable-by-users"]], "Requirement: Working directory structure is intuitive.": [[1, "requirement-working-directory-structure-is-intuitive"]], "Requirement: name-of-topic-here": [[2, "requirement-name-of-topic-here"]], "Requirement: tasks do not rely on outputs from steps in other tasks": [[1, "requirement-tasks-do-not-rely-on-outputs-from-steps-in-other-tasks"]], "Requirements": [[1, "requirements"], [2, "requirements"]], "Running a task": [[413, "running-a-task"]], "Running an E3SM component": [[14, "running-an-e3sm-component"], [144, "running-an-e3sm-component"]], "Running polaris from the repo": [[365, "running-polaris-from-the-repo"]], "Running with a job script": [[413, "running-with-a-job-script"]], "SSH adjustment steps": [[393, "ssh-adjustment-steps"]], "Sea ice component": [[414, null]], "SeaIce component": [[377, null]], "SeaIce framework": [[367, null]], "Set up a polaris repository with worktrees: for advanced users": [[365, "set-up-a-polaris-repository-with-worktrees-for-advanced-users"]], "Set up a polaris repository: for beginners": [[365, "set-up-a-polaris-repository-for-beginners"]], "Setting MPI resources": [[144, "setting-mpi-resources"]], "Setting time intervals in model config options": [[144, "setting-time-intervals-in-model-config-options"]], "Setting up tasks": [[413, "setting-up-tasks"]], "Shared config files": [[9, "shared-config-files"]], "Shared steps": [[1, null]], "Slurm job queueing": [[391, "slurm-job-queueing"]], "Solver errors when configuring conda environment": [[381, "solver-errors-when-configuring-conda-environment"]], "Spack": [[6, "spack"]], "Spherical Base Mesh Step": [[143, "spherical-base-mesh-step"]], "Spherical Convergence Tests": [[143, "spherical-convergence-tests"]], "Spherical Meshes": [[13, "spherical-meshes"]], "Step": [[3, "step"]], "Step attributes": [[361, "step-attributes"]], "Steps": [[361, null]], "Suites": [[362, null], [397, null], [413, "suites"], [418, null]], "Summary": [[1, "summary"], [2, "summary"]], "Supported Machines": [[141, "supported-machines"], [391, "supported-machines"]], "Supported Model: MPAS-Seaice": [[378, null]], "Supported Models": [[341, "supported-models"]], "Supported machines": [[365, "supported-machines"]], "Switching between different polaris environments": [[365, "switching-between-different-polaris-environments"]], "Symlink to input files from polaris": [[361, "symlink-to-input-files-from-polaris"]], "Symlinks": [[11, "symlinks"]], "Symlinks to input files": [[361, "symlinks-to-input-files"]], "Task": [[3, "task"]], "Task attributes": [[363, "task-attributes"]], "Tasks": [[143, "tasks"], [350, null], [363, null], [366, "tasks"], [379, null], [405, null], [415, null], [419, null]], "Template": [[2, null]], "Test the task again!": [[384, "test-the-task-again"]], "Test the task one more time!": [[384, "test-the-task-one-more-time"]], "Test things out!": [[384, "test-things-out"]], "Test-case config files": [[385, "test-case-config-files"]], "Testing": [[1, "testing"], [2, "testing"]], "Testing And Validation: Shared steps are not daughters of a task": [[1, "testing-and-validation-shared-steps-are-not-daughters-of-a-task"]], "Testing And Validation: Shared steps are run before steps that depend on their output.": [[1, "testing-and-validation-shared-steps-are-run-before-steps-that-depend-on-their-output"]], "Testing And Validation: Shared steps are run once.": [[1, "testing-and-validation-shared-steps-are-run-once"]], "Testing And Validation: The output of shared steps may be used by multiple tasks.": [[1, "testing-and-validation-the-output-of-shared-steps-may-be-used-by-multiple-tasks"]], "Testing And Validation: Working directory step paths are easily discoverable by users.": [[1, "testing-and-validation-working-directory-step-paths-are-easily-discoverable-by-users"]], "Testing And Validation: Working directory structure is intuitive.": [[1, "testing-and-validation-working-directory-structure-is-intuitive"]], "Testing And Validation: tasks do not rely on outputs from steps in other tasks": [[1, "testing-and-validation-tasks-do-not-rely-on-outputs-from-steps-in-other-tasks"]], "Testing MALI with Albany": [[6, "testing-mali-with-albany"]], "Testing MPAS-Ocean with PETSc": [[6, "testing-mpas-ocean-with-petsc"]], "Testing MPAS-Ocean without PETSc": [[6, "testing-mpas-ocean-without-petsc"]], "Testing and Validation: name-of-topic-here (same as Requirement)": [[2, "testing-and-validation-name-of-topic-here-same-as-requirement"]], "Testing polaris": [[6, "testing-polaris"]], "Testing spack with Albany": [[6, "testing-spack-with-albany"]], "Testing spack with PETSc (and Netlib LAPACK)": [[6, "testing-spack-with-petsc-and-netlib-lapack"]], "Time": [[15, "time"]], "Troubleshooting": [[365, "troubleshooting"], [381, null]], "Troubleshooting spack": [[6, "troubleshooting-spack"]], "Tutorials": [[383, null]], "Uniform planar meshes": [[13, "uniform-planar-meshes"]], "Unix Shell": [[365, "unix-shell"]], "Unknown machines": [[365, "unknown-machines"]], "Updating PIO namelist options": [[14, "updating-pio-namelist-options"]], "Updating spack from polaris with mache from a remote branch": [[6, "updating-spack-from-polaris-with-mache-from-a-remote-branch"]], "User's guide": [[383, null]], "Validating variables": [[18, "validating-variables"]], "Validating variables against a baseline": [[18, "validating-variables-against-a-baseline"]], "Validation": [[18, null]], "Varying resolution and other parameters": [[384, "varying-resolution-and-other-parameters"]], "Vertical coordinate": [[144, "vertical-coordinate"], [395, null]], "Vertical coordinates": [[143, "vertical-coordinates"]], "Visualization": [[19, null], [143, "visualization"], [144, "visualization"]], "What the script does": [[365, "what-the-script-does"]], "Where do we update polaris dependencies?": [[6, "where-do-we-update-polaris-dependencies"]], "YAML files vs. namelists and streams": [[144, "yaml-files-vs-namelists-and-streams"]], "analysis": [[344, "analysis"], [345, "analysis"], [346, "analysis"], [347, "analysis"], [348, "analysis"], [351, "analysis"], [353, "analysis"], [354, "analysis"], [355, "analysis"], [403, "analysis"]], "baroclinic channel": [[398, null]], "baroclinic_channel": [[143, "baroclinic-channel"], [343, null]], "barotropic gyre": [[399, null]], "barotropic_gyre": [[143, "barotropic-gyre"], [344, null]], "base_mesh": [[345, "base-mesh"], [346, "base-mesh"], [347, "base-mesh"], [348, "base-mesh"], [354, "base-mesh"], [355, "base-mesh"]], "cache": [[3, "cache"]], "cache module": [[8, "cache-module"]], "chicoma-cpu, gnu": [[137, "chicoma-cpu-gnu"]], "common matplotlib style": [[19, "common-matplotlib-style"]], "components": [[3, "id1"]], "config": [[3, "config"]], "config options": [[386, "config-options"], [387, "config-options"], [388, "config-options"], [389, "config-options"], [390, "config-options"], [391, "config-options"], [392, "config-options"], [393, "config-options"], [398, "config-options"], [398, "id7"], [398, "id14"], [398, "id22"], [398, "id30"], [398, "id37"], [399, "config-options"], [400, "config-options"], [401, "config-options"], [402, "config-options"], [403, "config-options"], [404, "config-options"], [404, "id7"], [404, "id14"], [404, "id22"], [406, "config-options"], [407, "config-options"], [407, "id7"], [408, "config-options"], [409, "config-options"], [410, "config-options"], [411, "config-options"], [411, "id1"], [411, "id6"], [411, "id13"], [412, "config-options"], [416, "config-options"], [416, "id5"], [416, "id10"], [417, "config-options"]], "configure()": [[363, "configure"]], "constrain_resources()": [[361, "constrain-resources"]], "constructor": [[361, "constructor"], [363, "constructor"]], "convergence": [[408, "convergence"]], "cores": [[398, "cores"], [398, "id15"], [398, "id23"], [398, "id31"], [398, "id38"], [399, "cores"], [400, "cores"], [401, "cores"], [402, "cores"], [403, "cores"], [404, "cores"], [404, "id15"], [404, "id23"], [406, "cores"], [407, "cores"], [408, "cores"], [409, "cores"], [410, "cores"], [411, "cores"], [411, "id14"], [412, "cores"], [416, "cores"], [416, "id4"], [416, "id9"], [417, "cores"]], "correlated tracers 2-d": [[400, null]], "correlated_tracers_2d": [[345, null]], "cosine bell": [[401, null]], "cosine_bell": [[143, "cosine-bell"], [346, null]], "cosine_bell and cosine_bell_cached_init suite": [[397, "cosine-bell-and-cosine-bell-cached-init-suite"]], "cvmix": [[356, "cvmix"], [411, "cvmix"]], "decomp": [[343, "decomp"], [398, "decomp"]], "default": [[343, "default"], [344, "default"], [349, "default"], [352, "default"], [398, "default"], [399, "default"], [404, "default"]], "default task": [[407, "default-task"]], "default_tidal_forcing": [[404, "default-tidal-forcing"]], "default_with_restart": [[404, "default-with-restart"]], "description": [[398, "description"], [398, "id1"], [398, "id8"], [398, "id16"], [398, "id24"], [399, "description"], [400, "description"], [401, "description"], [402, "description"], [403, "description"], [404, "description"], [404, "id1"], [404, "id8"], [404, "id16"], [406, "description"], [407, "description"], [407, "id1"], [408, "description"], [409, "description"], [410, "description"], [411, "description"], [411, "id2"], [411, "id7"], [412, "description"], [416, "description"], [417, "description"]], "divergent 2-d": [[402, null]], "divergent_2d": [[347, null]], "exact restart test": [[416, "exact-restart-test"]], "exact_restart_test": [[380, "exact-restart-test"]], "exact_solution": [[351, "exact-solution"], [353, "exact-solution"]], "filament_analysis": [[354, "filament-analysis"]], "forcing": [[398, "forcing"], [398, "id5"], [398, "id12"], [398, "id20"], [398, "id28"], [398, "id35"], [399, "forcing"], [400, "forcing"], [401, "forcing"], [402, "forcing"], [403, "forcing"], [404, "forcing"], [404, "id5"], [404, "id12"], [404, "id20"], [406, "forcing"], [407, "forcing"], [407, "id5"], [408, "forcing"], [409, "forcing"], [410, "forcing"], [411, "forcing"], [411, "id11"], [412, "forcing"], [416, "forcing"], [416, "id3"], [416, "id8"], [417, "forcing"]], "forward": [[343, "forward"], [344, "forward"], [345, "forward"], [346, "forward"], [347, "forward"], [348, "forward"], [349, "forward"], [351, "forward"], [352, "forward"], [353, "forward"], [354, "forward"], [355, "forward"], [356, "forward"], [380, "forward"]], "framework": [[343, "framework"], [344, "framework"], [345, "framework"], [346, "framework"], [347, "framework"], [348, "framework"], [349, "framework"], [351, "framework"], [352, "framework"], [353, "framework"], [354, "framework"], [355, "framework"], [356, "framework"], [380, "framework"]], "frontier, crayclang": [[140, "frontier-crayclang"]], "frontier, gnu": [[140, "frontier-gnu"]], "geostrophic": [[143, "geostrophic"], [348, null], [403, null]], "gethostbyname failed": [[381, "gethostbyname-failed"]], "global lat/lon plots": [[19, "global-lat-lon-plots"]], "gnu": [[136, "gnu"], [138, "gnu"], [139, "gnu"]], "horizontal fields from planar meshes": [[19, "horizontal-fields-from-planar-meshes"]], "ice shelf 2d": [[404, null]], "ice_shelf_2d": [[143, "ice-shelf-2d"], [349, null]], "ideal age": [[356, "ideal-age"], [411, "ocean-single-column-ideal-age"]], "index_tanh_dz": [[395, "index-tanh-dz"]], "inertial gravity wave": [[406, null]], "inertial_gravity_wave": [[143, "inertial-gravity-wave"], [351, null]], "init": [[343, "init"], [344, "init"], [345, "init"], [346, "init"], [347, "init"], [348, "init"], [349, "init"], [351, "init"], [352, "init"], [353, "init"], [354, "init"], [355, "init"], [356, "init"]], "initial conditions": [[398, "initial-conditions"], [398, "id4"], [398, "id11"], [398, "id19"], [398, "id27"], [398, "id34"], [399, "initial-conditions"], [400, "initial-conditions"], [401, "initial-conditions"], [402, "initial-conditions"], [403, "initial-conditions"], [404, "initial-conditions"], [404, "id4"], [404, "id11"], [404, "id19"], [406, "initial-conditions"], [407, "initial-conditions"], [407, "id4"], [408, "initial-conditions"], [409, "initial-conditions"], [410, "initial-conditions"], [411, "initial-conditions"], [411, "id5"], [411, "id10"], [412, "initial-conditions"], [416, "initial-conditions"], [416, "id2"], [416, "id7"], [417, "initial-conditions"]], "inputs and outputs": [[361, "inputs-and-outputs"]], "intel": [[136, "intel"], [138, "intel"], [139, "intel"]], "internal wave": [[407, null]], "internal_wave": [[143, "internal-wave"], [352, null]], "io": [[3, "io"]], "job": [[3, "job"]], "list": [[3, "list"]], "list module": [[8, "list-module"]], "logging": [[3, "logging"]], "manufactured solution": [[408, null]], "manufactured_solution": [[143, "manufactured-solution"], [353, null]], "mesh": [[3, "mesh"], [398, "mesh"], [398, "id2"], [398, "id9"], [398, "id17"], [398, "id25"], [398, "id32"], [399, "mesh"], [400, "mesh"], [401, "mesh"], [402, "mesh"], [403, "mesh"], [404, "mesh"], [404, "id2"], [404, "id9"], [404, "id17"], [406, "mesh"], [407, "mesh"], [407, "id2"], [408, "mesh"], [409, "mesh"], [410, "mesh"], [411, "mesh"], [411, "id3"], [411, "id8"], [412, "mesh"], [416, "mesh"], [416, "id1"], [416, "id6"], [417, "mesh"]], "mixing_analysis": [[345, "mixing-analysis"]], "model_step": [[3, "model-step"]], "mpas": [[3, "mpas"]], "mpas_to_yaml": [[3, "mpas-to-yaml"], [5, "mpas-to-yaml"]], "namelist": [[3, "namelist"]], "nondivergent 2-d": [[409, null]], "nondivergent_2d": [[354, null]], "ocean": [[143, null]], "parallel": [[3, "parallel"]], "plotting from lat/lon grids": [[19, "plotting-from-lat-lon-grids"]], "plotting from spherical MPAS meshes": [[19, "plotting-from-spherical-mpas-meshes"]], "pm-cpu, gnu": [[142, "pm-cpu-gnu"]], "pm-cpu, intel": [[142, "pm-cpu-intel"]], "polaris cache": [[5, "polaris-cache"]], "polaris conda environment, spack environment, compilers and system modules": [[365, "polaris-conda-environment-spack-environment-compilers-and-system-modules"]], "polaris framework": [[3, "polaris-framework"]], "polaris list": [[5, "polaris-list"]], "polaris serial": [[5, "polaris-serial"]], "polaris setup": [[5, "polaris-setup"]], "polaris suite": [[5, "polaris-suite"]], "polaris.Component": [[20, null]], "polaris.Component.add_config": [[21, null]], "polaris.Component.add_step": [[22, null]], "polaris.Component.add_task": [[23, null]], "polaris.Component.remove_step": [[24, null]], "polaris.ModelStep": [[25, null]], "polaris.ModelStep.add_model_config_options": [[26, null]], "polaris.ModelStep.add_namelist_file": [[27, null]], "polaris.ModelStep.add_streams_file": [[28, null]], "polaris.ModelStep.add_yaml_file": [[29, null]], "polaris.ModelStep.dynamic_model_config": [[30, null]], "polaris.ModelStep.map_yaml_configs": [[31, null]], "polaris.ModelStep.map_yaml_options": [[32, null]], "polaris.ModelStep.map_yaml_to_namelist": [[33, null]], "polaris.ModelStep.partition": [[34, null]], "polaris.ModelStep.process_inputs_and_outputs": [[35, null]], "polaris.ModelStep.runtime_setup": [[36, null]], "polaris.ModelStep.set_model_resources": [[37, null]], "polaris.ModelStep.setup": [[38, null]], "polaris.ModelStep.update_namelist_pio": [[39, null]], "polaris.Step": [[40, null]], "polaris.Step.add_dependency": [[41, null]], "polaris.Step.add_input_file": [[42, null]], "polaris.Step.add_output_file": [[43, null]], "polaris.Step.constrain_resources": [[44, null]], "polaris.Step.run": [[45, null]], "polaris.Step.runtime_setup": [[46, null]], "polaris.Step.set_resources": [[47, null]], "polaris.Step.set_shared_config": [[48, null]], "polaris.Step.setup": [[49, null]], "polaris.Step.validate_baselines": [[50, null]], "polaris.Task": [[51, null]], "polaris.Task.add_step": [[52, null]], "polaris.Task.configure": [[53, null]], "polaris.Task.remove_step": [[54, null]], "polaris.Task.set_shared_config": [[55, null]], "polaris.__main__.main": [[56, null]], "polaris.cache.update_cache": [[57, null]], "polaris.components.get_components": [[58, null]], "polaris.config.PolarisConfigParser": [[59, null]], "polaris.config.PolarisConfigParser.setup": [[60, null]], "polaris.io.download": [[61, null]], "polaris.io.symlink": [[62, null]], "polaris.io.update_permissions": [[63, null]], "polaris.job.clean_up_whitespace": [[64, null]], "polaris.job.get_slurm_options": [[65, null]], "polaris.job.write_job_script": [[66, null]], "polaris.list.list_cases": [[67, null]], "polaris.list.list_machines": [[68, null]], "polaris.list.list_suites": [[69, null]], "polaris.logging.log_method_call": [[70, null]], "polaris.mesh.IcosahedralMeshStep": [[71, null]], "polaris.mesh.IcosahedralMeshStep.build_subdivisions_cell_width_lat_lon": [[72, null]], "polaris.mesh.IcosahedralMeshStep.get_cell_width": [[73, null]], "polaris.mesh.IcosahedralMeshStep.get_subdivisions": [[74, null]], "polaris.mesh.IcosahedralMeshStep.make_jigsaw_mesh": [[75, null]], "polaris.mesh.IcosahedralMeshStep.run": [[76, null]], "polaris.mesh.IcosahedralMeshStep.setup": [[77, null]], "polaris.mesh.QuasiUniformSphericalMeshStep": [[78, null]], "polaris.mesh.QuasiUniformSphericalMeshStep.build_cell_width_lat_lon": [[79, null]], "polaris.mesh.QuasiUniformSphericalMeshStep.make_jigsaw_mesh": [[80, null]], "polaris.mesh.QuasiUniformSphericalMeshStep.run": [[81, null]], "polaris.mesh.QuasiUniformSphericalMeshStep.setup": [[82, null]], "polaris.mesh.planar.compute_planar_hex_nx_ny": [[83, null]], "polaris.mesh.spherical.SphericalBaseStep": [[84, null]], "polaris.mesh.spherical.SphericalBaseStep.run": [[85, null]], "polaris.mesh.spherical.SphericalBaseStep.save_and_plot_cell_width": [[86, null]], "polaris.mesh.spherical.SphericalBaseStep.setup": [[87, null]], "polaris.model_step.make_graph_file": [[88, null]], "polaris.mpas.area_for_field": [[89, null]], "polaris.mpas.time_index_from_xtime": [[90, null]], "polaris.namelist.ingest": [[91, null]], "polaris.namelist.parse_replacements": [[92, null]], "polaris.namelist.replace": [[93, null]], "polaris.namelist.write": [[94, null]], "polaris.ocean.Ocean": [[145, null]], "polaris.ocean.convergence.analysis.ConvergenceAnalysis": [[146, null]], "polaris.ocean.convergence.analysis.ConvergenceAnalysis.compute_error": [[147, null]], "polaris.ocean.convergence.analysis.ConvergenceAnalysis.convergence_parameters": [[148, null]], "polaris.ocean.convergence.analysis.ConvergenceAnalysis.exact_solution": [[149, null]], "polaris.ocean.convergence.analysis.ConvergenceAnalysis.get_output_field": [[150, null]], "polaris.ocean.convergence.analysis.ConvergenceAnalysis.plot_convergence": [[151, null]], "polaris.ocean.convergence.analysis.ConvergenceAnalysis.run": [[152, null]], "polaris.ocean.convergence.analysis.ConvergenceAnalysis.setup": [[153, null]], "polaris.ocean.convergence.forward.ConvergenceForward": [[154, null]], "polaris.ocean.convergence.forward.ConvergenceForward.compute_cell_count": [[155, null]], "polaris.ocean.convergence.forward.ConvergenceForward.dynamic_model_config": [[156, null]], "polaris.ocean.convergence.spherical.SphericalConvergenceForward": [[157, null]], "polaris.ocean.convergence.spherical.SphericalConvergenceForward.compute_cell_count": [[158, null]], "polaris.ocean.ice_shelf.IceShelfTask": [[159, null]], "polaris.ocean.ice_shelf.IceShelfTask.setup_ssh_adjustment_steps": [[160, null]], "polaris.ocean.ice_shelf.SshAdjustment": [[161, null]], "polaris.ocean.ice_shelf.SshAdjustment.run": [[162, null]], "polaris.ocean.ice_shelf.SshForward": [[163, null]], "polaris.ocean.ice_shelf.SshForward.compute_cell_count": [[164, null]], "polaris.ocean.ice_shelf.SshForward.dynamic_model_config": [[165, null]], "polaris.ocean.mesh.spherical.add_spherical_base_mesh_step": [[166, null]], "polaris.ocean.model.OceanIOStep": [[167, null]], "polaris.ocean.model.OceanIOStep.map_from_native_model_vars": [[168, null]], "polaris.ocean.model.OceanIOStep.map_to_native_model_vars": [[169, null]], "polaris.ocean.model.OceanIOStep.open_model_dataset": [[170, null]], "polaris.ocean.model.OceanIOStep.setup": [[171, null]], "polaris.ocean.model.OceanIOStep.write_model_dataset": [[172, null]], "polaris.ocean.model.OceanModelStep": [[173, null]], "polaris.ocean.model.OceanModelStep.compute_cell_count": [[174, null]], "polaris.ocean.model.OceanModelStep.constrain_resources": [[175, null]], "polaris.ocean.model.OceanModelStep.map_yaml_configs": [[176, null]], "polaris.ocean.model.OceanModelStep.map_yaml_options": [[177, null]], "polaris.ocean.model.OceanModelStep.setup": [[178, null]], "polaris.ocean.model.get_time_interval_string": [[179, null]], "polaris.ocean.rpe.compute_rpe": [[180, null]], "polaris.ocean.tasks.baroclinic_channel.add_baroclinic_channel_tasks": [[181, null]], "polaris.ocean.tasks.baroclinic_channel.decomp.Decomp": [[182, null]], "polaris.ocean.tasks.baroclinic_channel.default.Default": [[183, null]], "polaris.ocean.tasks.baroclinic_channel.forward.Forward": [[184, null]], "polaris.ocean.tasks.baroclinic_channel.forward.Forward.compute_cell_count": [[185, null]], "polaris.ocean.tasks.baroclinic_channel.forward.Forward.dynamic_model_config": [[186, null]], "polaris.ocean.tasks.baroclinic_channel.init.Init": [[187, null]], "polaris.ocean.tasks.baroclinic_channel.init.Init.run": [[188, null]], "polaris.ocean.tasks.baroclinic_channel.init.Init.setup": [[189, null]], "polaris.ocean.tasks.baroclinic_channel.restart.Restart": [[190, null]], "polaris.ocean.tasks.baroclinic_channel.restart.restart_step.RestartStep": [[191, null]], "polaris.ocean.tasks.baroclinic_channel.restart.restart_step.RestartStep.dynamic_model_config": [[192, null]], "polaris.ocean.tasks.baroclinic_channel.rpe.Rpe": [[193, null]], "polaris.ocean.tasks.baroclinic_channel.rpe.Rpe.configure": [[194, null]], "polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis": [[195, null]], "polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis.run": [[196, null]], "polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis.setup": [[197, null]], "polaris.ocean.tasks.baroclinic_channel.threads.Threads": [[198, null]], "polaris.ocean.tasks.baroclinic_channel.validate.Validate": [[199, null]], "polaris.ocean.tasks.baroclinic_channel.validate.Validate.run": [[200, null]], "polaris.ocean.tasks.baroclinic_channel.viz.Viz": [[201, null]], "polaris.ocean.tasks.baroclinic_channel.viz.Viz.run": [[202, null]], "polaris.ocean.tasks.barotropic_gyre.BarotropicGyre": [[203, null]], "polaris.ocean.tasks.barotropic_gyre.add_barotropic_gyre_tasks": [[204, null]], "polaris.ocean.tasks.barotropic_gyre.analysis.Analysis": [[205, null]], "polaris.ocean.tasks.barotropic_gyre.analysis.Analysis.compute_error": [[206, null]], "polaris.ocean.tasks.barotropic_gyre.analysis.Analysis.exact_solution": [[207, null]], "polaris.ocean.tasks.barotropic_gyre.analysis.Analysis.run": [[208, null]], "polaris.ocean.tasks.barotropic_gyre.forward.Forward": [[209, null]], "polaris.ocean.tasks.barotropic_gyre.forward.Forward.compute_cell_count": [[210, null]], "polaris.ocean.tasks.barotropic_gyre.forward.Forward.dynamic_model_config": [[211, null]], "polaris.ocean.tasks.barotropic_gyre.forward.compute_max_time_step": [[212, null]], "polaris.ocean.tasks.barotropic_gyre.init.Init": [[213, null]], "polaris.ocean.tasks.barotropic_gyre.init.Init.run": [[214, null]], "polaris.ocean.tasks.barotropic_gyre.init.Init.setup": [[215, null]], "polaris.ocean.tasks.cosine_bell.CosineBell": [[216, null]], "polaris.ocean.tasks.cosine_bell.CosineBell.configure": [[217, null]], "polaris.ocean.tasks.cosine_bell.add_cosine_bell_tasks": [[218, null]], "polaris.ocean.tasks.cosine_bell.analysis.Analysis": [[219, null]], "polaris.ocean.tasks.cosine_bell.analysis.Analysis.exact_solution": [[220, null]], "polaris.ocean.tasks.cosine_bell.forward.Forward": [[221, null]], "polaris.ocean.tasks.cosine_bell.init.Init": [[222, null]], "polaris.ocean.tasks.cosine_bell.init.Init.run": [[223, null]], "polaris.ocean.tasks.cosine_bell.init.cosine_bell": [[224, null]], "polaris.ocean.tasks.cosine_bell.restart.Restart": [[225, null]], "polaris.ocean.tasks.cosine_bell.restart.RestartStep": [[226, null]], "polaris.ocean.tasks.cosine_bell.restart.RestartStep.dynamic_model_config": [[227, null]], "polaris.ocean.tasks.cosine_bell.validate.Validate": [[228, null]], "polaris.ocean.tasks.cosine_bell.validate.Validate.run": [[229, null]], "polaris.ocean.tasks.cosine_bell.viz.Viz": [[230, null]], "polaris.ocean.tasks.cosine_bell.viz.Viz.run": [[231, null]], "polaris.ocean.tasks.geostrophic.Geostrophic": [[232, null]], "polaris.ocean.tasks.geostrophic.Geostrophic.configure": [[233, null]], "polaris.ocean.tasks.geostrophic.add_geostrophic_tasks": [[234, null]], "polaris.ocean.tasks.geostrophic.analysis.Analysis": [[235, null]], "polaris.ocean.tasks.geostrophic.analysis.Analysis.exact_solution": [[236, null]], "polaris.ocean.tasks.geostrophic.analysis.Analysis.get_output_field": [[237, null]], "polaris.ocean.tasks.geostrophic.forward.Forward": [[238, null]], "polaris.ocean.tasks.geostrophic.init.Init": [[239, null]], "polaris.ocean.tasks.geostrophic.init.Init.run": [[240, null]], "polaris.ocean.tasks.geostrophic.viz.Viz": [[241, null]], "polaris.ocean.tasks.geostrophic.viz.Viz.run": [[242, null]], "polaris.ocean.tasks.ice_shelf_2d.add_ice_shelf_2d_tasks": [[243, null]], "polaris.ocean.tasks.ice_shelf_2d.default.Default": [[244, null]], "polaris.ocean.tasks.ice_shelf_2d.forward.Forward": [[245, null]], "polaris.ocean.tasks.ice_shelf_2d.forward.Forward.compute_cell_count": [[246, null]], "polaris.ocean.tasks.ice_shelf_2d.forward.Forward.dynamic_model_config": [[247, null]], "polaris.ocean.tasks.ice_shelf_2d.init.Init": [[248, null]], "polaris.ocean.tasks.ice_shelf_2d.init.Init.run": [[249, null]], "polaris.ocean.tasks.ice_shelf_2d.validate.Validate": [[250, null]], "polaris.ocean.tasks.ice_shelf_2d.validate.Validate.run": [[251, null]], "polaris.ocean.tasks.ice_shelf_2d.viz.Viz": [[252, null]], "polaris.ocean.tasks.ice_shelf_2d.viz.Viz.run": [[253, null]], "polaris.ocean.tasks.inertial_gravity_wave.InertialGravityWave": [[254, null]], "polaris.ocean.tasks.inertial_gravity_wave.add_inertial_gravity_wave_tasks": [[255, null]], "polaris.ocean.tasks.inertial_gravity_wave.analysis.Analysis": [[256, null]], "polaris.ocean.tasks.inertial_gravity_wave.analysis.Analysis.exact_solution": [[257, null]], "polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution": [[258, null]], "polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution.normal_velocity": [[259, null]], "polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution.ssh": [[260, null]], "polaris.ocean.tasks.inertial_gravity_wave.forward.Forward": [[261, null]], "polaris.ocean.tasks.inertial_gravity_wave.forward.Forward.compute_cell_count": [[262, null]], "polaris.ocean.tasks.inertial_gravity_wave.init.Init": [[263, null]], "polaris.ocean.tasks.inertial_gravity_wave.init.Init.run": [[264, null]], "polaris.ocean.tasks.inertial_gravity_wave.viz.Viz": [[265, null]], "polaris.ocean.tasks.inertial_gravity_wave.viz.Viz.run": [[266, null]], "polaris.ocean.tasks.internal_wave.add_internal_wave_tasks": [[267, null]], "polaris.ocean.tasks.internal_wave.default.Default": [[268, null]], "polaris.ocean.tasks.internal_wave.forward.Forward": [[269, null]], "polaris.ocean.tasks.internal_wave.forward.Forward.compute_cell_count": [[270, null]], "polaris.ocean.tasks.internal_wave.forward.Forward.dynamic_model_config": [[271, null]], "polaris.ocean.tasks.internal_wave.init.Init": [[272, null]], "polaris.ocean.tasks.internal_wave.init.Init.run": [[273, null]], "polaris.ocean.tasks.internal_wave.rpe.Rpe": [[274, null]], "polaris.ocean.tasks.internal_wave.rpe.Rpe.configure": [[275, null]], "polaris.ocean.tasks.internal_wave.rpe.analysis.Analysis": [[276, null]], "polaris.ocean.tasks.internal_wave.rpe.analysis.Analysis.run": [[277, null]], "polaris.ocean.tasks.internal_wave.viz.Viz": [[278, null]], "polaris.ocean.tasks.internal_wave.viz.Viz.run": [[279, null]], "polaris.ocean.tasks.manufactured_solution.ManufacturedSolution": [[280, null]], "polaris.ocean.tasks.manufactured_solution.add_manufactured_solution_tasks": [[281, null]], "polaris.ocean.tasks.manufactured_solution.analysis.Analysis": [[282, null]], "polaris.ocean.tasks.manufactured_solution.analysis.Analysis.exact_solution": [[283, null]], "polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution": [[284, null]], "polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution.normal_velocity": [[285, null]], "polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution.ssh": [[286, null]], "polaris.ocean.tasks.manufactured_solution.forward.Forward": [[287, null]], "polaris.ocean.tasks.manufactured_solution.forward.Forward.compute_cell_count": [[288, null]], "polaris.ocean.tasks.manufactured_solution.init.Init": [[289, null]], "polaris.ocean.tasks.manufactured_solution.init.Init.run": [[290, null]], "polaris.ocean.tasks.manufactured_solution.init.Init.setup": [[291, null]], "polaris.ocean.tasks.manufactured_solution.viz.Viz": [[292, null]], "polaris.ocean.tasks.manufactured_solution.viz.Viz.run": [[293, null]], "polaris.ocean.tasks.single_column.add_single_column_tasks": [[294, null]], "polaris.ocean.tasks.single_column.cvmix.CVMix": [[295, null]], "polaris.ocean.tasks.single_column.forward.Forward": [[296, null]], "polaris.ocean.tasks.single_column.ideal_age.IdealAge": [[297, null]], "polaris.ocean.tasks.single_column.init.Init": [[298, null]], "polaris.ocean.tasks.single_column.init.Init.run": [[299, null]], "polaris.ocean.tasks.single_column.viz.Viz": [[300, null]], "polaris.ocean.tasks.single_column.viz.Viz.run": [[301, null]], "polaris.ocean.tasks.sphere_transport.SphereTransport": [[302, null]], "polaris.ocean.tasks.sphere_transport.SphereTransport.configure": [[303, null]], "polaris.ocean.tasks.sphere_transport.add_sphere_transport_tasks": [[304, null]], "polaris.ocean.tasks.sphere_transport.analysis.Analysis": [[305, null]], "polaris.ocean.tasks.sphere_transport.analysis.Analysis.convergence_parameters": [[306, null]], "polaris.ocean.tasks.sphere_transport.filament_analysis.FilamentAnalysis": [[307, null]], "polaris.ocean.tasks.sphere_transport.filament_analysis.FilamentAnalysis.run": [[308, null]], "polaris.ocean.tasks.sphere_transport.forward.Forward": [[309, null]], "polaris.ocean.tasks.sphere_transport.init.Init": [[310, null]], "polaris.ocean.tasks.sphere_transport.init.Init.run": [[311, null]], "polaris.ocean.tasks.sphere_transport.mixing_analysis.MixingAnalysis": [[312, null]], "polaris.ocean.tasks.sphere_transport.mixing_analysis.MixingAnalysis.run": [[313, null]], "polaris.ocean.tasks.sphere_transport.viz.Viz": [[314, null]], "polaris.ocean.tasks.sphere_transport.viz.Viz.run": [[315, null]], "polaris.ocean.vertical.grid_1d.generate_1d_grid": [[316, null]], "polaris.ocean.vertical.grid_1d.write_1d_grid": [[317, null]], "polaris.ocean.vertical.init_vertical_coord": [[318, null]], "polaris.ocean.vertical.partial_cells.alter_bottom_depth": [[319, null]], "polaris.ocean.vertical.partial_cells.alter_ssh": [[320, null]], "polaris.ocean.vertical.sigma.init_sigma_vertical_coord": [[321, null]], "polaris.ocean.vertical.sigma.update_sigma_layer_thickness": [[322, null]], "polaris.ocean.vertical.update_layer_thickness": [[323, null]], "polaris.ocean.vertical.zlevel.compute_min_max_level_cell": [[324, null]], "polaris.ocean.vertical.zlevel.compute_z_level_layer_thickness": [[325, null]], "polaris.ocean.vertical.zlevel.compute_z_level_resting_thickness": [[326, null]], "polaris.ocean.vertical.zlevel.init_z_level_vertical_coord": [[327, null]], "polaris.ocean.vertical.zlevel.update_z_level_layer_thickness": [[328, null]], "polaris.ocean.vertical.zstar.init_z_star_vertical_coord": [[329, null]], "polaris.ocean.vertical.zstar.update_z_star_layer_thickness": [[330, null]], "polaris.ocean.viz.compute_transect": [[331, null]], "polaris.ocean.viz.plot_transect": [[332, null]], "polaris.ocean.viz.transect.horiz.find_planar_transect_cells_and_weights": [[333, null]], "polaris.ocean.viz.transect.horiz.find_spherical_transect_cells_and_weights": [[334, null]], "polaris.ocean.viz.transect.horiz.make_triangle_tree": [[335, null]], "polaris.ocean.viz.transect.horiz.mesh_to_triangles": [[336, null]], "polaris.ocean.viz.transect.vert.find_transect_levels_and_weights": [[337, null]], "polaris.ocean.viz.transect.vert.interp_mpas_to_transect_cells": [[338, null]], "polaris.ocean.viz.transect.vert.interp_mpas_to_transect_nodes": [[339, null]], "polaris.parallel.get_available_parallel_resources": [[95, null]], "polaris.parallel.get_parallel_command": [[96, null]], "polaris.parallel.run_command": [[97, null]], "polaris.parallel.set_cores_per_node": [[98, null]], "polaris.provenance.write": [[99, null]], "polaris.remap.MappingFileStep": [[100, null]], "polaris.remap.MappingFileStep.dst_from_lon_lat": [[101, null]], "polaris.remap.MappingFileStep.dst_from_mpas": [[102, null]], "polaris.remap.MappingFileStep.dst_from_points": [[103, null]], "polaris.remap.MappingFileStep.dst_from_proj": [[104, null]], "polaris.remap.MappingFileStep.dst_global_lon_lat": [[105, null]], "polaris.remap.MappingFileStep.get_remapper": [[106, null]], "polaris.remap.MappingFileStep.runtime_setup": [[107, null]], "polaris.remap.MappingFileStep.src_from_lon_lat": [[108, null]], "polaris.remap.MappingFileStep.src_from_mpas": [[109, null]], "polaris.remap.MappingFileStep.src_from_proj": [[110, null]], "polaris.run.complete_step_run": [[111, null]], "polaris.run.load_dependencies": [[112, null]], "polaris.run.serial.run_single_step": [[113, null]], "polaris.run.serial.run_tasks": [[114, null]], "polaris.run.setup_config": [[115, null]], "polaris.run.unpickle_suite": [[116, null]], "polaris.seaice.SeaIce": [[368, null]], "polaris.seaice.tasks.single_column.add_single_column_tasks": [[369, null]], "polaris.seaice.tasks.single_column.exact_restart.ExactRestart": [[370, null]], "polaris.seaice.tasks.single_column.exact_restart.validate.Validate": [[371, null]], "polaris.seaice.tasks.single_column.exact_restart.validate.Validate.run": [[372, null]], "polaris.seaice.tasks.single_column.forward.Forward": [[373, null]], "polaris.seaice.tasks.single_column.standard_physics.StandardPhysics": [[374, null]], "polaris.seaice.tasks.single_column.standard_physics.viz.Viz": [[375, null]], "polaris.seaice.tasks.single_column.standard_physics.viz.Viz.run": [[376, null]], "polaris.setup.setup_task": [[117, null]], "polaris.setup.setup_tasks": [[118, null]], "polaris.streams.read": [[119, null]], "polaris.streams.update_defaults": [[120, null]], "polaris.streams.update_tree": [[121, null]], "polaris.streams.write": [[122, null]], "polaris.suite.setup_suite": [[123, null]], "polaris.validate.compare_variables": [[124, null]], "polaris.viz.plot_global_lat_lon_field": [[125, null]], "polaris.viz.plot_global_mpas_field": [[126, null]], "polaris.viz.plot_horiz_field": [[127, null]], "polaris.viz.use_mplstyle": [[128, null]], "polaris.yaml.PolarisYaml": [[129, null]], "polaris.yaml.PolarisYaml.read": [[130, null]], "polaris.yaml.PolarisYaml.update": [[131, null]], "polaris.yaml.PolarisYaml.write": [[132, null]], "polaris.yaml.main_mpas_to_yaml": [[133, null]], "polaris.yaml.mpas_namelist_and_streams_to_yaml": [[134, null]], "polaris.yaml.yaml_to_mpas_streams": [[135, null]], "provenance": [[3, "provenance"]], "reference (resting) potential energy (RPE)": [[144, "reference-resting-potential-energy-rpe"]], "remap": [[3, "remap"]], "restart": [[343, "restart"], [346, "restart"], [398, "restart"]], "restart_step": [[346, "restart-step"]], "rotation 2-d": [[410, null]], "rotation_2d": [[355, null]], "rpe": [[343, "rpe"], [352, "rpe"], [398, "rpe"]], "run": [[3, "run"]], "run()": [[361, "run"]], "run.serial module": [[8, "run-serial-module"]], "runtime_setup()": [[361, "runtime-setup"]], "seaice": [[366, null]], "setup": [[3, "setup"]], "setup module": [[8, "setup-module"]], "setup()": [[361, "setup"]], "sigma": [[395, "sigma"]], "single column": [[411, null], [416, null]], "single_column": [[143, "single-column"], [356, null], [366, "single-column"], [380, null]], "sphere_transport": [[143, "sphere-transport"]], "standard physics test": [[416, "standard-physics-test"]], "standard_physics_test": [[380, "standard-physics-test"]], "streams": [[3, "streams"]], "suite": [[3, "suite"]], "suite module": [[8, "suite-module"]], "supported models": [[399, "supported-models"]], "suppported models": [[398, "suppported-models"], [400, "suppported-models"], [401, "suppported-models"], [402, "suppported-models"], [403, "suppported-models"], [404, "suppported-models"], [406, "suppported-models"], [407, "suppported-models"], [408, "suppported-models"], [409, "suppported-models"], [410, "suppported-models"], [411, "suppported-models"], [412, "suppported-models"]], "tanh_dz": [[395, "tanh-dz"]], "task_name": [[412, "task-name"], [417, "task-name"]], "thread": [[398, "thread"]], "threads": [[343, "threads"]], "time step and run duration": [[398, "time-step-and-run-duration"], [398, "id6"], [398, "id13"], [398, "id21"], [398, "id29"], [398, "id36"], [399, "time-step-and-run-duration"], [400, "time-step-and-run-duration"], [401, "time-step-and-run-duration"], [402, "time-step-and-run-duration"], [403, "time-step-and-run-duration"], [404, "time-step-and-run-duration"], [404, "id6"], [404, "id13"], [404, "id21"], [406, "time-step-and-run-duration"], [407, "time-step-and-run-duration"], [407, "id6"], [408, "time-step-and-run-duration"], [409, "time-step-and-run-duration"], [410, "time-step-and-run-duration"], [411, "time-step-and-run-duration"], [411, "id12"], [412, "time-step-and-run-duration"], [417, "time-step-and-run-duration"]], "timestep and run duration": [[416, "timestep-and-run-duration"], [416, "id11"]], "uniform": [[395, "uniform"]], "validate": [[3, "validate"], [343, "validate"], [346, "validate"], [349, "validate"], [352, "validate"]], "vertical grid": [[398, "vertical-grid"], [398, "id3"], [398, "id10"], [398, "id18"], [398, "id26"], [398, "id33"], [399, "vertical-grid"], [400, "vertical-grid"], [401, "vertical-grid"], [402, "vertical-grid"], [403, "vertical-grid"], [404, "vertical-grid"], [404, "id3"], [404, "id10"], [404, "id18"], [406, "vertical-grid"], [407, "vertical-grid"], [407, "id3"], [408, "vertical-grid"], [409, "vertical-grid"], [410, "vertical-grid"], [411, "vertical-grid"], [411, "id4"], [411, "id9"], [412, "vertical-grid"]], "visualization": [[416, "visualization"]], "viz": [[3, "viz"], [345, "viz"], [346, "viz"], [347, "viz"], [348, "viz"], [349, "viz"], [351, "viz"], [353, "viz"], [354, "viz"], [355, "viz"], [356, "viz"], [380, "viz"]], "yaml": [[3, "yaml"]], "z-level": [[395, "z-level"]], "z-star": [[395, "z-star"]], "\u2026in the polaris framework": [[364, "in-the-polaris-framework"]], "\u2026within a component": [[364, "within-a-component"]], "\u2026within a group of related tasks": [[364, "within-a-group-of-related-tasks"]], "\u2026within a task": [[364, "within-a-task"]]}, "docnames": ["design_docs/index", "design_docs/shared_steps", "design_docs/template", "developers_guide/api", "developers_guide/building_docs", "developers_guide/command_line", "developers_guide/deploying_spack", "developers_guide/docs", "developers_guide/framework/commands", "developers_guide/framework/config", "developers_guide/framework/index", "developers_guide/framework/io", "developers_guide/framework/logging", "developers_guide/framework/mesh", "developers_guide/framework/model", "developers_guide/framework/mpas", "developers_guide/framework/provenance", "developers_guide/framework/remapping", "developers_guide/framework/validation", "developers_guide/framework/visualization", "developers_guide/generated/polaris.Component", "developers_guide/generated/polaris.Component.add_config", "developers_guide/generated/polaris.Component.add_step", "developers_guide/generated/polaris.Component.add_task", "developers_guide/generated/polaris.Component.remove_step", "developers_guide/generated/polaris.ModelStep", "developers_guide/generated/polaris.ModelStep.add_model_config_options", "developers_guide/generated/polaris.ModelStep.add_namelist_file", "developers_guide/generated/polaris.ModelStep.add_streams_file", "developers_guide/generated/polaris.ModelStep.add_yaml_file", "developers_guide/generated/polaris.ModelStep.dynamic_model_config", "developers_guide/generated/polaris.ModelStep.map_yaml_configs", "developers_guide/generated/polaris.ModelStep.map_yaml_options", "developers_guide/generated/polaris.ModelStep.map_yaml_to_namelist", "developers_guide/generated/polaris.ModelStep.partition", "developers_guide/generated/polaris.ModelStep.process_inputs_and_outputs", "developers_guide/generated/polaris.ModelStep.runtime_setup", "developers_guide/generated/polaris.ModelStep.set_model_resources", "developers_guide/generated/polaris.ModelStep.setup", "developers_guide/generated/polaris.ModelStep.update_namelist_pio", "developers_guide/generated/polaris.Step", "developers_guide/generated/polaris.Step.add_dependency", "developers_guide/generated/polaris.Step.add_input_file", "developers_guide/generated/polaris.Step.add_output_file", "developers_guide/generated/polaris.Step.constrain_resources", "developers_guide/generated/polaris.Step.run", "developers_guide/generated/polaris.Step.runtime_setup", "developers_guide/generated/polaris.Step.set_resources", "developers_guide/generated/polaris.Step.set_shared_config", "developers_guide/generated/polaris.Step.setup", "developers_guide/generated/polaris.Step.validate_baselines", "developers_guide/generated/polaris.Task", "developers_guide/generated/polaris.Task.add_step", "developers_guide/generated/polaris.Task.configure", "developers_guide/generated/polaris.Task.remove_step", "developers_guide/generated/polaris.Task.set_shared_config", "developers_guide/generated/polaris.__main__.main", "developers_guide/generated/polaris.cache.update_cache", "developers_guide/generated/polaris.components.get_components", "developers_guide/generated/polaris.config.PolarisConfigParser", "developers_guide/generated/polaris.config.PolarisConfigParser.setup", "developers_guide/generated/polaris.io.download", "developers_guide/generated/polaris.io.symlink", "developers_guide/generated/polaris.io.update_permissions", "developers_guide/generated/polaris.job.clean_up_whitespace", "developers_guide/generated/polaris.job.get_slurm_options", "developers_guide/generated/polaris.job.write_job_script", "developers_guide/generated/polaris.list.list_cases", "developers_guide/generated/polaris.list.list_machines", "developers_guide/generated/polaris.list.list_suites", "developers_guide/generated/polaris.logging.log_method_call", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.build_subdivisions_cell_width_lat_lon", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.get_cell_width", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.get_subdivisions", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.make_jigsaw_mesh", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.run", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.setup", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep.build_cell_width_lat_lon", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep.make_jigsaw_mesh", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep.run", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep.setup", "developers_guide/generated/polaris.mesh.planar.compute_planar_hex_nx_ny", "developers_guide/generated/polaris.mesh.spherical.SphericalBaseStep", "developers_guide/generated/polaris.mesh.spherical.SphericalBaseStep.run", "developers_guide/generated/polaris.mesh.spherical.SphericalBaseStep.save_and_plot_cell_width", "developers_guide/generated/polaris.mesh.spherical.SphericalBaseStep.setup", "developers_guide/generated/polaris.model_step.make_graph_file", "developers_guide/generated/polaris.mpas.area_for_field", "developers_guide/generated/polaris.mpas.time_index_from_xtime", "developers_guide/generated/polaris.namelist.ingest", "developers_guide/generated/polaris.namelist.parse_replacements", "developers_guide/generated/polaris.namelist.replace", "developers_guide/generated/polaris.namelist.write", "developers_guide/generated/polaris.parallel.get_available_parallel_resources", "developers_guide/generated/polaris.parallel.get_parallel_command", "developers_guide/generated/polaris.parallel.run_command", "developers_guide/generated/polaris.parallel.set_cores_per_node", "developers_guide/generated/polaris.provenance.write", "developers_guide/generated/polaris.remap.MappingFileStep", "developers_guide/generated/polaris.remap.MappingFileStep.dst_from_lon_lat", "developers_guide/generated/polaris.remap.MappingFileStep.dst_from_mpas", "developers_guide/generated/polaris.remap.MappingFileStep.dst_from_points", "developers_guide/generated/polaris.remap.MappingFileStep.dst_from_proj", "developers_guide/generated/polaris.remap.MappingFileStep.dst_global_lon_lat", "developers_guide/generated/polaris.remap.MappingFileStep.get_remapper", "developers_guide/generated/polaris.remap.MappingFileStep.runtime_setup", "developers_guide/generated/polaris.remap.MappingFileStep.src_from_lon_lat", "developers_guide/generated/polaris.remap.MappingFileStep.src_from_mpas", "developers_guide/generated/polaris.remap.MappingFileStep.src_from_proj", "developers_guide/generated/polaris.run.complete_step_run", "developers_guide/generated/polaris.run.load_dependencies", "developers_guide/generated/polaris.run.serial.run_single_step", "developers_guide/generated/polaris.run.serial.run_tasks", "developers_guide/generated/polaris.run.setup_config", "developers_guide/generated/polaris.run.unpickle_suite", "developers_guide/generated/polaris.setup.setup_task", "developers_guide/generated/polaris.setup.setup_tasks", "developers_guide/generated/polaris.streams.read", "developers_guide/generated/polaris.streams.update_defaults", "developers_guide/generated/polaris.streams.update_tree", "developers_guide/generated/polaris.streams.write", "developers_guide/generated/polaris.suite.setup_suite", "developers_guide/generated/polaris.validate.compare_variables", "developers_guide/generated/polaris.viz.plot_global_lat_lon_field", "developers_guide/generated/polaris.viz.plot_global_mpas_field", "developers_guide/generated/polaris.viz.plot_horiz_field", "developers_guide/generated/polaris.viz.use_mplstyle", "developers_guide/generated/polaris.yaml.PolarisYaml", "developers_guide/generated/polaris.yaml.PolarisYaml.read", "developers_guide/generated/polaris.yaml.PolarisYaml.update", "developers_guide/generated/polaris.yaml.PolarisYaml.write", "developers_guide/generated/polaris.yaml.main_mpas_to_yaml", "developers_guide/generated/polaris.yaml.mpas_namelist_and_streams_to_yaml", "developers_guide/generated/polaris.yaml.yaml_to_mpas_streams", "developers_guide/machines/anvil", "developers_guide/machines/chicoma", "developers_guide/machines/chrysalis", "developers_guide/machines/compy", "developers_guide/machines/frontier", "developers_guide/machines/index", "developers_guide/machines/perlmutter", "developers_guide/ocean/api", "developers_guide/ocean/framework", "developers_guide/ocean/generated/polaris.ocean.Ocean", "developers_guide/ocean/generated/polaris.ocean.convergence.analysis.ConvergenceAnalysis", "developers_guide/ocean/generated/polaris.ocean.convergence.analysis.ConvergenceAnalysis.compute_error", "developers_guide/ocean/generated/polaris.ocean.convergence.analysis.ConvergenceAnalysis.convergence_parameters", "developers_guide/ocean/generated/polaris.ocean.convergence.analysis.ConvergenceAnalysis.exact_solution", "developers_guide/ocean/generated/polaris.ocean.convergence.analysis.ConvergenceAnalysis.get_output_field", "developers_guide/ocean/generated/polaris.ocean.convergence.analysis.ConvergenceAnalysis.plot_convergence", "developers_guide/ocean/generated/polaris.ocean.convergence.analysis.ConvergenceAnalysis.run", "developers_guide/ocean/generated/polaris.ocean.convergence.analysis.ConvergenceAnalysis.setup", "developers_guide/ocean/generated/polaris.ocean.convergence.forward.ConvergenceForward", "developers_guide/ocean/generated/polaris.ocean.convergence.forward.ConvergenceForward.compute_cell_count", "developers_guide/ocean/generated/polaris.ocean.convergence.forward.ConvergenceForward.dynamic_model_config", "developers_guide/ocean/generated/polaris.ocean.convergence.spherical.SphericalConvergenceForward", "developers_guide/ocean/generated/polaris.ocean.convergence.spherical.SphericalConvergenceForward.compute_cell_count", "developers_guide/ocean/generated/polaris.ocean.ice_shelf.IceShelfTask", "developers_guide/ocean/generated/polaris.ocean.ice_shelf.IceShelfTask.setup_ssh_adjustment_steps", "developers_guide/ocean/generated/polaris.ocean.ice_shelf.SshAdjustment", "developers_guide/ocean/generated/polaris.ocean.ice_shelf.SshAdjustment.run", "developers_guide/ocean/generated/polaris.ocean.ice_shelf.SshForward", "developers_guide/ocean/generated/polaris.ocean.ice_shelf.SshForward.compute_cell_count", "developers_guide/ocean/generated/polaris.ocean.ice_shelf.SshForward.dynamic_model_config", "developers_guide/ocean/generated/polaris.ocean.mesh.spherical.add_spherical_base_mesh_step", "developers_guide/ocean/generated/polaris.ocean.model.OceanIOStep", "developers_guide/ocean/generated/polaris.ocean.model.OceanIOStep.map_from_native_model_vars", "developers_guide/ocean/generated/polaris.ocean.model.OceanIOStep.map_to_native_model_vars", "developers_guide/ocean/generated/polaris.ocean.model.OceanIOStep.open_model_dataset", "developers_guide/ocean/generated/polaris.ocean.model.OceanIOStep.setup", "developers_guide/ocean/generated/polaris.ocean.model.OceanIOStep.write_model_dataset", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.compute_cell_count", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.constrain_resources", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.map_yaml_configs", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.map_yaml_options", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.setup", "developers_guide/ocean/generated/polaris.ocean.model.get_time_interval_string", "developers_guide/ocean/generated/polaris.ocean.rpe.compute_rpe", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.add_baroclinic_channel_tasks", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.decomp.Decomp", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.default.Default", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.forward.Forward", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.forward.Forward.compute_cell_count", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.forward.Forward.dynamic_model_config", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.init.Init", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.init.Init.run", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.init.Init.setup", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.restart.Restart", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.restart.restart_step.RestartStep", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.restart.restart_step.RestartStep.dynamic_model_config", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.rpe.Rpe", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.rpe.Rpe.configure", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis.run", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis.setup", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.threads.Threads", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.validate.Validate", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.validate.Validate.run", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.viz.Viz", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.viz.Viz.run", "developers_guide/ocean/generated/polaris.ocean.tasks.barotropic_gyre.BarotropicGyre", "developers_guide/ocean/generated/polaris.ocean.tasks.barotropic_gyre.add_barotropic_gyre_tasks", "developers_guide/ocean/generated/polaris.ocean.tasks.barotropic_gyre.analysis.Analysis", "developers_guide/ocean/generated/polaris.ocean.tasks.barotropic_gyre.analysis.Analysis.compute_error", "developers_guide/ocean/generated/polaris.ocean.tasks.barotropic_gyre.analysis.Analysis.exact_solution", "developers_guide/ocean/generated/polaris.ocean.tasks.barotropic_gyre.analysis.Analysis.run", "developers_guide/ocean/generated/polaris.ocean.tasks.barotropic_gyre.forward.Forward", "developers_guide/ocean/generated/polaris.ocean.tasks.barotropic_gyre.forward.Forward.compute_cell_count", "developers_guide/ocean/generated/polaris.ocean.tasks.barotropic_gyre.forward.Forward.dynamic_model_config", "developers_guide/ocean/generated/polaris.ocean.tasks.barotropic_gyre.forward.compute_max_time_step", "developers_guide/ocean/generated/polaris.ocean.tasks.barotropic_gyre.init.Init", "developers_guide/ocean/generated/polaris.ocean.tasks.barotropic_gyre.init.Init.run", "developers_guide/ocean/generated/polaris.ocean.tasks.barotropic_gyre.init.Init.setup", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.CosineBell", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.CosineBell.configure", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.add_cosine_bell_tasks", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.analysis.Analysis", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.analysis.Analysis.exact_solution", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.forward.Forward", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.init.Init", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.init.Init.run", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.init.cosine_bell", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.restart.Restart", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.restart.RestartStep", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.restart.RestartStep.dynamic_model_config", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.validate.Validate", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.validate.Validate.run", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.viz.Viz", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.viz.Viz.run", "developers_guide/ocean/generated/polaris.ocean.tasks.geostrophic.Geostrophic", "developers_guide/ocean/generated/polaris.ocean.tasks.geostrophic.Geostrophic.configure", "developers_guide/ocean/generated/polaris.ocean.tasks.geostrophic.add_geostrophic_tasks", "developers_guide/ocean/generated/polaris.ocean.tasks.geostrophic.analysis.Analysis", "developers_guide/ocean/generated/polaris.ocean.tasks.geostrophic.analysis.Analysis.exact_solution", "developers_guide/ocean/generated/polaris.ocean.tasks.geostrophic.analysis.Analysis.get_output_field", "developers_guide/ocean/generated/polaris.ocean.tasks.geostrophic.forward.Forward", "developers_guide/ocean/generated/polaris.ocean.tasks.geostrophic.init.Init", "developers_guide/ocean/generated/polaris.ocean.tasks.geostrophic.init.Init.run", "developers_guide/ocean/generated/polaris.ocean.tasks.geostrophic.viz.Viz", "developers_guide/ocean/generated/polaris.ocean.tasks.geostrophic.viz.Viz.run", "developers_guide/ocean/generated/polaris.ocean.tasks.ice_shelf_2d.add_ice_shelf_2d_tasks", "developers_guide/ocean/generated/polaris.ocean.tasks.ice_shelf_2d.default.Default", "developers_guide/ocean/generated/polaris.ocean.tasks.ice_shelf_2d.forward.Forward", "developers_guide/ocean/generated/polaris.ocean.tasks.ice_shelf_2d.forward.Forward.compute_cell_count", "developers_guide/ocean/generated/polaris.ocean.tasks.ice_shelf_2d.forward.Forward.dynamic_model_config", "developers_guide/ocean/generated/polaris.ocean.tasks.ice_shelf_2d.init.Init", "developers_guide/ocean/generated/polaris.ocean.tasks.ice_shelf_2d.init.Init.run", "developers_guide/ocean/generated/polaris.ocean.tasks.ice_shelf_2d.validate.Validate", "developers_guide/ocean/generated/polaris.ocean.tasks.ice_shelf_2d.validate.Validate.run", "developers_guide/ocean/generated/polaris.ocean.tasks.ice_shelf_2d.viz.Viz", "developers_guide/ocean/generated/polaris.ocean.tasks.ice_shelf_2d.viz.Viz.run", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.InertialGravityWave", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.add_inertial_gravity_wave_tasks", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.analysis.Analysis", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.analysis.Analysis.exact_solution", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution.normal_velocity", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution.ssh", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.forward.Forward", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.forward.Forward.compute_cell_count", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.init.Init", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.init.Init.run", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.viz.Viz", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.viz.Viz.run", "developers_guide/ocean/generated/polaris.ocean.tasks.internal_wave.add_internal_wave_tasks", "developers_guide/ocean/generated/polaris.ocean.tasks.internal_wave.default.Default", "developers_guide/ocean/generated/polaris.ocean.tasks.internal_wave.forward.Forward", "developers_guide/ocean/generated/polaris.ocean.tasks.internal_wave.forward.Forward.compute_cell_count", "developers_guide/ocean/generated/polaris.ocean.tasks.internal_wave.forward.Forward.dynamic_model_config", "developers_guide/ocean/generated/polaris.ocean.tasks.internal_wave.init.Init", "developers_guide/ocean/generated/polaris.ocean.tasks.internal_wave.init.Init.run", "developers_guide/ocean/generated/polaris.ocean.tasks.internal_wave.rpe.Rpe", "developers_guide/ocean/generated/polaris.ocean.tasks.internal_wave.rpe.Rpe.configure", "developers_guide/ocean/generated/polaris.ocean.tasks.internal_wave.rpe.analysis.Analysis", "developers_guide/ocean/generated/polaris.ocean.tasks.internal_wave.rpe.analysis.Analysis.run", "developers_guide/ocean/generated/polaris.ocean.tasks.internal_wave.viz.Viz", "developers_guide/ocean/generated/polaris.ocean.tasks.internal_wave.viz.Viz.run", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.ManufacturedSolution", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.add_manufactured_solution_tasks", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.analysis.Analysis", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.analysis.Analysis.exact_solution", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution.normal_velocity", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution.ssh", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.forward.Forward", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.forward.Forward.compute_cell_count", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.init.Init", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.init.Init.run", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.init.Init.setup", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.viz.Viz", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.viz.Viz.run", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.add_single_column_tasks", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.cvmix.CVMix", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.forward.Forward", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.ideal_age.IdealAge", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.init.Init", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.init.Init.run", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.viz.Viz", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.viz.Viz.run", "developers_guide/ocean/generated/polaris.ocean.tasks.sphere_transport.SphereTransport", "developers_guide/ocean/generated/polaris.ocean.tasks.sphere_transport.SphereTransport.configure", "developers_guide/ocean/generated/polaris.ocean.tasks.sphere_transport.add_sphere_transport_tasks", "developers_guide/ocean/generated/polaris.ocean.tasks.sphere_transport.analysis.Analysis", "developers_guide/ocean/generated/polaris.ocean.tasks.sphere_transport.analysis.Analysis.convergence_parameters", "developers_guide/ocean/generated/polaris.ocean.tasks.sphere_transport.filament_analysis.FilamentAnalysis", "developers_guide/ocean/generated/polaris.ocean.tasks.sphere_transport.filament_analysis.FilamentAnalysis.run", "developers_guide/ocean/generated/polaris.ocean.tasks.sphere_transport.forward.Forward", "developers_guide/ocean/generated/polaris.ocean.tasks.sphere_transport.init.Init", "developers_guide/ocean/generated/polaris.ocean.tasks.sphere_transport.init.Init.run", "developers_guide/ocean/generated/polaris.ocean.tasks.sphere_transport.mixing_analysis.MixingAnalysis", "developers_guide/ocean/generated/polaris.ocean.tasks.sphere_transport.mixing_analysis.MixingAnalysis.run", "developers_guide/ocean/generated/polaris.ocean.tasks.sphere_transport.viz.Viz", "developers_guide/ocean/generated/polaris.ocean.tasks.sphere_transport.viz.Viz.run", "developers_guide/ocean/generated/polaris.ocean.vertical.grid_1d.generate_1d_grid", "developers_guide/ocean/generated/polaris.ocean.vertical.grid_1d.write_1d_grid", "developers_guide/ocean/generated/polaris.ocean.vertical.init_vertical_coord", "developers_guide/ocean/generated/polaris.ocean.vertical.partial_cells.alter_bottom_depth", "developers_guide/ocean/generated/polaris.ocean.vertical.partial_cells.alter_ssh", "developers_guide/ocean/generated/polaris.ocean.vertical.sigma.init_sigma_vertical_coord", "developers_guide/ocean/generated/polaris.ocean.vertical.sigma.update_sigma_layer_thickness", "developers_guide/ocean/generated/polaris.ocean.vertical.update_layer_thickness", "developers_guide/ocean/generated/polaris.ocean.vertical.zlevel.compute_min_max_level_cell", "developers_guide/ocean/generated/polaris.ocean.vertical.zlevel.compute_z_level_layer_thickness", "developers_guide/ocean/generated/polaris.ocean.vertical.zlevel.compute_z_level_resting_thickness", "developers_guide/ocean/generated/polaris.ocean.vertical.zlevel.init_z_level_vertical_coord", "developers_guide/ocean/generated/polaris.ocean.vertical.zlevel.update_z_level_layer_thickness", "developers_guide/ocean/generated/polaris.ocean.vertical.zstar.init_z_star_vertical_coord", "developers_guide/ocean/generated/polaris.ocean.vertical.zstar.update_z_star_layer_thickness", "developers_guide/ocean/generated/polaris.ocean.viz.compute_transect", "developers_guide/ocean/generated/polaris.ocean.viz.plot_transect", "developers_guide/ocean/generated/polaris.ocean.viz.transect.horiz.find_planar_transect_cells_and_weights", "developers_guide/ocean/generated/polaris.ocean.viz.transect.horiz.find_spherical_transect_cells_and_weights", "developers_guide/ocean/generated/polaris.ocean.viz.transect.horiz.make_triangle_tree", "developers_guide/ocean/generated/polaris.ocean.viz.transect.horiz.mesh_to_triangles", "developers_guide/ocean/generated/polaris.ocean.viz.transect.vert.find_transect_levels_and_weights", "developers_guide/ocean/generated/polaris.ocean.viz.transect.vert.interp_mpas_to_transect_cells", "developers_guide/ocean/generated/polaris.ocean.viz.transect.vert.interp_mpas_to_transect_nodes", "developers_guide/ocean/index", "developers_guide/ocean/models/index", "developers_guide/ocean/models/mpas_ocean", "developers_guide/ocean/tasks/baroclinic_channel", "developers_guide/ocean/tasks/barotropic_gyre", "developers_guide/ocean/tasks/correlated_tracers_2d", "developers_guide/ocean/tasks/cosine_bell", "developers_guide/ocean/tasks/divergent_2d", "developers_guide/ocean/tasks/geostrophic", "developers_guide/ocean/tasks/ice_shelf_2d", "developers_guide/ocean/tasks/index", "developers_guide/ocean/tasks/inertial_gravity_wave", "developers_guide/ocean/tasks/internal_wave", "developers_guide/ocean/tasks/manufactured_solution", "developers_guide/ocean/tasks/nondivergent_2d", "developers_guide/ocean/tasks/rotation_2d", "developers_guide/ocean/tasks/single_column", "developers_guide/organization/categories_of_tasks", "developers_guide/organization/components", "developers_guide/organization/directories", "developers_guide/organization/index", "developers_guide/organization/steps", "developers_guide/organization/suites", "developers_guide/organization/tasks", "developers_guide/overview", "developers_guide/quick_start", "developers_guide/seaice/api", "developers_guide/seaice/framework", "developers_guide/seaice/generated/polaris.seaice.SeaIce", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.add_single_column_tasks", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.exact_restart.ExactRestart", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.exact_restart.validate.Validate", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.exact_restart.validate.Validate.run", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.forward.Forward", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.standard_physics.StandardPhysics", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.standard_physics.viz.Viz", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.standard_physics.viz.Viz.run", "developers_guide/seaice/index", "developers_guide/seaice/mpas_seaice", "developers_guide/seaice/tasks/index", "developers_guide/seaice/tasks/single_column", "developers_guide/troubleshooting", "glossary", "index", "tutorials/dev_add_test_group", "users_guide/config_files", "users_guide/machines/anvil", "users_guide/machines/chicoma", "users_guide/machines/chrysalis", "users_guide/machines/compy", "users_guide/machines/frontier", "users_guide/machines/index", "users_guide/machines/perlmutter", "users_guide/ocean/framework/ice_shelf", "users_guide/ocean/framework/index", "users_guide/ocean/framework/vertical", "users_guide/ocean/index", "users_guide/ocean/suites", "users_guide/ocean/tasks/baroclinic_channel", "users_guide/ocean/tasks/barotropic_gyre", "users_guide/ocean/tasks/correlated_tracers_2d", "users_guide/ocean/tasks/cosine_bell", "users_guide/ocean/tasks/divergent_2d", "users_guide/ocean/tasks/geostrophic", "users_guide/ocean/tasks/ice_shelf_2d", "users_guide/ocean/tasks/index", "users_guide/ocean/tasks/inertial_gravity_wave", "users_guide/ocean/tasks/internal_wave", "users_guide/ocean/tasks/manufactured_solution", "users_guide/ocean/tasks/nondivergent_2d", "users_guide/ocean/tasks/rotation_2d", "users_guide/ocean/tasks/single_column", "users_guide/ocean/tasks/template", "users_guide/quick_start", "users_guide/seaice/index", "users_guide/seaice/tasks/index", "users_guide/seaice/tasks/single_column", "users_guide/seaice/tasks/template", "users_guide/suites", "users_guide/tasks"], "envversion": {"sphinx": 64, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.viewcode": 1}, "filenames": ["design_docs/index.md", "design_docs/shared_steps.md", "design_docs/template.md", "developers_guide/api.md", "developers_guide/building_docs.md", "developers_guide/command_line.md", "developers_guide/deploying_spack.md", "developers_guide/docs.md", "developers_guide/framework/commands.md", "developers_guide/framework/config.md", "developers_guide/framework/index.md", "developers_guide/framework/io.md", "developers_guide/framework/logging.md", "developers_guide/framework/mesh.md", "developers_guide/framework/model.md", "developers_guide/framework/mpas.md", "developers_guide/framework/provenance.md", "developers_guide/framework/remapping.md", "developers_guide/framework/validation.md", "developers_guide/framework/visualization.md", "developers_guide/generated/polaris.Component.rst", "developers_guide/generated/polaris.Component.add_config.rst", "developers_guide/generated/polaris.Component.add_step.rst", "developers_guide/generated/polaris.Component.add_task.rst", "developers_guide/generated/polaris.Component.remove_step.rst", "developers_guide/generated/polaris.ModelStep.rst", "developers_guide/generated/polaris.ModelStep.add_model_config_options.rst", "developers_guide/generated/polaris.ModelStep.add_namelist_file.rst", "developers_guide/generated/polaris.ModelStep.add_streams_file.rst", "developers_guide/generated/polaris.ModelStep.add_yaml_file.rst", "developers_guide/generated/polaris.ModelStep.dynamic_model_config.rst", "developers_guide/generated/polaris.ModelStep.map_yaml_configs.rst", "developers_guide/generated/polaris.ModelStep.map_yaml_options.rst", "developers_guide/generated/polaris.ModelStep.map_yaml_to_namelist.rst", "developers_guide/generated/polaris.ModelStep.partition.rst", "developers_guide/generated/polaris.ModelStep.process_inputs_and_outputs.rst", "developers_guide/generated/polaris.ModelStep.runtime_setup.rst", "developers_guide/generated/polaris.ModelStep.set_model_resources.rst", "developers_guide/generated/polaris.ModelStep.setup.rst", "developers_guide/generated/polaris.ModelStep.update_namelist_pio.rst", "developers_guide/generated/polaris.Step.rst", "developers_guide/generated/polaris.Step.add_dependency.rst", "developers_guide/generated/polaris.Step.add_input_file.rst", "developers_guide/generated/polaris.Step.add_output_file.rst", "developers_guide/generated/polaris.Step.constrain_resources.rst", "developers_guide/generated/polaris.Step.run.rst", "developers_guide/generated/polaris.Step.runtime_setup.rst", "developers_guide/generated/polaris.Step.set_resources.rst", "developers_guide/generated/polaris.Step.set_shared_config.rst", "developers_guide/generated/polaris.Step.setup.rst", "developers_guide/generated/polaris.Step.validate_baselines.rst", "developers_guide/generated/polaris.Task.rst", "developers_guide/generated/polaris.Task.add_step.rst", "developers_guide/generated/polaris.Task.configure.rst", "developers_guide/generated/polaris.Task.remove_step.rst", "developers_guide/generated/polaris.Task.set_shared_config.rst", "developers_guide/generated/polaris.__main__.main.rst", "developers_guide/generated/polaris.cache.update_cache.rst", "developers_guide/generated/polaris.components.get_components.rst", "developers_guide/generated/polaris.config.PolarisConfigParser.rst", "developers_guide/generated/polaris.config.PolarisConfigParser.setup.rst", "developers_guide/generated/polaris.io.download.rst", "developers_guide/generated/polaris.io.symlink.rst", "developers_guide/generated/polaris.io.update_permissions.rst", "developers_guide/generated/polaris.job.clean_up_whitespace.rst", "developers_guide/generated/polaris.job.get_slurm_options.rst", "developers_guide/generated/polaris.job.write_job_script.rst", "developers_guide/generated/polaris.list.list_cases.rst", "developers_guide/generated/polaris.list.list_machines.rst", "developers_guide/generated/polaris.list.list_suites.rst", "developers_guide/generated/polaris.logging.log_method_call.rst", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.rst", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.build_subdivisions_cell_width_lat_lon.rst", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.get_cell_width.rst", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.get_subdivisions.rst", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.make_jigsaw_mesh.rst", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.run.rst", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.setup.rst", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep.rst", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep.build_cell_width_lat_lon.rst", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep.make_jigsaw_mesh.rst", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep.run.rst", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep.setup.rst", "developers_guide/generated/polaris.mesh.planar.compute_planar_hex_nx_ny.rst", "developers_guide/generated/polaris.mesh.spherical.SphericalBaseStep.rst", "developers_guide/generated/polaris.mesh.spherical.SphericalBaseStep.run.rst", "developers_guide/generated/polaris.mesh.spherical.SphericalBaseStep.save_and_plot_cell_width.rst", "developers_guide/generated/polaris.mesh.spherical.SphericalBaseStep.setup.rst", "developers_guide/generated/polaris.model_step.make_graph_file.rst", "developers_guide/generated/polaris.mpas.area_for_field.rst", "developers_guide/generated/polaris.mpas.time_index_from_xtime.rst", "developers_guide/generated/polaris.namelist.ingest.rst", "developers_guide/generated/polaris.namelist.parse_replacements.rst", "developers_guide/generated/polaris.namelist.replace.rst", "developers_guide/generated/polaris.namelist.write.rst", "developers_guide/generated/polaris.parallel.get_available_parallel_resources.rst", "developers_guide/generated/polaris.parallel.get_parallel_command.rst", "developers_guide/generated/polaris.parallel.run_command.rst", "developers_guide/generated/polaris.parallel.set_cores_per_node.rst", "developers_guide/generated/polaris.provenance.write.rst", "developers_guide/generated/polaris.remap.MappingFileStep.rst", "developers_guide/generated/polaris.remap.MappingFileStep.dst_from_lon_lat.rst", "developers_guide/generated/polaris.remap.MappingFileStep.dst_from_mpas.rst", "developers_guide/generated/polaris.remap.MappingFileStep.dst_from_points.rst", "developers_guide/generated/polaris.remap.MappingFileStep.dst_from_proj.rst", "developers_guide/generated/polaris.remap.MappingFileStep.dst_global_lon_lat.rst", "developers_guide/generated/polaris.remap.MappingFileStep.get_remapper.rst", "developers_guide/generated/polaris.remap.MappingFileStep.runtime_setup.rst", "developers_guide/generated/polaris.remap.MappingFileStep.src_from_lon_lat.rst", "developers_guide/generated/polaris.remap.MappingFileStep.src_from_mpas.rst", "developers_guide/generated/polaris.remap.MappingFileStep.src_from_proj.rst", "developers_guide/generated/polaris.run.complete_step_run.rst", "developers_guide/generated/polaris.run.load_dependencies.rst", "developers_guide/generated/polaris.run.serial.run_single_step.rst", "developers_guide/generated/polaris.run.serial.run_tasks.rst", "developers_guide/generated/polaris.run.setup_config.rst", "developers_guide/generated/polaris.run.unpickle_suite.rst", "developers_guide/generated/polaris.setup.setup_task.rst", "developers_guide/generated/polaris.setup.setup_tasks.rst", "developers_guide/generated/polaris.streams.read.rst", "developers_guide/generated/polaris.streams.update_defaults.rst", "developers_guide/generated/polaris.streams.update_tree.rst", "developers_guide/generated/polaris.streams.write.rst", "developers_guide/generated/polaris.suite.setup_suite.rst", "developers_guide/generated/polaris.validate.compare_variables.rst", "developers_guide/generated/polaris.viz.plot_global_lat_lon_field.rst", "developers_guide/generated/polaris.viz.plot_global_mpas_field.rst", "developers_guide/generated/polaris.viz.plot_horiz_field.rst", "developers_guide/generated/polaris.viz.use_mplstyle.rst", "developers_guide/generated/polaris.yaml.PolarisYaml.rst", "developers_guide/generated/polaris.yaml.PolarisYaml.read.rst", "developers_guide/generated/polaris.yaml.PolarisYaml.update.rst", "developers_guide/generated/polaris.yaml.PolarisYaml.write.rst", "developers_guide/generated/polaris.yaml.main_mpas_to_yaml.rst", "developers_guide/generated/polaris.yaml.mpas_namelist_and_streams_to_yaml.rst", "developers_guide/generated/polaris.yaml.yaml_to_mpas_streams.rst", "developers_guide/machines/anvil.md", "developers_guide/machines/chicoma.md", "developers_guide/machines/chrysalis.md", "developers_guide/machines/compy.md", "developers_guide/machines/frontier.md", "developers_guide/machines/index.md", "developers_guide/machines/perlmutter.md", "developers_guide/ocean/api.md", "developers_guide/ocean/framework.md", "developers_guide/ocean/generated/polaris.ocean.Ocean.rst", "developers_guide/ocean/generated/polaris.ocean.convergence.analysis.ConvergenceAnalysis.rst", "developers_guide/ocean/generated/polaris.ocean.convergence.analysis.ConvergenceAnalysis.compute_error.rst", "developers_guide/ocean/generated/polaris.ocean.convergence.analysis.ConvergenceAnalysis.convergence_parameters.rst", "developers_guide/ocean/generated/polaris.ocean.convergence.analysis.ConvergenceAnalysis.exact_solution.rst", "developers_guide/ocean/generated/polaris.ocean.convergence.analysis.ConvergenceAnalysis.get_output_field.rst", "developers_guide/ocean/generated/polaris.ocean.convergence.analysis.ConvergenceAnalysis.plot_convergence.rst", "developers_guide/ocean/generated/polaris.ocean.convergence.analysis.ConvergenceAnalysis.run.rst", "developers_guide/ocean/generated/polaris.ocean.convergence.analysis.ConvergenceAnalysis.setup.rst", "developers_guide/ocean/generated/polaris.ocean.convergence.forward.ConvergenceForward.rst", "developers_guide/ocean/generated/polaris.ocean.convergence.forward.ConvergenceForward.compute_cell_count.rst", "developers_guide/ocean/generated/polaris.ocean.convergence.forward.ConvergenceForward.dynamic_model_config.rst", "developers_guide/ocean/generated/polaris.ocean.convergence.spherical.SphericalConvergenceForward.rst", "developers_guide/ocean/generated/polaris.ocean.convergence.spherical.SphericalConvergenceForward.compute_cell_count.rst", "developers_guide/ocean/generated/polaris.ocean.ice_shelf.IceShelfTask.rst", "developers_guide/ocean/generated/polaris.ocean.ice_shelf.IceShelfTask.setup_ssh_adjustment_steps.rst", "developers_guide/ocean/generated/polaris.ocean.ice_shelf.SshAdjustment.rst", "developers_guide/ocean/generated/polaris.ocean.ice_shelf.SshAdjustment.run.rst", "developers_guide/ocean/generated/polaris.ocean.ice_shelf.SshForward.rst", "developers_guide/ocean/generated/polaris.ocean.ice_shelf.SshForward.compute_cell_count.rst", "developers_guide/ocean/generated/polaris.ocean.ice_shelf.SshForward.dynamic_model_config.rst", "developers_guide/ocean/generated/polaris.ocean.mesh.spherical.add_spherical_base_mesh_step.rst", "developers_guide/ocean/generated/polaris.ocean.model.OceanIOStep.rst", "developers_guide/ocean/generated/polaris.ocean.model.OceanIOStep.map_from_native_model_vars.rst", "developers_guide/ocean/generated/polaris.ocean.model.OceanIOStep.map_to_native_model_vars.rst", "developers_guide/ocean/generated/polaris.ocean.model.OceanIOStep.open_model_dataset.rst", "developers_guide/ocean/generated/polaris.ocean.model.OceanIOStep.setup.rst", "developers_guide/ocean/generated/polaris.ocean.model.OceanIOStep.write_model_dataset.rst", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.rst", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.compute_cell_count.rst", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.constrain_resources.rst", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.map_yaml_configs.rst", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.map_yaml_options.rst", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.setup.rst", "developers_guide/ocean/generated/polaris.ocean.model.get_time_interval_string.rst", "developers_guide/ocean/generated/polaris.ocean.rpe.compute_rpe.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.add_baroclinic_channel_tasks.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.decomp.Decomp.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.default.Default.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.forward.Forward.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.forward.Forward.compute_cell_count.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.forward.Forward.dynamic_model_config.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.init.Init.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.init.Init.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.init.Init.setup.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.restart.Restart.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.restart.restart_step.RestartStep.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.restart.restart_step.RestartStep.dynamic_model_config.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.rpe.Rpe.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.rpe.Rpe.configure.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis.setup.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.threads.Threads.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.validate.Validate.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.validate.Validate.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.viz.Viz.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.viz.Viz.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.barotropic_gyre.BarotropicGyre.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.barotropic_gyre.add_barotropic_gyre_tasks.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.barotropic_gyre.analysis.Analysis.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.barotropic_gyre.analysis.Analysis.compute_error.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.barotropic_gyre.analysis.Analysis.exact_solution.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.barotropic_gyre.analysis.Analysis.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.barotropic_gyre.forward.Forward.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.barotropic_gyre.forward.Forward.compute_cell_count.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.barotropic_gyre.forward.Forward.dynamic_model_config.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.barotropic_gyre.forward.compute_max_time_step.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.barotropic_gyre.init.Init.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.barotropic_gyre.init.Init.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.barotropic_gyre.init.Init.setup.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.CosineBell.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.CosineBell.configure.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.add_cosine_bell_tasks.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.analysis.Analysis.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.analysis.Analysis.exact_solution.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.forward.Forward.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.init.Init.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.init.Init.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.init.cosine_bell.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.restart.Restart.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.restart.RestartStep.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.restart.RestartStep.dynamic_model_config.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.validate.Validate.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.validate.Validate.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.viz.Viz.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.viz.Viz.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.geostrophic.Geostrophic.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.geostrophic.Geostrophic.configure.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.geostrophic.add_geostrophic_tasks.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.geostrophic.analysis.Analysis.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.geostrophic.analysis.Analysis.exact_solution.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.geostrophic.analysis.Analysis.get_output_field.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.geostrophic.forward.Forward.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.geostrophic.init.Init.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.geostrophic.init.Init.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.geostrophic.viz.Viz.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.geostrophic.viz.Viz.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.ice_shelf_2d.add_ice_shelf_2d_tasks.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.ice_shelf_2d.default.Default.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.ice_shelf_2d.forward.Forward.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.ice_shelf_2d.forward.Forward.compute_cell_count.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.ice_shelf_2d.forward.Forward.dynamic_model_config.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.ice_shelf_2d.init.Init.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.ice_shelf_2d.init.Init.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.ice_shelf_2d.validate.Validate.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.ice_shelf_2d.validate.Validate.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.ice_shelf_2d.viz.Viz.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.ice_shelf_2d.viz.Viz.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.InertialGravityWave.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.add_inertial_gravity_wave_tasks.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.analysis.Analysis.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.analysis.Analysis.exact_solution.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution.normal_velocity.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution.ssh.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.forward.Forward.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.forward.Forward.compute_cell_count.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.init.Init.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.init.Init.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.viz.Viz.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.viz.Viz.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.internal_wave.add_internal_wave_tasks.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.internal_wave.default.Default.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.internal_wave.forward.Forward.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.internal_wave.forward.Forward.compute_cell_count.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.internal_wave.forward.Forward.dynamic_model_config.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.internal_wave.init.Init.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.internal_wave.init.Init.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.internal_wave.rpe.Rpe.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.internal_wave.rpe.Rpe.configure.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.internal_wave.rpe.analysis.Analysis.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.internal_wave.rpe.analysis.Analysis.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.internal_wave.viz.Viz.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.internal_wave.viz.Viz.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.ManufacturedSolution.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.add_manufactured_solution_tasks.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.analysis.Analysis.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.analysis.Analysis.exact_solution.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution.normal_velocity.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution.ssh.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.forward.Forward.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.forward.Forward.compute_cell_count.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.init.Init.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.init.Init.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.init.Init.setup.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.viz.Viz.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.viz.Viz.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.add_single_column_tasks.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.cvmix.CVMix.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.forward.Forward.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.ideal_age.IdealAge.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.init.Init.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.init.Init.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.viz.Viz.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.viz.Viz.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.sphere_transport.SphereTransport.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.sphere_transport.SphereTransport.configure.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.sphere_transport.add_sphere_transport_tasks.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.sphere_transport.analysis.Analysis.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.sphere_transport.analysis.Analysis.convergence_parameters.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.sphere_transport.filament_analysis.FilamentAnalysis.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.sphere_transport.filament_analysis.FilamentAnalysis.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.sphere_transport.forward.Forward.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.sphere_transport.init.Init.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.sphere_transport.init.Init.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.sphere_transport.mixing_analysis.MixingAnalysis.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.sphere_transport.mixing_analysis.MixingAnalysis.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.sphere_transport.viz.Viz.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.sphere_transport.viz.Viz.run.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.grid_1d.generate_1d_grid.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.grid_1d.write_1d_grid.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.init_vertical_coord.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.partial_cells.alter_bottom_depth.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.partial_cells.alter_ssh.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.sigma.init_sigma_vertical_coord.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.sigma.update_sigma_layer_thickness.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.update_layer_thickness.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.zlevel.compute_min_max_level_cell.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.zlevel.compute_z_level_layer_thickness.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.zlevel.compute_z_level_resting_thickness.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.zlevel.init_z_level_vertical_coord.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.zlevel.update_z_level_layer_thickness.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.zstar.init_z_star_vertical_coord.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.zstar.update_z_star_layer_thickness.rst", "developers_guide/ocean/generated/polaris.ocean.viz.compute_transect.rst", "developers_guide/ocean/generated/polaris.ocean.viz.plot_transect.rst", "developers_guide/ocean/generated/polaris.ocean.viz.transect.horiz.find_planar_transect_cells_and_weights.rst", "developers_guide/ocean/generated/polaris.ocean.viz.transect.horiz.find_spherical_transect_cells_and_weights.rst", "developers_guide/ocean/generated/polaris.ocean.viz.transect.horiz.make_triangle_tree.rst", "developers_guide/ocean/generated/polaris.ocean.viz.transect.horiz.mesh_to_triangles.rst", "developers_guide/ocean/generated/polaris.ocean.viz.transect.vert.find_transect_levels_and_weights.rst", "developers_guide/ocean/generated/polaris.ocean.viz.transect.vert.interp_mpas_to_transect_cells.rst", "developers_guide/ocean/generated/polaris.ocean.viz.transect.vert.interp_mpas_to_transect_nodes.rst", "developers_guide/ocean/index.md", "developers_guide/ocean/models/index.md", "developers_guide/ocean/models/mpas_ocean.md", "developers_guide/ocean/tasks/baroclinic_channel.md", "developers_guide/ocean/tasks/barotropic_gyre.md", "developers_guide/ocean/tasks/correlated_tracers_2d.md", "developers_guide/ocean/tasks/cosine_bell.md", "developers_guide/ocean/tasks/divergent_2d.md", "developers_guide/ocean/tasks/geostrophic.md", "developers_guide/ocean/tasks/ice_shelf_2d.md", "developers_guide/ocean/tasks/index.md", "developers_guide/ocean/tasks/inertial_gravity_wave.md", "developers_guide/ocean/tasks/internal_wave.md", "developers_guide/ocean/tasks/manufactured_solution.md", "developers_guide/ocean/tasks/nondivergent_2d.md", "developers_guide/ocean/tasks/rotation_2d.md", "developers_guide/ocean/tasks/single_column.md", "developers_guide/organization/categories_of_tasks.md", "developers_guide/organization/components.md", "developers_guide/organization/directories.md", "developers_guide/organization/index.md", "developers_guide/organization/steps.md", "developers_guide/organization/suites.md", "developers_guide/organization/tasks.md", "developers_guide/overview.md", "developers_guide/quick_start.md", "developers_guide/seaice/api.md", "developers_guide/seaice/framework.md", "developers_guide/seaice/generated/polaris.seaice.SeaIce.rst", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.add_single_column_tasks.rst", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.exact_restart.ExactRestart.rst", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.exact_restart.validate.Validate.rst", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.exact_restart.validate.Validate.run.rst", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.forward.Forward.rst", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.standard_physics.StandardPhysics.rst", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.standard_physics.viz.Viz.rst", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.standard_physics.viz.Viz.run.rst", "developers_guide/seaice/index.md", "developers_guide/seaice/mpas_seaice.md", "developers_guide/seaice/tasks/index.md", "developers_guide/seaice/tasks/single_column.md", "developers_guide/troubleshooting.md", "glossary.md", "index.md", "tutorials/dev_add_test_group.md", "users_guide/config_files.md", "users_guide/machines/anvil.md", "users_guide/machines/chicoma.md", "users_guide/machines/chrysalis.md", "users_guide/machines/compy.md", "users_guide/machines/frontier.md", "users_guide/machines/index.md", "users_guide/machines/perlmutter.md", "users_guide/ocean/framework/ice_shelf.md", "users_guide/ocean/framework/index.md", "users_guide/ocean/framework/vertical.md", "users_guide/ocean/index.md", "users_guide/ocean/suites.md", "users_guide/ocean/tasks/baroclinic_channel.md", "users_guide/ocean/tasks/barotropic_gyre.md", "users_guide/ocean/tasks/correlated_tracers_2d.md", "users_guide/ocean/tasks/cosine_bell.md", "users_guide/ocean/tasks/divergent_2d.md", "users_guide/ocean/tasks/geostrophic.md", "users_guide/ocean/tasks/ice_shelf_2d.md", "users_guide/ocean/tasks/index.md", "users_guide/ocean/tasks/inertial_gravity_wave.md", "users_guide/ocean/tasks/internal_wave.md", "users_guide/ocean/tasks/manufactured_solution.md", "users_guide/ocean/tasks/nondivergent_2d.md", "users_guide/ocean/tasks/rotation_2d.md", "users_guide/ocean/tasks/single_column.md", "users_guide/ocean/tasks/template.md", "users_guide/quick_start.md", "users_guide/seaice/index.md", "users_guide/seaice/tasks/index.md", "users_guide/seaice/tasks/single_column.md", "users_guide/seaice/tasks/template.md", "users_guide/suites.md", "users_guide/tasks.md"], "indexentries": {"__init__() (polaris.component method)": [[20, "polaris.Component.__init__", false]], "__init__() (polaris.config.polarisconfigparser method)": [[59, "polaris.config.PolarisConfigParser.__init__", false]], "__init__() (polaris.mesh.icosahedralmeshstep method)": [[71, "polaris.mesh.IcosahedralMeshStep.__init__", false]], "__init__() (polaris.mesh.quasiuniformsphericalmeshstep method)": [[78, "polaris.mesh.QuasiUniformSphericalMeshStep.__init__", false]], "__init__() (polaris.mesh.spherical.sphericalbasestep method)": [[84, "polaris.mesh.spherical.SphericalBaseStep.__init__", false]], "__init__() (polaris.modelstep method)": [[25, "polaris.ModelStep.__init__", false]], "__init__() (polaris.ocean.convergence.analysis.convergenceanalysis method)": [[146, "polaris.ocean.convergence.analysis.ConvergenceAnalysis.__init__", false]], "__init__() (polaris.ocean.convergence.forward.convergenceforward method)": [[154, "polaris.ocean.convergence.forward.ConvergenceForward.__init__", false]], "__init__() (polaris.ocean.convergence.spherical.sphericalconvergenceforward method)": [[157, "polaris.ocean.convergence.spherical.SphericalConvergenceForward.__init__", false]], "__init__() (polaris.ocean.ice_shelf.iceshelftask method)": [[159, "polaris.ocean.ice_shelf.IceShelfTask.__init__", false]], "__init__() (polaris.ocean.ice_shelf.sshadjustment method)": [[161, "polaris.ocean.ice_shelf.SshAdjustment.__init__", false]], "__init__() (polaris.ocean.ice_shelf.sshforward method)": [[163, "polaris.ocean.ice_shelf.SshForward.__init__", false]], "__init__() (polaris.ocean.model.oceaniostep method)": [[167, "polaris.ocean.model.OceanIOStep.__init__", false]], "__init__() (polaris.ocean.model.oceanmodelstep method)": [[173, "polaris.ocean.model.OceanModelStep.__init__", false]], "__init__() (polaris.ocean.ocean method)": [[145, "polaris.ocean.Ocean.__init__", false]], "__init__() (polaris.ocean.tasks.baroclinic_channel.decomp.decomp method)": [[182, "polaris.ocean.tasks.baroclinic_channel.decomp.Decomp.__init__", false]], "__init__() (polaris.ocean.tasks.baroclinic_channel.default.default method)": [[183, "polaris.ocean.tasks.baroclinic_channel.default.Default.__init__", false]], "__init__() (polaris.ocean.tasks.baroclinic_channel.forward.forward method)": [[184, "polaris.ocean.tasks.baroclinic_channel.forward.Forward.__init__", false]], "__init__() (polaris.ocean.tasks.baroclinic_channel.init.init method)": [[187, "polaris.ocean.tasks.baroclinic_channel.init.Init.__init__", false]], "__init__() (polaris.ocean.tasks.baroclinic_channel.restart.restart method)": [[190, "polaris.ocean.tasks.baroclinic_channel.restart.Restart.__init__", false]], "__init__() (polaris.ocean.tasks.baroclinic_channel.restart.restart_step.restartstep method)": [[191, "polaris.ocean.tasks.baroclinic_channel.restart.restart_step.RestartStep.__init__", false]], "__init__() (polaris.ocean.tasks.baroclinic_channel.rpe.analysis.analysis method)": [[195, "polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis.__init__", false]], "__init__() (polaris.ocean.tasks.baroclinic_channel.rpe.rpe method)": [[193, "polaris.ocean.tasks.baroclinic_channel.rpe.Rpe.__init__", false]], "__init__() (polaris.ocean.tasks.baroclinic_channel.threads.threads method)": [[198, "polaris.ocean.tasks.baroclinic_channel.threads.Threads.__init__", false]], "__init__() (polaris.ocean.tasks.baroclinic_channel.validate.validate method)": [[199, "polaris.ocean.tasks.baroclinic_channel.validate.Validate.__init__", false]], "__init__() (polaris.ocean.tasks.baroclinic_channel.viz.viz method)": [[201, "polaris.ocean.tasks.baroclinic_channel.viz.Viz.__init__", false]], "__init__() (polaris.ocean.tasks.barotropic_gyre.analysis.analysis method)": [[205, "polaris.ocean.tasks.barotropic_gyre.analysis.Analysis.__init__", false]], "__init__() (polaris.ocean.tasks.barotropic_gyre.barotropicgyre method)": [[203, "polaris.ocean.tasks.barotropic_gyre.BarotropicGyre.__init__", false]], "__init__() (polaris.ocean.tasks.barotropic_gyre.forward.forward method)": [[209, "polaris.ocean.tasks.barotropic_gyre.forward.Forward.__init__", false]], "__init__() (polaris.ocean.tasks.barotropic_gyre.init.init method)": [[213, "polaris.ocean.tasks.barotropic_gyre.init.Init.__init__", false]], "__init__() (polaris.ocean.tasks.cosine_bell.analysis.analysis method)": [[219, "polaris.ocean.tasks.cosine_bell.analysis.Analysis.__init__", false]], "__init__() (polaris.ocean.tasks.cosine_bell.cosinebell method)": [[216, "polaris.ocean.tasks.cosine_bell.CosineBell.__init__", false]], "__init__() (polaris.ocean.tasks.cosine_bell.forward.forward method)": [[221, "polaris.ocean.tasks.cosine_bell.forward.Forward.__init__", false]], "__init__() (polaris.ocean.tasks.cosine_bell.init.init method)": [[222, "polaris.ocean.tasks.cosine_bell.init.Init.__init__", false]], "__init__() (polaris.ocean.tasks.cosine_bell.restart.restart method)": [[225, "polaris.ocean.tasks.cosine_bell.restart.Restart.__init__", false]], "__init__() (polaris.ocean.tasks.cosine_bell.restart.restartstep method)": [[226, "polaris.ocean.tasks.cosine_bell.restart.RestartStep.__init__", false]], "__init__() (polaris.ocean.tasks.cosine_bell.validate.validate method)": [[228, "polaris.ocean.tasks.cosine_bell.validate.Validate.__init__", false]], "__init__() (polaris.ocean.tasks.cosine_bell.viz.viz method)": [[230, "polaris.ocean.tasks.cosine_bell.viz.Viz.__init__", false]], "__init__() (polaris.ocean.tasks.geostrophic.analysis.analysis method)": [[235, "polaris.ocean.tasks.geostrophic.analysis.Analysis.__init__", false]], "__init__() (polaris.ocean.tasks.geostrophic.forward.forward method)": [[238, "polaris.ocean.tasks.geostrophic.forward.Forward.__init__", false]], "__init__() (polaris.ocean.tasks.geostrophic.geostrophic method)": [[232, "polaris.ocean.tasks.geostrophic.Geostrophic.__init__", false]], "__init__() (polaris.ocean.tasks.geostrophic.init.init method)": [[239, "polaris.ocean.tasks.geostrophic.init.Init.__init__", false]], "__init__() (polaris.ocean.tasks.geostrophic.viz.viz method)": [[241, "polaris.ocean.tasks.geostrophic.viz.Viz.__init__", false]], "__init__() (polaris.ocean.tasks.ice_shelf_2d.default.default method)": [[244, "polaris.ocean.tasks.ice_shelf_2d.default.Default.__init__", false]], "__init__() (polaris.ocean.tasks.ice_shelf_2d.forward.forward method)": [[245, "polaris.ocean.tasks.ice_shelf_2d.forward.Forward.__init__", false]], "__init__() (polaris.ocean.tasks.ice_shelf_2d.init.init method)": [[248, "polaris.ocean.tasks.ice_shelf_2d.init.Init.__init__", false]], "__init__() (polaris.ocean.tasks.ice_shelf_2d.validate.validate method)": [[250, "polaris.ocean.tasks.ice_shelf_2d.validate.Validate.__init__", false]], "__init__() (polaris.ocean.tasks.ice_shelf_2d.viz.viz method)": [[252, "polaris.ocean.tasks.ice_shelf_2d.viz.Viz.__init__", false]], "__init__() (polaris.ocean.tasks.inertial_gravity_wave.analysis.analysis method)": [[256, "polaris.ocean.tasks.inertial_gravity_wave.analysis.Analysis.__init__", false]], "__init__() (polaris.ocean.tasks.inertial_gravity_wave.exact_solution.exactsolution method)": [[258, "polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution.__init__", false]], "__init__() (polaris.ocean.tasks.inertial_gravity_wave.forward.forward method)": [[261, "polaris.ocean.tasks.inertial_gravity_wave.forward.Forward.__init__", false]], "__init__() (polaris.ocean.tasks.inertial_gravity_wave.inertialgravitywave method)": [[254, "polaris.ocean.tasks.inertial_gravity_wave.InertialGravityWave.__init__", false]], "__init__() (polaris.ocean.tasks.inertial_gravity_wave.init.init method)": [[263, "polaris.ocean.tasks.inertial_gravity_wave.init.Init.__init__", false]], "__init__() (polaris.ocean.tasks.inertial_gravity_wave.viz.viz method)": [[265, "polaris.ocean.tasks.inertial_gravity_wave.viz.Viz.__init__", false]], "__init__() (polaris.ocean.tasks.internal_wave.default.default method)": [[268, "polaris.ocean.tasks.internal_wave.default.Default.__init__", false]], "__init__() (polaris.ocean.tasks.internal_wave.forward.forward method)": [[269, "polaris.ocean.tasks.internal_wave.forward.Forward.__init__", false]], "__init__() (polaris.ocean.tasks.internal_wave.init.init method)": [[272, "polaris.ocean.tasks.internal_wave.init.Init.__init__", false]], "__init__() (polaris.ocean.tasks.internal_wave.rpe.analysis.analysis method)": [[276, "polaris.ocean.tasks.internal_wave.rpe.analysis.Analysis.__init__", false]], "__init__() (polaris.ocean.tasks.internal_wave.rpe.rpe method)": [[274, "polaris.ocean.tasks.internal_wave.rpe.Rpe.__init__", false]], "__init__() (polaris.ocean.tasks.internal_wave.viz.viz method)": [[278, "polaris.ocean.tasks.internal_wave.viz.Viz.__init__", false]], "__init__() (polaris.ocean.tasks.manufactured_solution.analysis.analysis method)": [[282, "polaris.ocean.tasks.manufactured_solution.analysis.Analysis.__init__", false]], "__init__() (polaris.ocean.tasks.manufactured_solution.exact_solution.exactsolution method)": [[284, "polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution.__init__", false]], "__init__() (polaris.ocean.tasks.manufactured_solution.forward.forward method)": [[287, "polaris.ocean.tasks.manufactured_solution.forward.Forward.__init__", false]], "__init__() (polaris.ocean.tasks.manufactured_solution.init.init method)": [[289, "polaris.ocean.tasks.manufactured_solution.init.Init.__init__", false]], "__init__() (polaris.ocean.tasks.manufactured_solution.manufacturedsolution method)": [[280, "polaris.ocean.tasks.manufactured_solution.ManufacturedSolution.__init__", false]], "__init__() (polaris.ocean.tasks.manufactured_solution.viz.viz method)": [[292, "polaris.ocean.tasks.manufactured_solution.viz.Viz.__init__", false]], "__init__() (polaris.ocean.tasks.single_column.cvmix.cvmix method)": [[295, "polaris.ocean.tasks.single_column.cvmix.CVMix.__init__", false]], "__init__() (polaris.ocean.tasks.single_column.forward.forward method)": [[296, "polaris.ocean.tasks.single_column.forward.Forward.__init__", false]], "__init__() (polaris.ocean.tasks.single_column.ideal_age.idealage method)": [[297, "polaris.ocean.tasks.single_column.ideal_age.IdealAge.__init__", false]], "__init__() (polaris.ocean.tasks.single_column.init.init method)": [[298, "polaris.ocean.tasks.single_column.init.Init.__init__", false]], "__init__() (polaris.ocean.tasks.single_column.viz.viz method)": [[300, "polaris.ocean.tasks.single_column.viz.Viz.__init__", false]], "__init__() (polaris.ocean.tasks.sphere_transport.analysis.analysis method)": [[305, "polaris.ocean.tasks.sphere_transport.analysis.Analysis.__init__", false]], "__init__() (polaris.ocean.tasks.sphere_transport.filament_analysis.filamentanalysis method)": [[307, "polaris.ocean.tasks.sphere_transport.filament_analysis.FilamentAnalysis.__init__", false]], "__init__() (polaris.ocean.tasks.sphere_transport.forward.forward method)": [[309, "polaris.ocean.tasks.sphere_transport.forward.Forward.__init__", false]], "__init__() (polaris.ocean.tasks.sphere_transport.init.init method)": [[310, "polaris.ocean.tasks.sphere_transport.init.Init.__init__", false]], "__init__() (polaris.ocean.tasks.sphere_transport.mixing_analysis.mixinganalysis method)": [[312, "polaris.ocean.tasks.sphere_transport.mixing_analysis.MixingAnalysis.__init__", false]], "__init__() (polaris.ocean.tasks.sphere_transport.spheretransport method)": [[302, "polaris.ocean.tasks.sphere_transport.SphereTransport.__init__", false]], "__init__() (polaris.ocean.tasks.sphere_transport.viz.viz method)": [[314, "polaris.ocean.tasks.sphere_transport.viz.Viz.__init__", false]], "__init__() (polaris.remap.mappingfilestep method)": [[100, "polaris.remap.MappingFileStep.__init__", false]], "__init__() (polaris.seaice.seaice method)": [[368, "polaris.seaice.SeaIce.__init__", false]], "__init__() (polaris.seaice.tasks.single_column.exact_restart.exactrestart method)": [[370, "polaris.seaice.tasks.single_column.exact_restart.ExactRestart.__init__", false]], "__init__() (polaris.seaice.tasks.single_column.exact_restart.validate.validate method)": [[371, "polaris.seaice.tasks.single_column.exact_restart.validate.Validate.__init__", false]], "__init__() (polaris.seaice.tasks.single_column.forward.forward method)": [[373, "polaris.seaice.tasks.single_column.forward.Forward.__init__", false]], "__init__() (polaris.seaice.tasks.single_column.standard_physics.standardphysics method)": [[374, "polaris.seaice.tasks.single_column.standard_physics.StandardPhysics.__init__", false]], "__init__() (polaris.seaice.tasks.single_column.standard_physics.viz.viz method)": [[375, "polaris.seaice.tasks.single_column.standard_physics.viz.Viz.__init__", false]], "__init__() (polaris.step method)": [[40, "polaris.Step.__init__", false]], "__init__() (polaris.task method)": [[51, "polaris.Task.__init__", false]], "__init__() (polaris.yaml.polarisyaml method)": [[129, "polaris.yaml.PolarisYaml.__init__", false]], "add_baroclinic_channel_tasks() (in module polaris.ocean.tasks.baroclinic_channel)": [[181, "polaris.ocean.tasks.baroclinic_channel.add_baroclinic_channel_tasks", false]], "add_barotropic_gyre_tasks() (in module polaris.ocean.tasks.barotropic_gyre)": [[204, "polaris.ocean.tasks.barotropic_gyre.add_barotropic_gyre_tasks", false]], "add_config() (polaris.component method)": [[21, "polaris.Component.add_config", false]], "add_cosine_bell_tasks() (in module polaris.ocean.tasks.cosine_bell)": [[218, "polaris.ocean.tasks.cosine_bell.add_cosine_bell_tasks", false]], "add_dependency() (polaris.step method)": [[41, "polaris.Step.add_dependency", false]], "add_geostrophic_tasks() (in module polaris.ocean.tasks.geostrophic)": [[234, "polaris.ocean.tasks.geostrophic.add_geostrophic_tasks", false]], "add_ice_shelf_2d_tasks() (in module polaris.ocean.tasks.ice_shelf_2d)": [[243, "polaris.ocean.tasks.ice_shelf_2d.add_ice_shelf_2d_tasks", false]], "add_inertial_gravity_wave_tasks() (in module polaris.ocean.tasks.inertial_gravity_wave)": [[255, "polaris.ocean.tasks.inertial_gravity_wave.add_inertial_gravity_wave_tasks", false]], "add_input_file() (polaris.step method)": [[42, "polaris.Step.add_input_file", false]], "add_internal_wave_tasks() (in module polaris.ocean.tasks.internal_wave)": [[267, "polaris.ocean.tasks.internal_wave.add_internal_wave_tasks", false]], "add_manufactured_solution_tasks() (in module polaris.ocean.tasks.manufactured_solution)": [[281, "polaris.ocean.tasks.manufactured_solution.add_manufactured_solution_tasks", false]], "add_model_config_options() (polaris.modelstep method)": [[26, "polaris.ModelStep.add_model_config_options", false]], "add_namelist_file() (polaris.modelstep method)": [[27, "polaris.ModelStep.add_namelist_file", false]], "add_output_file() (polaris.step method)": [[43, "polaris.Step.add_output_file", false]], "add_single_column_tasks() (in module polaris.ocean.tasks.single_column)": [[294, "polaris.ocean.tasks.single_column.add_single_column_tasks", false]], "add_single_column_tasks() (in module polaris.seaice.tasks.single_column)": [[369, "polaris.seaice.tasks.single_column.add_single_column_tasks", false]], "add_sphere_transport_tasks() (in module polaris.ocean.tasks.sphere_transport)": [[304, "polaris.ocean.tasks.sphere_transport.add_sphere_transport_tasks", false]], "add_spherical_base_mesh_step() (in module polaris.ocean.mesh.spherical)": [[166, "polaris.ocean.mesh.spherical.add_spherical_base_mesh_step", false]], "add_step() (polaris.component method)": [[22, "polaris.Component.add_step", false]], "add_step() (polaris.task method)": [[52, "polaris.Task.add_step", false]], "add_streams_file() (polaris.modelstep method)": [[28, "polaris.ModelStep.add_streams_file", false]], "add_task() (polaris.component method)": [[23, "polaris.Component.add_task", false]], "add_yaml_file() (polaris.modelstep method)": [[29, "polaris.ModelStep.add_yaml_file", false]], "alter_bottom_depth() (in module polaris.ocean.vertical.partial_cells)": [[319, "polaris.ocean.vertical.partial_cells.alter_bottom_depth", false]], "alter_ssh() (in module polaris.ocean.vertical.partial_cells)": [[320, "polaris.ocean.vertical.partial_cells.alter_ssh", false]], "analysis (class in polaris.ocean.tasks.baroclinic_channel.rpe.analysis)": [[195, "polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis", false]], "analysis (class in polaris.ocean.tasks.barotropic_gyre.analysis)": [[205, "polaris.ocean.tasks.barotropic_gyre.analysis.Analysis", false]], "analysis (class in polaris.ocean.tasks.cosine_bell.analysis)": [[219, "polaris.ocean.tasks.cosine_bell.analysis.Analysis", false]], "analysis (class in polaris.ocean.tasks.geostrophic.analysis)": [[235, "polaris.ocean.tasks.geostrophic.analysis.Analysis", false]], "analysis (class in polaris.ocean.tasks.inertial_gravity_wave.analysis)": [[256, "polaris.ocean.tasks.inertial_gravity_wave.analysis.Analysis", false]], "analysis (class in polaris.ocean.tasks.internal_wave.rpe.analysis)": [[276, "polaris.ocean.tasks.internal_wave.rpe.analysis.Analysis", false]], "analysis (class in polaris.ocean.tasks.manufactured_solution.analysis)": [[282, "polaris.ocean.tasks.manufactured_solution.analysis.Analysis", false]], "analysis (class in polaris.ocean.tasks.sphere_transport.analysis)": [[305, "polaris.ocean.tasks.sphere_transport.analysis.Analysis", false]], "area_for_field() (in module polaris.mpas)": [[89, "polaris.mpas.area_for_field", false]], "barotropicgyre (class in polaris.ocean.tasks.barotropic_gyre)": [[203, "polaris.ocean.tasks.barotropic_gyre.BarotropicGyre", false]], "build_cell_width_lat_lon() (polaris.mesh.quasiuniformsphericalmeshstep method)": [[79, "polaris.mesh.QuasiUniformSphericalMeshStep.build_cell_width_lat_lon", false]], "build_subdivisions_cell_width_lat_lon() (polaris.mesh.icosahedralmeshstep method)": [[72, "polaris.mesh.IcosahedralMeshStep.build_subdivisions_cell_width_lat_lon", false]], "clean_up_whitespace() (in module polaris.job)": [[64, "polaris.job.clean_up_whitespace", false]], "compare_variables() (in module polaris.validate)": [[124, "polaris.validate.compare_variables", false]], "complete_step_run() (in module polaris.run)": [[111, "polaris.run.complete_step_run", false]], "component (class in polaris)": [[20, "polaris.Component", false]], "compute_cell_count() (polaris.ocean.convergence.forward.convergenceforward method)": [[155, "polaris.ocean.convergence.forward.ConvergenceForward.compute_cell_count", false]], "compute_cell_count() (polaris.ocean.convergence.spherical.sphericalconvergenceforward method)": [[158, "polaris.ocean.convergence.spherical.SphericalConvergenceForward.compute_cell_count", false]], "compute_cell_count() (polaris.ocean.ice_shelf.sshforward method)": [[164, "polaris.ocean.ice_shelf.SshForward.compute_cell_count", false]], "compute_cell_count() (polaris.ocean.model.oceanmodelstep method)": [[174, "polaris.ocean.model.OceanModelStep.compute_cell_count", false]], "compute_cell_count() (polaris.ocean.tasks.baroclinic_channel.forward.forward method)": [[185, "polaris.ocean.tasks.baroclinic_channel.forward.Forward.compute_cell_count", false]], "compute_cell_count() (polaris.ocean.tasks.barotropic_gyre.forward.forward method)": [[210, "polaris.ocean.tasks.barotropic_gyre.forward.Forward.compute_cell_count", false]], "compute_cell_count() (polaris.ocean.tasks.ice_shelf_2d.forward.forward method)": [[246, "polaris.ocean.tasks.ice_shelf_2d.forward.Forward.compute_cell_count", false]], "compute_cell_count() (polaris.ocean.tasks.inertial_gravity_wave.forward.forward method)": [[262, "polaris.ocean.tasks.inertial_gravity_wave.forward.Forward.compute_cell_count", false]], "compute_cell_count() (polaris.ocean.tasks.internal_wave.forward.forward method)": [[270, "polaris.ocean.tasks.internal_wave.forward.Forward.compute_cell_count", false]], "compute_cell_count() (polaris.ocean.tasks.manufactured_solution.forward.forward method)": [[288, "polaris.ocean.tasks.manufactured_solution.forward.Forward.compute_cell_count", false]], "compute_error() (polaris.ocean.convergence.analysis.convergenceanalysis method)": [[147, "polaris.ocean.convergence.analysis.ConvergenceAnalysis.compute_error", false]], "compute_error() (polaris.ocean.tasks.barotropic_gyre.analysis.analysis method)": [[206, "polaris.ocean.tasks.barotropic_gyre.analysis.Analysis.compute_error", false]], "compute_max_time_step() (in module polaris.ocean.tasks.barotropic_gyre.forward)": [[212, "polaris.ocean.tasks.barotropic_gyre.forward.compute_max_time_step", false]], "compute_min_max_level_cell() (in module polaris.ocean.vertical.zlevel)": [[324, "polaris.ocean.vertical.zlevel.compute_min_max_level_cell", false]], "compute_planar_hex_nx_ny() (in module polaris.mesh.planar)": [[83, "polaris.mesh.planar.compute_planar_hex_nx_ny", false]], "compute_rpe() (in module polaris.ocean.rpe)": [[180, "polaris.ocean.rpe.compute_rpe", false]], "compute_transect() (in module polaris.ocean.viz)": [[331, "polaris.ocean.viz.compute_transect", false]], "compute_z_level_layer_thickness() (in module polaris.ocean.vertical.zlevel)": [[325, "polaris.ocean.vertical.zlevel.compute_z_level_layer_thickness", false]], "compute_z_level_resting_thickness() (in module polaris.ocean.vertical.zlevel)": [[326, "polaris.ocean.vertical.zlevel.compute_z_level_resting_thickness", false]], "configure() (polaris.ocean.tasks.baroclinic_channel.rpe.rpe method)": [[194, "polaris.ocean.tasks.baroclinic_channel.rpe.Rpe.configure", false]], "configure() (polaris.ocean.tasks.cosine_bell.cosinebell method)": [[217, "polaris.ocean.tasks.cosine_bell.CosineBell.configure", false]], "configure() (polaris.ocean.tasks.geostrophic.geostrophic method)": [[233, "polaris.ocean.tasks.geostrophic.Geostrophic.configure", false]], "configure() (polaris.ocean.tasks.internal_wave.rpe.rpe method)": [[275, "polaris.ocean.tasks.internal_wave.rpe.Rpe.configure", false]], "configure() (polaris.ocean.tasks.sphere_transport.spheretransport method)": [[303, "polaris.ocean.tasks.sphere_transport.SphereTransport.configure", false]], "configure() (polaris.task method)": [[53, "polaris.Task.configure", false]], "constrain_resources() (polaris.ocean.model.oceanmodelstep method)": [[175, "polaris.ocean.model.OceanModelStep.constrain_resources", false]], "constrain_resources() (polaris.step method)": [[44, "polaris.Step.constrain_resources", false]], "convergence_parameters() (polaris.ocean.convergence.analysis.convergenceanalysis method)": [[148, "polaris.ocean.convergence.analysis.ConvergenceAnalysis.convergence_parameters", false]], "convergence_parameters() (polaris.ocean.tasks.sphere_transport.analysis.analysis method)": [[306, "polaris.ocean.tasks.sphere_transport.analysis.Analysis.convergence_parameters", false]], "convergenceanalysis (class in polaris.ocean.convergence.analysis)": [[146, "polaris.ocean.convergence.analysis.ConvergenceAnalysis", false]], "convergenceforward (class in polaris.ocean.convergence.forward)": [[154, "polaris.ocean.convergence.forward.ConvergenceForward", false]], "cosine_bell() (in module polaris.ocean.tasks.cosine_bell.init)": [[224, "polaris.ocean.tasks.cosine_bell.init.cosine_bell", false]], "cosinebell (class in polaris.ocean.tasks.cosine_bell)": [[216, "polaris.ocean.tasks.cosine_bell.CosineBell", false]], "cvmix (class in polaris.ocean.tasks.single_column.cvmix)": [[295, "polaris.ocean.tasks.single_column.cvmix.CVMix", false]], "decomp (class in polaris.ocean.tasks.baroclinic_channel.decomp)": [[182, "polaris.ocean.tasks.baroclinic_channel.decomp.Decomp", false]], "default (class in polaris.ocean.tasks.baroclinic_channel.default)": [[183, "polaris.ocean.tasks.baroclinic_channel.default.Default", false]], "default (class in polaris.ocean.tasks.ice_shelf_2d.default)": [[244, "polaris.ocean.tasks.ice_shelf_2d.default.Default", false]], "default (class in polaris.ocean.tasks.internal_wave.default)": [[268, "polaris.ocean.tasks.internal_wave.default.Default", false]], "download() (in module polaris.io)": [[61, "polaris.io.download", false]], "dst_from_lon_lat() (polaris.remap.mappingfilestep method)": [[101, "polaris.remap.MappingFileStep.dst_from_lon_lat", false]], "dst_from_mpas() (polaris.remap.mappingfilestep method)": [[102, "polaris.remap.MappingFileStep.dst_from_mpas", false]], "dst_from_points() (polaris.remap.mappingfilestep method)": [[103, "polaris.remap.MappingFileStep.dst_from_points", false]], "dst_from_proj() (polaris.remap.mappingfilestep method)": [[104, "polaris.remap.MappingFileStep.dst_from_proj", false]], "dst_global_lon_lat() (polaris.remap.mappingfilestep method)": [[105, "polaris.remap.MappingFileStep.dst_global_lon_lat", false]], "dynamic_model_config() (polaris.modelstep method)": [[30, "polaris.ModelStep.dynamic_model_config", false]], "dynamic_model_config() (polaris.ocean.convergence.forward.convergenceforward method)": [[156, "polaris.ocean.convergence.forward.ConvergenceForward.dynamic_model_config", false]], "dynamic_model_config() (polaris.ocean.ice_shelf.sshforward method)": [[165, "polaris.ocean.ice_shelf.SshForward.dynamic_model_config", false]], "dynamic_model_config() (polaris.ocean.tasks.baroclinic_channel.forward.forward method)": [[186, "polaris.ocean.tasks.baroclinic_channel.forward.Forward.dynamic_model_config", false]], "dynamic_model_config() (polaris.ocean.tasks.baroclinic_channel.restart.restart_step.restartstep method)": [[192, "polaris.ocean.tasks.baroclinic_channel.restart.restart_step.RestartStep.dynamic_model_config", false]], "dynamic_model_config() (polaris.ocean.tasks.barotropic_gyre.forward.forward method)": [[211, "polaris.ocean.tasks.barotropic_gyre.forward.Forward.dynamic_model_config", false]], "dynamic_model_config() (polaris.ocean.tasks.cosine_bell.restart.restartstep method)": [[227, "polaris.ocean.tasks.cosine_bell.restart.RestartStep.dynamic_model_config", false]], "dynamic_model_config() (polaris.ocean.tasks.ice_shelf_2d.forward.forward method)": [[247, "polaris.ocean.tasks.ice_shelf_2d.forward.Forward.dynamic_model_config", false]], "dynamic_model_config() (polaris.ocean.tasks.internal_wave.forward.forward method)": [[271, "polaris.ocean.tasks.internal_wave.forward.Forward.dynamic_model_config", false]], "exact_solution() (polaris.ocean.convergence.analysis.convergenceanalysis method)": [[149, "polaris.ocean.convergence.analysis.ConvergenceAnalysis.exact_solution", false]], "exact_solution() (polaris.ocean.tasks.barotropic_gyre.analysis.analysis method)": [[207, "polaris.ocean.tasks.barotropic_gyre.analysis.Analysis.exact_solution", false]], "exact_solution() (polaris.ocean.tasks.cosine_bell.analysis.analysis method)": [[220, "polaris.ocean.tasks.cosine_bell.analysis.Analysis.exact_solution", false]], "exact_solution() (polaris.ocean.tasks.geostrophic.analysis.analysis method)": [[236, "polaris.ocean.tasks.geostrophic.analysis.Analysis.exact_solution", false]], "exact_solution() (polaris.ocean.tasks.inertial_gravity_wave.analysis.analysis method)": [[257, "polaris.ocean.tasks.inertial_gravity_wave.analysis.Analysis.exact_solution", false]], "exact_solution() (polaris.ocean.tasks.manufactured_solution.analysis.analysis method)": [[283, "polaris.ocean.tasks.manufactured_solution.analysis.Analysis.exact_solution", false]], "exactrestart (class in polaris.seaice.tasks.single_column.exact_restart)": [[370, "polaris.seaice.tasks.single_column.exact_restart.ExactRestart", false]], "exactsolution (class in polaris.ocean.tasks.inertial_gravity_wave.exact_solution)": [[258, "polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution", false]], "exactsolution (class in polaris.ocean.tasks.manufactured_solution.exact_solution)": [[284, "polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution", false]], "filamentanalysis (class in polaris.ocean.tasks.sphere_transport.filament_analysis)": [[307, "polaris.ocean.tasks.sphere_transport.filament_analysis.FilamentAnalysis", false]], "find_planar_transect_cells_and_weights() (in module polaris.ocean.viz.transect.horiz)": [[333, "polaris.ocean.viz.transect.horiz.find_planar_transect_cells_and_weights", false]], "find_spherical_transect_cells_and_weights() (in module polaris.ocean.viz.transect.horiz)": [[334, "polaris.ocean.viz.transect.horiz.find_spherical_transect_cells_and_weights", false]], "find_transect_levels_and_weights() (in module polaris.ocean.viz.transect.vert)": [[337, "polaris.ocean.viz.transect.vert.find_transect_levels_and_weights", false]], "forward (class in polaris.ocean.tasks.baroclinic_channel.forward)": [[184, "polaris.ocean.tasks.baroclinic_channel.forward.Forward", false]], "forward (class in polaris.ocean.tasks.barotropic_gyre.forward)": [[209, "polaris.ocean.tasks.barotropic_gyre.forward.Forward", false]], "forward (class in polaris.ocean.tasks.cosine_bell.forward)": [[221, "polaris.ocean.tasks.cosine_bell.forward.Forward", false]], "forward (class in polaris.ocean.tasks.geostrophic.forward)": [[238, "polaris.ocean.tasks.geostrophic.forward.Forward", false]], "forward (class in polaris.ocean.tasks.ice_shelf_2d.forward)": [[245, "polaris.ocean.tasks.ice_shelf_2d.forward.Forward", false]], "forward (class in polaris.ocean.tasks.inertial_gravity_wave.forward)": [[261, "polaris.ocean.tasks.inertial_gravity_wave.forward.Forward", false]], "forward (class in polaris.ocean.tasks.internal_wave.forward)": [[269, "polaris.ocean.tasks.internal_wave.forward.Forward", false]], "forward (class in polaris.ocean.tasks.manufactured_solution.forward)": [[287, "polaris.ocean.tasks.manufactured_solution.forward.Forward", false]], "forward (class in polaris.ocean.tasks.single_column.forward)": [[296, "polaris.ocean.tasks.single_column.forward.Forward", false]], "forward (class in polaris.ocean.tasks.sphere_transport.forward)": [[309, "polaris.ocean.tasks.sphere_transport.forward.Forward", false]], "forward (class in polaris.seaice.tasks.single_column.forward)": [[373, "polaris.seaice.tasks.single_column.forward.Forward", false]], "generate_1d_grid() (in module polaris.ocean.vertical.grid_1d)": [[316, "polaris.ocean.vertical.grid_1d.generate_1d_grid", false]], "geostrophic (class in polaris.ocean.tasks.geostrophic)": [[232, "polaris.ocean.tasks.geostrophic.Geostrophic", false]], "get_available_parallel_resources() (in module polaris.parallel)": [[95, "polaris.parallel.get_available_parallel_resources", false]], "get_cell_width() (polaris.mesh.icosahedralmeshstep static method)": [[73, "polaris.mesh.IcosahedralMeshStep.get_cell_width", false]], "get_components() (in module polaris.components)": [[58, "polaris.components.get_components", false]], "get_output_field() (polaris.ocean.convergence.analysis.convergenceanalysis method)": [[150, "polaris.ocean.convergence.analysis.ConvergenceAnalysis.get_output_field", false]], "get_output_field() (polaris.ocean.tasks.geostrophic.analysis.analysis method)": [[237, "polaris.ocean.tasks.geostrophic.analysis.Analysis.get_output_field", false]], "get_parallel_command() (in module polaris.parallel)": [[96, "polaris.parallel.get_parallel_command", false]], "get_remapper() (polaris.remap.mappingfilestep method)": [[106, "polaris.remap.MappingFileStep.get_remapper", false]], "get_slurm_options() (in module polaris.job)": [[65, "polaris.job.get_slurm_options", false]], "get_subdivisions() (polaris.mesh.icosahedralmeshstep static method)": [[74, "polaris.mesh.IcosahedralMeshStep.get_subdivisions", false]], "get_time_interval_string() (in module polaris.ocean.model)": [[179, "polaris.ocean.model.get_time_interval_string", false]], "iceshelftask (class in polaris.ocean.ice_shelf)": [[159, "polaris.ocean.ice_shelf.IceShelfTask", false]], "icosahedralmeshstep (class in polaris.mesh)": [[71, "polaris.mesh.IcosahedralMeshStep", false]], "idealage (class in polaris.ocean.tasks.single_column.ideal_age)": [[297, "polaris.ocean.tasks.single_column.ideal_age.IdealAge", false]], "inertialgravitywave (class in polaris.ocean.tasks.inertial_gravity_wave)": [[254, "polaris.ocean.tasks.inertial_gravity_wave.InertialGravityWave", false]], "ingest() (in module polaris.namelist)": [[91, "polaris.namelist.ingest", false]], "init (class in polaris.ocean.tasks.baroclinic_channel.init)": [[187, "polaris.ocean.tasks.baroclinic_channel.init.Init", false]], "init (class in polaris.ocean.tasks.barotropic_gyre.init)": [[213, "polaris.ocean.tasks.barotropic_gyre.init.Init", false]], "init (class in polaris.ocean.tasks.cosine_bell.init)": [[222, "polaris.ocean.tasks.cosine_bell.init.Init", false]], "init (class in polaris.ocean.tasks.geostrophic.init)": [[239, "polaris.ocean.tasks.geostrophic.init.Init", false]], "init (class in polaris.ocean.tasks.ice_shelf_2d.init)": [[248, "polaris.ocean.tasks.ice_shelf_2d.init.Init", false]], "init (class in polaris.ocean.tasks.inertial_gravity_wave.init)": [[263, "polaris.ocean.tasks.inertial_gravity_wave.init.Init", false]], "init (class in polaris.ocean.tasks.internal_wave.init)": [[272, "polaris.ocean.tasks.internal_wave.init.Init", false]], "init (class in polaris.ocean.tasks.manufactured_solution.init)": [[289, "polaris.ocean.tasks.manufactured_solution.init.Init", false]], "init (class in polaris.ocean.tasks.single_column.init)": [[298, "polaris.ocean.tasks.single_column.init.Init", false]], "init (class in polaris.ocean.tasks.sphere_transport.init)": [[310, "polaris.ocean.tasks.sphere_transport.init.Init", false]], "init_sigma_vertical_coord() (in module polaris.ocean.vertical.sigma)": [[321, "polaris.ocean.vertical.sigma.init_sigma_vertical_coord", false]], "init_vertical_coord() (in module polaris.ocean.vertical)": [[318, "polaris.ocean.vertical.init_vertical_coord", false]], "init_z_level_vertical_coord() (in module polaris.ocean.vertical.zlevel)": [[327, "polaris.ocean.vertical.zlevel.init_z_level_vertical_coord", false]], "init_z_star_vertical_coord() (in module polaris.ocean.vertical.zstar)": [[329, "polaris.ocean.vertical.zstar.init_z_star_vertical_coord", false]], "interp_mpas_to_transect_cells() (in module polaris.ocean.viz.transect.vert)": [[338, "polaris.ocean.viz.transect.vert.interp_mpas_to_transect_cells", false]], "interp_mpas_to_transect_nodes() (in module polaris.ocean.viz.transect.vert)": [[339, "polaris.ocean.viz.transect.vert.interp_mpas_to_transect_nodes", false]], "list_cases() (in module polaris.list)": [[67, "polaris.list.list_cases", false]], "list_machines() (in module polaris.list)": [[68, "polaris.list.list_machines", false]], "list_suites() (in module polaris.list)": [[69, "polaris.list.list_suites", false]], "load_dependencies() (in module polaris.run)": [[112, "polaris.run.load_dependencies", false]], "log_method_call() (in module polaris.logging)": [[70, "polaris.logging.log_method_call", false]], "main() (in module polaris.__main__)": [[56, "polaris.__main__.main", false]], "main_mpas_to_yaml() (in module polaris.yaml)": [[133, "polaris.yaml.main_mpas_to_yaml", false]], "make_graph_file() (in module polaris.model_step)": [[88, "polaris.model_step.make_graph_file", false]], "make_jigsaw_mesh() (polaris.mesh.icosahedralmeshstep method)": [[75, "polaris.mesh.IcosahedralMeshStep.make_jigsaw_mesh", false]], "make_jigsaw_mesh() (polaris.mesh.quasiuniformsphericalmeshstep method)": [[80, "polaris.mesh.QuasiUniformSphericalMeshStep.make_jigsaw_mesh", false]], "make_triangle_tree() (in module polaris.ocean.viz.transect.horiz)": [[335, "polaris.ocean.viz.transect.horiz.make_triangle_tree", false]], "manufacturedsolution (class in polaris.ocean.tasks.manufactured_solution)": [[280, "polaris.ocean.tasks.manufactured_solution.ManufacturedSolution", false]], "map_from_native_model_vars() (polaris.ocean.model.oceaniostep method)": [[168, "polaris.ocean.model.OceanIOStep.map_from_native_model_vars", false]], "map_to_native_model_vars() (polaris.ocean.model.oceaniostep method)": [[169, "polaris.ocean.model.OceanIOStep.map_to_native_model_vars", false]], "map_yaml_configs() (polaris.modelstep method)": [[31, "polaris.ModelStep.map_yaml_configs", false]], "map_yaml_configs() (polaris.ocean.model.oceanmodelstep method)": [[176, "polaris.ocean.model.OceanModelStep.map_yaml_configs", false]], "map_yaml_options() (polaris.modelstep method)": [[32, "polaris.ModelStep.map_yaml_options", false]], "map_yaml_options() (polaris.ocean.model.oceanmodelstep method)": [[177, "polaris.ocean.model.OceanModelStep.map_yaml_options", false]], "map_yaml_to_namelist() (polaris.modelstep method)": [[33, "polaris.ModelStep.map_yaml_to_namelist", false]], "mappingfilestep (class in polaris.remap)": [[100, "polaris.remap.MappingFileStep", false]], "mesh_to_triangles() (in module polaris.ocean.viz.transect.horiz)": [[336, "polaris.ocean.viz.transect.horiz.mesh_to_triangles", false]], "mixinganalysis (class in polaris.ocean.tasks.sphere_transport.mixing_analysis)": [[312, "polaris.ocean.tasks.sphere_transport.mixing_analysis.MixingAnalysis", false]], "modelstep (class in polaris)": [[25, "polaris.ModelStep", false]], "mpas_namelist_and_streams_to_yaml() (in module polaris.yaml)": [[134, "polaris.yaml.mpas_namelist_and_streams_to_yaml", false]], "normal_velocity() (polaris.ocean.tasks.inertial_gravity_wave.exact_solution.exactsolution method)": [[259, "polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution.normal_velocity", false]], "normal_velocity() (polaris.ocean.tasks.manufactured_solution.exact_solution.exactsolution method)": [[285, "polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution.normal_velocity", false]], "ocean (class in polaris.ocean)": [[145, "polaris.ocean.Ocean", false]], "oceaniostep (class in polaris.ocean.model)": [[167, "polaris.ocean.model.OceanIOStep", false]], "oceanmodelstep (class in polaris.ocean.model)": [[173, "polaris.ocean.model.OceanModelStep", false]], "open_model_dataset() (polaris.ocean.model.oceaniostep method)": [[170, "polaris.ocean.model.OceanIOStep.open_model_dataset", false]], "parse_replacements() (in module polaris.namelist)": [[92, "polaris.namelist.parse_replacements", false]], "partition() (polaris.modelstep method)": [[34, "polaris.ModelStep.partition", false]], "plot_convergence() (polaris.ocean.convergence.analysis.convergenceanalysis method)": [[151, "polaris.ocean.convergence.analysis.ConvergenceAnalysis.plot_convergence", false]], "plot_global_lat_lon_field() (in module polaris.viz)": [[125, "polaris.viz.plot_global_lat_lon_field", false]], "plot_global_mpas_field() (in module polaris.viz)": [[126, "polaris.viz.plot_global_mpas_field", false]], "plot_horiz_field() (in module polaris.viz)": [[127, "polaris.viz.plot_horiz_field", false]], "plot_transect() (in module polaris.ocean.viz)": [[332, "polaris.ocean.viz.plot_transect", false]], "polarisconfigparser (class in polaris.config)": [[59, "polaris.config.PolarisConfigParser", false]], "polarisyaml (class in polaris.yaml)": [[129, "polaris.yaml.PolarisYaml", false]], "process_inputs_and_outputs() (polaris.modelstep method)": [[35, "polaris.ModelStep.process_inputs_and_outputs", false]], "quasiuniformsphericalmeshstep (class in polaris.mesh)": [[78, "polaris.mesh.QuasiUniformSphericalMeshStep", false]], "read() (in module polaris.streams)": [[119, "polaris.streams.read", false]], "read() (polaris.yaml.polarisyaml class method)": [[130, "polaris.yaml.PolarisYaml.read", false]], "remove_step() (polaris.component method)": [[24, "polaris.Component.remove_step", false]], "remove_step() (polaris.task method)": [[54, "polaris.Task.remove_step", false]], "replace() (in module polaris.namelist)": [[93, "polaris.namelist.replace", false]], "restart (class in polaris.ocean.tasks.baroclinic_channel.restart)": [[190, "polaris.ocean.tasks.baroclinic_channel.restart.Restart", false]], "restart (class in polaris.ocean.tasks.cosine_bell.restart)": [[225, "polaris.ocean.tasks.cosine_bell.restart.Restart", false]], "restartstep (class in polaris.ocean.tasks.baroclinic_channel.restart.restart_step)": [[191, "polaris.ocean.tasks.baroclinic_channel.restart.restart_step.RestartStep", false]], "restartstep (class in polaris.ocean.tasks.cosine_bell.restart)": [[226, "polaris.ocean.tasks.cosine_bell.restart.RestartStep", false]], "rpe (class in polaris.ocean.tasks.baroclinic_channel.rpe)": [[193, "polaris.ocean.tasks.baroclinic_channel.rpe.Rpe", false]], "rpe (class in polaris.ocean.tasks.internal_wave.rpe)": [[274, "polaris.ocean.tasks.internal_wave.rpe.Rpe", false]], "run() (polaris.mesh.icosahedralmeshstep method)": [[76, "polaris.mesh.IcosahedralMeshStep.run", false]], "run() (polaris.mesh.quasiuniformsphericalmeshstep method)": [[81, "polaris.mesh.QuasiUniformSphericalMeshStep.run", false]], "run() (polaris.mesh.spherical.sphericalbasestep method)": [[85, "polaris.mesh.spherical.SphericalBaseStep.run", false]], "run() (polaris.ocean.convergence.analysis.convergenceanalysis method)": [[152, "polaris.ocean.convergence.analysis.ConvergenceAnalysis.run", false]], "run() (polaris.ocean.ice_shelf.sshadjustment method)": [[162, "polaris.ocean.ice_shelf.SshAdjustment.run", false]], "run() (polaris.ocean.tasks.baroclinic_channel.init.init method)": [[188, "polaris.ocean.tasks.baroclinic_channel.init.Init.run", false]], "run() (polaris.ocean.tasks.baroclinic_channel.rpe.analysis.analysis method)": [[196, "polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis.run", false]], "run() (polaris.ocean.tasks.baroclinic_channel.validate.validate method)": [[200, "polaris.ocean.tasks.baroclinic_channel.validate.Validate.run", false]], "run() (polaris.ocean.tasks.baroclinic_channel.viz.viz method)": [[202, "polaris.ocean.tasks.baroclinic_channel.viz.Viz.run", false]], "run() (polaris.ocean.tasks.barotropic_gyre.analysis.analysis method)": [[208, "polaris.ocean.tasks.barotropic_gyre.analysis.Analysis.run", false]], "run() (polaris.ocean.tasks.barotropic_gyre.init.init method)": [[214, "polaris.ocean.tasks.barotropic_gyre.init.Init.run", false]], "run() (polaris.ocean.tasks.cosine_bell.init.init method)": [[223, "polaris.ocean.tasks.cosine_bell.init.Init.run", false]], "run() (polaris.ocean.tasks.cosine_bell.validate.validate method)": [[229, "polaris.ocean.tasks.cosine_bell.validate.Validate.run", false]], "run() (polaris.ocean.tasks.cosine_bell.viz.viz method)": [[231, "polaris.ocean.tasks.cosine_bell.viz.Viz.run", false]], "run() (polaris.ocean.tasks.geostrophic.init.init method)": [[240, "polaris.ocean.tasks.geostrophic.init.Init.run", false]], "run() (polaris.ocean.tasks.geostrophic.viz.viz method)": [[242, "polaris.ocean.tasks.geostrophic.viz.Viz.run", false]], "run() (polaris.ocean.tasks.ice_shelf_2d.init.init method)": [[249, "polaris.ocean.tasks.ice_shelf_2d.init.Init.run", false]], "run() (polaris.ocean.tasks.ice_shelf_2d.validate.validate method)": [[251, "polaris.ocean.tasks.ice_shelf_2d.validate.Validate.run", false]], "run() (polaris.ocean.tasks.ice_shelf_2d.viz.viz method)": [[253, "polaris.ocean.tasks.ice_shelf_2d.viz.Viz.run", false]], "run() (polaris.ocean.tasks.inertial_gravity_wave.init.init method)": [[264, "polaris.ocean.tasks.inertial_gravity_wave.init.Init.run", false]], "run() (polaris.ocean.tasks.inertial_gravity_wave.viz.viz method)": [[266, "polaris.ocean.tasks.inertial_gravity_wave.viz.Viz.run", false]], "run() (polaris.ocean.tasks.internal_wave.init.init method)": [[273, "polaris.ocean.tasks.internal_wave.init.Init.run", false]], "run() (polaris.ocean.tasks.internal_wave.rpe.analysis.analysis method)": [[277, "polaris.ocean.tasks.internal_wave.rpe.analysis.Analysis.run", false]], "run() (polaris.ocean.tasks.internal_wave.viz.viz method)": [[279, "polaris.ocean.tasks.internal_wave.viz.Viz.run", false]], "run() (polaris.ocean.tasks.manufactured_solution.init.init method)": [[290, "polaris.ocean.tasks.manufactured_solution.init.Init.run", false]], "run() (polaris.ocean.tasks.manufactured_solution.viz.viz method)": [[293, "polaris.ocean.tasks.manufactured_solution.viz.Viz.run", false]], "run() (polaris.ocean.tasks.single_column.init.init method)": [[299, "polaris.ocean.tasks.single_column.init.Init.run", false]], "run() (polaris.ocean.tasks.single_column.viz.viz method)": [[301, "polaris.ocean.tasks.single_column.viz.Viz.run", false]], "run() (polaris.ocean.tasks.sphere_transport.filament_analysis.filamentanalysis method)": [[308, "polaris.ocean.tasks.sphere_transport.filament_analysis.FilamentAnalysis.run", false]], "run() (polaris.ocean.tasks.sphere_transport.init.init method)": [[311, "polaris.ocean.tasks.sphere_transport.init.Init.run", false]], "run() (polaris.ocean.tasks.sphere_transport.mixing_analysis.mixinganalysis method)": [[313, "polaris.ocean.tasks.sphere_transport.mixing_analysis.MixingAnalysis.run", false]], "run() (polaris.ocean.tasks.sphere_transport.viz.viz method)": [[315, "polaris.ocean.tasks.sphere_transport.viz.Viz.run", false]], "run() (polaris.seaice.tasks.single_column.exact_restart.validate.validate method)": [[372, "polaris.seaice.tasks.single_column.exact_restart.validate.Validate.run", false]], "run() (polaris.seaice.tasks.single_column.standard_physics.viz.viz method)": [[376, "polaris.seaice.tasks.single_column.standard_physics.viz.Viz.run", false]], "run() (polaris.step method)": [[45, "polaris.Step.run", false]], "run_command() (in module polaris.parallel)": [[97, "polaris.parallel.run_command", false]], "run_single_step() (in module polaris.run.serial)": [[113, "polaris.run.serial.run_single_step", false]], "run_tasks() (in module polaris.run.serial)": [[114, "polaris.run.serial.run_tasks", false]], "runtime_setup() (polaris.modelstep method)": [[36, "polaris.ModelStep.runtime_setup", false]], "runtime_setup() (polaris.remap.mappingfilestep method)": [[107, "polaris.remap.MappingFileStep.runtime_setup", false]], "runtime_setup() (polaris.step method)": [[46, "polaris.Step.runtime_setup", false]], "save_and_plot_cell_width() (polaris.mesh.spherical.sphericalbasestep method)": [[86, "polaris.mesh.spherical.SphericalBaseStep.save_and_plot_cell_width", false]], "seaice (class in polaris.seaice)": [[368, "polaris.seaice.SeaIce", false]], "set_cores_per_node() (in module polaris.parallel)": [[98, "polaris.parallel.set_cores_per_node", false]], "set_model_resources() (polaris.modelstep method)": [[37, "polaris.ModelStep.set_model_resources", false]], "set_resources() (polaris.step method)": [[47, "polaris.Step.set_resources", false]], "set_shared_config() (polaris.step method)": [[48, "polaris.Step.set_shared_config", false]], "set_shared_config() (polaris.task method)": [[55, "polaris.Task.set_shared_config", false]], "setup() (polaris.config.polarisconfigparser method)": [[60, "polaris.config.PolarisConfigParser.setup", false]], "setup() (polaris.mesh.icosahedralmeshstep method)": [[77, "polaris.mesh.IcosahedralMeshStep.setup", false]], "setup() (polaris.mesh.quasiuniformsphericalmeshstep method)": [[82, "polaris.mesh.QuasiUniformSphericalMeshStep.setup", false]], "setup() (polaris.mesh.spherical.sphericalbasestep method)": [[87, "polaris.mesh.spherical.SphericalBaseStep.setup", false]], "setup() (polaris.modelstep method)": [[38, "polaris.ModelStep.setup", false]], "setup() (polaris.ocean.convergence.analysis.convergenceanalysis method)": [[153, "polaris.ocean.convergence.analysis.ConvergenceAnalysis.setup", false]], "setup() (polaris.ocean.model.oceaniostep method)": [[171, "polaris.ocean.model.OceanIOStep.setup", false]], "setup() (polaris.ocean.model.oceanmodelstep method)": [[178, "polaris.ocean.model.OceanModelStep.setup", false]], "setup() (polaris.ocean.tasks.baroclinic_channel.init.init method)": [[189, "polaris.ocean.tasks.baroclinic_channel.init.Init.setup", false]], "setup() (polaris.ocean.tasks.baroclinic_channel.rpe.analysis.analysis method)": [[197, "polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis.setup", false]], "setup() (polaris.ocean.tasks.barotropic_gyre.init.init method)": [[215, "polaris.ocean.tasks.barotropic_gyre.init.Init.setup", false]], "setup() (polaris.ocean.tasks.manufactured_solution.init.init method)": [[291, "polaris.ocean.tasks.manufactured_solution.init.Init.setup", false]], "setup() (polaris.step method)": [[49, "polaris.Step.setup", false]], "setup_config() (in module polaris.run)": [[115, "polaris.run.setup_config", false]], "setup_ssh_adjustment_steps() (polaris.ocean.ice_shelf.iceshelftask method)": [[160, "polaris.ocean.ice_shelf.IceShelfTask.setup_ssh_adjustment_steps", false]], "setup_suite() (in module polaris.suite)": [[123, "polaris.suite.setup_suite", false]], "setup_task() (in module polaris.setup)": [[117, "polaris.setup.setup_task", false]], "setup_tasks() (in module polaris.setup)": [[118, "polaris.setup.setup_tasks", false]], "spheretransport (class in polaris.ocean.tasks.sphere_transport)": [[302, "polaris.ocean.tasks.sphere_transport.SphereTransport", false]], "sphericalbasestep (class in polaris.mesh.spherical)": [[84, "polaris.mesh.spherical.SphericalBaseStep", false]], "sphericalconvergenceforward (class in polaris.ocean.convergence.spherical)": [[157, "polaris.ocean.convergence.spherical.SphericalConvergenceForward", false]], "src_from_lon_lat() (polaris.remap.mappingfilestep method)": [[108, "polaris.remap.MappingFileStep.src_from_lon_lat", false]], "src_from_mpas() (polaris.remap.mappingfilestep method)": [[109, "polaris.remap.MappingFileStep.src_from_mpas", false]], "src_from_proj() (polaris.remap.mappingfilestep method)": [[110, "polaris.remap.MappingFileStep.src_from_proj", false]], "ssh() (polaris.ocean.tasks.inertial_gravity_wave.exact_solution.exactsolution method)": [[260, "polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution.ssh", false]], "ssh() (polaris.ocean.tasks.manufactured_solution.exact_solution.exactsolution method)": [[286, "polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution.ssh", false]], "sshadjustment (class in polaris.ocean.ice_shelf)": [[161, "polaris.ocean.ice_shelf.SshAdjustment", false]], "sshforward (class in polaris.ocean.ice_shelf)": [[163, "polaris.ocean.ice_shelf.SshForward", false]], "standardphysics (class in polaris.seaice.tasks.single_column.standard_physics)": [[374, "polaris.seaice.tasks.single_column.standard_physics.StandardPhysics", false]], "step (class in polaris)": [[40, "polaris.Step", false]], "symlink() (in module polaris.io)": [[62, "polaris.io.symlink", false]], "task (class in polaris)": [[51, "polaris.Task", false]], "threads (class in polaris.ocean.tasks.baroclinic_channel.threads)": [[198, "polaris.ocean.tasks.baroclinic_channel.threads.Threads", false]], "time_index_from_xtime() (in module polaris.mpas)": [[90, "polaris.mpas.time_index_from_xtime", false]], "unpickle_suite() (in module polaris.run)": [[116, "polaris.run.unpickle_suite", false]], "update() (polaris.yaml.polarisyaml method)": [[131, "polaris.yaml.PolarisYaml.update", false]], "update_cache() (in module polaris.cache)": [[57, "polaris.cache.update_cache", false]], "update_defaults() (in module polaris.streams)": [[120, "polaris.streams.update_defaults", false]], "update_layer_thickness() (in module polaris.ocean.vertical)": [[323, "polaris.ocean.vertical.update_layer_thickness", false]], "update_namelist_pio() (polaris.modelstep method)": [[39, "polaris.ModelStep.update_namelist_pio", false]], "update_permissions() (in module polaris.io)": [[63, "polaris.io.update_permissions", false]], "update_sigma_layer_thickness() (in module polaris.ocean.vertical.sigma)": [[322, "polaris.ocean.vertical.sigma.update_sigma_layer_thickness", false]], "update_tree() (in module polaris.streams)": [[121, "polaris.streams.update_tree", false]], "update_z_level_layer_thickness() (in module polaris.ocean.vertical.zlevel)": [[328, "polaris.ocean.vertical.zlevel.update_z_level_layer_thickness", false]], "update_z_star_layer_thickness() (in module polaris.ocean.vertical.zstar)": [[330, "polaris.ocean.vertical.zstar.update_z_star_layer_thickness", false]], "use_mplstyle() (in module polaris.viz)": [[128, "polaris.viz.use_mplstyle", false]], "validate (class in polaris.ocean.tasks.baroclinic_channel.validate)": [[199, "polaris.ocean.tasks.baroclinic_channel.validate.Validate", false]], "validate (class in polaris.ocean.tasks.cosine_bell.validate)": [[228, "polaris.ocean.tasks.cosine_bell.validate.Validate", false]], "validate (class in polaris.ocean.tasks.ice_shelf_2d.validate)": [[250, "polaris.ocean.tasks.ice_shelf_2d.validate.Validate", false]], "validate (class in polaris.seaice.tasks.single_column.exact_restart.validate)": [[371, "polaris.seaice.tasks.single_column.exact_restart.validate.Validate", false]], "validate_baselines() (polaris.step method)": [[50, "polaris.Step.validate_baselines", false]], "viz (class in polaris.ocean.tasks.baroclinic_channel.viz)": [[201, "polaris.ocean.tasks.baroclinic_channel.viz.Viz", false]], "viz (class in polaris.ocean.tasks.cosine_bell.viz)": [[230, "polaris.ocean.tasks.cosine_bell.viz.Viz", false]], "viz (class in polaris.ocean.tasks.geostrophic.viz)": [[241, "polaris.ocean.tasks.geostrophic.viz.Viz", false]], "viz (class in polaris.ocean.tasks.ice_shelf_2d.viz)": [[252, "polaris.ocean.tasks.ice_shelf_2d.viz.Viz", false]], "viz (class in polaris.ocean.tasks.inertial_gravity_wave.viz)": [[265, "polaris.ocean.tasks.inertial_gravity_wave.viz.Viz", false]], "viz (class in polaris.ocean.tasks.internal_wave.viz)": [[278, "polaris.ocean.tasks.internal_wave.viz.Viz", false]], "viz (class in polaris.ocean.tasks.manufactured_solution.viz)": [[292, "polaris.ocean.tasks.manufactured_solution.viz.Viz", false]], "viz (class in polaris.ocean.tasks.single_column.viz)": [[300, "polaris.ocean.tasks.single_column.viz.Viz", false]], "viz (class in polaris.ocean.tasks.sphere_transport.viz)": [[314, "polaris.ocean.tasks.sphere_transport.viz.Viz", false]], "viz (class in polaris.seaice.tasks.single_column.standard_physics.viz)": [[375, "polaris.seaice.tasks.single_column.standard_physics.viz.Viz", false]], "write() (in module polaris.namelist)": [[94, "polaris.namelist.write", false]], "write() (in module polaris.provenance)": [[99, "polaris.provenance.write", false]], "write() (in module polaris.streams)": [[122, "polaris.streams.write", false]], "write() (polaris.yaml.polarisyaml method)": [[132, "polaris.yaml.PolarisYaml.write", false]], "write_1d_grid() (in module polaris.ocean.vertical.grid_1d)": [[317, "polaris.ocean.vertical.grid_1d.write_1d_grid", false]], "write_job_script() (in module polaris.job)": [[66, "polaris.job.write_job_script", false]], "write_model_dataset() (polaris.ocean.model.oceaniostep method)": [[172, "polaris.ocean.model.OceanIOStep.write_model_dataset", false]], "yaml_to_mpas_streams() (in module polaris.yaml)": [[135, "polaris.yaml.yaml_to_mpas_streams", false]]}, "objects": {"polaris": [[20, 0, 1, "", "Component"], [25, 0, 1, "", "ModelStep"], [40, 0, 1, "", "Step"], [51, 0, 1, "", "Task"]], "polaris.Component": [[20, 1, 1, "", "__init__"], [21, 1, 1, "", "add_config"], [22, 1, 1, "", "add_step"], [23, 1, 1, "", "add_task"], [24, 1, 1, "", "remove_step"]], "polaris.ModelStep": [[25, 1, 1, "", "__init__"], [26, 1, 1, "", "add_model_config_options"], [27, 1, 1, "", "add_namelist_file"], [28, 1, 1, "", "add_streams_file"], [29, 1, 1, "", "add_yaml_file"], [30, 1, 1, "", "dynamic_model_config"], [31, 1, 1, "", "map_yaml_configs"], [32, 1, 1, "", "map_yaml_options"], [33, 1, 1, "", "map_yaml_to_namelist"], [34, 1, 1, "", "partition"], [35, 1, 1, "", "process_inputs_and_outputs"], [36, 1, 1, "", "runtime_setup"], [37, 1, 1, "", "set_model_resources"], [38, 1, 1, "", "setup"], [39, 1, 1, "", "update_namelist_pio"]], "polaris.Step": [[40, 1, 1, "", "__init__"], [41, 1, 1, "", "add_dependency"], [42, 1, 1, "", "add_input_file"], [43, 1, 1, "", "add_output_file"], [44, 1, 1, "", "constrain_resources"], [45, 1, 1, "", "run"], [46, 1, 1, "", "runtime_setup"], [47, 1, 1, "", "set_resources"], [48, 1, 1, "", "set_shared_config"], [49, 1, 1, "", "setup"], [50, 1, 1, "", "validate_baselines"]], "polaris.Task": [[51, 1, 1, "", "__init__"], [52, 1, 1, "", "add_step"], [53, 1, 1, "", "configure"], [54, 1, 1, "", "remove_step"], [55, 1, 1, "", "set_shared_config"]], "polaris.__main__": [[56, 2, 1, "", "main"]], "polaris.cache": [[57, 2, 1, "", "update_cache"]], "polaris.components": [[58, 2, 1, "", "get_components"]], "polaris.config": [[59, 0, 1, "", "PolarisConfigParser"]], "polaris.config.PolarisConfigParser": [[59, 1, 1, "", "__init__"], [60, 1, 1, "", "setup"]], "polaris.io": [[61, 2, 1, "", "download"], [62, 2, 1, "", "symlink"], [63, 2, 1, "", "update_permissions"]], "polaris.job": [[64, 2, 1, "", "clean_up_whitespace"], [65, 2, 1, "", "get_slurm_options"], [66, 2, 1, "", "write_job_script"]], "polaris.list": [[67, 2, 1, "", "list_cases"], [68, 2, 1, "", "list_machines"], [69, 2, 1, "", "list_suites"]], "polaris.logging": [[70, 2, 1, "", "log_method_call"]], "polaris.mesh": [[71, 0, 1, "", "IcosahedralMeshStep"], [78, 0, 1, "", "QuasiUniformSphericalMeshStep"]], "polaris.mesh.IcosahedralMeshStep": [[71, 1, 1, "", "__init__"], [72, 1, 1, "", "build_subdivisions_cell_width_lat_lon"], [73, 1, 1, "", "get_cell_width"], [74, 1, 1, "", "get_subdivisions"], [75, 1, 1, "", "make_jigsaw_mesh"], [76, 1, 1, "", "run"], [77, 1, 1, "", "setup"]], "polaris.mesh.QuasiUniformSphericalMeshStep": [[78, 1, 1, "", "__init__"], [79, 1, 1, "", "build_cell_width_lat_lon"], [80, 1, 1, "", "make_jigsaw_mesh"], [81, 1, 1, "", "run"], [82, 1, 1, "", "setup"]], "polaris.mesh.planar": [[83, 2, 1, "", "compute_planar_hex_nx_ny"]], "polaris.mesh.spherical": [[84, 0, 1, "", "SphericalBaseStep"]], "polaris.mesh.spherical.SphericalBaseStep": [[84, 1, 1, "", "__init__"], [85, 1, 1, "", "run"], [86, 1, 1, "", "save_and_plot_cell_width"], [87, 1, 1, "", "setup"]], "polaris.model_step": [[88, 2, 1, "", "make_graph_file"]], "polaris.mpas": [[89, 2, 1, "", "area_for_field"], [90, 2, 1, "", "time_index_from_xtime"]], "polaris.namelist": [[91, 2, 1, "", "ingest"], [92, 2, 1, "", "parse_replacements"], [93, 2, 1, "", "replace"], [94, 2, 1, "", "write"]], "polaris.ocean": [[145, 0, 1, "", "Ocean"]], "polaris.ocean.Ocean": [[145, 1, 1, "", "__init__"]], "polaris.ocean.convergence.analysis": [[146, 0, 1, "", "ConvergenceAnalysis"]], "polaris.ocean.convergence.analysis.ConvergenceAnalysis": [[146, 1, 1, "", "__init__"], [147, 1, 1, "", "compute_error"], [148, 1, 1, "", "convergence_parameters"], [149, 1, 1, "", "exact_solution"], [150, 1, 1, "", "get_output_field"], [151, 1, 1, "", "plot_convergence"], [152, 1, 1, "", "run"], [153, 1, 1, "", "setup"]], "polaris.ocean.convergence.forward": [[154, 0, 1, "", "ConvergenceForward"]], "polaris.ocean.convergence.forward.ConvergenceForward": [[154, 1, 1, "", "__init__"], [155, 1, 1, "", "compute_cell_count"], [156, 1, 1, "", "dynamic_model_config"]], "polaris.ocean.convergence.spherical": [[157, 0, 1, "", "SphericalConvergenceForward"]], "polaris.ocean.convergence.spherical.SphericalConvergenceForward": [[157, 1, 1, "", "__init__"], [158, 1, 1, "", "compute_cell_count"]], "polaris.ocean.ice_shelf": [[159, 0, 1, "", "IceShelfTask"], [161, 0, 1, "", "SshAdjustment"], [163, 0, 1, "", "SshForward"]], "polaris.ocean.ice_shelf.IceShelfTask": [[159, 1, 1, "", "__init__"], [160, 1, 1, "", "setup_ssh_adjustment_steps"]], "polaris.ocean.ice_shelf.SshAdjustment": [[161, 1, 1, "", "__init__"], [162, 1, 1, "", "run"]], "polaris.ocean.ice_shelf.SshForward": [[163, 1, 1, "", "__init__"], [164, 1, 1, "", "compute_cell_count"], [165, 1, 1, "", "dynamic_model_config"]], "polaris.ocean.mesh.spherical": [[166, 2, 1, "", "add_spherical_base_mesh_step"]], "polaris.ocean.model": [[167, 0, 1, "", "OceanIOStep"], [173, 0, 1, "", "OceanModelStep"], [179, 2, 1, "", "get_time_interval_string"]], "polaris.ocean.model.OceanIOStep": [[167, 1, 1, "", "__init__"], [168, 1, 1, "", "map_from_native_model_vars"], [169, 1, 1, "", "map_to_native_model_vars"], [170, 1, 1, "", "open_model_dataset"], [171, 1, 1, "", "setup"], [172, 1, 1, "", "write_model_dataset"]], "polaris.ocean.model.OceanModelStep": [[173, 1, 1, "", "__init__"], [174, 1, 1, "", "compute_cell_count"], [175, 1, 1, "", "constrain_resources"], [176, 1, 1, "", "map_yaml_configs"], [177, 1, 1, "", "map_yaml_options"], [178, 1, 1, "", "setup"]], "polaris.ocean.rpe": [[180, 2, 1, "", "compute_rpe"]], "polaris.ocean.tasks.baroclinic_channel": [[181, 2, 1, "", "add_baroclinic_channel_tasks"]], "polaris.ocean.tasks.baroclinic_channel.decomp": [[182, 0, 1, "", "Decomp"]], "polaris.ocean.tasks.baroclinic_channel.decomp.Decomp": [[182, 1, 1, "", "__init__"]], "polaris.ocean.tasks.baroclinic_channel.default": [[183, 0, 1, "", "Default"]], "polaris.ocean.tasks.baroclinic_channel.default.Default": [[183, 1, 1, "", "__init__"]], "polaris.ocean.tasks.baroclinic_channel.forward": [[184, 0, 1, "", "Forward"]], "polaris.ocean.tasks.baroclinic_channel.forward.Forward": [[184, 1, 1, "", "__init__"], [185, 1, 1, "", "compute_cell_count"], [186, 1, 1, "", "dynamic_model_config"]], "polaris.ocean.tasks.baroclinic_channel.init": [[187, 0, 1, "", "Init"]], "polaris.ocean.tasks.baroclinic_channel.init.Init": [[187, 1, 1, "", "__init__"], [188, 1, 1, "", "run"], [189, 1, 1, "", "setup"]], "polaris.ocean.tasks.baroclinic_channel.restart": [[190, 0, 1, "", "Restart"]], "polaris.ocean.tasks.baroclinic_channel.restart.Restart": [[190, 1, 1, "", "__init__"]], "polaris.ocean.tasks.baroclinic_channel.restart.restart_step": [[191, 0, 1, "", "RestartStep"]], "polaris.ocean.tasks.baroclinic_channel.restart.restart_step.RestartStep": [[191, 1, 1, "", "__init__"], [192, 1, 1, "", "dynamic_model_config"]], "polaris.ocean.tasks.baroclinic_channel.rpe": [[193, 0, 1, "", "Rpe"]], "polaris.ocean.tasks.baroclinic_channel.rpe.Rpe": [[193, 1, 1, "", "__init__"], [194, 1, 1, "", "configure"]], "polaris.ocean.tasks.baroclinic_channel.rpe.analysis": [[195, 0, 1, "", "Analysis"]], "polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis": [[195, 1, 1, "", "__init__"], [196, 1, 1, "", "run"], [197, 1, 1, "", "setup"]], "polaris.ocean.tasks.baroclinic_channel.threads": [[198, 0, 1, "", "Threads"]], "polaris.ocean.tasks.baroclinic_channel.threads.Threads": [[198, 1, 1, "", "__init__"]], "polaris.ocean.tasks.baroclinic_channel.validate": [[199, 0, 1, "", "Validate"]], "polaris.ocean.tasks.baroclinic_channel.validate.Validate": [[199, 1, 1, "", "__init__"], [200, 1, 1, "", "run"]], "polaris.ocean.tasks.baroclinic_channel.viz": [[201, 0, 1, "", "Viz"]], "polaris.ocean.tasks.baroclinic_channel.viz.Viz": [[201, 1, 1, "", "__init__"], [202, 1, 1, "", "run"]], "polaris.ocean.tasks.barotropic_gyre": [[203, 0, 1, "", "BarotropicGyre"], [204, 2, 1, "", "add_barotropic_gyre_tasks"]], "polaris.ocean.tasks.barotropic_gyre.BarotropicGyre": [[203, 1, 1, "", "__init__"]], "polaris.ocean.tasks.barotropic_gyre.analysis": [[205, 0, 1, "", "Analysis"]], "polaris.ocean.tasks.barotropic_gyre.analysis.Analysis": [[205, 1, 1, "", "__init__"], [206, 1, 1, "", "compute_error"], [207, 1, 1, "", "exact_solution"], [208, 1, 1, "", "run"]], "polaris.ocean.tasks.barotropic_gyre.forward": [[209, 0, 1, "", "Forward"], [212, 2, 1, "", "compute_max_time_step"]], "polaris.ocean.tasks.barotropic_gyre.forward.Forward": [[209, 1, 1, "", "__init__"], [210, 1, 1, "", "compute_cell_count"], [211, 1, 1, "", "dynamic_model_config"]], "polaris.ocean.tasks.barotropic_gyre.init": [[213, 0, 1, "", "Init"]], "polaris.ocean.tasks.barotropic_gyre.init.Init": [[213, 1, 1, "", "__init__"], [214, 1, 1, "", "run"], [215, 1, 1, "", "setup"]], "polaris.ocean.tasks.cosine_bell": [[216, 0, 1, "", "CosineBell"], [218, 2, 1, "", "add_cosine_bell_tasks"]], "polaris.ocean.tasks.cosine_bell.CosineBell": [[216, 1, 1, "", "__init__"], [217, 1, 1, "", "configure"]], "polaris.ocean.tasks.cosine_bell.analysis": [[219, 0, 1, "", "Analysis"]], "polaris.ocean.tasks.cosine_bell.analysis.Analysis": [[219, 1, 1, "", "__init__"], [220, 1, 1, "", "exact_solution"]], "polaris.ocean.tasks.cosine_bell.forward": [[221, 0, 1, "", "Forward"]], "polaris.ocean.tasks.cosine_bell.forward.Forward": [[221, 1, 1, "", "__init__"]], "polaris.ocean.tasks.cosine_bell.init": [[222, 0, 1, "", "Init"], [224, 2, 1, "", "cosine_bell"]], "polaris.ocean.tasks.cosine_bell.init.Init": [[222, 1, 1, "", "__init__"], [223, 1, 1, "", "run"]], "polaris.ocean.tasks.cosine_bell.restart": [[225, 0, 1, "", "Restart"], [226, 0, 1, "", "RestartStep"]], "polaris.ocean.tasks.cosine_bell.restart.Restart": [[225, 1, 1, "", "__init__"]], "polaris.ocean.tasks.cosine_bell.restart.RestartStep": [[226, 1, 1, "", "__init__"], [227, 1, 1, "", "dynamic_model_config"]], "polaris.ocean.tasks.cosine_bell.validate": [[228, 0, 1, "", "Validate"]], "polaris.ocean.tasks.cosine_bell.validate.Validate": [[228, 1, 1, "", "__init__"], [229, 1, 1, "", "run"]], "polaris.ocean.tasks.cosine_bell.viz": [[230, 0, 1, "", "Viz"]], "polaris.ocean.tasks.cosine_bell.viz.Viz": [[230, 1, 1, "", "__init__"], [231, 1, 1, "", "run"]], "polaris.ocean.tasks.geostrophic": [[232, 0, 1, "", "Geostrophic"], [234, 2, 1, "", "add_geostrophic_tasks"]], "polaris.ocean.tasks.geostrophic.Geostrophic": [[232, 1, 1, "", "__init__"], [233, 1, 1, "", "configure"]], "polaris.ocean.tasks.geostrophic.analysis": [[235, 0, 1, "", "Analysis"]], "polaris.ocean.tasks.geostrophic.analysis.Analysis": [[235, 1, 1, "", "__init__"], [236, 1, 1, "", "exact_solution"], [237, 1, 1, "", "get_output_field"]], "polaris.ocean.tasks.geostrophic.forward": [[238, 0, 1, "", "Forward"]], "polaris.ocean.tasks.geostrophic.forward.Forward": [[238, 1, 1, "", "__init__"]], "polaris.ocean.tasks.geostrophic.init": [[239, 0, 1, "", "Init"]], "polaris.ocean.tasks.geostrophic.init.Init": [[239, 1, 1, "", "__init__"], [240, 1, 1, "", "run"]], "polaris.ocean.tasks.geostrophic.viz": [[241, 0, 1, "", "Viz"]], "polaris.ocean.tasks.geostrophic.viz.Viz": [[241, 1, 1, "", "__init__"], [242, 1, 1, "", "run"]], "polaris.ocean.tasks.ice_shelf_2d": [[243, 2, 1, "", "add_ice_shelf_2d_tasks"]], "polaris.ocean.tasks.ice_shelf_2d.default": [[244, 0, 1, "", "Default"]], "polaris.ocean.tasks.ice_shelf_2d.default.Default": [[244, 1, 1, "", "__init__"]], "polaris.ocean.tasks.ice_shelf_2d.forward": [[245, 0, 1, "", "Forward"]], "polaris.ocean.tasks.ice_shelf_2d.forward.Forward": [[245, 1, 1, "", "__init__"], [246, 1, 1, "", "compute_cell_count"], [247, 1, 1, "", "dynamic_model_config"]], "polaris.ocean.tasks.ice_shelf_2d.init": [[248, 0, 1, "", "Init"]], "polaris.ocean.tasks.ice_shelf_2d.init.Init": [[248, 1, 1, "", "__init__"], [249, 1, 1, "", "run"]], "polaris.ocean.tasks.ice_shelf_2d.validate": [[250, 0, 1, "", "Validate"]], "polaris.ocean.tasks.ice_shelf_2d.validate.Validate": [[250, 1, 1, "", "__init__"], [251, 1, 1, "", "run"]], "polaris.ocean.tasks.ice_shelf_2d.viz": [[252, 0, 1, "", "Viz"]], "polaris.ocean.tasks.ice_shelf_2d.viz.Viz": [[252, 1, 1, "", "__init__"], [253, 1, 1, "", "run"]], "polaris.ocean.tasks.inertial_gravity_wave": [[254, 0, 1, "", "InertialGravityWave"], [255, 2, 1, "", "add_inertial_gravity_wave_tasks"]], "polaris.ocean.tasks.inertial_gravity_wave.InertialGravityWave": [[254, 1, 1, "", "__init__"]], "polaris.ocean.tasks.inertial_gravity_wave.analysis": [[256, 0, 1, "", "Analysis"]], "polaris.ocean.tasks.inertial_gravity_wave.analysis.Analysis": [[256, 1, 1, "", "__init__"], [257, 1, 1, "", "exact_solution"]], "polaris.ocean.tasks.inertial_gravity_wave.exact_solution": [[258, 0, 1, "", "ExactSolution"]], "polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution": [[258, 1, 1, "", "__init__"], [259, 1, 1, "", "normal_velocity"], [260, 1, 1, "", "ssh"]], "polaris.ocean.tasks.inertial_gravity_wave.forward": [[261, 0, 1, "", "Forward"]], "polaris.ocean.tasks.inertial_gravity_wave.forward.Forward": [[261, 1, 1, "", "__init__"], [262, 1, 1, "", "compute_cell_count"]], "polaris.ocean.tasks.inertial_gravity_wave.init": [[263, 0, 1, "", "Init"]], "polaris.ocean.tasks.inertial_gravity_wave.init.Init": [[263, 1, 1, "", "__init__"], [264, 1, 1, "", "run"]], "polaris.ocean.tasks.inertial_gravity_wave.viz": [[265, 0, 1, "", "Viz"]], "polaris.ocean.tasks.inertial_gravity_wave.viz.Viz": [[265, 1, 1, "", "__init__"], [266, 1, 1, "", "run"]], "polaris.ocean.tasks.internal_wave": [[267, 2, 1, "", "add_internal_wave_tasks"]], "polaris.ocean.tasks.internal_wave.default": [[268, 0, 1, "", "Default"]], "polaris.ocean.tasks.internal_wave.default.Default": [[268, 1, 1, "", "__init__"]], "polaris.ocean.tasks.internal_wave.forward": [[269, 0, 1, "", "Forward"]], "polaris.ocean.tasks.internal_wave.forward.Forward": [[269, 1, 1, "", "__init__"], [270, 1, 1, "", "compute_cell_count"], [271, 1, 1, "", "dynamic_model_config"]], "polaris.ocean.tasks.internal_wave.init": [[272, 0, 1, "", "Init"]], "polaris.ocean.tasks.internal_wave.init.Init": [[272, 1, 1, "", "__init__"], [273, 1, 1, "", "run"]], "polaris.ocean.tasks.internal_wave.rpe": [[274, 0, 1, "", "Rpe"]], "polaris.ocean.tasks.internal_wave.rpe.Rpe": [[274, 1, 1, "", "__init__"], [275, 1, 1, "", "configure"]], "polaris.ocean.tasks.internal_wave.rpe.analysis": [[276, 0, 1, "", "Analysis"]], "polaris.ocean.tasks.internal_wave.rpe.analysis.Analysis": [[276, 1, 1, "", "__init__"], [277, 1, 1, "", "run"]], "polaris.ocean.tasks.internal_wave.viz": [[278, 0, 1, "", "Viz"]], "polaris.ocean.tasks.internal_wave.viz.Viz": [[278, 1, 1, "", "__init__"], [279, 1, 1, "", "run"]], "polaris.ocean.tasks.manufactured_solution": [[280, 0, 1, "", "ManufacturedSolution"], [281, 2, 1, "", "add_manufactured_solution_tasks"]], "polaris.ocean.tasks.manufactured_solution.ManufacturedSolution": [[280, 1, 1, "", "__init__"]], "polaris.ocean.tasks.manufactured_solution.analysis": [[282, 0, 1, "", "Analysis"]], "polaris.ocean.tasks.manufactured_solution.analysis.Analysis": [[282, 1, 1, "", "__init__"], [283, 1, 1, "", "exact_solution"]], "polaris.ocean.tasks.manufactured_solution.exact_solution": [[284, 0, 1, "", "ExactSolution"]], "polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution": [[284, 1, 1, "", "__init__"], [285, 1, 1, "", "normal_velocity"], [286, 1, 1, "", "ssh"]], "polaris.ocean.tasks.manufactured_solution.forward": [[287, 0, 1, "", "Forward"]], "polaris.ocean.tasks.manufactured_solution.forward.Forward": [[287, 1, 1, "", "__init__"], [288, 1, 1, "", "compute_cell_count"]], "polaris.ocean.tasks.manufactured_solution.init": [[289, 0, 1, "", "Init"]], "polaris.ocean.tasks.manufactured_solution.init.Init": [[289, 1, 1, "", "__init__"], [290, 1, 1, "", "run"], [291, 1, 1, "", "setup"]], "polaris.ocean.tasks.manufactured_solution.viz": [[292, 0, 1, "", "Viz"]], "polaris.ocean.tasks.manufactured_solution.viz.Viz": [[292, 1, 1, "", "__init__"], [293, 1, 1, "", "run"]], "polaris.ocean.tasks.single_column": [[294, 2, 1, "", "add_single_column_tasks"]], "polaris.ocean.tasks.single_column.cvmix": [[295, 0, 1, "", "CVMix"]], "polaris.ocean.tasks.single_column.cvmix.CVMix": [[295, 1, 1, "", "__init__"]], "polaris.ocean.tasks.single_column.forward": [[296, 0, 1, "", "Forward"]], "polaris.ocean.tasks.single_column.forward.Forward": [[296, 1, 1, "", "__init__"]], "polaris.ocean.tasks.single_column.ideal_age": [[297, 0, 1, "", "IdealAge"]], "polaris.ocean.tasks.single_column.ideal_age.IdealAge": [[297, 1, 1, "", "__init__"]], "polaris.ocean.tasks.single_column.init": [[298, 0, 1, "", "Init"]], "polaris.ocean.tasks.single_column.init.Init": [[298, 1, 1, "", "__init__"], [299, 1, 1, "", "run"]], "polaris.ocean.tasks.single_column.viz": [[300, 0, 1, "", "Viz"]], "polaris.ocean.tasks.single_column.viz.Viz": [[300, 1, 1, "", "__init__"], [301, 1, 1, "", "run"]], "polaris.ocean.tasks.sphere_transport": [[302, 0, 1, "", "SphereTransport"], [304, 2, 1, "", "add_sphere_transport_tasks"]], "polaris.ocean.tasks.sphere_transport.SphereTransport": [[302, 1, 1, "", "__init__"], [303, 1, 1, "", "configure"]], "polaris.ocean.tasks.sphere_transport.analysis": [[305, 0, 1, "", "Analysis"]], "polaris.ocean.tasks.sphere_transport.analysis.Analysis": [[305, 1, 1, "", "__init__"], [306, 1, 1, "", "convergence_parameters"]], "polaris.ocean.tasks.sphere_transport.filament_analysis": [[307, 0, 1, "", "FilamentAnalysis"]], "polaris.ocean.tasks.sphere_transport.filament_analysis.FilamentAnalysis": [[307, 1, 1, "", "__init__"], [308, 1, 1, "", "run"]], "polaris.ocean.tasks.sphere_transport.forward": [[309, 0, 1, "", "Forward"]], "polaris.ocean.tasks.sphere_transport.forward.Forward": [[309, 1, 1, "", "__init__"]], "polaris.ocean.tasks.sphere_transport.init": [[310, 0, 1, "", "Init"]], "polaris.ocean.tasks.sphere_transport.init.Init": [[310, 1, 1, "", "__init__"], [311, 1, 1, "", "run"]], "polaris.ocean.tasks.sphere_transport.mixing_analysis": [[312, 0, 1, "", "MixingAnalysis"]], "polaris.ocean.tasks.sphere_transport.mixing_analysis.MixingAnalysis": [[312, 1, 1, "", "__init__"], [313, 1, 1, "", "run"]], "polaris.ocean.tasks.sphere_transport.viz": [[314, 0, 1, "", "Viz"]], "polaris.ocean.tasks.sphere_transport.viz.Viz": [[314, 1, 1, "", "__init__"], [315, 1, 1, "", "run"]], "polaris.ocean.vertical": [[318, 2, 1, "", "init_vertical_coord"], [323, 2, 1, "", "update_layer_thickness"]], "polaris.ocean.vertical.grid_1d": [[316, 2, 1, "", "generate_1d_grid"], [317, 2, 1, "", "write_1d_grid"]], "polaris.ocean.vertical.partial_cells": [[319, 2, 1, "", "alter_bottom_depth"], [320, 2, 1, "", "alter_ssh"]], "polaris.ocean.vertical.sigma": [[321, 2, 1, "", "init_sigma_vertical_coord"], [322, 2, 1, "", "update_sigma_layer_thickness"]], "polaris.ocean.vertical.zlevel": [[324, 2, 1, "", "compute_min_max_level_cell"], [325, 2, 1, "", "compute_z_level_layer_thickness"], [326, 2, 1, "", "compute_z_level_resting_thickness"], [327, 2, 1, "", "init_z_level_vertical_coord"], [328, 2, 1, "", "update_z_level_layer_thickness"]], "polaris.ocean.vertical.zstar": [[329, 2, 1, "", "init_z_star_vertical_coord"], [330, 2, 1, "", "update_z_star_layer_thickness"]], "polaris.ocean.viz": [[331, 2, 1, "", "compute_transect"], [332, 2, 1, "", "plot_transect"]], "polaris.ocean.viz.transect.horiz": [[333, 2, 1, "", "find_planar_transect_cells_and_weights"], [334, 2, 1, "", "find_spherical_transect_cells_and_weights"], [335, 2, 1, "", "make_triangle_tree"], [336, 2, 1, "", "mesh_to_triangles"]], "polaris.ocean.viz.transect.vert": [[337, 2, 1, "", "find_transect_levels_and_weights"], [338, 2, 1, "", "interp_mpas_to_transect_cells"], [339, 2, 1, "", "interp_mpas_to_transect_nodes"]], "polaris.parallel": [[95, 2, 1, "", "get_available_parallel_resources"], [96, 2, 1, "", "get_parallel_command"], [97, 2, 1, "", "run_command"], [98, 2, 1, "", "set_cores_per_node"]], "polaris.provenance": [[99, 2, 1, "", "write"]], "polaris.remap": [[100, 0, 1, "", "MappingFileStep"]], "polaris.remap.MappingFileStep": [[100, 1, 1, "", "__init__"], [101, 1, 1, "", "dst_from_lon_lat"], [102, 1, 1, "", "dst_from_mpas"], [103, 1, 1, "", "dst_from_points"], [104, 1, 1, "", "dst_from_proj"], [105, 1, 1, "", "dst_global_lon_lat"], [106, 1, 1, "", "get_remapper"], [107, 1, 1, "", "runtime_setup"], [108, 1, 1, "", "src_from_lon_lat"], [109, 1, 1, "", "src_from_mpas"], [110, 1, 1, "", "src_from_proj"]], "polaris.run": [[111, 2, 1, "", "complete_step_run"], [112, 2, 1, "", "load_dependencies"], [115, 2, 1, "", "setup_config"], [116, 2, 1, "", "unpickle_suite"]], "polaris.run.serial": [[113, 2, 1, "", "run_single_step"], [114, 2, 1, "", "run_tasks"]], "polaris.seaice": [[368, 0, 1, "", "SeaIce"]], "polaris.seaice.SeaIce": [[368, 1, 1, "", "__init__"]], "polaris.seaice.tasks.single_column": [[369, 2, 1, "", "add_single_column_tasks"]], "polaris.seaice.tasks.single_column.exact_restart": [[370, 0, 1, "", "ExactRestart"]], "polaris.seaice.tasks.single_column.exact_restart.ExactRestart": [[370, 1, 1, "", "__init__"]], "polaris.seaice.tasks.single_column.exact_restart.validate": [[371, 0, 1, "", "Validate"]], "polaris.seaice.tasks.single_column.exact_restart.validate.Validate": [[371, 1, 1, "", "__init__"], [372, 1, 1, "", "run"]], "polaris.seaice.tasks.single_column.forward": [[373, 0, 1, "", "Forward"]], "polaris.seaice.tasks.single_column.forward.Forward": [[373, 1, 1, "", "__init__"]], "polaris.seaice.tasks.single_column.standard_physics": [[374, 0, 1, "", "StandardPhysics"]], "polaris.seaice.tasks.single_column.standard_physics.StandardPhysics": [[374, 1, 1, "", "__init__"]], "polaris.seaice.tasks.single_column.standard_physics.viz": [[375, 0, 1, "", "Viz"]], "polaris.seaice.tasks.single_column.standard_physics.viz.Viz": [[375, 1, 1, "", "__init__"], [376, 1, 1, "", "run"]], "polaris.setup": [[117, 2, 1, "", "setup_task"], [118, 2, 1, "", "setup_tasks"]], "polaris.streams": [[119, 2, 1, "", "read"], [120, 2, 1, "", "update_defaults"], [121, 2, 1, "", "update_tree"], [122, 2, 1, "", "write"]], "polaris.suite": [[123, 2, 1, "", "setup_suite"]], "polaris.validate": [[124, 2, 1, "", "compare_variables"]], "polaris.viz": [[125, 2, 1, "", "plot_global_lat_lon_field"], [126, 2, 1, "", "plot_global_mpas_field"], [127, 2, 1, "", "plot_horiz_field"], [128, 2, 1, "", "use_mplstyle"]], "polaris.yaml": [[129, 0, 1, "", "PolarisYaml"], [133, 2, 1, "", "main_mpas_to_yaml"], [134, 2, 1, "", "mpas_namelist_and_streams_to_yaml"], [135, 2, 1, "", "yaml_to_mpas_streams"]], "polaris.yaml.PolarisYaml": [[129, 1, 1, "", "__init__"], [130, 1, 1, "", "read"], [131, 1, 1, "", "update"], [132, 1, 1, "", "write"]]}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"], "2": ["py", "function", "Python function"]}, "objtypes": {"0": "py:class", "1": "py:method", "2": "py:function"}, "terms": {"": [1, 5, 6, 7, 8, 9, 11, 12, 14, 17, 40, 42, 43, 48, 51, 52, 53, 55, 57, 59, 85, 113, 115, 120, 123, 141, 144, 230, 241, 314, 340, 343, 344, 345, 346, 347, 348, 349, 351, 352, 353, 354, 355, 356, 357, 358, 359, 361, 362, 363, 364, 365, 377, 380, 381, 382, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 396, 398, 399, 400, 401, 402, 403, 406, 408, 409, 410, 412, 413, 414, 417], "0": [1, 2, 5, 6, 7, 13, 14, 17, 18, 19, 73, 101, 105, 108, 124, 126, 127, 136, 137, 138, 139, 140, 141, 142, 144, 318, 321, 326, 327, 329, 332, 333, 334, 342, 345, 346, 347, 349, 354, 355, 357, 361, 364, 365, 378, 381, 384, 385, 387, 391, 393, 395, 396, 398, 399, 400, 401, 402, 403, 404, 406, 407, 408, 409, 410, 411, 412, 413, 414, 417], "00": [1, 14, 18, 144, 363, 378, 384, 390, 392, 413], "0000": 384, "00000000000000e": 18, "0000_00": [14, 384], "0001": [14, 144, 384], "0002": 384, "0024_00": 14, "003": 407, "0030_00": 14, "00_00": [363, 378, 384], "01": [1, 14, 144, 378, 384, 404, 407, 411, 416], "0100": 384, "01_00": [14, 144, 378, 384], "02": [1, 387], "0200": 363, "03": 1, "04": 141, "05": [384, 403], "05_degre": 11, "05_degree_20220729": 361, "06": 1, "08": [1, 384, 398], "0_chrysalis_gnu_openmpi": 6, "0_chrysalis_gnu_openmpi_albani": 6, "0_chrysalis_intel_openmpi": 6, "0_chrysalis_intel_openmpi_petsc": 6, "0_mpich": 413, "0e": [14, 408, 411], "1": [5, 7, 9, 13, 14, 17, 18, 19, 40, 73, 136, 137, 138, 139, 141, 142, 144, 163, 182, 184, 198, 209, 245, 269, 295, 296, 297, 318, 321, 327, 329, 332, 333, 334, 343, 344, 345, 346, 347, 349, 351, 353, 354, 355, 356, 358, 359, 361, 363, 365, 378, 381, 384, 385, 387, 390, 391, 392, 393, 395, 398, 399, 400, 401, 402, 403, 404, 406, 407, 408, 409, 410, 411, 412, 413], "10": [1, 9, 13, 73, 141, 340, 343, 349, 351, 353, 357, 358, 384, 385, 391, 393, 395, 398, 400, 402, 403, 404, 406, 407, 408, 409, 411, 419], "100": [349, 351, 353, 356, 395, 406, 408, 411], "1000": [384, 385, 395, 398, 399, 403, 406, 408], "10000": [333, 334, 406, 408], "101": [400, 402, 409, 410], "1016": 407, "1040": 404, "1050": 404, "10e": 399, "10km": [5, 18, 343, 384, 398, 413, 418, 419], "11": [13, 73, 141, 384, 399], "12": [6, 13, 73, 127, 332, 337, 345, 347, 354, 355, 380, 384, 387, 400, 402, 403, 409, 410, 413, 416], "120": [13, 73, 144, 362, 400, 401, 402, 403, 409, 410], "1200": 399, "120km": [1, 5, 363], "127": 381, "128": [17, 362, 387, 388, 392], "13": [13, 73, 384, 398], "1384565": [14, 384], "14": [381, 401], "14159265": 401, "146": 395, "15": [13, 14, 73, 343, 349, 384, 398, 400, 401, 402, 403, 404, 407, 409, 410, 411, 412, 413, 417], "150": [400, 401, 402, 407, 409, 410], "150km": 1, "151209": 11, "156": 416, "159": 381, "16": [385, 411, 413], "160": [384, 398], "160e3": 13, "164": 381, "17": 413, "173": 381, "18": [1, 6, 385, 387], "180": [19, 72, 79, 80, 86, 105, 336, 400, 401, 402, 409, 410], "180km": 1, "19": 6, "190": 404, "1950": 399, "1992": [401, 403], "1_": 141, "1_anvil_gnu_openmpi": 136, "1_anvil_intel_impi": [136, 141], "1_chicoma": 137, "1_chrysalis_gnu_openmpi": 138, "1_chrysalis_intel_openmpi": 138, "1_compy_gnu_openmpi": 139, "1_compy_intel_impi": 139, "1_frontier_crayclang_mpich": 140, "1_frontier_gnu_mpich": 140, "1_pm": 142, "1d": [101, 105, 108, 125, 144, 316, 317, 318, 319, 320, 321, 324, 325, 327, 329, 349], "1e": 406, "1e3": [13, 361, 384], "1km": [384, 398, 413], "1m": [378, 416], "1thread": [18, 343, 398], "2": [2, 6, 13, 14, 15, 18, 41, 127, 141, 144, 198, 243, 248, 342, 343, 345, 346, 347, 349, 354, 355, 359, 362, 365, 371, 378, 384, 385, 387, 391, 395, 396, 398, 399, 401, 403, 404, 405, 406, 407, 408, 413], "20": [1, 193, 274, 343, 349, 352, 362, 384, 398, 399, 407, 411], "200": [126, 144, 332, 351, 353, 384, 398, 404, 406, 408, 411], "2000": [144, 357, 378, 380, 384, 404, 416], "2000m": [357, 413], "200128": 11, "2004": 395, "2011": 407, "2012": [398, 400, 402, 407, 409, 410], "2015": [144, 384, 398], "2017": 395, "2019": 387, "2020": 141, "2022": 385, "2023": [1, 17, 406, 408], "20230414": 17, "20_00": 384, "20km": 407, "210": [395, 400, 401, 402, 409, 410], "210131_test_new_branch": 413, "210km": [1, 5], "2123666": 401, "22": 141, "221": 395, "23": 1, "230914": 5, "24": [144, 346, 401, 416], "240": [13, 73, 345, 346, 347, 348, 354, 355, 385, 400, 401, 402, 409, 410], "240km": [1, 5, 11, 166, 363], "245": 6, "246": 6, "25": [144, 351, 353, 399, 400, 401, 402, 406, 408, 409, 410, 411], "250": [395, 407], "2500": 395, "250km": 407, "256": [362, 387, 392], "25_extrap": 17, "28": [385, 395, 400], "288": [400, 402, 409, 410], "2ab": 2, "2d": [101, 105, 108, 125, 161, 244, 250, 337, 349, 396, 405], "2e": [384, 398], "2thread": [18, 398], "3": [13, 73, 140, 141, 144, 333, 334, 343, 344, 352, 361, 362, 365, 381, 384, 385, 391, 392, 395, 398, 399, 400, 401, 402, 403, 404, 406, 407, 408, 409, 410, 412, 413], "30": [13, 14, 73, 144, 357, 384, 390, 392, 398, 404, 411, 412, 417], "300": [400, 401, 402, 409, 410, 412], "3000": [385, 403], "304": 141, "314": 381, "32": [141, 362, 413], "33": [385, 407, 413], "34": [357, 404, 413], "35": [384, 398, 400, 401, 402, 403, 407, 409, 410, 411, 412, 413, 417], "35n": 416, "36": [386, 391, 411, 413], "369": 381, "37": 413, "38": [1, 413], "395": 381, "3_chrysalis_intel_openmpi": 384, "3a": 401, "3d": 332, "3rd": [361, 384], "3wbgy5": 13, "4": [5, 7, 9, 13, 14, 126, 141, 144, 182, 183, 343, 351, 352, 353, 356, 358, 361, 363, 384, 385, 391, 398, 399, 400, 401, 402, 403, 404, 406, 408, 409, 410, 411, 413], "40": [389, 403, 404], "400": 411, "40e3": [384, 398], "44": 404, "45": 387, "48": 402, "480": [400, 401, 402, 409, 410], "480km": 363, "4e2": 399, "4km": [384, 398, 413], "4proc": [384, 398], "4th": [400, 401, 402, 403, 409, 410], "4x4": 411, "5": [13, 14, 73, 126, 141, 144, 193, 274, 343, 348, 361, 362, 364, 381, 384, 385, 398, 400, 401, 402, 403, 404, 407, 409, 410, 412, 413, 417], "50": [343, 351, 352, 353, 384, 398, 404, 406, 408, 411], "500": [384, 385, 395, 398, 407], "5000": 399, "500e3": 13, "500km": [384, 398, 407], "50e3": 407, "51": 395, "5500": 395, "5550": 395, "55742015": 62, "576": 401, "59": 1, "5degre": [101, 105, 108], "5e": 411, "5km": [352, 404, 407], "5w": 416, "5x0": [101, 105, 108], "6": [13, 73, 332, 333, 334, 361, 384, 393, 396, 398, 400, 409, 411, 413, 414], "60": [13, 73, 144, 345, 346, 347, 348, 354, 355, 395, 400, 401, 402, 404, 409, 410], "6000": [385, 395], "60km": [1, 5, 363, 400, 401, 402, 409, 410], "63": 395, "64": [17, 390, 395], "66": 400, "6667": 401, "7": [13, 73, 141, 384, 392, 400, 401, 404, 410, 413], "71": 416, "720": 19, "75": [144, 401, 404], "77": 365, "7728169": [14, 62, 384], "7ohuiwq": 141, "8": [13, 73, 126, 141, 144, 343, 365, 384, 385, 398, 401, 406, 408, 410, 413], "80": 395, "8080": 381, "81": 141, "86": 402, "8844": 392, "8proc": [384, 398], "9": [13, 19, 73, 141, 384, 400, 401, 402, 409, 410, 413], "90": [72, 79, 80, 86, 361, 400, 401, 402, 404, 409, 410], "90c": 361, "90km": [1, 5], "91": 361, "91c": 361, "92": [361, 395], "94": [13, 73, 403], "94e4": 403, "95": 381, "960": 411, "99": [400, 402, 409, 410], "A": [1, 6, 7, 8, 11, 13, 14, 17, 19, 20, 26, 28, 29, 31, 32, 33, 40, 41, 42, 43, 44, 48, 51, 52, 55, 58, 59, 60, 67, 71, 72, 75, 78, 79, 80, 84, 92, 95, 97, 99, 100, 101, 102, 103, 104, 108, 109, 110, 114, 117, 118, 119, 121, 123, 124, 125, 126, 127, 129, 130, 131, 132, 134, 135, 141, 144, 146, 154, 157, 159, 161, 163, 167, 168, 169, 172, 173, 176, 177, 179, 182, 183, 184, 187, 190, 191, 193, 195, 198, 199, 201, 205, 209, 213, 216, 219, 221, 222, 225, 226, 228, 230, 232, 235, 238, 239, 241, 245, 248, 250, 252, 254, 256, 261, 263, 265, 268, 269, 272, 274, 276, 278, 280, 282, 287, 289, 292, 296, 298, 300, 302, 305, 307, 309, 310, 312, 314, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 327, 328, 329, 330, 332, 333, 334, 335, 336, 337, 338, 339, 343, 344, 349, 351, 352, 353, 356, 358, 361, 362, 363, 364, 365, 370, 371, 373, 375, 382, 383, 384, 386, 387, 388, 389, 390, 391, 392, 398, 399, 400, 401, 402, 403, 404, 406, 407, 408, 409, 410, 412, 413, 416, 417], "And": [7, 14, 365, 384], "As": [1, 4, 5, 6, 9, 11, 13, 18, 73, 144, 357, 361, 362, 363, 364, 365, 384, 385, 395, 399, 400, 401, 402, 403, 409, 410, 411, 418], "At": [14, 40, 51, 359, 360, 363, 384, 393, 403], "Be": [6, 392], "But": [13, 141, 357, 361, 364, 365, 384, 385, 391], "By": [5, 14, 18, 41, 42, 144, 340, 358, 361, 363, 377, 384, 385, 398, 401, 404, 411], "For": [2, 3, 5, 6, 7, 9, 12, 14, 17, 19, 25, 118, 136, 141, 144, 148, 149, 220, 236, 257, 283, 306, 342, 343, 344, 349, 351, 352, 353, 356, 361, 364, 365, 384, 385, 393, 396, 400, 401, 402, 403, 406, 408, 409, 410, 413, 414, 419], "If": [2, 5, 6, 7, 8, 9, 12, 14, 18, 19, 25, 26, 31, 32, 37, 40, 42, 47, 48, 51, 52, 53, 55, 62, 96, 97, 98, 100, 111, 124, 127, 136, 137, 138, 139, 140, 141, 142, 144, 154, 157, 159, 163, 168, 169, 171, 173, 176, 177, 179, 184, 209, 245, 269, 291, 296, 343, 344, 349, 352, 361, 363, 364, 365, 378, 381, 382, 384, 385, 391, 392, 395, 400, 401, 402, 403, 404, 409, 410, 412, 413, 417], "In": [1, 2, 6, 7, 8, 9, 11, 14, 17, 18, 40, 141, 144, 333, 334, 337, 346, 357, 359, 361, 362, 363, 364, 365, 383, 384, 385, 391, 395, 401, 403, 404, 407, 412, 413, 417, 418, 419], "It": [2, 5, 6, 9, 14, 17, 40, 46, 125, 144, 345, 346, 347, 348, 349, 351, 353, 354, 355, 357, 361, 362, 363, 364, 365, 382, 384, 385, 391, 399, 401, 406, 408, 409, 410], "No": [11, 383, 406, 408], "Not": 127, "ON": 365, "On": [6, 7, 13, 141, 365, 391], "One": [9, 13, 146, 154, 157, 216, 221, 225, 226, 232, 238, 261, 287, 292, 302, 305, 309, 384, 413, 418], "Or": [5, 361, 385], "That": [361, 364, 382, 384, 413], "The": [2, 5, 6, 7, 8, 9, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 34, 40, 41, 42, 43, 46, 49, 51, 52, 54, 57, 59, 61, 62, 63, 65, 66, 67, 70, 71, 72, 73, 74, 75, 78, 79, 83, 84, 88, 89, 90, 92, 96, 97, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 112, 114, 115, 116, 117, 118, 119, 123, 124, 125, 126, 127, 129, 130, 134, 135, 141, 144, 145, 146, 147, 148, 149, 150, 151, 154, 155, 157, 158, 159, 160, 161, 163, 164, 166, 167, 168, 169, 170, 172, 173, 174, 179, 182, 183, 184, 185, 187, 189, 190, 191, 193, 195, 197, 198, 199, 201, 203, 205, 206, 209, 210, 212, 213, 215, 216, 219, 220, 221, 222, 225, 226, 228, 230, 232, 235, 236, 237, 238, 239, 241, 244, 245, 246, 248, 250, 252, 254, 256, 257, 261, 262, 263, 265, 268, 269, 270, 272, 274, 276, 278, 280, 282, 283, 287, 288, 289, 292, 295, 296, 297, 298, 300, 302, 305, 306, 307, 309, 310, 312, 314, 318, 319, 320, 321, 324, 325, 326, 327, 329, 331, 332, 333, 334, 338, 339, 340, 342, 343, 344, 345, 346, 347, 348, 349, 351, 352, 353, 354, 355, 356, 357, 358, 359, 361, 362, 363, 364, 365, 367, 368, 371, 373, 374, 375, 377, 378, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 406, 407, 408, 409, 410, 411, 412, 413, 414, 416, 417, 419], "Then": [4, 6, 7, 11, 14, 136, 137, 138, 139, 140, 141, 142, 340, 343, 344, 349, 351, 352, 353, 356, 358, 361, 363, 365, 377, 384, 391, 398, 403, 404, 413], "There": [1, 5, 6, 13, 19, 318, 321, 327, 329, 337, 346, 356, 357, 359, 361, 364, 365, 381, 384, 385, 386, 387, 388, 389, 390, 392, 401, 406, 407, 408, 413], "These": [5, 6, 8, 9, 14, 20, 40, 141, 144, 340, 342, 358, 361, 363, 364, 365, 377, 378, 383, 384, 385, 391, 393, 398, 399, 400, 401, 402, 403, 404, 406, 407, 408, 409, 410, 411, 412, 413, 418, 419], "To": [2, 5, 6, 12, 17, 18, 124, 140, 141, 142, 144, 340, 361, 364, 365, 377, 378, 384, 386, 387, 391, 395, 400, 401, 402, 409, 410, 413], "With": 365, "_": [100, 141, 361, 363, 365, 384, 407, 411], "__init__": [9, 17, 18, 20, 25, 40, 51, 59, 70, 71, 78, 84, 100, 129, 144, 145, 146, 154, 157, 159, 161, 163, 167, 173, 182, 183, 184, 187, 190, 191, 193, 195, 198, 199, 201, 203, 205, 209, 213, 216, 219, 221, 222, 225, 226, 228, 230, 232, 235, 238, 239, 241, 244, 245, 248, 250, 252, 254, 256, 258, 261, 263, 265, 268, 269, 272, 274, 276, 278, 280, 282, 284, 287, 289, 292, 295, 296, 297, 298, 300, 302, 305, 307, 309, 310, 312, 314, 357, 358, 361, 363, 364, 368, 370, 371, 373, 374, 375, 382, 384], "__int__": 17, "__version__": 365, "_add_rpe_and_analysis_step": 9, "_add_step": 384, "_albani": 365, "_all": 118, "_build": 4, "_cached_fil": [8, 361], "_cosine_bel": 363, "_database_root": 42, "_forward_": 363, "_get_basic_config": 9, "_init_": 363, "_map_": 363, "_nu_": 384, "_plot": 384, "_resolut": 363, "_run_test": 384, "_setup_step": [363, 384], "_tidal_forc": 404, "_viz_": 363, "_with_viz": 363, "ab": 384, "abil": [1, 7, 400, 409], "abl": [5, 6, 136, 137, 138, 139, 140, 142, 144, 361, 362, 365, 384, 391, 413], "about": [1, 5, 6, 7, 8, 12, 14, 40, 100, 129, 144, 357, 361, 363, 364, 365, 384, 385, 387, 403, 410], "abov": [5, 7, 14, 18, 19, 141, 337, 357, 359, 361, 362, 363, 364, 365, 384, 385, 400, 401, 402, 403, 409, 411, 413, 418], "abruptli": 404, "absenc": 395, "absolut": [5, 9, 40, 42, 59, 118, 123, 340, 358, 361, 365, 377, 413], "ac": [6, 384], "accept": [351, 353], "access": [11, 41, 363, 364, 365, 384, 386, 391, 392], "accommod": [9, 25, 37, 40, 47, 96, 97, 173], "accomplish": [5, 11, 17, 361, 364], "accord": [224, 403, 406, 408, 413], "accordingli": [19, 98], "account": [13, 83, 365, 384, 386, 387, 389, 390, 391, 392, 413], "account_nam": 387, "accountutilizationbyus": 387, "accuraci": [406, 408], "achiev": [74, 362], "acm": [386, 413], "acme_high": 386, "across": [1, 6, 7, 9, 14, 19, 144, 343, 357, 361, 362, 363, 364, 365, 382, 384, 394, 398, 400, 401, 402, 409, 410], "act": [5, 364, 395], "activ": [6, 19, 141, 391, 392, 413], "actual": [2, 5, 6, 12, 361, 363, 365, 384], "ad": [1, 2, 5, 6, 7, 9, 10, 11, 17, 18, 24, 41, 42, 49, 52, 53, 54, 59, 144, 166, 179, 181, 189, 197, 204, 215, 218, 234, 243, 244, 255, 267, 281, 294, 304, 318, 321, 327, 329, 357, 358, 363, 365, 369, 378, 383, 386, 387, 388, 389, 390, 392, 403, 413], "adcroft": 395, "add": [1, 2, 5, 6, 7, 9, 13, 14, 17, 18, 21, 22, 23, 24, 26, 27, 28, 29, 30, 41, 42, 43, 52, 53, 54, 60, 77, 82, 87, 119, 120, 121, 130, 131, 134, 135, 141, 144, 153, 165, 166, 181, 186, 192, 204, 211, 218, 227, 234, 243, 247, 255, 267, 271, 281, 294, 304, 357, 358, 361, 363, 364, 365, 369, 382, 384, 385, 390, 392, 400, 401, 402, 409, 410], "add_baroclinic_channel_task": [7, 9, 358, 364], "add_cosine_bell_task": [144, 358], "add_depend": 361, "add_dome_task": 357, "add_from_packag": [9, 11, 17, 144, 361, 363, 364, 384], "add_inertial_gravity_wave_task": 358, "add_input_fil": [11, 17, 18, 41, 361, 363, 384], "add_manufactured_solution_task": 358, "add_mesh_dens": 13, "add_metadata": 385, "add_model_config_opt": [14, 25, 144, 361, 363, 384], "add_namelist_fil": [14, 25, 144, 361, 363], "add_output_fil": [18, 41, 361, 363, 384], "add_single_column_task": 358, "add_spherical_base_mesh_step": [144, 363], "add_step": [9, 363, 384], "add_streams_fil": [14, 25, 144, 361, 363], "add_task": [9, 357, 358], "add_test_cas": 384, "add_test_group": 384, "add_yaml_fil": [9, 14, 25, 144, 361, 363, 384], "addit": [2, 6, 7, 9, 18, 40, 144, 337, 338, 339, 349, 356, 357, 358, 359, 361, 363, 364, 365, 384, 401, 403, 404, 407], "addition": [343, 344, 345, 346, 347, 348, 349, 351, 352, 353, 354, 355, 356, 361, 386, 387, 388, 389, 390, 392], "address": [385, 400, 409], "adequ": 399, "adher": [364, 384], "adjac": [13, 336, 395], "adjust": [14, 141, 144, 161, 162, 163, 340, 349, 385, 404], "adjust_vari": [393, 404], "adjusted_init": 361, "adjustsshmask": 393, "admittedli": 13, "adopt": 384, "advanc": [383, 384], "advantag": [9, 14, 141, 363, 364, 384, 391], "advect": [216, 268, 269, 274, 302, 345, 346, 347, 348, 352, 354, 355, 400, 401, 402, 406, 407, 408, 409, 410, 411], "affect": [1, 6, 345, 347, 354, 355, 361, 365, 384, 403], "after": [1, 5, 6, 7, 9, 11, 17, 18, 19, 40, 42, 43, 64, 85, 106, 111, 141, 144, 319, 320, 323, 340, 345, 346, 347, 348, 354, 355, 358, 361, 363, 365, 377, 384, 385, 387, 390, 392, 401, 403, 413, 416], "ag": [297, 298, 300], "again": [5, 6, 14, 139, 144, 340, 361, 363, 365, 381, 413], "against": [5, 10, 43, 50, 124, 144, 154, 157, 343, 344, 349, 351, 352, 353, 356, 361, 380, 384, 397, 399], "aim": 384, "al": [144, 384, 395, 398, 400, 401, 402, 403, 406, 407, 408, 409, 410], "albani": [5, 136, 138, 139, 141, 358, 385, 413], "albany_support": 6, "ale_vertical_grid": 14, "algebra": 6, "algorithm": [9, 14, 144, 296, 343, 344, 351, 352, 353, 361, 384], "all": [1, 5, 6, 7, 8, 10, 11, 12, 14, 17, 18, 20, 25, 40, 47, 51, 58, 96, 97, 99, 118, 124, 141, 144, 145, 148, 149, 160, 163, 173, 184, 209, 220, 236, 245, 257, 269, 283, 296, 306, 318, 321, 327, 329, 340, 343, 352, 357, 358, 359, 361, 362, 363, 364, 365, 368, 377, 382, 383, 384, 385, 391, 393, 395, 396, 398, 399, 400, 401, 402, 403, 404, 409, 410, 412, 413, 414, 417, 419], "all_pass": [18, 124], "all_proxi": 381, "allow": [1, 2, 6, 8, 17, 18, 25, 37, 40, 47, 59, 124, 141, 144, 173, 333, 334, 361, 382, 384, 385, 391, 395, 400, 401, 402, 409, 410, 411, 419], "almost": [2, 9], "along": [11, 14, 19, 141, 332, 333, 334, 343, 349, 352, 361, 383, 384, 399], "alpha": [6, 136, 137, 138, 139, 140, 141, 142, 365, 384, 403], "alphabet": [358, 384], "alreadi": [1, 4, 5, 6, 11, 14, 52, 53, 62, 124, 141, 144, 166, 296, 323, 361, 363, 364, 365, 384, 385, 391, 395, 400, 401, 402, 409, 410, 413], "also": [1, 2, 5, 6, 7, 9, 13, 14, 19, 35, 46, 59, 124, 125, 141, 144, 318, 321, 327, 329, 332, 333, 334, 337, 340, 344, 346, 349, 351, 353, 356, 357, 358, 359, 361, 363, 364, 365, 384, 385, 391, 392, 393, 395, 399, 401, 403, 406, 407, 408, 412, 413, 417, 419], "alter": [319, 320, 361, 363, 365, 383, 384, 395, 398, 399, 400, 401, 402, 403, 404, 406, 407, 408, 409, 410, 411, 412], "altern": [5, 13, 361, 378, 413], "although": [12, 144], "alwai": [6, 7, 9, 12, 59, 141, 149, 220, 236, 257, 283, 336, 340, 358, 361, 363, 364, 365, 377, 382, 384, 385, 404], "among": [338, 339, 357, 359, 365, 384], "amount": [6, 25, 37, 40, 47, 173, 361, 394, 411], "amplitid": [258, 284], "amplitud": [399, 400, 402, 404, 406, 407, 408, 409, 410], "amplitude_width_dist": 407, "amplitude_width_frac": 407, "an": [1, 2, 3, 5, 6, 7, 9, 11, 13, 15, 17, 18, 19, 25, 35, 40, 41, 42, 43, 62, 71, 73, 74, 102, 109, 119, 121, 125, 134, 141, 146, 151, 169, 173, 222, 239, 310, 332, 333, 334, 335, 336, 338, 339, 343, 345, 346, 347, 348, 349, 352, 354, 355, 356, 357, 358, 359, 361, 362, 363, 364, 365, 381, 382, 383, 385, 387, 391, 393, 395, 399, 403, 404, 406, 410, 413, 418, 419], "analogi": 384, "analys": [205, 256, 282], "analysi": [1, 6, 9, 19, 144, 343, 352, 363, 364, 382, 383, 385, 399, 400, 401, 402, 406, 407, 408, 409, 410, 419], "analysis_depend": 363, "analyt": [344, 399, 406, 419], "analyz": [144, 146, 219, 235, 305, 307, 312, 384, 400, 401, 402, 409, 410], "angl": [258, 284, 403], "angleedg": [258, 284], "angular": [258, 284], "ani": [1, 5, 6, 7, 8, 9, 11, 13, 14, 17, 18, 19, 36, 49, 65, 111, 117, 118, 189, 197, 215, 357, 358, 359, 361, 362, 363, 364, 365, 367, 384, 385, 391, 398, 401, 411, 412, 413, 416, 417], "anl": [11, 361, 385], "anoth": [1, 2, 6, 7, 9, 10, 13, 17, 18, 19, 31, 32, 40, 41, 42, 124, 162, 245, 340, 343, 349, 352, 357, 359, 361, 363, 364, 365, 382, 384, 385, 398, 401, 404, 413, 418, 419], "antarct": 385, "antarctica": 385, "anticip": [5, 384], "antimeridian": 19, "anvil": [5, 6, 141, 361, 385, 391, 413], "anymor": 6, "anyon": 365, "anyth": 384, "anytim": 381, "anywher": [8, 12, 141, 365], "api": [7, 12, 383, 384], "app": [389, 413], "appear": [2, 141, 361, 384], "append": [25, 40, 42, 51, 100, 161, 163, 173, 182, 183, 184, 187, 190, 191, 193, 195, 198, 199, 201, 205, 209, 228, 245, 248, 250, 252, 268, 269, 272, 274, 276, 296, 361, 371, 373, 375, 403], "appli": [7, 13, 14, 67, 144, 245, 342, 357, 384, 398, 401, 404, 411, 412, 417], "applic": [361, 364, 365, 412, 417], "apport": 144, "approach": [361, 364, 365, 381, 384, 395], "appropri": [2, 5, 6, 14, 15, 26, 83, 89, 141, 144, 168, 169, 170, 172, 340, 343, 344, 349, 351, 352, 353, 356, 358, 359, 361, 365, 377, 383, 384, 385, 391, 412, 413, 417], "approxim": [13, 71, 73, 74, 78, 144, 155, 158, 164, 174, 185, 210, 212, 246, 262, 270, 288, 343, 344, 351, 352, 353, 365, 384], "ar": [2, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 25, 26, 31, 32, 36, 37, 40, 42, 46, 47, 51, 59, 63, 83, 96, 97, 100, 113, 114, 115, 118, 127, 131, 141, 144, 146, 163, 168, 173, 176, 177, 179, 184, 209, 245, 269, 292, 296, 318, 321, 324, 327, 329, 331, 333, 334, 335, 337, 340, 342, 343, 344, 345, 346, 347, 348, 349, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 377, 378, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 395, 398, 399, 400, 401, 402, 403, 404, 406, 407, 408, 409, 410, 411, 412, 413, 416, 417, 418, 419], "arang": 9, "arbitrari": 403, "arbitrarili": 411, "arch": 141, "archiv": [387, 392], "arctic": [385, 416], "area": [89, 333, 334, 384], "area_for_field": 15, "aren": [6, 11, 40, 41, 141, 361, 364, 365, 384, 418], "arg": [7, 12, 40, 96, 97, 361], "argument": [1, 5, 7, 9, 12, 14, 18, 19, 38, 40, 96, 97, 107, 125, 144, 167, 170, 343, 352, 358, 361, 363, 364, 365, 384, 412, 417, 418], "argv": 392, "arisen": 361, "armpl": 6, "around": [346, 384, 385, 398, 400, 401, 402, 407, 409, 410], "arrai": [9, 15, 72, 79, 80, 86, 125, 144, 316, 317, 319, 320, 324, 325, 331, 338, 339, 384], "arrm10to60": 395, "asai": [1, 385], "ask": 141, "aspect": [19, 127, 384], "aspir": 361, "assess": [406, 408], "assign": [351, 353, 401], "assoc": 387, "associ": [9, 13, 14, 15, 19, 144, 318, 321, 327, 329, 333, 334, 343, 345, 347, 352, 354, 355, 361, 363, 365, 382, 404], "assum": [53, 119, 130, 141, 365, 384, 392, 398, 399], "at_setup": [14, 30, 156, 165, 186, 192, 211, 227, 247, 271, 384], "atmospher": 416, "attempt": [6, 141, 383, 391], "attr": [361, 384], "attribut": [1, 8, 9, 12, 13, 14, 46, 48, 55, 104, 110, 111, 146, 292, 334, 351, 353, 384], "augment": 364, "author": 385, "auto": 3, "autodetect": 385, "autom": 383, "automat": [6, 7, 9, 12, 14, 19, 141, 144, 361, 364, 365, 384, 385, 386, 388, 389, 391, 392, 413], "autopep8": 364, "autosummari": 7, "avail": [1, 4, 5, 7, 11, 14, 19, 25, 26, 31, 32, 37, 40, 43, 44, 47, 58, 67, 95, 96, 97, 141, 144, 163, 173, 176, 177, 184, 209, 245, 269, 296, 343, 345, 346, 347, 348, 352, 354, 355, 361, 363, 364, 365, 384, 386, 387, 388, 389, 390, 392, 398, 403, 404, 413, 418], "available_cor": 175, "available_resourc": [44, 95], "availi": [406, 408], "averag": [333, 334], "avoid": [5, 361, 384], "awai": 2, "awar": [6, 7, 141, 384, 391], "awkward": 384, "ax": [127, 332], "axi": [332, 361, 384, 410], "b": [2, 5, 6, 365, 382, 384, 413], "back": [7, 384, 387, 413], "background": [364, 400, 402, 407, 409, 410], "background_salin": 407, "balanc": [19, 232, 348, 349, 361, 384, 399, 400, 402, 403, 409, 410], "bar": [63, 127], "baroclin": [7, 9, 14, 181, 182, 183, 184, 187, 190, 193, 195, 198, 199, 201, 213, 245, 296, 343, 358, 361, 384, 396, 405, 419], "baroclinic_channel": [5, 7, 9, 14, 18, 268, 274, 340, 344, 350, 357, 358, 361, 364, 384, 398, 413, 418, 419], "baroclinic_channel_rp": 9, "baroclinicchannel": 384, "barotrop": [144, 184, 205, 209, 214, 296, 344, 361, 384, 396, 398, 405, 411], "barotropic_gyr": [340, 350, 399], "base": [1, 5, 8, 13, 14, 16, 18, 20, 40, 42, 44, 51, 57, 77, 82, 84, 115, 117, 118, 123, 127, 141, 144, 153, 154, 157, 160, 161, 163, 166, 173, 175, 178, 184, 209, 221, 222, 226, 230, 238, 239, 241, 309, 310, 314, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 337, 340, 343, 344, 345, 346, 347, 348, 351, 352, 353, 354, 355, 356, 358, 360, 361, 363, 364, 365, 377, 382, 384, 385, 386, 387, 388, 389, 390, 391, 392, 395, 398, 399, 400, 401, 402, 403, 409, 410, 419], "base_mesh": [1, 5, 13, 71, 78, 146, 166, 222, 230, 239, 241, 292, 309, 310, 314, 361, 363, 384, 400, 401, 402, 409, 410], "base_mesh_step": 363, "base_mesh_vtk": 13, "base_path_to_install_or_update_conda": 365, "base_resolut": [144, 406, 408], "base_url": 11, "base_work_dir": [40, 51, 115, 361, 363], "baselin": [5, 6, 8, 10, 40, 43, 50, 117, 118, 123, 124, 144, 154, 157, 296, 343, 344, 349, 351, 352, 353, 356, 361, 362, 364, 380, 382, 384, 397, 404, 413], "baseline_dir": [5, 40, 117, 118, 123, 361], "bash": [6, 365, 381, 384, 413], "basi": [7, 384], "basic": [5, 7, 385, 387, 391, 403, 413], "basicmesh": 384, "batch": [387, 390], "bathy_descript": 385, "bathymetri": [11, 331, 337, 361, 385], "bathymetry_databas": [11, 361, 385], "batymetri": 395, "bear": 384, "becam": 384, "becaus": [1, 5, 6, 7, 11, 12, 13, 14, 40, 41, 342, 361, 363, 364, 365, 384, 387, 389, 390, 392, 413], "becom": [7, 361, 363, 384], "bedmachin": 385, "bedmachineantarctica_and_gebco_2019_0": 11, "bedmachineantarctica_v2_and_gebco_2022_0": 361, "been": [1, 5, 6, 40, 43, 48, 52, 53, 55, 106, 118, 123, 136, 138, 139, 141, 144, 153, 166, 256, 265, 282, 305, 307, 312, 323, 340, 358, 361, 363, 364, 365, 377, 381, 384, 385, 386, 387, 388, 389, 390, 391, 392, 395, 397, 398, 413], "befor": [5, 6, 8, 9, 14, 17, 19, 46, 118, 123, 141, 144, 361, 363, 364, 365, 381, 384, 387, 390, 392, 395, 400, 401, 402, 403, 409, 410, 413], "begeman": 1, "begin": [6, 7, 18, 343, 361, 365, 378, 383, 384, 391, 398, 401, 404, 411], "beginn": [383, 384], "behav": 13, "behavior": [9, 14, 114, 144, 361, 362, 365, 384], "behind": [1, 364], "being": [14, 30, 40, 51, 113, 115, 118, 124, 141, 144, 156, 165, 169, 186, 192, 211, 227, 247, 271, 332, 349, 361, 363, 364, 384, 395], "bell": [19, 144, 216, 218, 219, 221, 222, 224, 225, 228, 230, 238, 241, 310, 314, 346, 363, 384, 396, 397, 400, 402, 403, 405, 409, 410, 412, 417], "belong": [1, 10, 11, 12, 14, 17, 25, 37, 40, 47, 51, 71, 78, 84, 100, 115, 144, 146, 154, 157, 159, 161, 163, 167, 173, 182, 183, 184, 187, 190, 191, 193, 195, 198, 199, 201, 203, 205, 209, 213, 216, 219, 221, 222, 225, 226, 228, 230, 232, 235, 238, 239, 241, 244, 245, 248, 250, 252, 254, 256, 261, 263, 265, 268, 269, 272, 274, 276, 278, 280, 282, 287, 289, 292, 295, 296, 297, 298, 300, 302, 305, 307, 309, 310, 312, 314, 333, 334, 357, 358, 361, 363, 364, 370, 371, 373, 374, 375, 384, 418], "below": [1, 5, 6, 14, 19, 25, 37, 40, 47, 96, 97, 141, 144, 163, 173, 184, 209, 245, 269, 296, 337, 340, 346, 357, 359, 361, 363, 365, 384, 385, 391, 395, 400, 401, 402, 403, 404, 406, 408, 409, 410, 411, 413], "benefit": [362, 383], "besid": [338, 339], "best": [6, 17, 141, 361, 365], "beta": [6, 399], "better": [14, 17, 141, 413], "between": [1, 2, 5, 6, 7, 8, 12, 13, 14, 17, 18, 25, 31, 32, 39, 42, 50, 72, 79, 80, 83, 86, 100, 106, 124, 144, 171, 173, 176, 177, 190, 199, 225, 228, 250, 258, 284, 291, 318, 321, 327, 329, 332, 333, 334, 337, 339, 344, 345, 346, 347, 348, 354, 355, 358, 359, 361, 363, 364, 370, 371, 391, 393, 395, 398, 399, 400, 403, 404, 406, 407, 408], "bilinear": [17, 100, 332, 401, 412, 417], "bilinearli": 337, "bin": [141, 365, 392, 413], "biogeochemistri": 364, "bishnu": [406, 408], "bit": [14, 141, 346, 364, 382, 384, 398, 401, 404, 413], "black": [127, 332], "blank": [64, 365], "blob": 346, "block": [2, 363], "blue": [359, 386, 413], "bodi": 401, "bold": [1, 363], "bonu": 384, "bool": [14, 25, 26, 30, 40, 42, 50, 51, 52, 57, 61, 62, 63, 67, 113, 114, 118, 123, 124, 125, 126, 127, 131, 156, 165, 166, 173, 186, 192, 211, 216, 221, 225, 226, 227, 232, 244, 245, 247, 271, 296, 298, 300, 302, 307, 312, 331, 332, 334, 384], "boolean": [9, 127, 324], "bootstrap": 6, "bot": [364, 395], "both": [5, 6, 7, 8, 13, 14, 25, 30, 127, 141, 144, 146, 147, 149, 154, 157, 165, 179, 186, 192, 211, 216, 219, 220, 221, 225, 226, 227, 232, 235, 236, 238, 247, 254, 256, 257, 261, 271, 280, 282, 283, 287, 292, 302, 305, 307, 309, 312, 332, 343, 346, 349, 357, 358, 360, 361, 365, 383, 384, 385, 397, 399, 401, 404, 406, 408, 411, 412], "bottom": [318, 319, 320, 321, 324, 325, 326, 327, 329, 342, 384, 385, 395, 398, 399, 400, 401, 402, 403, 404, 406, 407, 408, 409, 410, 411, 412], "bottom_depth": [331, 337, 361, 384, 385, 395, 398, 399, 400, 401, 402, 403, 404, 406, 407, 408, 409, 410, 411, 412], "bottom_drag": [144, 384], "bottom_salin": 404, "bottom_temperatur": [361, 384, 398, 407], "bottomdepth": [19, 144, 318, 319, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 361, 384, 395, 403], "bound": [19, 337, 351, 353], "boundari": [332, 337, 383, 398, 399, 404, 407, 419], "boundary_condit": [205, 206, 207], "bp": 387, "branch": [2, 5, 141, 340, 358, 361, 365, 377, 383, 384, 413], "break": [384, 398], "brief": [6, 7, 384], "briefli": 384, "bring": [9, 144, 384, 393], "broadcast": [361, 384], "broader": 358, "broadli": [357, 358, 364], "broken": [14, 361, 364], "brows": 384, "browser": 392, "bsnc6lt": 141, "btr_dt": [14, 144, 184, 296, 361, 384, 398], "btr_dt_per_km": [14, 144, 384, 393, 398, 404], "bug": 362, "build": [5, 6, 10, 13, 14, 75, 80, 136, 137, 138, 139, 140, 142, 331, 340, 358, 363, 364, 377, 381, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392], "build_": 6, "build_cell_width_lat_lon": [13, 78], "build_mesh": 13, "build_planar_mesh": 13, "buildabl": 141, "built": [5, 6, 14, 118, 123, 141, 340, 358, 365, 377, 383, 385, 391, 413], "bulk": 411, "bump": 6, "bunch": 384, "c": [5, 6, 118, 141, 361, 365, 386, 387, 388, 389, 390, 391, 392, 397, 400, 402, 407, 409, 410, 413, 418], "cach": [6, 20, 25, 40, 42, 117, 118, 173, 383, 385, 391, 397, 413, 418], "cached_fil": [5, 20, 361], "cached_step": 117, "calandrini": 6, "calcul": [15, 124, 351, 361, 363], "calendar": 387, "call": [5, 6, 8, 9, 10, 11, 12, 13, 14, 17, 18, 19, 25, 35, 40, 46, 51, 52, 53, 70, 106, 113, 127, 141, 144, 333, 334, 335, 338, 339, 343, 344, 351, 352, 353, 356, 358, 361, 362, 363, 364, 365, 381, 382, 383, 384, 385, 391, 392, 413], "calledprocesserror": 381, "camelcas": 384, "campin": 395, "can": [1, 2, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 17, 18, 19, 37, 40, 41, 42, 43, 47, 51, 60, 63, 75, 78, 80, 101, 105, 106, 108, 117, 118, 123, 127, 136, 137, 138, 139, 140, 141, 142, 144, 244, 331, 333, 334, 337, 340, 343, 344, 351, 352, 353, 357, 358, 359, 361, 362, 363, 364, 365, 377, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 397, 398, 400, 401, 402, 403, 404, 408, 409, 410, 413, 418, 419], "cancel": 391, "candid": [333, 334], "cannot": [6, 18, 384], "cap": 384, "capabl": [1, 2, 6, 17, 141, 244, 346, 349, 361, 364, 383, 384, 391, 401, 413], "capit": [144, 384], "captur": [12, 407], "care": [6, 11, 13, 144, 357, 361, 365, 384], "carolyn": 1, "cartesian": [334, 336, 410], "cartopi": 381, "case": [5, 6, 7, 8, 9, 11, 14, 18, 19, 28, 29, 51, 52, 57, 66, 95, 96, 97, 119, 124, 141, 144, 145, 152, 159, 161, 183, 190, 191, 193, 194, 195, 196, 198, 203, 205, 212, 217, 218, 219, 221, 222, 225, 226, 230, 231, 233, 235, 238, 239, 241, 242, 244, 253, 254, 256, 258, 261, 263, 264, 265, 266, 268, 269, 272, 273, 274, 275, 277, 278, 279, 280, 282, 284, 287, 289, 290, 292, 293, 295, 296, 297, 298, 299, 301, 302, 303, 304, 305, 307, 308, 309, 310, 312, 313, 314, 315, 316, 333, 334, 343, 344, 345, 346, 347, 349, 351, 352, 353, 354, 355, 356, 357, 358, 359, 361, 363, 365, 368, 370, 373, 374, 376, 382, 383, 384, 391, 392, 395, 398, 399, 400, 401, 402, 403, 404, 406, 407, 408, 409, 410, 411, 412, 413, 417, 418], "case_nam": [302, 305, 307, 309, 310, 312], "case_output": [8, 12], "cat": 384, "catch": [141, 362, 365], "categori": [7, 144, 358, 359, 360, 383, 419], "caus": [365, 387, 392, 395], "caution": 365, "caveat": 8, "caviti": [144, 349, 364, 384, 385, 393, 395, 404], "cbegeman": 384, "cc": [141, 390], "cd": [4, 6, 340, 365, 377, 384, 387, 413], "cdir": [392, 413], "cell": [13, 14, 15, 19, 71, 72, 73, 74, 78, 79, 80, 83, 86, 89, 100, 102, 109, 127, 144, 155, 158, 164, 173, 174, 185, 207, 210, 246, 258, 260, 262, 270, 284, 286, 288, 318, 319, 320, 321, 324, 327, 329, 331, 332, 333, 334, 336, 337, 338, 339, 343, 344, 351, 352, 353, 357, 378, 395, 398, 399, 400, 401, 402, 404, 406, 407, 408, 409, 410, 411, 412, 416], "cell_boundary_color": 332, "cell_count": [144, 155, 158, 164, 174, 185, 210, 246, 262, 270, 288, 384], "cell_mask": [19, 127], "cell_patch": 19, "cell_patch_mask": 19, "cell_width": [13, 71, 72, 73, 74, 78, 79, 80, 86], "cell_width_colormap": 13, "cell_width_filenam": [13, 86], "cell_width_image_filenam": 13, "cellindic": 337, "cellmask": [144, 318, 321, 324, 327, 329, 384], "cellwidthglob": 13, "cellwidthvslatlon": [5, 13], "celsiu": [398, 404], "center": [13, 19, 83, 126, 224, 258, 284, 332, 333, 334, 335, 336, 357, 384, 395, 398, 399, 407], "central": [19, 401], "central_longitud": [19, 126], "centric": 2, "certain": [9, 18, 59, 141, 361, 365, 385, 412, 417], "certif": 385, "cf": [392, 413], "cfg": [9, 11, 17, 53, 144, 358, 363, 364, 384, 385, 400, 402, 409, 410, 413], "cfl": 399, "ch": 387, "challeng": 2, "chang": [5, 6, 8, 11, 17, 63, 78, 111, 112, 144, 153, 340, 358, 361, 362, 363, 364, 365, 377, 382, 384, 385, 387, 392, 393, 395, 398, 399, 400, 401, 402, 404, 406, 407, 408, 409, 410, 413, 418], "channel": [7, 9, 14, 181, 182, 183, 184, 187, 190, 193, 195, 198, 199, 201, 213, 245, 296, 343, 358, 361, 381, 384, 396, 405, 419], "char": 90, "charact": 364, "character": [19, 400, 402, 407, 409, 410], "characterist": [7, 395, 412, 417], "check": [5, 6, 18, 124, 346, 349, 361, 365, 384, 385, 387, 392, 399, 413, 418], "check_cal": [12, 361], "check_siz": 385, "checker": 365, "checkout": [6, 365, 384], "chicoma": [141, 391, 413], "child": [45, 144, 208, 358, 361, 363, 364], "children": 120, "chkhome": 387, "choic": [384, 400, 401, 402, 403, 409, 410], "choos": [5, 361, 364, 365, 384, 386, 387, 388, 389, 392, 419], "chosen": [403, 411], "chrysali": [5, 6, 141, 361, 384, 385, 391, 413], "cime": 365, "circl": 334, "circul": [399, 401], "circular_shelf": 413, "circumst": [14, 18, 40, 41, 361, 384], "cism": 357, "citat": 7, "ckdtree": [333, 334, 335], "clang": [141, 365], "clariti": [14, 361], "class": [1, 9, 11, 13, 14, 17, 18, 19, 20, 25, 35, 40, 45, 51, 59, 70, 71, 78, 84, 100, 129, 144, 145, 146, 154, 157, 159, 160, 161, 163, 167, 173, 182, 183, 184, 187, 190, 191, 193, 195, 198, 199, 201, 203, 205, 208, 209, 213, 216, 219, 221, 222, 225, 226, 228, 230, 232, 235, 238, 239, 241, 244, 245, 248, 250, 252, 254, 256, 258, 261, 263, 265, 268, 269, 272, 274, 276, 278, 280, 282, 284, 287, 289, 292, 295, 296, 297, 298, 300, 302, 305, 307, 309, 310, 312, 314, 340, 343, 344, 345, 346, 347, 348, 349, 351, 352, 353, 354, 355, 356, 358, 359, 361, 363, 368, 370, 371, 373, 374, 375, 377, 380, 384, 393], "classmethod": 130, "clean": [2, 4, 5, 6, 64, 118, 123, 361, 363, 365], "clear": [1, 2, 144, 364, 384], "clearli": 144, "cli115": 390, "climat": [70, 386, 387, 388, 391, 413], "climatologi": 395, "clobber_mod": [14, 144, 384], "clock": 413, "clockwis": 399, "clone": [5, 6, 141, 340, 359, 365, 377, 384, 413], "close": [1, 6, 74, 141, 349, 383, 400, 401, 402, 409, 410], "closer": 363, "closest": [15, 90, 144, 339, 357], "clu": 364, "clumsi": 364, "cluster": 387, "clutter": 357, "cmake": 365, "cmap": [19, 127, 332, 361, 384], "cmap_scal": 127, "cmap_set_ov": 127, "cmap_set_und": 127, "cmap_titl": 127, "cmo": [19, 361, 384, 400, 402, 403, 409, 410], "cmocean": [19, 361, 384], "co": [399, 400, 401, 402, 403, 406, 408, 409], "coars": [346, 401], "coarser": [385, 395, 400, 401, 402, 403, 409, 410], "coarsest": [384, 385], "cobalt": [141, 386, 387, 388, 389, 390, 391, 392], "code": [2, 5, 7, 9, 12, 14, 40, 144, 340, 357, 358, 361, 362, 363, 367, 377, 382, 383, 385, 394, 398, 404, 411, 413], "collaps": 395, "collect": [11, 103, 145, 358, 360, 368, 382, 384], "colon": 7, "color": [19, 126, 127, 332], "color_start_and_end": 332, "colorbar": [19, 125, 126, 127, 332, 345, 346, 347, 354, 355, 400, 401, 402, 403, 409, 410], "colorbar_label": [125, 126, 332], "colorbar_limit": [19, 126, 345, 346, 347, 354, 355, 400, 402, 403, 409, 410], "colorbar_tick": [19, 125, 401], "colormap": [19, 125, 126, 127, 332, 345, 346, 347, 348, 354, 355, 384, 400, 401, 402, 403, 409, 410], "colormap_nam": [19, 125, 126, 345, 346, 347, 354, 355, 400, 401, 402, 403, 409, 410], "colormap_sect": [19, 125, 126], "column": [19, 294, 295, 297, 298, 300, 348, 356, 365, 369, 370, 371, 373, 374, 375, 377, 378, 380, 395, 396, 403, 404, 405, 413, 414, 415], "com": [5, 6, 7, 14, 62, 364, 365, 383, 384, 385, 413, 414], "combin": [6, 40, 42, 51, 59, 66, 99, 129, 160, 163, 361, 362, 363, 381, 384, 385, 413], "come": [42, 141, 361, 365, 384, 386, 387, 388, 389, 390, 391, 392, 396], "comfort": [364, 384], "comma": [9, 400, 401, 402, 409, 410], "command": [6, 10, 16, 38, 40, 46, 96, 97, 99, 107, 141, 361, 364, 365, 382, 383, 384, 387, 391, 392, 413], "command_line_arg": 96, "commandlin": 361, "comment": [7, 362, 385], "commit": [364, 365], "common": [7, 12, 14, 46, 51, 141, 343, 344, 345, 346, 347, 348, 349, 351, 352, 353, 354, 355, 356, 357, 361, 362, 363, 364, 381, 382, 384, 385, 391, 392, 393, 412, 413, 417, 418, 419], "commonli": [361, 382], "commun": 384, "compact": [18, 384], "compar": [5, 10, 18, 40, 43, 50, 117, 118, 123, 124, 144, 199, 200, 228, 229, 250, 251, 296, 345, 346, 347, 348, 354, 355, 356, 361, 362, 363, 364, 365, 371, 372, 380, 382, 384, 397, 398, 399, 404, 407, 413, 416, 418], "compare_vari": [18, 384], "comparison": [5, 8, 18, 40, 50, 124, 361, 384, 385, 399, 404, 409], "comparisonantarcticstereoresolut": 385, "comparisonantarcticstereowidth": 385, "comparisonarcticstereoresolut": 385, "comparisonarcticstereowidth": 385, "comparisonlatresolut": 385, "comparisonlonresolut": 385, "compass": [1, 5, 6, 361, 364, 382, 384], "compat": [340, 365, 377, 381, 383, 404], "compi": [141, 389, 413], "compil": [4, 5, 6, 14, 136, 137, 138, 139, 140, 141, 142, 381, 383, 384, 386, 387, 388, 389, 390, 391, 392, 413], "compiler_gnu": 141, "compiler_intel": 141, "complet": [1, 5, 8, 27, 28, 29, 111, 384, 413], "complex": [13, 79, 363, 364, 384], "compli": 365, "complianc": 365, "complic": [14, 144, 364, 365, 384], "compon": [1, 5, 6, 7, 8, 9, 10, 13, 15, 17, 25, 40, 42, 51, 52, 54, 59, 66, 69, 71, 78, 84, 99, 100, 115, 117, 123, 129, 140, 141, 142, 146, 154, 157, 159, 161, 163, 166, 167, 173, 181, 182, 183, 184, 187, 190, 191, 193, 195, 198, 199, 201, 203, 204, 205, 209, 213, 216, 218, 219, 221, 222, 225, 226, 228, 230, 232, 234, 235, 238, 239, 241, 243, 244, 245, 248, 250, 252, 254, 255, 256, 261, 263, 265, 267, 268, 269, 272, 274, 276, 278, 280, 281, 282, 287, 289, 292, 294, 295, 296, 297, 298, 300, 302, 304, 305, 307, 309, 310, 312, 314, 357, 359, 360, 361, 362, 363, 367, 368, 369, 370, 371, 373, 374, 375, 378, 382, 383, 384, 385, 391, 394, 397, 418, 419], "component_nam": 115, "component_path": [5, 9, 118, 123, 340, 358, 377, 385, 413], "compris": 344, "comput": [1, 7, 13, 14, 15, 83, 141, 144, 147, 148, 151, 155, 158, 164, 173, 174, 180, 185, 206, 210, 212, 224, 246, 258, 262, 270, 284, 288, 324, 325, 326, 337, 343, 344, 345, 346, 347, 348, 349, 351, 352, 353, 354, 355, 356, 361, 365, 387, 388, 391, 392, 398, 400, 401, 402, 403, 406, 408, 409, 410, 413], "compute_cell_count": [7, 144, 343, 344, 351, 352, 353, 384], "compute_error": 15, "compute_land_ice_pressure_and_draft": 7, "compute_planar_hex_nx_ni": [13, 361, 384], "compute_rp": [144, 384], "compute_transect": [144, 332, 349], "compyf": 389, "compymcnodefac": [141, 391], "concept": [359, 364, 384, 419], "conceptu": [357, 364, 404], "concret": 141, "conda": [4, 5, 16, 99, 136, 138, 139, 141, 340, 358, 364, 377, 383, 384, 385, 386, 387, 388, 389, 390, 392], "conda_bas": 6, "conda_env": [365, 413], "conda_path": [141, 365], "condit": [1, 7, 40, 144, 149, 160, 163, 169, 183, 187, 213, 214, 222, 239, 244, 245, 248, 252, 257, 261, 263, 272, 283, 287, 289, 295, 297, 298, 300, 310, 343, 344, 345, 346, 347, 348, 349, 351, 352, 353, 354, 355, 356, 357, 361, 362, 363, 364, 374, 380, 382, 383, 385, 393, 397, 418, 419], "condo": [386, 413], "config": [5, 7, 8, 10, 11, 12, 13, 17, 19, 21, 25, 26, 29, 30, 31, 32, 33, 40, 41, 42, 48, 51, 53, 55, 61, 65, 66, 77, 79, 82, 95, 96, 97, 98, 99, 115, 117, 118, 123, 125, 126, 129, 130, 131, 132, 134, 135, 153, 154, 156, 157, 160, 165, 173, 176, 177, 179, 186, 192, 193, 207, 211, 212, 216, 217, 225, 227, 232, 233, 244, 247, 254, 258, 271, 274, 280, 284, 302, 303, 316, 318, 319, 320, 321, 322, 323, 327, 328, 329, 330, 340, 343, 344, 345, 346, 347, 348, 349, 351, 352, 353, 354, 355, 356, 357, 361, 362, 363, 364, 365, 377, 378, 381, 383, 395, 413, 419], "config_atmospheric_forcing_typ": 378, "config_block_decomp_file_prefix": [14, 384], "config_bottom_drag_mod": 144, "config_btr_dt": [14, 144, 384], "config_cvmix_background_diffus": [14, 384], "config_cvmix_background_viscos": [14, 384], "config_disable_vel_hmix": 144, "config_dt": [14, 144, 384], "config_fil": [5, 9, 118, 123], "config_filenam": [9, 40, 51, 160, 361, 363], "config_filepath": 115, "config_forcing_cycle_dur": 378, "config_forcing_cycle_start": 378, "config_forcing_precipitation_unit": 378, "config_forcing_sst_typ": 378, "config_forcing_start_tim": 378, "config_implicit_bottom_drag_coeff": [14, 384], "config_implicit_bottom_drag_typ": 144, "config_implicit_constant_bottom_drag_coeff": 144, "config_include_pond_freshwater_feedback": 378, "config_initial_ice_area": 378, "config_initial_ice_volum": 378, "config_machin": 6, "config_map": 173, "config_model": [25, 26, 31, 32, 144, 154, 157, 176, 177], "config_mom_del2": [14, 144, 343, 352, 361, 384], "config_ocean_run_mod": 14, "config_pio_num_iotask": 14, "config_pio_strid": 14, "config_run_dur": [14, 144, 363, 384], "config_time_integr": [14, 144], "config_update_ocean_flux": 378, "config_use_cvmix_background": 14, "config_use_manufactured_solut": 144, "config_use_mom_del2": [14, 384], "config_vert_coord_mov": 14, "config_write_output_on_startup": [14, 384], "configpars": [9, 96, 97], "configur": [2, 5, 6, 11, 14, 17, 37, 40, 47, 51, 61, 66, 95, 96, 97, 98, 99, 118, 123, 141, 144, 160, 163, 232, 244, 302, 316, 318, 319, 320, 321, 322, 323, 327, 328, 329, 330, 361, 364, 365, 383, 384, 385, 387, 390, 391, 392, 395, 404, 406, 408, 412, 413, 417, 419], "configure_polaris_env": [6, 141, 365, 381, 384, 390], "confluenc": 386, "confus": [5, 14, 364, 365, 384], "connect": [336, 384, 392], "connection_fil": 392, "conserv": [100, 401, 412, 417], "consid": 364, "consider": [13, 318, 321, 327, 329, 342, 378], "consist": [19, 25, 39, 141, 162, 173, 340, 365, 384, 385, 398, 407], "constant": [71, 78, 79, 144, 332, 333, 334, 342, 355, 384, 398, 399, 400, 401, 402, 403, 404, 406, 407, 409, 410, 411, 412, 417], "constrain": [44, 155, 158, 164, 174, 185, 210, 246, 262, 270, 288, 343, 344, 351, 352, 353, 361, 384], "constrain_resourc": 384, "constraint": [6, 65, 392, 413], "construct": [9, 14, 144, 145, 159, 316, 318, 319, 320, 321, 322, 323, 327, 328, 329, 330, 336, 337, 342, 356, 358, 363, 368, 384, 398, 403], "constructor": [1, 9, 14, 144, 343, 351, 352, 353, 357, 384], "consult": [342, 384], "consum": [8, 361, 363, 384, 418], "contact": 385, "contain": [1, 2, 5, 6, 7, 8, 9, 17, 19, 20, 27, 28, 29, 44, 58, 92, 95, 101, 102, 103, 104, 108, 109, 110, 119, 126, 127, 129, 144, 146, 154, 157, 159, 160, 163, 168, 169, 172, 180, 207, 318, 321, 322, 323, 327, 328, 329, 330, 331, 333, 334, 337, 358, 359, 360, 361, 364, 365, 367, 377, 378, 382, 384, 385, 391, 396, 412, 413, 414, 417], "content": [9, 14, 118, 119, 121, 123, 135, 144, 357, 359, 361, 364, 380, 384, 413, 416], "context": [362, 384], "contin": [19, 125, 126], "continu": [2, 6, 361, 384], "contrast": 8, "contribut": 364, "contributor": [1, 2], "control": [144, 345, 346, 347, 348, 354, 355, 361, 385, 398, 400, 401, 402, 409, 410, 411, 413], "conv_thresh": [148, 306, 406, 408], "conveni": [5, 9, 17, 318, 321, 327, 329, 357, 361, 384, 385, 400, 401, 402, 409, 410, 413, 419], "convent": [1, 144, 361, 365, 384], "converg": [19, 203, 204, 216, 220, 225, 232, 236, 237, 254, 255, 257, 280, 281, 283, 306, 345, 346, 347, 348, 351, 353, 354, 355, 359, 362, 383, 384, 400, 401, 402, 403, 406, 409, 410, 412, 417], "convergence_": [345, 347, 354, 355, 401], "convergence_both": [401, 403, 406, 408], "convergence_eval_tim": [144, 400, 401, 402, 403, 409, 410], "convergence_forward": [144, 345, 346, 347, 354, 355, 401, 403], "convergence_h": 348, "convergence_normalveloc": 348, "convergence_spac": [401, 403, 406, 408], "convergence_thresh": [144, 401], "convergence_thresh_h": 403, "convergence_thresh_normalveloc": 403, "convergence_thresh_tracer1": [400, 402, 409, 410], "convergence_thresh_tracer2": [400, 402, 409, 410], "convergence_thresh_tracer3": [400, 402, 409, 410], "convergence_tim": [401, 403, 406, 408], "convergence_tracer1": 346, "convergence_var": [144, 146], "convergenceanalysi": [144, 345, 346, 347, 348, 351, 353, 354, 355], "convergenceforward": [144, 351, 353], "convers": [361, 384], "convert": [5, 9, 13, 14, 144, 179, 361, 384], "convert_to_vtk": 13, "cooler": 398, "coord_typ": [349, 384, 395, 398, 399, 400, 401, 402, 404, 406, 407, 408, 409, 410, 411, 412], "coordin": [101, 103, 104, 108, 110, 125, 127, 258, 284, 318, 321, 322, 323, 327, 328, 329, 330, 331, 333, 334, 336, 337, 349, 394, 396, 398, 399, 400, 401, 402, 404, 406, 407, 408, 409, 410, 411, 412, 416], "copi": [5, 6, 8, 42, 57, 118, 123, 384, 387, 413], "copy_execut": [5, 118, 123, 413], "core": [5, 7, 8, 14, 25, 37, 39, 40, 42, 44, 46, 47, 66, 95, 96, 97, 123, 141, 144, 145, 173, 182, 183, 295, 297, 343, 352, 356, 357, 358, 361, 362, 363, 364, 378, 382, 384, 385, 386, 387, 388, 389, 390, 391, 392, 413, 418], "core_path": 385, "cores_per_nod": [44, 95, 98, 141, 385, 386, 387, 388, 389, 390, 391, 392, 413], "coriloi": 406, "corioli": [258, 351, 353, 384, 398, 399, 400, 401, 402, 403, 404, 407, 408, 409, 410, 411], "coriolis_paramet": [361, 384, 398, 404, 406, 407, 408, 411], "corner": 337, "correct": [141, 365], "correctli": 6, "correl": [345, 396, 405], "correlated_tracer_2d": 400, "correlated_tracers_2d": [304, 340, 350, 400], "correspond": [2, 6, 7, 17, 18, 124, 141, 144, 146, 292, 336, 340, 349, 361, 365, 377, 398, 406, 408], "cos_bell_dir": 363, "cosin": [19, 144, 216, 218, 219, 221, 222, 224, 225, 228, 230, 238, 241, 310, 314, 346, 363, 384, 396, 397, 400, 402, 403, 405, 409, 410, 412, 417], "cosine_bel": [1, 5, 14, 144, 306, 340, 350, 358, 363, 384, 401, 410, 412, 417, 418], "cosine_bell_cached_init": [413, 418], "cosine_bell_viz": [17, 19, 346, 401, 412, 417], "cosine_bells_amplitud": [400, 402, 409, 410], "cosine_bells_background": [400, 402, 409, 410], "cosine_bells_radiu": [400, 402, 409, 410], "cosinebel": [346, 363], "could": [1, 14, 17, 19, 141, 361, 362, 363, 364, 365, 384, 401], "count": [11, 362, 382], "counter": 384, "counterclockwis": 336, "counterpart": [31, 32, 33], "coupl": [6, 381, 383], "cover": [17, 378, 384], "coverag": 362, "cp": 384, "cpu": [8, 141, 361, 384, 390, 413], "cpu_gnu_mpich": [137, 142], "cpu_intel_mpich": 142, "cpus_per_nod": 98, "cpus_per_task": [8, 14, 40, 44, 47, 96, 97, 361], "crai": [137, 140, 141, 142, 390, 392], "cray_compil": [390, 392], "crayclang": [141, 390], "crayclanggpu": 390, "creat": [5, 8, 9, 11, 12, 13, 14, 16, 17, 18, 19, 20, 25, 40, 42, 46, 51, 62, 71, 72, 78, 79, 84, 100, 107, 117, 118, 123, 129, 141, 144, 146, 154, 157, 160, 161, 163, 166, 167, 173, 182, 183, 184, 187, 190, 191, 193, 195, 198, 199, 201, 203, 205, 209, 213, 214, 216, 219, 221, 222, 225, 226, 228, 230, 232, 235, 238, 239, 241, 244, 245, 248, 250, 252, 254, 256, 258, 261, 263, 265, 268, 269, 272, 274, 276, 278, 280, 282, 284, 287, 289, 292, 295, 296, 297, 298, 300, 302, 305, 307, 309, 310, 312, 314, 318, 321, 327, 329, 345, 346, 347, 348, 349, 354, 355, 356, 357, 361, 362, 363, 364, 370, 371, 373, 374, 375, 381, 382, 383, 385, 386, 387, 388, 389, 390, 391, 392, 400, 401, 402, 409, 410, 413, 418], "create_landice_grid_from_generic_mpas_grid": 12, "create_polaris_load_script": 413, "creation": [13, 361, 385], "creation_d": 385, "crest": [361, 384, 398], "critic": [18, 384], "cross": [252, 278, 384], "csh": 365, "csv": [144, 345, 346, 347, 348, 354, 355, 384], "ctest": 365, "cull": [14, 343, 344, 349, 351, 352, 353, 361, 384], "culled_graph": [361, 384], "culled_mesh": [361, 384], "culler": 14, "curl": 141, "current": [1, 2, 5, 6, 8, 11, 18, 25, 37, 40, 47, 124, 141, 144, 173, 340, 344, 346, 356, 358, 361, 364, 365, 367, 377, 378, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 395, 398, 399, 404, 408, 411, 413, 418, 419], "currentmodul": 7, "curv": 364, "curvatur": [333, 334], "custom": [5, 6, 8, 13, 17, 19, 59, 61, 118, 123, 340, 358, 365, 377, 385, 392, 413], "customize_config_pars": 385, "cvmix": 384, "cxx": 141, "cylind": [400, 402, 409, 410], "d": [5, 19, 127, 168, 169, 170, 172, 243, 248, 258, 284, 318, 321, 322, 323, 327, 328, 329, 330, 342, 345, 347, 354, 355, 361, 384, 396, 404, 405, 411], "d_": 14, "da": [19, 126, 338, 339], "da_cel": 338, "da_nod": 339, "dai": [144, 179, 193, 274, 343, 345, 346, 347, 348, 349, 352, 354, 355, 356, 380, 384, 398, 400, 401, 402, 403, 404, 407, 409, 410, 411, 416], "darren": 383, "dask": 385, "data": [5, 10, 13, 17, 18, 19, 26, 40, 41, 42, 106, 119, 121, 122, 125, 126, 127, 129, 135, 141, 144, 318, 321, 322, 323, 327, 328, 329, 330, 331, 333, 334, 336, 338, 339, 361, 365, 383, 385, 386, 387, 388, 389, 390, 391, 413, 418, 419], "data_arrai": 125, "dataarrai": [7, 89, 126, 127, 149, 150, 220, 236, 237, 257, 258, 259, 260, 283, 284, 285, 286, 319, 320, 324, 325, 326, 331, 332, 333, 334, 337, 338, 339], "databas": [5, 6, 8, 11, 17, 20, 25, 40, 42, 63, 173, 361, 391], "database_compon": [42, 361], "database_path": 11, "database_root": [11, 141, 361, 385, 386, 387, 388, 389, 390, 391, 392, 413], "dataset": [17, 89, 90, 124, 127, 144, 168, 169, 170, 172, 206, 207, 258, 284, 318, 321, 322, 323, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 361, 384], "date": [1, 2, 5, 57, 340, 359, 365, 377, 385], "date_str": [5, 57], "datestamp": 57, "daunt": 384, "davi": [1, 385], "dayssincestart": 384, "dayssincestartofsim": 384, "dc": [13, 357, 361, 384], "dcellboundari": 337, "dd": 2, "dddd_hh": [144, 179], "debug": [1, 8, 136, 137, 138, 139, 140, 141, 142, 144, 365, 384, 387, 388, 392, 400, 409], "debug_tracers_1": 401, "debugtrac": [400, 402, 409, 410], "decid": [144, 384], "declar": [2, 7], "decomp": [5, 358, 384, 413, 418], "decomposit": [14, 51, 182, 382, 384], "decomposition_test": [70, 357, 413], "decompositiontest": [70, 357], "deem": 1, "deep": 403, "deepest": 395, "def": [2, 7, 9, 11, 12, 14, 15, 17, 18, 19, 144, 357, 358, 361, 363, 364, 384], "default": [5, 7, 9, 11, 14, 15, 18, 19, 25, 41, 42, 51, 57, 66, 79, 84, 90, 91, 99, 100, 101, 105, 108, 114, 118, 120, 123, 127, 136, 138, 139, 141, 144, 148, 149, 159, 184, 220, 236, 257, 269, 283, 340, 345, 346, 347, 348, 351, 353, 354, 355, 356, 357, 358, 361, 363, 365, 377, 378, 383, 385, 386, 387, 388, 389, 390, 391, 392, 393, 395, 400, 401, 402, 409, 410, 411, 412, 413, 417, 419], "default_input": [340, 358, 377, 384, 385], "default_tidal_forc": 349, "defaults_filenam": 91, "defin": [6, 7, 8, 9, 13, 14, 16, 19, 40, 51, 78, 104, 110, 117, 118, 123, 141, 144, 204, 218, 234, 255, 281, 304, 333, 334, 335, 336, 337, 338, 339, 340, 342, 343, 344, 345, 346, 347, 348, 349, 351, 352, 353, 354, 355, 356, 357, 358, 359, 361, 362, 363, 364, 365, 369, 377, 378, 380, 382, 383, 385, 391, 393, 395, 398, 401, 407, 410, 411, 418, 419], "definit": [6, 14, 384], "deform": [345, 354, 409], "degc": 411, "degre": [19, 72, 79, 80, 86, 105, 331, 334, 336, 385, 398, 404, 407], "del2": [399, 407], "delet": [5, 118, 123, 364, 365, 381, 413], "delta": [395, 398, 403, 411], "demonstr": [363, 384], "den_l2": 15, "dens": 364, "densiti": [7, 13, 144, 384, 399], "dep": 365, "depend": [5, 14, 17, 19, 40, 41, 49, 111, 112, 141, 144, 146, 154, 157, 189, 197, 215, 219, 235, 256, 282, 292, 305, 307, 312, 363, 365, 382, 383, 384, 385, 391, 392, 395, 400, 401, 402, 404, 409, 410, 413, 419], "dependencies_dict": [146, 292], "deploi": [141, 365, 383, 386, 387, 388, 389, 390, 391, 392], "deploy": [6, 365, 386, 387, 388, 389, 390, 392], "deploy_tmp": 381, "depress": [384, 395, 404], "depth": [127, 144, 316, 317, 318, 319, 320, 321, 324, 325, 326, 327, 329, 331, 332, 337, 384, 385, 395, 398, 399, 400, 401, 402, 403, 404, 406, 407, 408, 409, 410, 411, 412], "deriv": [149, 160, 163, 257, 283], "descend": [14, 17, 144, 345, 346, 347, 348, 351, 353, 354, 355, 357, 358, 361, 363, 364, 384], "describ": [5, 7, 14, 17, 19, 99, 119, 121, 135, 144, 343, 344, 345, 346, 347, 348, 349, 351, 352, 353, 354, 355, 356, 357, 360, 361, 362, 363, 364, 365, 380, 381, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 395, 400, 401, 402, 403, 404, 409, 413], "descript": [5, 7, 384, 385, 396, 414], "design": [1, 141, 341, 361, 363, 364, 383, 391, 398, 399], "desir": [12, 13, 14, 18, 19, 124, 144, 361, 362, 363, 384, 385, 399, 413], "desktop": 384, "dest_path": [11, 61], "dest_typ": 100, "destin": [17, 100, 101, 102, 103, 104, 105, 106], "detail": [2, 3, 5, 7, 9, 11, 12, 13, 67, 124, 331, 342, 345, 346, 347, 348, 354, 355, 359, 361, 364, 365, 381, 384, 401, 403, 406, 408, 413], "detect": [14, 19, 385, 386, 388, 389, 391, 403, 413], "determin": [8, 9, 13, 14, 15, 19, 42, 46, 89, 90, 127, 135, 141, 144, 163, 178, 302, 343, 344, 345, 346, 347, 348, 351, 352, 353, 354, 355, 361, 384, 393, 395, 398, 399, 400, 401, 402, 403, 404, 406, 407, 408, 409, 410, 412, 413, 417], "dev": [5, 6, 7, 349, 357, 358, 360, 361, 364, 365, 383, 384, 396, 413, 414], "dev_polaris_": [365, 381], "dev_polaris_0_2_0_gnu_mpich": 6, "develop": [1, 5, 6, 7, 8, 9, 12, 13, 19, 141, 144, 340, 342, 358, 361, 362, 363, 364, 378, 381, 385, 386, 387, 388, 389, 390, 391, 392, 396, 399, 413], "developers_guid": 384, "deviat": 7, "df": 387, "diagnost": [6, 354, 385, 386, 387, 389, 390, 391, 392, 400, 413], "diagram": 359, "dict": [14, 20, 26, 28, 29, 31, 32, 33, 40, 44, 51, 92, 93, 95, 99, 100, 116, 118, 119, 125, 129, 130, 131, 144, 146, 154, 157, 160, 163, 167, 173, 176, 177, 219, 235, 256, 282, 292, 305, 307, 312, 361, 363, 384], "dictat": [404, 411], "dictionari": [1, 8, 9, 14, 19, 20, 26, 28, 29, 31, 32, 33, 40, 41, 44, 51, 59, 92, 95, 99, 118, 119, 129, 130, 131, 144, 154, 157, 173, 176, 177, 361, 363, 364, 384, 401], "did": [11, 382, 384], "didn": 384, "diff": 15, "differ": [6, 14, 15, 17, 18, 31, 32, 59, 75, 80, 124, 141, 144, 181, 184, 193, 243, 267, 269, 274, 337, 340, 343, 344, 352, 357, 358, 359, 361, 362, 363, 364, 377, 382, 384, 385, 386, 387, 388, 389, 390, 392, 398, 399, 400, 401, 402, 403, 406, 407, 408, 409, 410, 412, 417], "differenti": [345, 347, 354, 355], "difficult": [14, 141, 391], "diffus": [343, 345, 346, 347, 348, 351, 352, 353, 354, 355, 356], "dig": [364, 385], "dim": [361, 384], "dimens": [15, 19, 89, 127, 144, 146, 151, 167, 168, 169, 170, 172, 220, 236, 331, 338, 339, 356, 398, 399, 404], "dimension": 404, "dinterfaceseg": 337, "direct": [12, 13, 14, 83, 258, 284, 343, 344, 349, 351, 352, 353, 384, 392, 398, 404, 406, 407, 408], "directli": [11, 13, 14, 17, 18, 40, 144, 359, 361, 364, 382, 383, 384, 387], "directori": [5, 6, 8, 9, 11, 12, 14, 16, 19, 25, 40, 42, 43, 48, 49, 51, 52, 55, 57, 59, 62, 63, 66, 99, 100, 113, 115, 117, 118, 123, 124, 141, 154, 157, 159, 160, 161, 163, 173, 182, 183, 184, 187, 189, 190, 191, 193, 195, 197, 198, 199, 201, 205, 209, 215, 228, 230, 241, 244, 245, 248, 250, 252, 268, 269, 272, 274, 276, 296, 314, 340, 343, 349, 352, 358, 360, 361, 362, 363, 364, 365, 371, 373, 375, 377, 378, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 400, 401, 402, 403, 409, 410, 413, 419], "dirti": 384, "disabl": [19, 342, 401, 419], "disadvantag": 384, "disc": [378, 416], "discontinu": [333, 334, 402, 409, 410], "discourag": [364, 382], "discov": 6, "discoveri": 141, "discret": [406, 408], "discuss": [2, 6, 144, 345, 346, 347, 348, 354, 355, 361, 364, 384, 398, 404], "disk": [365, 385, 387, 392], "displac": 7, "displai": [5, 8, 332, 392], "display_nam": 392, "dissip": [384, 398], "distanc": [13, 83, 100, 224, 333, 334, 384, 398, 399, 407], "distant": 13, "distinct": 364, "distinguish": 398, "distribut": [345, 346, 347, 354, 355, 400, 402, 409, 410], "diverg": [31, 32, 33, 347, 396, 400, 403, 405, 409], "divergent_2d": [304, 340, 350, 402], "divid": [14, 19, 336, 395], "dlat": [17, 105, 401, 412, 417], "dlon": [17, 105, 401, 412, 417], "dnode": [333, 334], "do": [2, 5, 9, 11, 14, 17, 18, 130, 141, 144, 357, 361, 363, 365, 381, 382, 383, 384, 391, 400, 401, 402, 403, 409, 410, 413], "do_restart": [221, 226, 245], "doc": [4, 7, 384, 392], "docstr": [364, 383, 384], "document": [1, 3, 6, 9, 14, 361, 364, 383, 385, 407, 413], "doe": [2, 6, 9, 12, 14, 361, 367, 383, 384, 391, 404], "doesn": [5, 6, 135, 141, 361, 363, 384, 385, 390, 391, 413], "doi": 407, "domain": [13, 25, 34, 83, 127, 144, 159, 173, 180, 342, 357, 378, 384, 398, 399, 401, 403, 404, 406, 407, 408, 411, 412, 417, 419], "dome": [12, 70, 357, 361, 363, 413, 419], "dome_typ": 357, "dome_varres_grid": 361, "dome_viz": 357, "domega_build_test": 365, "domega_build_typ": 365, "domega_cime_compil": 365, "domega_cime_machin": 365, "domega_metis_root": 365, "domega_parmetis_root": 365, "don": [5, 6, 7, 14, 141, 144, 146, 151, 361, 363, 364, 365, 384, 389, 413, 419], "done": [18, 37, 47, 361, 363, 365, 384, 413], "dot": [126, 127, 332, 364], "doubl": [7, 14, 144, 361, 362, 384], "doubli": [406, 408], "down": [318, 319, 320, 321, 324, 325, 326, 327, 329, 331, 337, 349, 384, 395, 401], "download": [5, 6, 8, 10, 40, 42, 49, 63, 141, 189, 197, 215, 363, 364, 365, 385, 413, 418], "download_path": 11, "download_target": 11, "downsid": 365, "downstream": 364, "dozen": 364, "dpi": [126, 332], "draft": [7, 349, 395], "drag": [342, 345, 346, 347, 348, 354, 355, 399], "driven": 399, "dry": [57, 362], "dry_run": [5, 57], "ds1": [18, 124], "ds2": [18, 124], "ds_horiz_mesh": 331, "ds_horiz_transect": 337, "ds_init": [19, 384], "ds_mesh": [13, 15, 19, 89, 127, 206, 207, 333, 334, 336, 361, 384], "ds_out": [15, 206, 333, 334], "ds_transect": [331, 332, 337, 338, 339], "ds_tri": [333, 334, 335, 336], "dst": 387, "dst_": 17, "dst_from_mpa": 17, "dst_global_lon_lat": 17, "dst_grid_info": 100, "dst_mesh_filenam": 100, "dt": [14, 144, 184, 209, 296, 361, 384, 398, 400, 401, 402, 403, 406, 408, 409, 410, 412, 417], "dt_max": 212, "dt_per_km": [14, 144, 345, 346, 347, 348, 354, 355, 384, 398, 404, 406, 408, 412, 417], "dt_str": 144, "dt_target": 90, "dtransect": [333, 334], "dtype": [9, 363, 384], "durat": [14, 144, 343, 344, 351, 352, 353, 356, 362, 384, 393], "dure": [6, 8, 11, 14, 18, 30, 40, 51, 60, 156, 165, 186, 192, 211, 227, 247, 271, 361, 363, 364, 365, 384, 385, 413, 418, 419], "dv": 144, "dynam": [162, 173, 340, 344, 349, 356, 385, 393, 398, 400, 401, 402, 403, 404, 409, 410, 411, 412], "dynamic_adjust": [1, 14, 385], "dynamic_model_config": [7, 14, 343, 344, 352, 384], "dynamic_ntask": 173, "dz": 411, "e": [5, 6, 7, 9, 11, 14, 15, 31, 32, 33, 40, 41, 53, 70, 129, 141, 144, 150, 166, 333, 334, 340, 357, 359, 361, 362, 364, 365, 377, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 392, 395, 398, 399, 400, 401, 402, 404, 406, 407, 408, 409, 410, 411, 412, 413, 417, 419], "e302": 365, "e3sm": [5, 7, 10, 11, 40, 129, 141, 340, 358, 361, 362, 364, 377, 378, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 395, 396, 414], "e3sm_chrys_gnu_openmpi": 6, "e3sm_compon": 384, "e3sm_diag": 6, "e3sm_submodul": [5, 340, 358, 365, 377, 378, 384], "e3sm_unifi": 11, "e3sm_vers": 385, "e501": [70, 384], "each": [1, 2, 5, 6, 7, 8, 9, 12, 13, 14, 17, 18, 40, 46, 51, 67, 73, 74, 83, 112, 118, 135, 141, 144, 146, 151, 154, 157, 199, 200, 216, 228, 229, 232, 244, 251, 302, 318, 319, 320, 321, 324, 325, 326, 327, 329, 332, 333, 334, 336, 337, 342, 343, 344, 345, 346, 347, 348, 349, 351, 352, 353, 354, 355, 356, 357, 359, 360, 361, 362, 363, 364, 365, 371, 372, 380, 382, 384, 385, 391, 393, 395, 398, 400, 401, 402, 403, 404, 406, 407, 408, 409, 410, 412, 413, 417, 418], "earli": [144, 396, 413], "earth": [334, 383], "earth_radiu": 334, "easi": [7, 9, 42, 364, 384], "easier": [1, 14, 144, 361, 363, 364, 365, 385, 413, 418], "easiest": [18, 141, 365], "easili": 384, "ec": 385, "ec30to60": 413, "echo": 365, "ecosystem": 386, "ecwisc30to60": 413, "eddi": [343, 398], "edg": [15, 19, 89, 102, 105, 109, 126, 127, 258, 259, 284, 285, 333, 334, 335, 342, 384], "edge_patch": 19, "edge_patch_mask": 19, "edit": [5, 7, 365, 384, 413], "editor": 364, "effect": [384, 412], "effici": [19, 361, 384], "eigen": 6, "either": [1, 5, 6, 7, 8, 9, 12, 13, 14, 17, 19, 73, 141, 144, 168, 340, 349, 361, 365, 382, 384, 385, 395, 403, 411, 413], "ekat": 365, "element": [318, 321, 327, 329, 384], "elev": [318, 321, 327, 329, 384, 395], "els": [7, 8, 141, 361, 363, 384], "elsewher": [1, 365], "email": 385, "embed": 408, "emploi": 361, "empti": [59, 332, 361, 364, 365, 382, 384], "emtpi": 391, "enabel": 356, "enabl": [8, 19, 356, 361, 381, 385, 392, 406, 408], "enable_diagnostics_fil": 385, "enable_ocean_graph_partit": 385, "enable_ocean_initial_condit": 385, "enable_scrip": 385, "enable_seaice_initial_condit": 385, "enclos": 384, "encod": 365, "encompass": 358, "encount": [6, 362, 381], "encourag": 384, "end": [14, 19, 127, 154, 157, 332, 333, 334, 361, 363, 364, 365, 380, 382, 384, 387, 398, 400, 401, 406, 408, 411, 416], "end_color": 332, "endeavor": 364, "endswith": 364, "energi": [180, 193, 274, 383, 384, 398, 407], "enforc": [1, 342, 365], "engin": 385, "engwirda": 383, "enough": [333, 334, 335, 343, 352, 361, 364, 384, 404], "ensur": [1, 2, 6, 9, 14, 59, 141, 343, 349, 352, 364, 365, 399, 400, 401, 402, 409, 410, 411], "enter": 385, "entha_analy_result": 361, "enthalpy_benchmark": 361, "entir": [144, 384, 398, 404, 407, 418], "entri": [7, 56, 90, 93, 118, 127], "enumer": 384, "env": [141, 392], "env_nam": 365, "env_onli": 365, "environ": [4, 5, 11, 136, 138, 139, 340, 358, 364, 377, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392], "environo": [386, 387, 388, 389, 390, 392], "equal": [7, 356, 361, 364, 404, 411], "equat": [399, 400, 401, 402, 403, 406, 408, 409, 410, 411], "equatori": 401, "equilibrium": 393, "equival": [14, 167, 168, 169, 365, 384, 386], "errno": 381, "error": [6, 8, 15, 40, 51, 141, 144, 147, 148, 151, 206, 344, 345, 346, 347, 348, 351, 353, 354, 355, 361, 363, 365, 383, 384, 400, 401, 402, 403, 409, 410], "error_typ": [144, 147, 148, 206, 400, 401, 402, 403, 409, 410], "es3m": 365, "esmf": [6, 17, 365, 390, 413], "esmf_regridweightgen": 17, "especi": 384, "essenti": [5, 14], "establish": [40, 41, 361], "estim": [175, 178, 384, 399], "et": [144, 384, 395, 398, 400, 401, 402, 403, 406, 407, 408, 409, 410], "eta": [260, 286, 406, 408], "eta0": [258, 284], "eta_0": 408, "etc": [9, 14, 120, 123, 358, 361, 398], "etre": [119, 121, 135], "eval": 7, "evalu": [144, 147, 148, 149, 150, 206, 220, 236, 237, 257, 259, 260, 283, 285, 286, 306, 345, 347, 354, 355, 400, 401, 402, 403, 409, 410], "evapor": 411, "evaporation_flux": 411, "even": [1, 6, 12, 13, 14, 42, 59, 141, 361, 364, 365, 384, 385, 391, 413], "ever": [144, 364], "everi": [45, 208, 343, 361, 363, 364, 380, 381, 382, 384, 398, 404, 411], "everyon": 63, "everyth": 141, "everywher": 384, "evolut": [403, 407], "evolv": [297, 383, 395, 400, 401, 402, 409, 410, 411], "exact": [147, 149, 150, 206, 207, 220, 236, 237, 257, 258, 259, 260, 283, 284, 285, 286, 346, 348, 351, 353, 364, 406, 408], "exact_restart": 380, "exact_solut": 144, "exactli": [364, 365, 384, 395], "exactrestart": 380, "exactsolut": [351, 353], "examin": [403, 411], "exampl": [2, 3, 5, 6, 7, 9, 11, 12, 13, 14, 15, 17, 18, 19, 25, 141, 144, 357, 358, 359, 361, 362, 363, 364, 365, 381, 382, 384, 385, 387, 395, 412, 413, 418, 419], "example_compact": [340, 358, 377, 385], "example_funct": 2, "exascal": 383, "exce": 362, "except": [9, 40, 43, 61, 332, 361, 364, 384, 399, 407, 410], "exclud": 413, "exclus": 413, "execut": [1, 5, 8, 14, 25, 118, 123, 141, 173, 340, 358, 361, 365, 377, 384, 385, 386, 387, 388, 389, 390, 391, 392, 413], "exercis": [356, 380, 400, 401, 402, 403, 409, 410, 411], "exhaust": 362, "exist": [6, 7, 9, 31, 32, 33, 40, 43, 62, 119, 121, 123, 141, 144, 176, 177, 343, 352, 361, 363, 364, 365, 381, 384, 391, 418], "expand": [100, 144, 395], "expand_dim": [361, 384], "expand_dist": 100, "expand_factor": 100, "expect": [1, 2, 12, 17, 141, 144, 168, 170, 358, 361, 365, 384], "expens": [1, 361, 362], "experi": [14, 141, 207, 364, 395], "experienc": 6, "expert": 383, "explain": [364, 399], "explan": 13, "explanatori": 385, "explicit": [12, 364], "explicitli": [5, 7, 144, 343, 344, 351, 352, 353, 361, 365, 384, 385, 413], "explor": [6, 357, 361, 384, 395, 409], "export": [6, 381], "express": [5, 67], "extend": 385, "extens": [383, 385, 399], "extent": [2, 13, 17, 384, 398], "extern": [40, 141, 340, 358, 361, 363, 365, 377, 396, 414], "extra": [13, 64, 365, 390], "extra_rpath": 141, "extract": [13, 15], "ey": 6, "f": [5, 9, 11, 18, 144, 207, 224, 358, 361, 363, 364, 365, 384, 385, 392, 398, 403, 404, 406, 413], "f0": 258, "f401": [19, 361, 384], "f77": 141, "f_0": 399, "face": 126, "facilit": 144, "fact": [1, 14, 40, 141], "factor": [13, 100, 144, 147, 149, 154, 157, 220, 221, 225, 226, 236, 238, 257, 261, 283, 287, 309, 401], "fail": [8, 14, 18, 25, 37, 40, 47, 61, 141, 144, 163, 173, 184, 209, 245, 269, 296, 361, 383, 384, 385, 400, 401, 402, 403, 406, 408, 409, 410], "fairli": [363, 364, 365, 384, 404], "fake": 384, "fall": [351, 353, 413], "fals": [1, 9, 13, 14, 18, 19, 25, 40, 42, 52, 57, 67, 69, 113, 114, 118, 123, 124, 127, 141, 144, 173, 221, 226, 244, 245, 298, 300, 331, 332, 342, 357, 361, 363, 378, 384, 385, 387, 389, 390, 392, 398, 407], "familiar": 384, "far": [13, 141, 144, 318, 327, 329, 364, 384], "fast": [345, 346, 347, 348, 354, 355, 384], "faster": [8, 365], "fatal": 381, "fc": 141, "fcell": [342, 361, 384, 400, 401, 402, 409, 410], "fe": 387, "feasibl": 361, "featur": [9, 14, 364, 365, 382, 384, 385, 393, 398, 407, 411], "fedg": [342, 361, 384, 400, 401, 402, 409, 410], "feel": [14, 141, 361, 384], "felt": 364, "fetch": [6, 365, 384], "few": [5, 13, 14, 25, 37, 40, 47, 96, 97, 141, 173, 343, 344, 345, 346, 347, 348, 351, 352, 353, 354, 355, 356, 361, 364, 384, 385, 391], "fewer": [25, 37, 40, 47, 96, 97, 144, 163, 173, 184, 209, 245, 269, 296, 361, 384, 413], "fewest": 8, "ff": 361, "field": [14, 15, 18, 86, 88, 89, 126, 127, 144, 147, 148, 149, 150, 206, 207, 220, 230, 236, 237, 241, 257, 283, 306, 314, 318, 321, 327, 329, 331, 332, 333, 334, 337, 338, 339, 342, 343, 344, 348, 351, 352, 353, 356, 384, 398, 399, 400, 401, 402, 403, 406, 407, 408, 409, 410], "field_exact": 15, "field_mpa": [15, 150, 237], "field_nam": [15, 19, 127, 148, 149, 150, 220, 236, 237, 257, 283, 306], "fieldnam": 127, "fig": 359, "figsiz": [19, 126, 127, 332], "figur": [8, 19, 126, 127, 332, 344, 351, 353, 356, 357, 359, 361, 385, 399, 400, 402, 409, 410], "filament": [354, 409], "filament_analysi": 409, "filament_evaluation_tim": 409, "filamentanalysi": 354, "file": [1, 5, 6, 7, 8, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 25, 26, 27, 28, 29, 30, 34, 35, 36, 40, 41, 42, 43, 46, 48, 49, 50, 51, 53, 55, 57, 61, 62, 63, 70, 87, 88, 91, 92, 99, 100, 101, 102, 103, 104, 105, 108, 109, 110, 111, 112, 115, 118, 119, 121, 122, 123, 124, 125, 126, 128, 129, 130, 132, 134, 135, 146, 150, 151, 153, 154, 157, 160, 163, 165, 167, 170, 172, 173, 178, 180, 184, 186, 189, 192, 197, 209, 211, 215, 227, 237, 247, 271, 317, 332, 340, 343, 344, 345, 346, 347, 348, 349, 351, 352, 353, 354, 355, 356, 357, 362, 363, 364, 365, 371, 377, 378, 380, 381, 382, 383, 387, 390, 391, 392, 393, 395, 398, 399, 400, 401, 402, 403, 404, 407, 409, 410, 412, 413, 416, 417, 419], "fileexistserror": 62, "filenam": [11, 17, 18, 40, 42, 43, 51, 94, 101, 102, 103, 104, 108, 109, 110, 124, 126, 130, 132, 160, 161, 163, 170, 172, 361, 363, 365, 384], "filename1": [18, 124, 384], "filename2": [18, 124, 384], "filename_interv": 384, "filename_templ": [14, 144, 384], "filepath": [9, 17, 48, 55, 59, 144], "files_for_e3sm": [11, 361, 363, 385], "filesystem": 392, "fill": 144, "final": [2, 5, 6, 7, 8, 141, 160, 333, 334, 343, 344, 345, 346, 347, 348, 349, 351, 352, 353, 354, 355, 356, 361, 363, 380, 384, 393, 401, 409], "final_normalveloc": [19, 384], "final_temperatur": 384, "find": [1, 6, 7, 15, 61, 74, 98, 141, 333, 334, 335, 340, 363, 364, 365, 381, 384, 385, 413], "find_planar_transect_cells_and_weight": 337, "find_spherical_transect_cells_and_weight": 337, "find_transect_levels_and_weight": [331, 338, 339], "finder": 395, "fine": [9, 363, 384, 411], "finer": [385, 395], "finest": 385, "finger": 384, "finish": [40, 41, 85, 361, 384], "firewal": 361, "first": [1, 6, 9, 14, 15, 90, 118, 141, 144, 333, 334, 343, 344, 349, 351, 352, 353, 356, 361, 363, 364, 365, 381, 384, 386, 387, 388, 389, 390, 391, 392, 398, 401, 403, 404, 411, 413], "fit": [361, 385], "fix": [63, 144, 384], "flag": [5, 6, 141, 361, 364, 381, 382, 384, 385, 390, 396, 398, 407, 413, 414], "flake8": [364, 365], "flat": [131, 332, 395, 398, 399, 403], "flavor": [365, 384], "flesh": 384, "flexibl": [11, 144, 361, 363, 365, 384], "float": [7, 9, 14, 26, 71, 73, 74, 78, 83, 90, 100, 105, 124, 126, 127, 144, 147, 148, 149, 150, 154, 157, 159, 163, 166, 179, 182, 183, 184, 187, 190, 193, 195, 198, 206, 209, 212, 213, 220, 221, 224, 225, 226, 236, 237, 238, 244, 245, 248, 256, 257, 258, 259, 260, 261, 263, 265, 269, 274, 276, 282, 283, 284, 285, 286, 287, 289, 296, 302, 305, 306, 307, 309, 312, 332, 333, 334, 361, 363, 384], "floor": [337, 395, 404], "flow": [345, 347, 354, 355, 398, 400, 401, 402, 403, 409, 410], "fluid": 399, "flux": [144, 342, 349, 352, 404, 407, 411], "flynt": 365, "fo": 363, "fo_decomposition_test": 413, "fo_integr": 413, "fo_restart_test": 413, "fo_smoke_test": 413, "focu": [2, 384], "focus": 382, "fold": 384, "follow": [1, 4, 5, 7, 9, 11, 13, 14, 19, 70, 141, 144, 146, 318, 321, 327, 329, 340, 342, 361, 362, 363, 365, 377, 378, 381, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 395, 397, 399, 400, 401, 402, 403, 406, 407, 408, 409, 410, 411, 412, 413, 416], "font": 19, "foo": [2, 364], "forc": [7, 244, 245, 344, 349, 356, 380, 384, 419], "forcing_data": 361, "foremost": 384, "forg": [6, 141, 383, 413], "forgotten": 14, "fork": [6, 384], "form": [144, 352, 407, 419], "formal": 357, "format": [5, 7, 11, 13, 14, 129, 135, 179, 362, 363, 365, 384, 385, 387, 404], "formerli": 1, "fortran": [6, 141, 386, 387, 388, 389, 390, 391, 392], "forward": [1, 5, 7, 9, 14, 40, 144, 146, 157, 160, 161, 163, 180, 183, 191, 193, 226, 230, 241, 244, 274, 292, 295, 297, 314, 340, 358, 361, 363, 364, 374, 377, 385, 393, 398, 399, 400, 401, 402, 403, 404, 406, 407, 408, 409, 410, 412, 417], "forward_cor": 385, "forward_max_disk": 385, "forward_max_memori": 385, "forward_min_cor": 385, "forward_run_dur": 404, "forward_step": 363, "forward_thread": 385, "forwardstep": [160, 361], "found": [6, 9, 14, 130, 141, 333, 334, 364, 365, 383, 384, 386, 387, 388, 389, 390, 391, 392], "four": 358, "frac": [361, 384, 395, 398, 399, 400, 402, 406, 409], "fraction": [8, 384, 395, 398, 399, 400, 401, 402, 404, 406, 407, 408, 409, 410, 411, 412], "framework": [1, 5, 7, 9, 12, 13, 14, 113, 340, 357, 358, 361, 363, 377, 382, 383, 384, 393, 396, 411, 412, 414, 417, 419], "frazil": [144, 349, 404], "free": [141, 205, 206, 207, 342, 384, 385], "frequenc": [258, 284, 343], "frequent": [17, 340, 377], "fresh": [5, 6, 363, 384], "freshwat": 404, "friction": [406, 408], "from": [2, 5, 7, 8, 9, 11, 12, 13, 14, 15, 17, 18, 20, 24, 25, 26, 27, 28, 31, 32, 33, 40, 41, 42, 50, 51, 53, 54, 57, 61, 62, 88, 92, 97, 101, 102, 103, 104, 105, 108, 109, 110, 112, 114, 115, 118, 119, 120, 121, 124, 127, 130, 131, 134, 135, 141, 146, 149, 150, 156, 160, 161, 167, 168, 169, 170, 172, 173, 176, 177, 184, 205, 219, 224, 230, 235, 237, 241, 245, 256, 257, 265, 269, 282, 283, 292, 305, 307, 312, 314, 325, 332, 333, 334, 335, 336, 337, 340, 342, 343, 344, 345, 346, 347, 348, 349, 351, 352, 353, 354, 355, 356, 357, 358, 363, 364, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 392, 393, 395, 397, 398, 400, 401, 402, 403, 404, 406, 407, 408, 409, 410, 412, 413, 416, 417, 418, 419], "front": [387, 404], "frontier": [141, 391], "fs1": 384, "full": [12, 40, 96, 114, 250, 319, 320, 333, 334, 343, 346, 361, 363, 380, 383, 384, 391, 395, 397, 398, 399, 400, 401, 402, 404, 406, 407, 408, 409, 410, 411, 412, 413], "full_integr": [6, 413], "full_path": 11, "full_run": [5, 18, 380, 398, 416], "function": [1, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 18, 19, 49, 72, 79, 141, 144, 189, 197, 215, 224, 357, 358, 361, 363, 364, 382, 383, 384, 393, 395, 399, 400, 401, 402, 403, 404, 409, 410, 419], "fundament": 363, "further": [7, 144, 357, 363, 392, 399, 412, 417], "further_valid": 18, "futur": [1, 13, 46, 127, 361, 364, 382, 383, 384, 385, 403, 411, 413, 419], "fvertex": [342, 361, 384, 400, 401, 402, 409, 410], "g": [5, 6, 7, 9, 11, 14, 15, 31, 32, 33, 40, 41, 53, 70, 129, 141, 144, 166, 333, 334, 340, 357, 359, 361, 362, 364, 365, 377, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 392, 395, 398, 399, 400, 401, 402, 403, 404, 406, 407, 408, 409, 410, 411, 412, 413, 417], "gain": 386, "gassmann": 401, "gb": 141, "gcc": 141, "ge": [398, 401], "gebco": 385, "gener": [2, 3, 5, 7, 8, 12, 14, 19, 25, 26, 27, 28, 29, 35, 49, 78, 124, 144, 189, 197, 215, 261, 287, 316, 340, 342, 343, 344, 349, 351, 352, 353, 356, 358, 361, 365, 377, 383, 384, 385, 391, 400, 401, 402, 403, 406, 408, 409, 410, 413], "generate_1d_grid": 144, "geo": 381, "geom": 13, "geometri": 404, "geostroph": [340, 350, 396, 405], "geostrophic_viz_diff_h": 403, "geostrophic_viz_diff_vel": 403, "geostrophic_viz_h": 403, "geostrophic_viz_vel": 403, "geostropnic_viz": 403, "get": [5, 6, 7, 9, 11, 12, 14, 15, 17, 25, 26, 27, 28, 29, 40, 51, 52, 58, 65, 73, 89, 95, 106, 113, 141, 144, 148, 149, 150, 173, 220, 236, 237, 257, 283, 306, 357, 360, 361, 363, 364, 365, 382, 385, 386, 387, 388, 389, 390, 392, 395, 413], "get_available_cores_and_nod": 364, "get_output_field": [15, 144], "get_time_interval_str": 144, "getboolean": [9, 361, 384], "getexpress": 9, "getfloat": [9, 12, 14, 17, 144, 361, 384], "gethostbynam": 383, "getint": 361, "getinteg": 9, "getlist": [9, 363, 384], "getsockinterfaceaddr": 381, "gfortran": [6, 136, 138, 139, 141, 365], "gh_0": 403, "git": [2, 6, 16, 99, 340, 365, 377, 384, 385, 413], "gitconfig": 385, "github": [5, 6, 7, 364, 365, 383, 384, 385, 396, 413, 414], "give": [5, 6, 14, 18, 141, 361, 364, 365, 384, 385, 413], "given": [5, 7, 8, 13, 14, 15, 17, 18, 20, 24, 25, 54, 61, 73, 83, 89, 92, 96, 97, 114, 119, 121, 124, 130, 144, 146, 147, 150, 151, 166, 170, 172, 173, 193, 206, 237, 274, 292, 324, 333, 334, 337, 343, 349, 352, 356, 361, 363, 381, 383, 384, 385, 398, 399, 400, 401, 402, 403, 404, 407, 409, 410, 411, 412, 413, 417, 418], "gl": 404, "global": [1, 13, 17, 104, 105, 110, 302, 334, 345, 346, 347, 348, 354, 355, 357, 361, 362, 364, 382, 383, 384, 385, 392, 400, 401, 402, 403, 409, 410, 412, 413, 417, 419], "global_converg": [14, 363, 384, 397], "global_ocean": [11, 14, 361, 363, 364, 365, 385, 413], "globalconverg": 384, "globe": [400, 401, 402, 409, 410], "glossari": 384, "gmtime": [14, 384], "gnu": [6, 141, 365, 386, 387, 388, 389, 390, 391, 392, 413], "gnugpu": 390, "go": [12, 48, 55, 298, 300, 357, 361, 363, 364, 365, 384, 392], "goal_cells_per_cor": [144, 384, 399, 400, 401, 402, 406, 407, 408, 409, 410, 412, 417], "goe": [51, 361, 363, 384], "good": [6, 11, 12, 40, 361, 365, 384], "gov": [11, 361, 381, 385, 387, 390, 392], "gpf": 384, "gpmeti": [14, 385], "gpu": [65, 387, 390, 392], "gpus_per_nod": 65, "grab": 392, "gradient": [384, 398, 406, 407, 408, 411], "gradient_width_dist": [361, 384, 398], "gradient_width_frac": [361, 384, 398], "gradient_width_fract": 398, "graph": [5, 25, 34, 36, 46, 88, 144, 154, 157, 160, 163, 173, 184, 209, 343, 344, 349, 351, 352, 353, 384, 385], "graph_fil": 34, "graph_filenam": [25, 88], "graph_target": [144, 154, 157, 160, 163, 173, 184, 209], "graphinfofilenam": [361, 384], "graviti": [203, 204, 254, 255, 256, 258, 261, 263, 265, 351, 363, 396, 405], "great": [334, 384], "greater": [361, 384], "green": [127, 332, 359], "greenland": [357, 383, 419], "grep": [6, 387, 413], "grid": [7, 13, 17, 72, 79, 83, 86, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 144, 316, 317, 318, 319, 320, 321, 322, 323, 324, 327, 328, 329, 330, 343, 344, 349, 351, 352, 353, 356, 361, 378, 384, 385], "grid_1d": 144, "grid_typ": [384, 385, 395, 398, 399, 400, 401, 402, 404, 406, 407, 408, 409, 410, 411, 412], "group": [6, 7, 11, 63, 269, 344, 349, 357, 383, 386, 388, 391, 392, 407, 412, 413, 419], "guarante": [1, 14, 141, 336, 340, 365, 377], "guess": [141, 384], "guid": [7, 144, 343, 344, 345, 346, 347, 348, 349, 351, 352, 353, 354, 355, 356, 362, 364, 384, 386, 387, 388, 389, 390, 391, 392, 396, 414], "guidelin": 365, "gyre": [205, 209, 214, 344, 396, 405], "h": [5, 14, 384, 403], "h_": 395, "h_0": 403, "ha": [1, 5, 6, 9, 11, 14, 15, 25, 37, 40, 41, 43, 47, 52, 53, 98, 106, 111, 127, 136, 138, 139, 141, 144, 163, 166, 173, 184, 209, 245, 269, 296, 323, 333, 334, 340, 345, 346, 347, 349, 354, 355, 358, 359, 360, 361, 362, 363, 364, 365, 377, 378, 381, 382, 384, 385, 395, 398, 399, 401, 404, 406, 407, 411, 413], "had": [1, 141], "half": [384, 398, 404, 407], "halfar": 357, "halv": [384, 398], "hand": [13, 105, 364], "handi": 15, "handl": [11, 12, 365, 384, 391, 403], "hang": [387, 392], "happen": [6, 9, 12, 17, 112, 361, 384, 400, 401, 402, 409, 410], "hard": [6, 361, 384, 398, 404, 411], "harder": 364, "harm": 361, "has_opt": 11, "has_shared_config": 40, "have": [1, 2, 4, 5, 6, 7, 9, 11, 12, 14, 17, 18, 31, 32, 33, 40, 41, 48, 55, 112, 118, 123, 127, 130, 139, 141, 144, 146, 151, 153, 256, 265, 282, 292, 305, 307, 312, 336, 340, 343, 344, 351, 352, 353, 357, 359, 361, 362, 363, 364, 365, 381, 382, 384, 385, 386, 387, 388, 389, 390, 391, 392, 395, 397, 398, 400, 401, 402, 403, 404, 409, 410, 412, 413, 418, 419], "haven": [6, 384], "hdf5": [141, 386, 387, 388, 389, 390, 391, 392], "head": [2, 342, 387], "heat": [404, 411], "heavi": 384, "height": [7, 127, 144, 161, 162, 207, 258, 260, 284, 286, 320, 324, 325, 326, 332, 337, 340, 349, 384, 385, 395, 404, 406, 408], "help": [5, 6, 13, 141, 357, 358, 359, 361, 365, 383, 384, 391, 396, 414], "helper": [15, 357, 358], "here": [1, 6, 9, 12, 14, 17, 18, 141, 144, 343, 349, 352, 356, 357, 360, 361, 363, 364, 365, 380, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 399, 400, 401, 402, 403, 409, 410, 411, 412, 413, 417, 418], "hesit": 364, "heurist": 144, "hexagon": [13, 83, 384, 406, 408], "hidden": 364, "hide": [357, 384], "hide_fig": 357, "hierarch": 14, "high": [141, 361, 388, 391], "higher": 384, "highest": 1, "highli": 384, "hill": 401, "hmix_del2": 384, "home": [6, 18, 141, 365, 384, 385, 387, 391, 392], "homogen": 399, "honor": 381, "hood": 17, "hope": 364, "hopefulli": [141, 385], "horiz": 337, "horizcellindic": [333, 334], "horizont": [126, 127, 144, 180, 252, 331, 332, 337, 342, 343, 345, 346, 347, 348, 351, 352, 353, 354, 355, 356, 398, 399, 400, 402, 404, 406, 407, 408, 409, 410, 411], "horiztriangleindic": [333, 334], "horiztrianglenodeindic": [333, 334], "host": [381, 385, 391, 413], "hostnam": 141, "hostname_contain": 141, "hour": [141, 144, 351, 353, 362, 380, 387, 392, 393, 400, 401, 402, 403, 404, 406, 408, 409, 410, 413, 416], "hous": [20, 400, 401, 402, 409, 410], "how": [2, 5, 6, 12, 14, 78, 144, 360, 361, 363, 364, 365, 385, 391, 392, 404, 406, 408], "howev": [1, 13, 361, 362, 363, 365, 384, 399], "hpc": [141, 365, 387, 391], "hpss": [387, 392], "hsi": 392, "htar": 392, "html": [4, 396], "http": [5, 7, 11, 14, 62, 361, 364, 381, 383, 384, 385, 392, 396, 407, 413, 414], "huge": 384, "hydro": [357, 419], "hydrograph": 395, "hydrologi": 357, "hyperbol": 395, "hyperthread": [387, 390, 392], "hyphen": 384, "i": [2, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 17, 18, 19, 25, 30, 37, 40, 41, 42, 43, 46, 47, 51, 52, 57, 61, 62, 78, 79, 84, 90, 96, 97, 100, 104, 110, 111, 113, 114, 119, 121, 124, 127, 130, 135, 136, 138, 139, 141, 144, 147, 149, 150, 154, 156, 157, 161, 163, 165, 166, 168, 169, 171, 173, 182, 183, 184, 186, 187, 190, 191, 192, 193, 195, 198, 199, 201, 205, 209, 211, 221, 226, 227, 228, 237, 244, 245, 247, 248, 250, 252, 268, 269, 271, 272, 274, 276, 291, 296, 318, 321, 327, 329, 332, 333, 334, 336, 337, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 351, 352, 353, 354, 355, 356, 357, 358, 359, 361, 362, 363, 364, 365, 371, 373, 375, 377, 378, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 398, 399, 400, 401, 402, 403, 404, 406, 407, 408, 409, 410, 411, 412, 416, 417, 418, 419], "ic": [7, 159, 161, 162, 243, 244, 248, 250, 252, 340, 349, 363, 364, 365, 378, 380, 383, 384, 385, 387, 394, 395, 396, 405, 416, 419], "ice_shelf": [144, 349], "ice_shelf_2d": [144, 340, 350, 404], "ice_shelf_2d_default": 404, "ice_shelf_2d_default_tidal_forc": 404, "icepresent_qu60km_polar": 361, "iceshelf": 144, "iceshelf2d": [144, 349], "iceshelftask": [349, 393], "ico": [1, 5, 144, 363, 384, 397, 400, 401, 402, 409, 410, 418], "icos_base_mesh_60km": 1, "icos_base_resolut": [144, 401], "icos_forward_60km": 1, "icos_init_60km": 1, "icos_map_60km": 1, "icos_refinement_factor": [144, 401], "icos_resolut": [400, 401, 402, 409, 410], "icos_viz_60km": 1, "icosahedr": [13, 71, 73, 166, 216, 225, 232, 302, 307, 312, 345, 346, 347, 348, 354, 355, 363, 400, 401, 402, 403, 409, 410], "icosahedral_method": 13, "icosahedralmeshstep": [13, 144, 363], "icosahedron": [13, 72, 73, 74, 75], "icosohedr": [412, 417], "icosohydr": [400, 401, 402, 409, 410], "id": [364, 365], "idea": [6, 11, 12, 384], "ideal": [25, 37, 40, 47, 96, 97, 100, 144, 163, 173, 184, 209, 245, 269, 296, 297, 298, 300, 357, 361, 364, 383, 384, 385, 419], "ideal_ag": [298, 300], "idealag": 356, "idealagetrac": [356, 411], "ident": [1, 2, 5, 18, 182, 190, 198, 225, 343, 349, 352, 361, 362, 364, 370, 384, 398, 404], "identifi": [11, 117, 141, 358, 377, 419], "idl": 8, "ifort": [6, 136, 138, 141, 384], "ignor": [5, 104, 110], "ilicak": [398, 407], "imag": [2, 7, 19, 125, 126, 127, 332, 357, 384, 412, 417], "immedi": [14, 70, 144, 365, 384], "immediatli": 144, "immutable_stream": [14, 384], "imp_r": 363, "impermeable_interfac": 14, "impi": [6, 136, 141, 386, 389], "implement": [9, 144, 349, 358, 361, 364, 398, 399, 400, 401, 402, 403, 406, 408, 409, 410], "implicit": 144, "import": [9, 11, 12, 13, 15, 17, 18, 19, 144, 357, 358, 361, 363, 364, 365, 382, 384], "importlib": 11, "improv": 384, "inch": [126, 127, 332], "includ": [1, 2, 5, 6, 7, 8, 9, 13, 14, 15, 17, 18, 19, 42, 49, 51, 61, 113, 114, 125, 126, 141, 144, 189, 197, 215, 216, 232, 244, 298, 300, 302, 332, 333, 334, 336, 343, 345, 346, 347, 348, 354, 355, 356, 357, 359, 361, 362, 363, 364, 365, 381, 382, 383, 384, 385, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 406, 409, 410, 411, 412, 413, 414, 416, 417, 418, 419], "include_restart": 244, "include_tid": 244, "include_viz": [216, 232, 244, 302, 363], "incompat": 141, "incorpor": 363, "incorrect": 365, "increas": [19, 144, 364], "increment": 385, "indent": [7, 361], "independ": [1, 2, 5, 6, 362, 382], "index": [4, 15, 18, 90, 144, 146, 147, 149, 150, 151, 206, 220, 236, 237, 257, 283, 318, 319, 320, 321, 324, 325, 326, 327, 329, 331, 333, 334, 336, 337, 357, 384, 395], "indic": [1, 7, 8, 14, 17, 18, 19, 40, 41, 111, 118, 127, 141, 144, 146, 154, 157, 216, 221, 225, 226, 232, 238, 261, 287, 292, 302, 305, 309, 324, 333, 334, 336, 359, 361, 381, 384, 385, 395, 399, 404, 411], "indir": [9, 25, 40, 51, 100, 161, 163, 173, 182, 183, 184, 187, 190, 191, 193, 195, 198, 199, 201, 205, 209, 228, 244, 245, 248, 250, 252, 268, 269, 272, 274, 276, 278, 296, 298, 300, 358, 361, 371, 373, 375], "individu": [8, 9, 19, 358, 363, 364, 384, 391, 392, 398, 404, 412, 413, 419], "induc": 407, "inej": 385, "inerti": [203, 204, 254, 255, 256, 258, 261, 263, 265, 351, 363, 396, 405], "inertial_gravity_wav": [9, 340, 350, 353, 358, 363, 406, 418], "inertialgravitywav": [9, 351, 363], "inf": [144, 147, 148, 206, 403], "infin": [124, 400, 402, 409, 410], "inflect": 404, "influenc": 393, "info": [5, 12, 14, 25, 34, 88, 141, 144, 184, 209, 361, 384], "inform": [1, 5, 6, 7, 8, 40, 100, 124, 135, 258, 284, 361, 363, 365, 385, 387, 396, 399, 413, 414], "infrastructur": [144, 364, 384], "infti": [144, 395], "inher": [407, 412], "inherit": [349, 364, 384], "init": [1, 5, 6, 7, 9, 14, 18, 19, 37, 47, 144, 146, 154, 157, 182, 183, 190, 191, 193, 198, 221, 226, 230, 238, 241, 244, 245, 252, 261, 268, 269, 274, 287, 292, 309, 314, 340, 342, 358, 361, 363, 364, 365, 377, 385, 393, 398, 401, 404, 406, 408, 413], "init_cor": 385, "init_descript": 385, "init_filenam": [160, 163, 384], "init_max_disk": 385, "init_max_memori": 385, "init_min_cor": 385, "init_mode_forcing_data": 361, "init_step": 363, "init_thread": 385, "init_vertical_coord": [144, 361, 384], "initi": [1, 7, 8, 40, 127, 144, 149, 160, 163, 169, 180, 182, 183, 187, 190, 191, 193, 198, 213, 220, 222, 236, 239, 244, 245, 248, 252, 257, 261, 263, 268, 269, 272, 274, 283, 287, 289, 295, 297, 298, 300, 310, 323, 343, 344, 345, 346, 347, 348, 349, 351, 352, 353, 354, 355, 356, 357, 361, 363, 364, 374, 381, 382, 383, 385, 393, 395, 397, 418, 419], "initial_condit": 364, "initial_condition_databas": [17, 385], "initial_normal_veloc": [361, 384], "initial_normalveloc": 384, "initial_onli": 384, "initial_salin": 384, "initial_st": [5, 18, 19, 146, 292, 343, 352, 361, 384], "initial_state_file_nam": 384, "initial_state_filenam": 180, "initial_state_target": 361, "initial_temperatur": [361, 384], "inner": [40, 361], "input": [1, 5, 8, 10, 11, 17, 35, 40, 41, 42, 43, 49, 88, 153, 160, 167, 169, 189, 197, 215, 337, 343, 344, 345, 346, 347, 348, 351, 352, 353, 354, 355, 356, 384, 411], "input_data": 40, "input_interv": 384, "insensit": [400, 401, 402, 403, 409, 410, 411], "inset": 332, "insid": [1, 12, 359, 361, 364, 400, 401, 402, 409, 410], "insofar": 1, "instal": [5, 6, 141, 365, 384, 391, 392, 413], "install_missing_compil": 141, "instanc": 384, "instant": 331, "instead": [1, 5, 6, 12, 14, 15, 18, 25, 114, 136, 141, 361, 364, 365, 382, 384, 400, 401, 402, 409, 410, 413, 418], "instruct": 384, "int": [13, 14, 25, 26, 37, 40, 47, 65, 66, 67, 71, 72, 73, 74, 75, 83, 90, 96, 97, 100, 126, 127, 146, 147, 149, 150, 151, 155, 158, 163, 164, 173, 174, 184, 185, 206, 209, 210, 220, 236, 237, 245, 246, 257, 262, 269, 270, 283, 288, 296, 332, 361, 384, 411], "int_": 144, "integ": [9, 13], "integr": [6, 15, 144, 193, 274, 343, 344, 349, 352, 364, 384, 393, 398, 399, 400, 401, 402, 403, 404, 407, 409, 410, 412, 417], "intel": [6, 141, 386, 388, 389, 391], "intend": [2, 6, 8, 9, 362, 385, 408, 419], "intens": [343, 352], "intent": 12, "interact": [384, 387, 390, 391, 392, 413], "interest": 384, "interfac": [2, 10, 316, 317, 318, 321, 327, 329, 332, 337, 349, 364, 365, 383, 384, 395], "interface_color": 332, "interfer": 7, "intern": [5, 11, 25, 267, 268, 269, 272, 274, 276, 278, 333, 334, 352, 361, 365, 381, 396, 405], "internal_wav": [340, 350, 407], "internal_wave_rp": 407, "interp_mpas_to_transect_cel": 337, "interp_mpas_to_transect_nod": 337, "interpcellindic": 337, "interpcellweight": 337, "interphorizcellindic": [333, 334], "interphorizcellweight": [333, 334], "interplevelindic": 337, "interpol": [17, 100, 332, 333, 334, 336, 337, 338, 339, 385], "interpret": 392, "interrupt": 384, "intersect": [331, 333, 334, 335], "interv": [14, 15, 179, 393, 400, 401, 402, 403, 404, 409, 410], "intro": 364, "introduc": 384, "introduct": 387, "intuit": 9, "invari": 349, "invers": 167, "investig": 412, "invoc": 1, "invok": 144, "involv": [6, 14, 337, 361, 382, 384, 406, 408], "io": [10, 361, 363, 364, 383, 384, 385, 396, 414], "ipykernel": 392, "ipykernel_launch": 392, "iri": 392, "is_depend": [40, 361], "is_task": 114, "isadirectoryerror": 62, "isel": [15, 19, 331], "isn": [6, 9, 15, 345, 346, 347, 348, 354, 355, 361, 364, 384], "isol": 365, "isort": 365, "issu": [2, 6, 361, 362, 365], "item": [2, 384], "iter": [1, 160, 161, 340, 349, 385, 393, 404], "its": [1, 5, 6, 7, 8, 9, 12, 17, 19, 40, 53, 106, 111, 112, 120, 141, 144, 349, 357, 358, 359, 361, 362, 363, 364, 365, 382, 384, 385, 386, 401, 413, 419], "itself": [5, 6, 7, 9, 40, 48, 55, 357, 358, 360, 361, 363, 365, 384, 413], "j": [407, 413], "j3zxncu": 141, "jig": 13, "jigsaw": [13, 71, 75, 77, 78, 80, 82, 84, 216, 225, 232, 302, 307, 312, 361, 365, 383], "jigsaw_geom_filenam": 13, "jigsaw_hfun_filenam": 13, "jigsaw_jcfg_filenam": 13, "jigsaw_jig_t": 84, "jigsaw_mesh_filenam": 13, "jigsawpi": [84, 361], "jinja": [64, 130, 144, 345, 346, 347, 354, 355], "jinja2": [14, 28, 29, 119, 154, 157], "job": [1, 6, 141, 365, 383, 384, 386, 387, 388, 389, 390, 392], "job_nam": 413, "job_script": [6, 384, 413], "jobid": 391, "join": [11, 384], "joinpath": 363, "jpeg": 2, "json": [5, 8, 20, 57, 361, 392], "just": [5, 14, 25, 37, 40, 47, 67, 141, 144, 173, 349, 361, 364, 365, 382, 384, 387, 390, 392], "k": [19, 345, 347, 354, 355, 395], "k2zu3y5": 141, "k_0": 395, "k_x": [406, 408], "k_y": [406, 408], "kd": 335, "keep": [2, 5, 6, 9, 14, 25, 59, 345, 346, 347, 348, 354, 355, 357, 358, 361, 363, 365, 384, 412, 417], "kei": [20, 51, 118, 144, 146, 160, 163, 292, 363], "kept": 383, "kernel": 392, "kernelspec": 392, "keyword": [5, 7, 14, 18, 19, 167, 170, 361, 401], "kg": 399, "kilomet": 399, "kind": [6, 384], "kineticenergycel": 14, "km": [13, 14, 71, 72, 73, 74, 78, 79, 80, 83, 86, 144, 157, 159, 163, 166, 182, 183, 184, 187, 190, 191, 193, 195, 198, 209, 213, 244, 245, 248, 263, 274, 289, 343, 345, 346, 347, 348, 351, 353, 354, 355, 361, 384, 385, 398, 399, 400, 401, 402, 403, 404, 406, 407, 408, 409, 410, 411, 412, 417, 419], "know": [6, 9, 11, 13, 361, 363, 364, 365, 384], "known": [40, 41, 141, 346, 361, 384], "kpp": 411, "kpp_test": 356, "ksh": 365, "kutta": [400, 401, 402, 403, 409, 410], "kwarg": [167, 170], "kx": [258, 284], "ky": [258, 284], "l": [12, 124, 144, 384, 392], "l1": [18, 124], "l1_norm": [18, 124], "l2": [18, 124, 144, 147, 148, 206, 344, 345, 346, 347, 348, 354, 355, 399, 400, 401, 402, 403, 406, 408, 409, 410], "l2_norm": [18, 124], "l_": 403, "l_1": 403, "l_2": 403, "l_infin": 18, "l_x": 398, "l_y": [398, 399], "label": [7, 125, 126, 332, 391, 403, 413], "lagrangian": [352, 407], "laid": 359, "lambda": [400, 402, 403, 409], "land": [7, 144, 162, 340, 349, 363, 383, 384, 385, 393, 395, 404], "land_ice_flux": 349, "land_ice_pressur": 404, "landic": [5, 6, 12, 20, 42, 70, 123, 357, 358, 360, 361, 363, 365, 382, 383, 384, 385, 413, 419], "landice_database_root": 385, "landice_full_chrys_gnu_openmpi": 6, "landice_grid": [12, 361, 384], "landice_model": [358, 365], "landicedraft": 7, "landicemodelstep": 384, "landicepressur": [7, 393, 404], "languag": 392, "lanl": [383, 385, 387], "laplacian": [344, 399], "laptop": [141, 365, 384, 385], "larg": [9, 349, 361, 363, 384, 386, 404, 409], "last": [2, 144, 346, 362, 365, 398, 413], "lat": [13, 17, 72, 78, 79, 80, 86, 101, 103, 105, 108, 125, 334, 345, 346, 347, 348, 354, 355, 385, 401], "lat_cent": 401, "lat_transect": 334, "lat_var": [17, 101, 103, 108], "late": 384, "latent": 411, "latent_heat_flux": 411, "later": [5, 8, 18, 25, 37, 40, 47, 59, 141, 173, 361, 384, 385, 399], "latest": [340, 365, 377, 383, 396, 413], "latex": 2, "latitud": [72, 79, 101, 103, 105, 108, 125, 126, 144, 331, 334, 400, 401, 402, 403, 409, 412, 417], "latitudin": 399, "latnod": [334, 336], "latter": [5, 51, 141], "lattransect": 334, "launch": [361, 383], "lauritzen": [400, 402, 409, 410], "layer": [207, 316, 317, 318, 321, 322, 323, 325, 326, 327, 328, 329, 330, 331, 332, 337, 342, 343, 344, 345, 347, 349, 351, 352, 353, 354, 355, 356, 384, 385, 395, 398, 399, 400, 401, 402, 404, 406, 407, 408, 409, 410, 411, 412], "layer_thick": [331, 337], "layerthick": [14, 18, 144, 200, 229, 251, 318, 321, 325, 326, 327, 329, 331, 343, 344, 349, 351, 352, 353, 356, 361, 384], "lcrc": [5, 6, 8, 11, 57, 361, 364, 385, 386, 388, 391, 413], "le": [398, 411], "learn": [364, 384], "least": [8, 13, 358, 365, 398, 403], "leav": [5, 19, 385, 401, 404], "led": 364, "left": [105, 144, 332, 384, 395, 398, 401], "len": [180, 384], "length": [72, 79, 80, 86, 399, 404, 407], "less": [216, 225, 232, 302, 307, 312, 361, 395], "lesson": 384, "let": [5, 361, 365, 382, 384, 385, 392], "letter": 384, "level": [1, 2, 11, 12, 13, 18, 19, 127, 144, 149, 150, 220, 236, 237, 257, 283, 318, 319, 320, 321, 324, 325, 326, 327, 328, 329, 337, 343, 349, 357, 359, 360, 361, 363, 384, 385, 398, 399, 400, 401, 402, 403, 404, 406, 407, 408, 409, 410, 411, 412, 417], "levelindic": 337, "li": 1, "lib": [6, 141], "librari": [6, 14, 136, 141, 365, 384, 386, 387, 388, 389, 390, 391, 392, 413], "lie": [333, 334], "light": 384, "like": [2, 5, 6, 7, 8, 9, 10, 11, 14, 18, 101, 105, 108, 140, 141, 142, 144, 169, 357, 359, 361, 363, 364, 365, 381, 383, 384, 385, 391, 398, 400, 401, 402, 403, 409, 410, 413, 419], "likewis": [361, 384], "limit": [6, 19, 345, 346, 347, 354, 355, 362, 365, 398, 400, 402, 403, 409, 410], "line": [7, 10, 38, 40, 64, 96, 97, 107, 127, 141, 361, 362, 364, 365, 383, 412, 413], "linear": [6, 19, 125, 126, 127, 207, 333, 334, 344, 345, 346, 347, 351, 354, 355, 384, 398, 399, 400, 401, 402, 403, 404, 406, 407, 409, 410], "linearli": [339, 404], "linewidth": 332, "linf": [18, 124], "linf_norm": [18, 124], "link": [1, 2, 7, 9, 11, 14, 17, 42, 48, 55, 62, 141, 173, 357, 361, 363, 365, 384, 390, 391, 396, 413, 414], "link_nam": 62, "linspac": [9, 19, 401], "lint": 364, "linter": 364, "linux": [6, 141, 365, 391], "list": [1, 2, 6, 7, 9, 11, 14, 18, 25, 40, 43, 51, 52, 57, 58, 59, 63, 90, 96, 97, 114, 117, 118, 123, 124, 127, 144, 146, 154, 157, 180, 195, 199, 228, 250, 256, 265, 276, 282, 296, 302, 305, 307, 312, 361, 362, 363, 364, 365, 371, 382, 383, 384, 385, 387, 391, 392, 400, 401, 402, 409, 410, 413, 418, 419], "list_cas": 8, "list_machin": [8, 364], "list_suit": 8, "literatur": 398, "littl": [14, 364, 365, 383, 384], "live": [1, 52, 363, 404, 413], "ll": [6, 19, 141, 364, 384, 392, 401], "load": [6, 11, 18, 19, 112, 124, 137, 140, 141, 142, 361, 365, 383, 384, 385, 391], "load_": 365, "load_dataset": 384, "load_dev_polaris_": [365, 384], "load_dev_polaris_0": [6, 136, 137, 138, 139, 140, 141, 142, 384], "load_latest_polari": 413, "load_latest_polaris_gnu_openmpi": 413, "load_polaris_1": 413, "load_polaris_env": [141, 365, 384, 413], "load_polaris_test_morpheus_gnu_openmpi": 365, "loc": [206, 207], "local": [1, 5, 6, 8, 9, 11, 18, 42, 340, 359, 361, 365, 377, 381, 384, 385, 391, 392, 393, 395], "local_filenam": 11, "localhost": [381, 385, 391, 392, 413], "locat": [1, 5, 6, 9, 11, 14, 19, 40, 52, 117, 118, 123, 144, 340, 349, 361, 363, 365, 377, 382, 384, 385, 387, 391, 395, 398, 401, 404, 407, 413], "log": [8, 10, 19, 40, 51, 97, 124, 125, 126, 127, 361, 363, 365, 383, 413], "log_filenam": [40, 51, 361, 363], "logarithm": [19, 127], "logger": [12, 18, 40, 51, 70, 97, 124, 361, 363, 384], "loggingcontext": 12, "logic": [384, 398, 399, 407], "logical_and": [361, 384], "login": [6, 141, 365, 387, 390, 392], "lognorm": 19, "logon": 392, "lon": [13, 17, 72, 78, 79, 80, 86, 101, 103, 105, 108, 125, 334, 345, 346, 347, 348, 354, 355, 385, 401], "lon_cent": 401, "lon_min": [17, 105], "lon_transect": 334, "lon_var": [17, 101, 103, 108], "long": [4, 25, 37, 40, 47, 96, 97, 163, 173, 184, 209, 245, 269, 296, 361, 384, 398, 399, 404, 413], "long_forward": 399, "longer": [1, 190, 225, 343, 349, 352, 362, 370, 384, 398, 400, 401, 402, 403, 404, 409, 410], "longitud": [72, 79, 80, 86, 101, 103, 105, 108, 125, 126, 144, 331, 334, 400, 401, 402, 403, 409, 412, 417], "longituidin": 399, "lonnod": [334, 336], "lontransect": 334, "look": [5, 6, 7, 11, 18, 140, 142, 333, 334, 363, 364, 384, 385], "loop": 384, "lot": [11, 144, 361, 364, 384], "low": [2, 127, 403], "lower": [11, 19, 363, 384, 398], "lowercas": 384, "lowersurfac": 384, "luck": 141, "lustr": [387, 390], "lx": [13, 83, 361, 384, 398, 399, 404, 406, 407, 408, 411], "lxml": [119, 121, 135], "ly": [13, 83, 361, 384, 398, 399, 404, 407, 411], "m": [5, 6, 14, 72, 79, 80, 86, 333, 334, 343, 349, 352, 356, 357, 365, 384, 386, 387, 388, 389, 390, 392, 395, 398, 399, 401, 402, 403, 404, 409, 411, 413], "m1795": 392, "m2": 399, "mac": [365, 383], "mach": [5, 9, 11, 40, 141, 383, 386, 387, 388, 389, 390, 391, 392, 413], "mache_branch": 6, "mache_fork": 6, "machin": [5, 8, 9, 11, 40, 42, 65, 66, 99, 117, 118, 123, 340, 361, 364, 377, 383, 384, 385, 386, 387, 388, 389, 390, 392], "machine_config": 364, "machine_info": [40, 361], "machineinfo": 40, "made": [2, 5, 17, 18, 40, 43, 51, 124, 361, 363, 364, 365, 378, 380, 382, 384, 419], "magic": 384, "mai": [5, 6, 7, 8, 9, 12, 13, 14, 18, 41, 43, 46, 112, 124, 125, 141, 153, 333, 334, 340, 342, 357, 361, 362, 363, 365, 377, 378, 381, 382, 384, 385, 392, 393, 399, 400, 401, 402, 403, 404, 407, 409, 410, 411, 412, 413, 417, 419], "main": [1, 3, 6, 7, 9, 14, 45, 141, 208, 357, 358, 363, 364, 365, 384, 419], "maintain": [1, 340, 400, 413], "mainten": 384, "major": [6, 358, 361], "make": [1, 4, 5, 6, 7, 9, 11, 12, 17, 18, 19, 25, 36, 42, 59, 72, 73, 75, 88, 127, 136, 137, 138, 139, 140, 141, 142, 144, 173, 178, 182, 190, 198, 225, 318, 321, 327, 329, 332, 333, 334, 335, 337, 340, 343, 349, 352, 357, 361, 363, 364, 365, 370, 377, 382, 383, 385, 391, 398, 400, 401, 402, 404, 409, 410, 413, 418], "make_graph": [14, 25, 173], "make_graph_fil": 14, "make_jigsaw_mesh": [13, 78], "make_map": 17, "make_planar_hex_mesh": [13, 83, 343, 344, 349, 351, 352, 353, 356, 361, 384], "make_triangle_tre": [333, 334], "make_yaml": 25, "mali": [5, 141, 358, 361, 382, 384, 385, 413, 419], "manag": [2, 344, 381, 391], "mani": [5, 6, 8, 9, 144, 357, 359, 361, 363, 364, 365, 383, 384, 398, 412, 417], "manipul": [18, 364], "manual": [6, 14, 51, 52, 361, 363, 419], "manufactur": [280, 281, 282, 284, 287, 289, 292, 353, 396, 405], "manufactured_solut": [144, 340, 350, 358, 408], "manufacturedsolut": 353, "map": [1, 8, 17, 20, 31, 32, 33, 78, 79, 100, 125, 126, 127, 167, 170, 171, 172, 173, 176, 177, 291, 363, 365, 385], "map_": 100, "map_filenam": 100, "map_from_native_model_var": 144, "map_to_native_model_var": 144, "map_tool": 17, "map_yaml_config": 144, "map_yaml_opt": 144, "mappingfilestep": [17, 19], "mark": [19, 127, 332, 365, 401], "markdown": 384, "marker": 127, "mask": [7, 127, 318, 321, 324, 327, 329, 361, 384, 385, 395], "mask_vari": 393, "mass": 342, "master": [6, 340, 377, 414], "mat": 361, "match": [161, 349, 365, 384], "math": 2, "mathrm": 395, "matplotlib": [127, 128, 332, 384], "matrix": 6, "matter": [5, 384], "max": [13, 144, 361, 384, 395, 398, 401, 407], "max_cells_per_cor": [144, 384, 399, 400, 401, 402, 406, 407, 408, 409, 410, 412, 417], "max_depth": 385, "max_layer_thick": [385, 395], "max_level_cel": [331, 337], "max_memori": [25, 37, 40, 47, 173, 361], "max_r": 385, "max_temp": 407, "max_valu": 224, "max_veloc": [19, 384], "maximum": [8, 18, 124, 126, 127, 212, 224, 306, 332, 384, 385, 395, 399], "maxlevelcel": [19, 144, 318, 319, 320, 321, 324, 325, 326, 327, 329, 384], "mayb": [364, 384], "mb": [25, 37, 40, 47, 173, 361, 385], "mbtempest": 17, "md": [7, 384], "me": [6, 384], "mean": [5, 332, 365, 384, 395, 398, 400, 401, 402, 403, 407, 409, 410, 418], "meant": [10, 364, 385], "mechan": [1, 361], "medium": 386, "meet": 2, "melt": 404, "member": 385, "memor": 365, "memori": [25, 37, 40, 47, 173, 361, 385], "mention": 364, "merg": 362, "meridion": [398, 407, 411], "mesh": [1, 5, 7, 10, 17, 25, 40, 88, 89, 100, 102, 109, 126, 127, 146, 150, 154, 155, 157, 158, 160, 161, 164, 173, 174, 175, 178, 180, 183, 185, 187, 206, 210, 213, 216, 221, 222, 225, 226, 230, 232, 237, 238, 239, 241, 244, 245, 246, 248, 252, 256, 258, 261, 262, 263, 265, 270, 272, 282, 284, 287, 288, 289, 292, 295, 297, 298, 302, 305, 307, 309, 310, 312, 314, 318, 321, 322, 323, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 342, 343, 344, 345, 346, 347, 348, 349, 351, 352, 353, 354, 355, 356, 357, 359, 361, 363, 364, 365, 373, 374, 382, 383, 385, 395, 397, 413, 418], "mesh_cor": 385, "mesh_cpus_per_task": 361, "mesh_databas": 385, "mesh_descript": 385, "mesh_filenam": [15, 19, 25, 88, 126, 160, 161, 173, 180], "mesh_max_disk": 385, "mesh_max_memori": 385, "mesh_min_cor": 385, "mesh_min_cpus_per_task": 361, "mesh_nam": [17, 101, 102, 103, 104, 105, 108, 109, 110, 166, 230, 237, 241, 314, 363], "mesh_path": 361, "mesh_revis": 385, "mesh_step": 361, "mesh_to_triangl": [333, 334, 335], "mesh_triangl": 13, "mesh_typ": [102, 109, 357, 361, 363], "meshstep": 361, "messag": [5, 8, 141, 361, 381, 392], "met": 2, "meta": 59, "metadata": 385, "meter": [100, 224, 316, 317, 334, 400, 402, 409], "meth": 18, "method": [8, 9, 13, 14, 17, 18, 20, 25, 30, 31, 32, 33, 40, 41, 45, 46, 51, 52, 53, 59, 60, 70, 71, 75, 78, 79, 80, 84, 85, 100, 106, 129, 144, 145, 146, 148, 149, 154, 156, 157, 159, 161, 163, 165, 167, 173, 182, 183, 184, 186, 187, 190, 191, 192, 193, 195, 198, 199, 201, 203, 205, 208, 209, 211, 213, 216, 219, 220, 221, 222, 225, 226, 227, 228, 230, 232, 235, 236, 238, 239, 241, 244, 245, 247, 248, 250, 252, 254, 256, 257, 258, 261, 263, 265, 268, 269, 271, 272, 274, 276, 278, 280, 281, 282, 283, 284, 287, 289, 292, 295, 296, 297, 298, 300, 302, 305, 307, 309, 310, 312, 314, 332, 351, 353, 358, 361, 363, 364, 368, 370, 371, 373, 374, 375, 384, 393, 401, 412, 417], "meti": [6, 88], "metis_root": 365, "mhoffman": 70, "mid": [342, 398, 409], "middl": [318, 321, 327, 329, 332, 384], "midpoint": [318, 321, 327, 329, 384], "might": [2, 6, 11, 14, 17, 19, 130, 141, 144, 335, 357, 361, 365, 384, 385, 391, 413], "min": [361, 384, 395, 398, 404, 407, 411], "min_cor": 66, "min_cpus_per_task": [8, 14, 40, 47, 96, 97, 361], "min_layer_thick": [324, 385, 395, 404], "min_level_cel": [331, 337], "min_pc_fract": [384, 395, 398, 399, 400, 401, 402, 404, 406, 407, 408, 409, 410, 411, 412], "min_r": 385, "min_resolut": [159, 163], "min_task": [8, 9, 14, 17, 25, 37, 40, 47, 96, 97, 100, 144, 163, 173, 184, 209, 245, 269, 296, 361, 384], "min_temp": 407, "min_vert_level": [324, 395, 404], "mind": [2, 5, 384], "miniconda": 384, "miniconda3": [6, 365], "miniforge3": [6, 365, 384, 391, 413], "minim": 342, "minimum": [8, 66, 126, 127, 144, 148, 163, 173, 306, 332, 343, 344, 351, 352, 353, 361, 384, 385, 395, 398, 399, 400, 401, 402, 403, 404, 406, 407, 408, 409, 410, 411, 412, 417], "minlevelcel": [144, 318, 320, 321, 324, 325, 326, 327, 329, 384], "minor": 6, "minu": 413, "minut": [141, 343, 349, 362, 398, 404, 407, 418], "mirrcz7": 141, "miss": [14, 361, 384, 385], "mistak": 384, "mitgcm": [384, 398], "mix": [295, 357, 358, 400, 406, 408, 411], "mixed_layer_depth_salin": 411, "mixed_layer_depth_temperatur": 411, "mixed_layer_depth_x": 411, "mixedlayerdepthsoutput": 356, "mixing_analysi": 400, "mixing_evaluation_tim": 400, "mixinganalysi": 345, "mk": 398, "mkdir": [6, 365], "mkl": [6, 141], "ml": 411, "mld": 411, "mm": [2, 144, 179], "mm_per_sec": 378, "moab": [6, 17, 365, 390, 413], "mod": [333, 334], "mode": [1, 5, 14, 358, 365, 382, 383, 384, 413], "model": [2, 5, 10, 18, 25, 26, 30, 31, 32, 33, 35, 40, 42, 117, 118, 123, 129, 130, 134, 136, 137, 138, 139, 140, 141, 142, 150, 154, 156, 157, 165, 182, 184, 186, 190, 191, 192, 193, 198, 209, 211, 225, 226, 227, 237, 247, 271, 274, 291, 296, 340, 343, 344, 345, 346, 347, 348, 349, 351, 352, 353, 354, 355, 356, 358, 361, 362, 364, 365, 370, 377, 381, 382, 383, 385, 391], "model_config_data": 25, "model_step": 14, "modelstep": [14, 144, 361, 363, 384], "modif": [2, 6, 7, 361, 378], "modifi": [2, 8, 9, 13, 14, 25, 39, 53, 119, 121, 144, 173, 194, 275, 343, 344, 349, 351, 352, 353, 361, 363, 365, 383, 384, 385, 398, 404, 413], "modifysshmask": 7, "modul": [4, 5, 9, 10, 12, 14, 15, 16, 27, 28, 29, 70, 92, 119, 136, 138, 139, 141, 144, 154, 157, 160, 163, 357, 358, 359, 361, 363, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 397, 413], "modules_aft": [141, 387, 390, 392], "modules_befor": [141, 387, 390, 392], "mom": [384, 398], "moment": 1, "momentum": [342, 343, 345, 346, 347, 348, 351, 352, 353, 354, 355, 399, 406, 408], "monik": 392, "month": 396, "more": [3, 5, 6, 9, 11, 12, 13, 14, 17, 19, 40, 51, 57, 79, 117, 118, 141, 144, 342, 343, 345, 346, 347, 348, 354, 355, 357, 359, 361, 362, 363, 364, 365, 382, 391, 396, 398, 401, 403, 404, 406, 408, 412, 413, 414, 417, 419], "morpheu": 141, "most": [9, 12, 46, 141, 340, 346, 357, 358, 361, 364, 365, 377, 384, 385, 390, 391, 392, 395, 396, 414, 419], "mostli": 384, "motiv": 1, "move": [364, 365, 384, 412, 417], "movement": [318, 321, 327, 329, 384], "mpa": [5, 9, 10, 11, 12, 13, 14, 17, 18, 25, 31, 32, 33, 40, 42, 70, 88, 102, 109, 119, 121, 123, 126, 134, 135, 136, 137, 138, 139, 140, 141, 142, 145, 167, 168, 169, 170, 171, 172, 173, 176, 177, 180, 258, 269, 284, 291, 302, 317, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 343, 344, 345, 346, 347, 348, 349, 351, 352, 353, 354, 355, 356, 358, 361, 364, 368, 377, 380, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 396, 398, 399, 400, 401, 402, 403, 404, 406, 407, 408, 409, 410, 411, 412, 413, 414, 417, 418, 419], "mpas_field": 332, "mpas_grid": [12, 361], "mpas_make_target": [365, 413], "mpas_mesh_filenam": 13, "mpas_model": [5, 385], "mpas_ocean": 364, "mpas_standalonedata": [11, 141, 385, 391], "mpas_to_yaml": 383, "mpas_tool": [9, 12, 13, 83, 343, 344, 349, 351, 352, 353, 356, 361, 363, 384], "mpasconfigpars": [9, 361, 363], "mpaso_to_omega": 144, "mpaso_to_omega_dim_map": 167, "mpaso_to_omega_var_map": 167, "mpi": [6, 14, 17, 100, 136, 139, 141, 173, 175, 178, 343, 344, 351, 352, 353, 361, 365, 381, 383, 384, 386, 387, 388, 389, 390, 392, 413], "mpi_": 141, "mpi_crayclang": 390, "mpi_crayclanggpu": 390, "mpi_gnu": [141, 386, 387, 388, 389, 390, 391, 392], "mpi_gnugpu": 390, "mpi_init": 381, "mpi_intel": [386, 388, 389, 391], "mpi_mpich": [391, 413], "mpi_openmpi": [391, 413], "mpich": [141, 365, 383, 387, 390, 392, 413], "mpid_init": 381, "mpid_nem_init": 381, "mpid_nem_tcp_get_business_card": 381, "mpid_nem_tcp_init": 381, "mpidi_ch3_init": 381, "mpir_init_thread": 381, "mpirun": [141, 381, 385, 386, 387, 388, 389, 390, 391, 392, 413], "msh": [5, 13], "much": [5, 6, 14, 361, 384, 404], "multi": [127, 332], "multinod": [385, 413], "multipl": [5, 9, 14, 25, 26, 31, 32, 130, 141, 144, 176, 177, 341, 362, 363, 364, 365, 384, 391, 398, 413], "multipli": [144, 337, 400, 401, 402, 403, 406, 408, 409, 410], "multiprocess": [361, 364, 385], "munk": [207, 399], "must": [5, 7, 11, 14, 19, 25, 28, 29, 40, 43, 45, 48, 55, 123, 125, 126, 127, 141, 144, 146, 173, 207, 208, 292, 342, 361, 363, 365, 384, 395, 403, 419], "my": [6, 141, 387], "my_config": 413, "my_machin": 385, "my_test_cas": 17, "my_usernam": [391, 392], "myenv": 392, "mypi": 365, "myquota": 392, "myst": [7, 384], "mytestcas": 17, "n": [5, 6, 72, 79, 80, 86, 361, 384, 387, 391, 392, 398, 399, 401, 403, 404, 406, 407, 408, 412, 413, 417], "n3b5fye": 141, "n_wavelengths_i": [406, 408], "n_wavelengths_x": [406, 408], "n_z": 395, "name": [1, 5, 6, 7, 8, 9, 11, 13, 14, 17, 18, 19, 20, 25, 27, 28, 29, 31, 32, 33, 34, 40, 41, 42, 43, 51, 53, 61, 62, 63, 65, 66, 67, 71, 78, 84, 88, 92, 100, 101, 102, 103, 104, 105, 108, 109, 110, 113, 114, 116, 117, 118, 119, 123, 124, 125, 126, 127, 129, 130, 134, 141, 144, 146, 147, 148, 149, 150, 151, 154, 157, 159, 160, 161, 163, 166, 167, 168, 169, 170, 171, 172, 173, 180, 182, 183, 184, 187, 190, 191, 193, 195, 198, 199, 201, 205, 206, 209, 220, 221, 222, 226, 228, 230, 236, 237, 238, 239, 241, 244, 245, 248, 257, 261, 268, 269, 272, 274, 276, 283, 287, 291, 296, 302, 305, 306, 307, 309, 310, 312, 314, 317, 332, 357, 358, 361, 363, 364, 365, 371, 373, 375, 382, 384, 385, 392, 398, 403, 413, 418], "namelist": [5, 7, 8, 10, 25, 26, 27, 30, 31, 32, 33, 35, 36, 39, 49, 118, 123, 134, 135, 160, 163, 165, 173, 178, 186, 189, 192, 197, 211, 215, 227, 247, 271, 340, 343, 344, 349, 351, 352, 353, 357, 358, 361, 363, 364, 377, 378, 380, 383, 384, 385, 393, 404, 411], "namelist_templ": 134, "namesak": 362, "nativ": 168, "natur": 83, "navig": 384, "nc": [5, 11, 12, 13, 14, 17, 18, 19, 100, 144, 146, 154, 157, 292, 343, 344, 349, 352, 361, 364, 384, 393], "ncar": 378, "ncell": [19, 144, 220, 236, 331, 338, 339, 361, 384], "ndarrai": [72, 79, 80, 86, 90, 125, 127, 180, 224, 316, 317, 384], "nearest": [400, 401, 402, 409, 410], "neareststod": [100, 401, 412, 417], "nearli": [17, 361, 363, 382, 383, 384], "necessari": [6, 7, 13, 124, 141, 384], "necessarili": [40, 42], "necessit": 403, "nedg": [19, 361, 384], "need": [1, 2, 4, 5, 6, 7, 9, 11, 12, 13, 14, 17, 18, 19, 30, 52, 59, 79, 141, 144, 165, 186, 192, 211, 227, 247, 271, 340, 345, 346, 347, 348, 354, 355, 358, 361, 363, 364, 365, 377, 378, 381, 383, 384, 385, 386, 391, 392, 395, 398, 400, 401, 402, 409, 410, 413, 418], "neglect": [406, 408], "neglig": [361, 404], "neighbor": 339, "neither": [25, 40, 51, 100, 163, 173, 184, 209, 245, 269, 296, 361], "nersc": 392, "nest": [31, 33, 129, 131, 154, 157, 173, 176], "net": 411, "netcdf": [6, 141, 146, 151, 170, 172, 180, 356, 385, 386, 387, 388, 389, 390, 391, 392], "netcdf3_64bit": 385, "netcdf3_class": 385, "netcdf4": 385, "netcdf4_class": 385, "network": 387, "never": [14, 141, 382], "new": [1, 2, 5, 20, 26, 40, 51, 59, 62, 71, 78, 84, 100, 120, 121, 144, 154, 157, 163, 167, 184, 191, 209, 221, 226, 238, 245, 258, 261, 269, 284, 287, 296, 309, 318, 321, 327, 329, 361, 363, 364, 365, 378, 381, 382, 383, 413], "new_branch_nam": 365, "new_child": 120, "new_step_log_fil": [51, 363], "new_tre": 121, "newli": 384, "next": [7, 141, 160, 343, 344, 349, 352, 384, 395, 404, 413], "nhalflevel": [337, 338], "nhoriznod": [337, 339], "nhorizweight": 337, "nice": [384, 392], "nightli": [2, 365, 413, 418], "no_proxi": 381, "node": [6, 14, 25, 39, 40, 44, 47, 65, 95, 96, 97, 141, 173, 333, 334, 336, 337, 339, 361, 362, 364, 365, 384, 385, 386, 387, 388, 389, 390, 391, 392, 413], "nodecellindic": 336, "nodecellweight": 336, "nodevalu": [333, 334], "nompi": [391, 413], "non": [6, 14, 18, 342, 361, 384, 399, 400, 409, 413], "nondiverg": [354, 396, 405], "nondivergent_2d": [304, 340, 350, 409], "none": [7, 9, 14, 18, 25, 26, 28, 29, 31, 32, 37, 40, 41, 42, 43, 47, 48, 51, 52, 55, 57, 59, 61, 66, 67, 69, 71, 78, 84, 88, 90, 99, 100, 101, 104, 105, 108, 110, 114, 118, 119, 123, 124, 125, 126, 127, 130, 131, 134, 144, 146, 147, 148, 149, 150, 151, 154, 155, 157, 158, 159, 160, 161, 163, 164, 173, 174, 176, 177, 179, 184, 185, 209, 210, 220, 236, 237, 245, 246, 257, 262, 269, 270, 283, 284, 288, 296, 306, 324, 332, 334, 361, 363, 373, 384, 395, 398, 399, 400, 401, 402, 404, 406, 407, 408, 409, 410, 411, 412, 416], "nonhydro": 6, "nonhydro_chrys_intel_openmpi": 6, "nonhydrostat": 6, "nonlinear": [399, 400, 403, 406, 408], "nonlinearli": 400, "nonperiod": 342, "nonperiodic_i": [13, 361, 384], "nonperiodic_x": [13, 361, 384], "nonzero": [18, 124], "noqa": [19, 70, 361, 384], "nor": [25, 40, 51, 100, 163, 173, 184, 209, 245, 269, 296, 361, 384], "norm": [19, 124, 125, 126, 144, 148, 151, 344, 345, 346, 347, 348, 354, 355, 399, 400, 401, 402, 403, 406, 408, 409, 410], "norm_arg": [19, 125, 401], "norm_typ": [19, 125, 126, 345, 346, 347, 354, 355, 400, 401, 402, 403, 409, 410], "norm_vel": 259, "normal": [19, 258, 259, 284, 285, 342, 348, 361, 362, 365, 384, 391, 403], "normal_veloc": [351, 353, 361, 384], "normalveloc": [14, 18, 19, 144, 200, 229, 251, 285, 342, 343, 344, 349, 351, 352, 353, 356, 361, 384, 411], "north": 398, "northern": [384, 398, 404, 407], "notat": [361, 412, 417], "note": [5, 7, 17, 18, 144, 384, 392], "noth": [9, 141, 381, 400, 401, 402, 409, 410], "notic": 365, "now": [1, 6, 141, 361, 365, 384, 385, 391], "np": [13, 15, 19, 224, 361, 384, 401], "np110py27_4": 381, "nsegment": [337, 338], "ntask": [8, 9, 14, 17, 25, 37, 40, 44, 47, 96, 97, 100, 144, 163, 173, 184, 209, 245, 269, 296, 361, 363, 384], "nu": [9, 14, 144, 184, 195, 209, 269, 276, 343, 352, 361, 384], "nu_": 9, "nu_2": 399, "nuanc": 384, "num": 5, "num_l2": 15, "number": [5, 6, 8, 13, 14, 25, 34, 37, 39, 40, 44, 46, 47, 65, 66, 67, 71, 72, 73, 74, 75, 83, 95, 96, 97, 100, 118, 141, 144, 155, 158, 163, 164, 173, 174, 175, 178, 184, 185, 199, 209, 210, 228, 245, 246, 258, 262, 269, 270, 284, 288, 296, 340, 343, 344, 349, 351, 352, 353, 357, 361, 362, 363, 364, 371, 382, 384, 385, 391, 393, 395, 397, 398, 399, 400, 401, 402, 403, 404, 406, 407, 408, 409, 410, 411, 412, 413, 417], "numer": [65, 144, 345, 347, 354, 355, 399, 400, 402, 406, 408, 409, 410], "numpi": [9, 13, 15, 72, 79, 80, 86, 90, 125, 127, 144, 180, 316, 317, 333, 334, 361, 384], "numpydoc": [7, 384], "nvertlevel": [19, 127, 144, 146, 151, 318, 321, 327, 329, 331, 338, 339, 361, 384, 395], "nvertnod": [337, 339], "nvertweight": 337, "nvidiagpu": 6, "nx": [13, 83, 357, 361, 384, 411], "ny": [13, 83, 357, 361, 384, 411], "o": [11, 12, 119, 121, 135, 141, 364, 365, 384, 385, 413], "object": [8, 12, 17, 24, 27, 28, 29, 52, 54, 92, 111, 112, 115, 119, 129, 130, 134, 135, 154, 157, 160, 163, 258, 284, 358, 363, 364, 384], "observ": [17, 333, 334, 337, 383], "obtain": [351, 353, 365, 387], "obviou": [7, 14, 384], "obvious": 384, "occupi": 404, "occur": [365, 381, 395], "ocean": [1, 3, 5, 7, 9, 10, 11, 13, 14, 18, 19, 20, 25, 31, 32, 33, 42, 123, 141, 341, 343, 344, 345, 346, 347, 348, 349, 351, 352, 353, 354, 355, 356, 357, 358, 360, 361, 363, 364, 382, 383, 384, 385, 391, 393, 394, 395, 397, 398, 399, 400, 401, 402, 403, 404, 406, 407, 408, 409, 410, 411, 412, 413, 418, 419], "ocean_cached_fil": 5, "ocean_database_root": 385, "ocean_model": [340, 365, 385], "ocean_pr_chrys_gnu_openmpi": 6, "ocean_pr_chrys_intel_openmpi": 6, "oceaniostep": 144, "oceanmodelstep": [144, 361, 384], "ocemod": 407, "oddli": 13, "off": [5, 6, 365, 381], "offer": 362, "offlin": 385, "offset": 410, "often": [6, 9, 18, 19, 40, 144, 357, 359, 361, 362, 363, 364, 365, 384, 385, 418, 419], "okai": [2, 6, 361, 384], "olcf": 390, "older": 5, "omega": [5, 18, 25, 31, 32, 33, 129, 167, 168, 169, 170, 171, 172, 173, 176, 177, 258, 284, 291, 340, 358, 364, 382, 384, 396, 401, 403, 406, 408, 412, 413], "omega_build": 365, "omega_ctest": 11, "omega_to_mpaso_dim_map": 167, "omega_to_mpaso_var_map": 167, "omit": [6, 361, 413], "onc": [5, 6, 14, 43, 333, 334, 343, 365, 384, 385, 400, 401, 402, 409, 410, 413], "one": [1, 2, 5, 6, 7, 10, 11, 14, 17, 18, 19, 25, 39, 40, 42, 43, 50, 51, 57, 62, 117, 118, 123, 141, 144, 162, 166, 173, 190, 225, 296, 333, 334, 340, 343, 344, 345, 347, 349, 351, 352, 353, 354, 355, 356, 357, 359, 361, 363, 364, 365, 370, 380, 381, 382, 383, 385, 391, 392, 395, 398, 400, 401, 402, 404, 408, 409, 410, 412, 413, 416, 417, 418, 419], "ones": [5, 318, 321, 327, 329, 364, 384], "ones_lik": [361, 384], "onli": [1, 5, 6, 7, 8, 14, 17, 18, 51, 127, 141, 144, 340, 342, 345, 346, 347, 348, 354, 355, 356, 358, 361, 363, 364, 377, 380, 383, 384, 385, 387, 391, 392, 393, 395, 397, 398, 399, 400, 401, 402, 403, 404, 406, 407, 408, 409, 410, 411, 412, 413, 416], "onlin": 385, "onto": [5, 365], "open": [4, 6, 144, 170, 365, 384, 404], "open_dataset": [15, 19, 170, 361, 384], "open_model_dataset": 144, "openmp": [6, 25, 37, 40, 47, 97, 136, 138, 139, 163, 173, 184, 209, 245, 269, 296, 361, 384], "openmp_thread": [9, 14, 25, 37, 40, 47, 97, 163, 173, 184, 209, 245, 269, 296, 361, 363, 384], "openmpi": [6, 136, 141, 365, 383, 386, 388, 389, 413], "oper": [8, 49, 141, 189, 197, 215, 361, 363, 418], "operating_system": 141, "oppos": [5, 14, 30, 156, 165, 166, 186, 192, 211, 216, 225, 227, 232, 247, 271, 302, 307, 312, 334, 384], "opt": [13, 84], "option": [5, 7, 9, 11, 13, 17, 18, 19, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 40, 41, 42, 43, 47, 48, 51, 52, 53, 55, 57, 59, 60, 61, 62, 63, 65, 66, 67, 71, 77, 78, 79, 82, 84, 88, 90, 92, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 110, 113, 114, 117, 118, 119, 123, 124, 125, 126, 127, 129, 130, 131, 132, 134, 135, 141, 146, 147, 149, 150, 153, 154, 156, 157, 159, 160, 161, 163, 165, 173, 176, 177, 179, 184, 186, 192, 194, 206, 209, 211, 212, 216, 217, 219, 220, 221, 226, 227, 232, 233, 235, 236, 237, 238, 244, 245, 247, 252, 254, 256, 257, 258, 261, 268, 269, 271, 274, 275, 280, 282, 283, 284, 287, 292, 296, 298, 300, 302, 303, 305, 309, 316, 318, 319, 320, 321, 322, 323, 327, 328, 329, 330, 331, 332, 333, 334, 340, 343, 344, 345, 346, 347, 348, 349, 351, 352, 353, 354, 355, 356, 357, 358, 361, 362, 363, 364, 373, 377, 378, 381, 383, 385, 395, 397, 413, 419], "orang": [19, 345, 347, 354, 355, 359], "order": [1, 5, 8, 13, 14, 144, 333, 334, 345, 346, 347, 348, 354, 355, 358, 361, 362, 365, 384, 393, 400, 401, 402, 403, 408, 409, 410, 411, 413], "org": 407, "organ": [357, 359, 362, 383], "organiz": 359, "orient": [364, 403], "origin": [8, 57, 331, 333, 334, 337, 365, 384, 395, 413], "orion": 390, "ornl": 390, "osx": [141, 391], "ot": [7, 384], "other": [2, 5, 6, 7, 8, 9, 10, 11, 13, 15, 17, 19, 40, 41, 43, 51, 59, 111, 127, 136, 200, 229, 251, 338, 339, 345, 346, 347, 348, 354, 355, 356, 357, 358, 359, 363, 364, 365, 372, 381, 382, 383, 385, 398, 399, 400, 401, 402, 409, 410, 419], "otherwis": [12, 19, 141, 344, 361, 363, 365, 384, 386, 387, 388, 389, 390, 391, 392, 398], "our": [6, 141, 364, 384, 413], "ourselv": 361, "out": [6, 8, 9, 13, 59, 94, 98, 127, 141, 144, 154, 157, 172, 332, 359, 361, 364, 365, 385, 395, 413], "out_file_nam": [19, 127], "out_filenam": [19, 122, 125, 126, 317, 332], "out_nam": 14, "outcom": 364, "outer": 361, "outlin": 332, "outline_color": 332, "output": [5, 7, 8, 10, 12, 13, 14, 15, 18, 20, 25, 40, 41, 43, 49, 50, 51, 57, 87, 88, 97, 100, 113, 114, 124, 126, 146, 150, 151, 154, 157, 167, 168, 173, 180, 189, 197, 199, 200, 205, 206, 215, 219, 228, 229, 230, 235, 237, 241, 250, 251, 256, 265, 282, 292, 305, 307, 312, 314, 317, 337, 343, 344, 345, 346, 347, 348, 349, 351, 352, 353, 354, 355, 356, 363, 371, 372, 380, 382, 385, 392, 393, 400, 401, 402, 403, 404, 409, 410, 413, 418], "output_": 384, "output_fil": [180, 361, 384], "output_filenam": [15, 144, 154, 157, 180], "output_full_run": 18, "output_interv": [14, 144, 384, 393, 400, 401, 402, 403, 404, 409, 410], "output_interval_str": 144, "output_restart_run": 18, "outsid": [51, 52, 357, 359, 361, 363, 365], "over": [5, 9, 14, 59, 100, 125, 126, 332, 361, 364, 383, 384, 395, 398, 404, 407, 411, 413], "over_color": [19, 345, 347, 354, 355], "overal": 8, "overhead": 361, "overkil": 14, "overlain": 19, "overli": [7, 384, 404], "overrid": [5, 13, 14, 45, 46, 49, 53, 59, 75, 78, 79, 80, 144, 189, 197, 208, 215, 361, 363, 364, 384, 385, 390, 392, 413], "overridden": [9, 31, 32, 33, 60, 144, 384], "overview": [7, 383, 387, 392], "overwrit": 62, "own": [6, 7, 8, 9, 11, 12, 19, 40, 141, 144, 361, 363, 364, 365, 382, 384, 385, 400, 401, 402, 409, 410, 413, 419], "p": [5, 6, 365, 384, 385, 413], "p1": 392, "packag": [4, 5, 6, 7, 9, 10, 13, 14, 16, 27, 28, 29, 42, 53, 92, 99, 119, 123, 130, 141, 144, 154, 157, 160, 163, 357, 358, 359, 360, 361, 363, 365, 381, 382, 383, 384, 386, 387, 388, 389, 390, 391, 392, 413], "page": [3, 7, 141, 386], "pain": 384, "pair": [336, 400, 402, 409, 410, 416], "panel": [127, 332], "paper": [403, 413], "parallel": [1, 5, 17, 25, 37, 40, 46, 47, 141, 173, 361, 364, 365, 381, 382, 384, 385, 386, 387, 388, 389, 390, 391, 392, 413, 419], "parallel_execut": [141, 381, 385, 386, 387, 388, 389, 390, 391, 392, 413], "param": [295, 297], "paramet": [7, 13, 14, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 37, 40, 41, 42, 43, 44, 47, 48, 51, 52, 54, 55, 57, 59, 61, 62, 63, 64, 65, 66, 67, 70, 71, 73, 74, 75, 78, 83, 84, 86, 88, 89, 90, 92, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 123, 124, 125, 126, 127, 130, 131, 132, 134, 135, 144, 146, 147, 148, 149, 150, 151, 154, 156, 157, 159, 160, 161, 163, 165, 166, 167, 168, 169, 170, 172, 173, 176, 177, 179, 180, 182, 183, 184, 186, 187, 190, 191, 192, 193, 195, 198, 199, 201, 203, 205, 206, 207, 209, 211, 212, 213, 216, 219, 220, 221, 222, 224, 225, 226, 227, 228, 230, 232, 235, 236, 237, 238, 239, 241, 244, 245, 247, 248, 250, 252, 254, 256, 257, 258, 259, 260, 261, 263, 265, 268, 269, 271, 272, 274, 276, 278, 280, 282, 283, 284, 285, 286, 287, 289, 292, 296, 298, 300, 302, 305, 306, 307, 309, 310, 312, 314, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 351, 353, 357, 361, 363, 369, 370, 371, 373, 374, 375, 398, 399, 400, 401, 402, 403, 404, 406, 407, 408, 409, 410, 411], "parameter": 404, "parent": [1, 35, 144, 345, 346, 347, 348, 351, 353, 354, 355, 357, 358, 361], "parlanc": 141, "parmeti": 6, "parmetis_root": 365, "pars": [5, 9, 14, 26, 27, 28, 29, 92, 119, 121, 130], "parser": [9, 48, 55, 59, 193, 216, 225, 232, 254, 274, 280, 302], "part": [1, 3, 5, 6, 7, 9, 12, 14, 18, 19, 40, 51, 144, 154, 157, 161, 163, 184, 209, 221, 238, 245, 261, 269, 287, 296, 309, 332, 336, 343, 344, 349, 351, 352, 353, 361, 362, 363, 364, 365, 383, 384, 395], "partial": [319, 320, 384, 395, 398, 399, 400, 401, 402, 404, 406, 407, 408, 409, 410, 411, 412], "partial_cell_typ": [384, 395, 398, 399, 400, 401, 402, 404, 406, 407, 408, 409, 410, 411, 412], "particular": [9, 141, 331, 357, 365, 383, 387, 391, 413], "particularli": [14, 381, 384, 404, 412, 417], "partit": [25, 36, 46, 65, 88, 144, 173, 343, 344, 349, 351, 352, 353, 361, 385, 386, 387, 388, 389, 390, 413], "partition_execut": 385, "partition_graph": [14, 25, 173], "pass": [5, 8, 9, 12, 13, 14, 18, 83, 124, 125, 144, 167, 170, 357, 358, 361, 363, 364, 365, 382, 413], "passiv": 401, "past": 14, "patch": [19, 126, 127, 384], "patch_edge_color": 126, "patch_mask": [19, 127], "path": [5, 6, 9, 11, 14, 18, 40, 42, 43, 51, 52, 57, 59, 61, 62, 67, 70, 99, 115, 117, 118, 123, 124, 127, 141, 144, 146, 170, 172, 292, 340, 358, 361, 363, 364, 365, 371, 377, 382, 384, 385, 386, 387, 388, 389, 390, 391, 392, 413, 419], "path_to_mpas_ocean": 384, "path_to_working_dir": 384, "pattern": 384, "pde": 2, "peopl": 385, "pep8": [364, 365], "per": [1, 8, 14, 25, 37, 39, 40, 47, 65, 96, 97, 126, 141, 144, 173, 332, 361, 384, 385, 386, 387, 388, 389, 390, 391, 392, 398, 400, 401, 402, 403, 406, 408, 409, 410, 412, 417], "perform": [1, 2, 5, 8, 14, 17, 18, 40, 45, 46, 49, 50, 71, 124, 141, 144, 154, 157, 163, 183, 184, 189, 193, 197, 208, 209, 215, 221, 238, 244, 245, 261, 269, 274, 287, 295, 296, 297, 309, 337, 340, 343, 344, 345, 346, 347, 348, 349, 351, 352, 353, 354, 355, 356, 361, 362, 363, 374, 382, 383, 384, 385, 391, 398, 399, 401, 404, 418], "performance_test": 361, "perhap": [17, 19, 43, 332, 357, 359], "period": [13, 342, 343, 344, 345, 347, 349, 351, 352, 353, 354, 355, 361, 384, 398, 399, 400, 401, 402, 403, 404, 406, 407, 408, 409, 410], "perl": 141, "perlmutt": [6, 141, 387, 391, 413], "permiss": [63, 365], "permit": 399, "person": [365, 381], "perspect": 358, "pertain": [412, 417], "perturb": [398, 401, 407, 408], "perturb_width": [361, 384, 398], "petabyt": 387, "petersen": [144, 365, 384, 398], "petsc_support": 6, "phase": [393, 404], "phc": [361, 395], "phi": 411, "phi_0": 411, "philosophi": [362, 364, 384], "physic": [13, 83, 374, 380, 384, 395], "pi": [361, 384, 395, 398, 399, 400, 401, 402, 403, 409], "pick": [17, 111, 112], "pickl": [5, 8, 111, 112, 361, 384, 413], "piec": [5, 357, 358, 384], "piecewis": 404, "pinch": 144, "pio": [6, 25, 36, 39, 173, 343, 344, 349, 351, 352, 353], "pip": 365, "piston": 411, "pkgconf": 141, "place": [5, 6, 14, 125, 141, 357, 361, 363, 378, 384, 391], "placehold": [25, 37, 40, 47, 173, 361, 413], "plan": [2, 13, 144, 340, 351, 353, 361, 377, 382, 386, 387, 388, 389, 390, 392, 406, 408, 419], "planar": [5, 9, 127, 144, 333, 342, 349, 358, 361, 384, 399, 404, 406, 407, 408, 411, 412, 417, 418, 419], "planar_hex": [13, 83, 343, 344, 349, 351, 352, 353, 356, 361, 384], "plane": [252, 399], "platform": 387, "pleas": [6, 141, 358, 364, 365, 384, 413], "plot": [13, 86, 125, 126, 127, 144, 146, 151, 195, 201, 230, 241, 276, 300, 314, 331, 332, 333, 334, 337, 343, 345, 346, 347, 348, 352, 354, 355, 375, 400, 401, 402, 403, 406, 407, 408, 409, 410, 416, 419], "plot_cell_width": 13, "plot_global_lat_lon_field": 19, "plot_global_mpas_field": 19, "plot_horiz_field": [19, 361, 384], "plot_land": [19, 125, 126], "plot_start_end": 332, "plot_tim": 407, "plot_transect": [144, 331], "plt": 384, "plu": [6, 382], "plugin": 364, "pm": [141, 392, 413], "pmi2": 389, "pn2034311": 381, "pnetcdf": [6, 141, 386, 387, 388, 389, 390, 391, 392], "png": [2, 13, 19, 332, 345, 346, 347, 348, 354, 355, 361, 384], "poari": 390, "point": [5, 6, 9, 56, 62, 103, 141, 333, 334, 337, 340, 342, 357, 358, 363, 364, 365, 377, 384, 385, 391, 404, 409, 413], "polar": [385, 386, 388, 395], "polari": [1, 2, 4, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 136, 138, 139, 141, 144, 340, 341, 343, 344, 345, 346, 347, 348, 349, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 362, 363, 377, 380, 381, 382, 384, 385, 391, 396, 397, 398, 404, 414, 418, 419], "polaris_branch": [340, 377], "polaris_cach": [5, 8, 20, 361], "polaris_compil": 365, "polaris_env": [141, 386, 387, 388, 389, 390, 391, 392], "polaris_head": 384, "polaris_machin": [11, 365], "polarisconfigpars": [9, 11, 17, 21, 40, 48, 51, 55, 61, 65, 66, 95, 98, 99, 115, 125, 126, 144, 160, 193, 212, 216, 225, 232, 244, 254, 258, 274, 280, 284, 302, 316, 318, 319, 320, 321, 322, 323, 327, 328, 329, 330, 384], "polarisyaml": [134, 135], "polygon": 19, "pop": [384, 398], "port": [1, 384, 392], "posit": [258, 284, 316, 317, 318, 319, 320, 321, 324, 325, 326, 327, 329, 331, 337, 384, 395, 411], "possibl": [2, 8, 11, 74, 342, 345, 346, 347, 348, 349, 354, 355, 361, 362, 363, 364, 383, 384, 395, 403], "possibli": [14, 40, 51, 338, 339, 358, 361, 363, 365, 384], "post": 377, "potenti": [141, 180, 193, 274, 361, 384, 398, 407], "pr": [5, 6, 413, 418], "practic": [361, 364, 365], "pre": [5, 141, 365], "prebootstrap": 6, "preced": [5, 59, 144], "precis": [14, 144, 361, 384], "predecessor": [364, 382, 383], "predefin": 5, "prefer": [1, 2, 141, 361, 362, 384, 385], "prefix": [14, 42, 141, 144, 150, 237, 363, 365, 385], "premium": 392, "prepend": 7, "prescrib": [343, 344, 351, 352, 353, 403], "present": [1, 52, 127, 144, 365, 384, 393], "preserv": [409, 413], "press": 395, "pressur": [7, 161, 162, 340, 349, 385, 393, 404, 406, 408], "pretti": [141, 361, 364, 384, 385], "prevent": [1, 361], "previou": [5, 127, 200, 229, 251, 361, 365, 372, 384, 397, 399, 413, 418], "previous": 384, "previous_workdir": 413, "primari": [2, 5, 9, 384, 418], "primarili": 383, "print": [5, 12, 18, 67, 124, 131, 361, 364, 399, 418], "prior": [53, 144, 361], "prioriti": 387, "privat": 384, "prjquota": 392, "probabl": [384, 391, 403], "problem": [6, 361, 365, 381, 384], "problemat": 361, "proc": 384, "proce": 1, "procedur": [4, 141, 365, 384, 392], "proceed": 365, "process": [2, 6, 8, 14, 35, 96, 97, 135, 361, 364, 365, 377, 382, 383, 384, 404], "processed_registry_filenam": 135, "processor": [199, 228, 361, 371, 398, 404], "produc": [12, 14, 17, 19, 40, 41, 43, 57, 144, 151, 160, 161, 182, 190, 198, 225, 245, 252, 337, 343, 344, 345, 346, 347, 348, 349, 351, 352, 353, 354, 355, 356, 361, 364, 365, 370, 380, 384, 399, 400, 402, 406, 408, 409, 410, 413, 416], "product": 8, "profil": [349, 356, 381, 411], "prognost": [349, 398, 404], "program": [364, 385], "progress": [63, 113, 114], "prohibit": 418, "proj": [104, 110, 390], "proj_attr": [104, 110], "proj_str": [104, 110], "project": [2, 5, 6, 7, 70, 104, 110, 340, 364, 365, 377, 378, 384, 385, 386, 387, 391, 413, 414], "project_nam": 387, "projectid": 392, "promot": 384, "propag": [406, 407, 408], "proper": 384, "properli": [2, 136, 138, 139, 384, 385, 413], "properti": [8, 302, 342, 361, 391, 400, 401, 402, 409, 410], "proport": [14, 144, 384, 395, 398, 400, 401, 402, 403, 404, 406, 408, 409, 410, 412, 417], "proportion": [401, 403], "propos": [1, 2], "proven": [8, 10, 59, 383, 385], "provid": [2, 3, 5, 8, 9, 14, 17, 18, 19, 25, 40, 42, 43, 48, 50, 51, 55, 100, 104, 110, 124, 130, 141, 144, 163, 173, 179, 184, 209, 245, 269, 296, 333, 334, 340, 343, 344, 349, 351, 352, 353, 356, 357, 358, 359, 361, 362, 363, 364, 365, 377, 380, 381, 382, 383, 384, 385, 391, 393, 396, 399, 401, 404, 409, 412, 413], "proxi": 383, "proxy_dis": 381, "proxy_en": 381, "proxyout": 381, "pscratch": 6, "pseudo": 2, "psi": 401, "psi0": 401, "psi_0": 401, "psu": [398, 404, 407, 411], "pty": 384, "public": [7, 11, 361, 384, 385], "public_html": [386, 388, 391], "pull": [7, 141, 364, 365, 384, 385], "pull_request": 385, "purg": 141, "purpos": [2, 357, 364, 384, 419], "purposefulli": [333, 334], "push": 384, "put": [144, 159, 365, 384], "put_origin_on_a_cel": 357, "py": [6, 12, 14, 18, 70, 141, 349, 357, 358, 364, 365, 382, 384, 385, 390], "pycharm": [364, 365, 384], "pyplot": 384, "pyremap": [17, 106], "python": [6, 7, 8, 9, 26, 46, 53, 144, 357, 359, 361, 363, 364, 365, 382, 383, 384, 385, 391, 392, 413], "q": 5, "qo": [65, 386, 387, 389, 391, 392, 413], "qu": [1, 5, 11, 144, 363, 384, 385, 397, 400, 401, 402, 403, 409, 410, 418], "qu240": [14, 361, 364, 365, 385, 413], "qu240_for_e3sm": 413, "qu240dynamicadjust": 14, "qu60": 17, "qu_base_mesh_120km": 1, "qu_base_mesh_150km": 1, "qu_base_mesh_180km": 1, "qu_base_mesh_210km": 1, "qu_base_mesh_240km": 1, "qu_base_mesh_60km": 1, "qu_base_mesh_90km": 1, "qu_base_resolut": [144, 401], "qu_forward_120km": 1, "qu_forward_150km": 1, "qu_forward_180km": 1, "qu_forward_210km": 1, "qu_forward_240km": 1, "qu_forward_60km": 1, "qu_forward_90km": 1, "qu_init_120km": 1, "qu_init_150km": 1, "qu_init_180km": 1, "qu_init_210km": 1, "qu_init_240km": 1, "qu_init_60km": 1, "qu_init_90km": 1, "qu_map_120km": 1, "qu_map_150km": 1, "qu_map_180km": 1, "qu_map_210km": 1, "qu_map_240km": 1, "qu_map_60km": 1, "qu_map_90km": 1, "qu_refinement_factor": [144, 401], "qu_resolut": [400, 401, 402, 409, 410], "qu_viz_120km": 1, "qu_viz_150km": 1, "qu_viz_180km": 1, "qu_viz_210km": 1, "qu_viz_240km": 1, "qu_viz_60km": 1, "qu_viz_90km": 1, "quad": 331, "quadrilater": 337, "qualit": [14, 399], "qualiti": [65, 386, 387, 389, 391, 392, 413], "quantiti": 19, "quasi": [13, 78, 345, 346, 347, 348, 354, 355, 363, 385, 400, 401, 402, 403, 404, 409, 410, 412, 417], "quasiuniformsphericalmeshstep": [13, 144, 363], "question": [14, 361, 385], "queu": 141, "queue": 383, "quick": [383, 384, 396, 404, 414], "quicker": 362, "quickli": [8, 404], "quiet": [18, 113, 114, 124, 131], "quit": [2, 359, 361, 363, 384, 404], "quot": 7, "quwisc240": [361, 364, 413], "quwisc240_for_e3sm": 413, "r": [5, 224, 392, 400, 401, 402, 409], "rad": 401, "radial": 419, "radian": [334, 336], "radiu": [224, 334, 400, 401, 402, 409, 410], "rain": 411, "rain_flux": 411, "rais": [7, 9, 18, 40, 43, 61, 62, 144, 361, 364, 384, 403], "ran": [1, 112], "rang": [9, 19, 127, 384, 407], "rare": [363, 365], "rate": [146, 148, 149, 220, 236, 257, 283, 306, 345, 346, 347, 348, 351, 353, 354, 355, 384, 400, 401, 402, 403, 406, 408, 409, 410, 411], "rather": [1, 2, 5, 6, 8, 9, 11, 13, 14, 40, 42, 59, 141, 144, 343, 361, 365, 381, 384, 395, 399], "ratio": 127, "rc": 6, "re": [5, 6, 9, 349, 363, 364, 365, 382, 384, 385, 391, 392, 400, 401, 402, 404, 409, 410], "reach": 362, "read": [8, 20, 27, 28, 29, 40, 41, 51, 63, 91, 92, 129, 144, 342, 361, 363, 384], "readabl": [11, 364], "readi": [6, 384, 392], "readlin": 141, "readm": [11, 363], "realist": [357, 383, 404, 419], "realli": [384, 392], "reason": [14, 17, 18, 46, 141, 361, 364, 384, 418], "recent": [362, 396, 414], "recip": 363, "recogn": [365, 385, 413], "recognit": 365, "recommend": [5, 7, 11, 19, 141, 361, 362, 364, 365, 384, 391], "recompil": 413, "recreat": [6, 363, 365, 381], "recurs": [6, 340, 364, 365, 377, 384, 413], "red": [127, 332, 359], "redirect": [40, 361], "reduc": [357, 361, 404], "redund": [5, 318, 321, 327, 329, 343, 357, 384], "ref": [318, 321, 327, 329, 384], "ref_dens": 7, "refbottomdepth": [318, 319, 320, 321, 324, 325, 327, 329, 361, 384], "refer": [1, 7, 14, 40, 180, 193, 274, 318, 321, 324, 327, 329, 361, 364, 365, 382, 383, 384, 395, 398, 399, 403, 407, 413], "referenc": [364, 384], "reference_tim": [14, 144], "refin": [144, 146, 147, 149, 154, 157, 216, 219, 221, 225, 226, 232, 235, 238, 254, 256, 261, 280, 282, 287, 292, 302, 305, 307, 309, 312, 401], "refinement_factor": [144, 146, 147, 149, 150, 154, 157, 220, 221, 225, 226, 236, 237, 238, 257, 261, 283, 287, 292, 307, 309, 312, 406, 408], "refinterfac": [318, 321, 327, 329, 384], "reflayerthick": 14, "reflect": [1, 5, 365], "reformat": 364, "reftopdepth": [318, 321, 324, 325, 327, 329, 384], "refzmid": [14, 318, 321, 327, 329, 361, 384], "regard": 2, "regardless": [51, 363], "region": [17, 19, 383, 385, 404], "registri": [135, 342, 377], "registry_process": 377, "regress": [2, 343, 345, 346, 347, 348, 352, 354, 355, 362, 382, 383, 384, 398, 401, 404, 413, 418], "regular": [5, 19, 67, 72, 79, 216, 225, 232, 302, 307, 312, 384, 386, 389, 391, 392, 403, 413], "reinstal": 365, "rel": [1, 2, 5, 9, 17, 18, 42, 43, 52, 57, 59, 117, 118, 123, 124, 154, 157, 160, 161, 163, 173, 184, 209, 340, 358, 361, 363, 364, 365, 371, 377, 382, 384, 398, 403, 404, 407, 413, 419], "relat": [1, 6, 7, 11, 13, 14, 17, 141, 144, 340, 343, 344, 345, 346, 347, 348, 349, 351, 352, 353, 354, 355, 356, 357, 361, 365, 381, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 395, 396, 398, 399, 400, 401, 402, 403, 404, 407, 409, 410, 411, 412, 413, 414], "relationship": [345, 400], "relativevort": 384, "relativevorticitycel": 14, "releas": [6, 141, 364, 365, 383, 391, 396, 413], "release_6": 396, "relev": [3, 7, 9, 144, 345, 346, 347, 348, 351, 353, 354, 355, 384, 386, 387, 388, 389, 390, 391, 392, 412, 413, 417], "reli": [14, 361, 363, 384], "remain": [6, 384, 401, 403, 404, 411], "remap": [1, 10, 19, 352, 383, 401, 403, 407, 412, 417], "remap_fil": 106, "remap_method": [17, 401, 412, 417], "remapp": [106, 107], "rememb": 365, "remot": [11, 42, 365, 383], "remote_filenam": 11, "remov": [1, 5, 14, 24, 54, 64, 114, 343, 344, 349, 351, 352, 353, 363, 365, 384], "remove_step": 363, "renam": [18, 124, 168, 169, 364], "render": [14, 28, 29, 119], "renorm": 395, "repeat": [333, 334, 346], "replac": [1, 5, 7, 9, 14, 26, 27, 28, 29, 30, 31, 32, 33, 48, 51, 55, 62, 92, 119, 130, 131, 141, 144, 154, 157, 160, 163, 165, 176, 177, 186, 192, 211, 227, 247, 271, 363, 364, 384, 385, 413], "repo": [2, 5, 6, 141, 340, 377, 383, 384, 414], "report": 18, "repositori": [141, 359, 383, 384, 413], "repres": [40, 384, 395, 401, 404, 409], "request": [6, 7, 14, 15, 25, 34, 36, 141, 144, 154, 157, 173, 319, 320, 361, 363, 364, 365, 381, 384, 385, 400, 401, 402, 409, 410], "requir": [5, 6, 8, 14, 17, 18, 25, 37, 40, 41, 47, 100, 144, 163, 173, 184, 209, 245, 269, 296, 340, 357, 358, 361, 362, 363, 364, 365, 377, 378, 381, 383, 384, 385, 390, 391, 395, 396, 412, 413, 414, 417, 419], "rerun": [5, 346, 365, 401], "res_str": 384, "resdir": [9, 358], "reset": 6, "resid": [1, 5, 9, 42, 144, 146, 219, 235, 256, 282, 305, 307, 312, 359, 361, 363], "resolut": [1, 9, 13, 14, 17, 71, 74, 78, 79, 83, 101, 105, 108, 144, 146, 147, 151, 153, 157, 159, 163, 166, 182, 183, 184, 187, 190, 191, 193, 195, 198, 206, 209, 213, 216, 232, 244, 245, 248, 256, 263, 265, 274, 282, 289, 292, 302, 305, 307, 312, 333, 334, 343, 344, 345, 346, 347, 348, 349, 351, 352, 353, 354, 355, 356, 357, 358, 359, 361, 363, 385, 393, 395, 398, 399, 400, 401, 402, 403, 404, 406, 407, 408, 409, 410, 411, 412, 417, 419], "resolution_to_subdir": [9, 358], "resolv": [365, 399], "resourc": [11, 14, 37, 40, 44, 47, 95, 96, 97, 155, 158, 164, 174, 185, 210, 246, 262, 270, 288, 296, 343, 344, 351, 352, 353, 361, 363, 384], "resources_fix": 296, "respect": [2, 8, 9, 14, 18, 19, 144, 147, 206, 333, 334, 349, 361, 364, 400, 401, 402, 404, 409, 410, 412, 417], "respons": 365, "rest": [6, 180, 214, 326, 395, 399, 401], "restart": [14, 18, 51, 144, 221, 244, 245, 250, 344, 345, 347, 348, 349, 351, 352, 353, 354, 355, 356, 358, 362, 364, 370, 371, 380, 382, 384, 401, 404, 413, 418], "restart_filenam": 371, "restart_interv": 14, "restart_run": [5, 18, 380, 398, 416], "restart_test": 357, "restartstep": 346, "restarttest": 357, "restingthick": [144, 318, 321, 326, 327, 329, 384], "restor": 411, "restrict": [13, 384, 407, 412], "restructuredtext": 7, "result": [5, 13, 18, 61, 74, 83, 141, 144, 182, 190, 195, 198, 201, 225, 276, 300, 333, 334, 335, 338, 339, 343, 345, 346, 347, 348, 352, 354, 355, 361, 362, 364, 365, 370, 375, 382, 384, 385, 398, 400, 401, 402, 403, 409, 410, 412, 417, 418], "retain": 385, "retriev": [8, 381], "return": [2, 7, 15, 31, 32, 33, 50, 58, 61, 64, 65, 72, 73, 74, 79, 83, 89, 90, 92, 95, 96, 106, 115, 116, 118, 119, 121, 124, 127, 130, 134, 135, 144, 147, 148, 149, 150, 155, 158, 160, 164, 166, 168, 169, 170, 174, 176, 177, 179, 180, 185, 206, 210, 212, 220, 224, 236, 237, 246, 257, 259, 260, 262, 270, 283, 285, 286, 288, 306, 316, 319, 320, 324, 325, 326, 331, 333, 334, 335, 336, 337, 338, 339, 363, 364, 384, 401], "reus": [14, 19, 127, 361, 364, 365, 384, 385, 413], "revers": 409, "revis": [5, 31, 32, 176, 177, 385], "rho": 144, "rho_0": 399, "ri": 224, "right": [15, 140, 141, 142, 144, 332, 363, 365, 384, 385, 395, 398, 401, 413], "rightarrow": 395, "rigid": [342, 410], "rise": 404, "risk": [365, 384, 404], "rk4": [14, 144, 349, 364, 400, 401, 402, 403, 404, 409, 410], "rk4_dt_per_km": [144, 393, 400, 401, 402, 403, 404, 409, 410], "role": 1, "root": [1, 42, 141, 144, 340, 358, 361, 364, 365, 377, 382, 385, 386, 387, 388, 389, 390, 391, 392, 395, 413], "rotat": [355, 396, 400, 401, 402, 405, 406, 408, 409], "rotation_2d": [304, 340, 350, 410], "rotation_vector": 410, "rough": 409, "roughli": [400, 401, 402, 409, 410], "round": [144, 400, 401, 402, 409, 410], "routin": 19, "row": 384, "rpe": [9, 201, 358, 364, 384, 413], "rpe_": 384, "rpe_1_nu_1": [384, 398], "rpe_2_nu_5": [384, 398], "rpe_3_nu_10": 384, "rpe_4_nu_20": 384, "rpe_5_nu_200": 384, "rpe_t": 384, "rst": [7, 14, 384], "rule": 73, "run": [4, 5, 6, 7, 10, 12, 17, 18, 19, 25, 30, 37, 40, 41, 43, 46, 47, 50, 51, 52, 57, 70, 95, 96, 97, 106, 117, 118, 123, 139, 141, 154, 156, 157, 163, 165, 169, 173, 183, 184, 186, 190, 192, 195, 199, 201, 209, 211, 221, 225, 226, 227, 228, 238, 244, 245, 247, 250, 256, 261, 265, 269, 271, 276, 282, 287, 295, 296, 297, 305, 307, 309, 312, 340, 343, 344, 345, 346, 347, 348, 349, 351, 352, 353, 354, 355, 356, 359, 360, 362, 363, 364, 370, 371, 374, 377, 380, 381, 382, 383, 384, 385, 391, 393, 397, 418, 419], "run_as_subprocess": [40, 361], "run_by_default": [52, 363], "run_dur": [144, 393, 400, 401, 402, 403, 404, 409, 410], "run_duration_str": 144, "run_mod": 14, "run_second": [14, 384], "run_single_step": 8, "run_step": 363, "run_task": [8, 361, 363], "run_time_step": [14, 184, 209, 269, 344, 361, 384], "rung": [400, 401, 402, 403, 409, 410], "runmodel": 363, "runtim": [1, 8, 14, 30, 46, 144, 156, 165, 186, 192, 211, 227, 247, 271, 361, 384, 404], "runtime_setup": [14, 17, 37, 47, 343, 344, 349, 351, 352, 353, 363], "sacctmgr": 387, "safe": [6, 14, 361, 365, 398], "safer": 413, "safest": [141, 365], "sai": [384, 391], "salin": [18, 200, 251, 342, 343, 349, 352, 356, 361, 384, 398, 400, 401, 402, 403, 404, 407, 409, 410, 411, 412, 417], "salinity_difference_across_mixed_lay": 411, "salinity_gradient_interior": 411, "salinity_gradient_mixed_lay": 411, "salinity_interior_restoring_r": 411, "salinity_piston_veloc": 411, "salinity_surface_restoring_valu": 411, "salloc": [387, 390, 391, 392], "same": [5, 6, 7, 9, 14, 18, 40, 41, 42, 50, 124, 126, 141, 144, 148, 149, 168, 169, 220, 236, 257, 283, 306, 343, 352, 356, 357, 359, 361, 362, 363, 364, 365, 382, 384, 385, 386, 387, 388, 389, 390, 391, 392, 395, 397, 398, 400, 401, 402, 403, 404, 409, 410, 411, 413, 418, 419], "saniti": [5, 384], "sara": 6, "satisfi": 1, "save": [8, 19, 61, 86, 124, 141, 332, 343, 345, 346, 347, 348, 354, 355, 357, 361, 363, 384, 391, 397, 398, 404], "save_imag": 357, "sbatch": [6, 384, 390, 391, 413], "scalandr": 6, "scalar": 342, "scale": [144, 154, 157, 220, 221, 225, 226, 236, 238, 257, 261, 283, 287, 309, 398, 409, 413], "scancel": 391, "scheme": [345, 347, 349, 352, 354, 355, 393, 400, 404, 407, 409, 411], "scienc": 395, "scientif": [365, 413], "scipi": [333, 334, 335, 385], "scorpio": [6, 365, 391, 413], "scratch": [5, 6, 365, 384, 387, 392, 413], "scratch4": 387, "scratch5": 387, "scrip": [100, 140, 142, 385], "script": [4, 5, 6, 11, 12, 19, 56, 66, 137, 140, 141, 142, 364, 382, 383, 384, 387, 391], "sea": [7, 144, 161, 162, 207, 258, 260, 284, 286, 320, 324, 325, 326, 331, 332, 337, 340, 349, 378, 380, 383, 384, 385, 395, 404, 406, 408, 416, 419], "seafloor": [319, 324, 325, 326, 331, 332, 337, 395], "seafloor_color": 332, "seaic": [3, 10, 20, 42, 358, 361, 380, 382, 383, 413, 414, 417, 419], "seaice_model": 377, "seaice_standalone_framework": 414, "search": [5, 67, 387], "seawat": 7, "sec": 401, "seciton": 144, "second": [1, 9, 13, 14, 15, 90, 144, 149, 150, 179, 184, 209, 220, 236, 237, 257, 283, 296, 333, 334, 346, 356, 361, 364, 393, 398, 400, 401, 402, 404, 409, 411, 416], "section": [2, 3, 5, 6, 7, 9, 12, 14, 17, 25, 31, 33, 79, 125, 126, 129, 130, 131, 141, 144, 173, 176, 252, 278, 316, 318, 321, 327, 329, 340, 345, 346, 347, 348, 354, 355, 356, 357, 358, 361, 362, 364, 365, 377, 381, 384, 385, 386, 387, 388, 389, 390, 391, 392, 395, 399, 400, 401, 402, 403, 404, 407, 409, 410, 411, 412, 413, 417], "sections_yet_another_channel_": 384, "see": [5, 6, 7, 8, 9, 12, 13, 14, 17, 18, 136, 138, 139, 141, 331, 343, 345, 346, 347, 348, 349, 352, 353, 354, 355, 361, 365, 381, 384, 385, 391, 396, 397, 398, 400, 401, 402, 403, 404, 406, 407, 408, 409, 410, 411, 412, 413, 414, 416, 418, 419], "seem": [6, 14, 384, 387, 392], "seen": 384, "segment": [333, 334, 335, 337], "select": [5, 8, 127, 331, 361, 365, 384], "self": [1, 9, 11, 12, 14, 17, 18, 19, 53, 86, 144, 358, 361, 363, 364, 384, 385], "sens": [9, 383, 384], "sensibl": 411, "sensible_heat_flux": 411, "sensit": 403, "separ": [5, 7, 9, 14, 17, 18, 19, 146, 292, 361, 362, 382, 384, 400, 401, 402, 409, 410, 413], "sequenc": [2, 5, 14, 144, 331, 345, 346, 347, 348, 354, 355, 360, 361, 364, 382, 384, 413, 418, 419], "seri": [1, 14, 144, 195, 201, 276, 346, 348, 351, 380, 384, 393, 397, 404], "serial": [1, 46, 361, 363, 383, 384, 413], "serv": [6, 117, 118, 123, 144, 357, 384], "server": [5, 8, 42, 57, 361, 364, 385, 392], "server_base_url": 385, "servic": [65, 386, 387, 389, 391, 392, 413], "session": [365, 384], "set": [4, 5, 6, 7, 8, 9, 10, 11, 14, 17, 18, 19, 26, 27, 28, 29, 30, 40, 42, 48, 49, 55, 59, 63, 79, 98, 99, 101, 102, 103, 104, 105, 107, 108, 109, 110, 115, 117, 118, 119, 121, 123, 124, 125, 126, 127, 136, 137, 138, 139, 140, 141, 142, 156, 165, 171, 186, 189, 192, 197, 211, 215, 217, 227, 233, 247, 271, 291, 296, 303, 318, 321, 322, 323, 327, 328, 329, 330, 333, 334, 340, 342, 343, 344, 345, 346, 347, 348, 349, 351, 352, 353, 354, 355, 356, 357, 360, 361, 363, 364, 378, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 397, 398, 399, 400, 401, 402, 404, 406, 408, 409, 410, 411, 412, 417, 418], "set_model_resourc": 14, "set_ov": [19, 345, 347, 354, 355], "set_shared_config": [9, 17, 363], "set_und": [19, 345, 347, 354, 355], "settl": 384, "setup": [1, 6, 7, 9, 11, 14, 18, 30, 37, 40, 41, 47, 51, 141, 144, 156, 160, 165, 186, 192, 211, 227, 247, 271, 343, 344, 351, 352, 353, 356, 363, 364, 365, 382, 383, 384, 385, 400, 401, 402, 403, 409, 410, 413, 419], "setup_complet": 1, "setup_mesh": [12, 361], "setup_ssh_adjustment_step": 144, "setup_suit": 8, "setup_task": [1, 8, 9], "setupmesh": [12, 361, 363], "sever": [5, 6, 12, 141, 144, 357, 361, 363, 364, 365, 383, 384, 407, 412, 413, 418], "sh": [6, 136, 137, 138, 139, 140, 141, 142, 365, 381, 384, 413], "shallow": [351, 365, 400, 401, 402, 403, 406, 408, 409, 410, 412], "shape": [346, 401], "share": [0, 7, 11, 19, 21, 25, 40, 48, 51, 52, 55, 141, 144, 166, 182, 183, 190, 193, 198, 216, 225, 232, 254, 268, 274, 280, 302, 340, 343, 344, 345, 346, 347, 348, 349, 352, 354, 355, 356, 357, 358, 359, 361, 363, 365, 367, 380, 382, 383, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 398, 400, 401, 402, 409, 410, 411, 412, 413, 417, 419], "shared_clim": 413, "shared_step": 160, "sheet": 19, "shelf": [7, 159, 161, 243, 244, 248, 250, 252, 349, 357, 364, 384, 385, 394, 395, 396, 405], "shell": [381, 383], "shelv": [159, 340, 385, 395, 404], "short": [5, 183, 244, 295, 297, 361, 362, 363, 364, 374, 384, 398, 399, 404], "short_forward": 399, "shortcut": [364, 413], "shorter": [190, 225, 362, 370], "shortwav": 411, "shortwave_heat_flux": 411, "should": [1, 2, 5, 6, 7, 9, 11, 12, 14, 18, 19, 25, 26, 31, 32, 33, 40, 41, 42, 49, 51, 53, 61, 66, 79, 117, 118, 125, 127, 136, 137, 138, 139, 140, 141, 142, 144, 146, 151, 189, 197, 215, 298, 300, 333, 334, 340, 357, 358, 359, 361, 362, 363, 365, 377, 378, 381, 382, 384, 385, 398, 399, 400, 401, 402, 403, 404, 407, 409, 410, 411, 412, 413, 417], "shouldn": [5, 141, 296, 384], "show": [2, 7, 13, 63, 331, 332, 361, 384, 391, 392, 398, 399, 400, 401, 402, 403, 409, 410, 412, 417], "show_patch_edg": [19, 127, 361, 384], "show_progressbar": 63, "shown": [1, 14, 19, 141, 359, 393, 411], "sia": [363, 365], "sia_decomposition_test": 413, "sia_integr": 413, "sia_restart_test": 413, "sia_smoke_test": 413, "side": 7, "signific": [361, 362, 363], "significantli": [13, 395, 403], "similar": [1, 2, 5, 9, 12, 13, 14, 137, 140, 141, 142, 144, 357, 359, 364, 365, 384, 385, 395, 399, 400, 402, 409, 410, 412, 413], "similarli": [5, 8, 127, 140, 142, 337, 340, 361, 363, 365, 391, 413], "simpl": [141, 144, 364, 377, 384, 413], "simpler": [365, 384], "simplest": [365, 383], "simpli": [1, 14, 18, 59, 141, 183, 244, 358, 361, 363, 365, 384, 395, 413, 418], "simplifi": [10, 349, 399, 404], "simplify_local_mach": 6, "simul": [144, 344, 349, 351, 353, 361, 382, 384, 393, 397, 398, 400, 403, 404, 406, 408, 412, 413, 417], "sin": [361, 384, 398, 400, 402, 403, 406, 407, 408, 409], "sinc": [5, 6, 14, 25, 90, 112, 135, 144, 343, 361, 363, 364, 365, 384, 398, 399, 400, 401, 402, 403, 406, 408, 409, 410, 412, 417], "singl": [1, 5, 8, 9, 19, 40, 127, 141, 294, 295, 297, 298, 300, 356, 361, 363, 364, 369, 370, 371, 373, 374, 375, 377, 378, 382, 384, 391, 396, 400, 401, 402, 405, 406, 408, 409, 410, 414, 415], "single_column": [340, 350, 358, 377, 379, 411], "single_column_forc": [356, 411], "single_nod": [141, 385, 386, 387, 388, 389, 390, 391, 392, 413], "sinusoid": [398, 407], "sit": 8, "site": 381, "situat": [1, 17, 31, 32, 33, 365, 384, 413], "size": [2, 13, 19, 73, 74, 83, 126, 127, 144, 175, 178, 180, 332, 357, 384, 385, 398, 401, 403, 406, 407, 408, 411, 412, 417], "skamarock": 401, "skill": 364, "skip": [1, 5, 8, 124, 365, 418], "skip_step": 5, "slate": 361, "slice": [127, 147, 206], "slightli": [14, 365], "slip": [205, 206, 207, 342], "slot": [400, 402, 409, 410], "slotted_cylinders_amplitud": [400, 402, 409, 410], "slotted_cylinders_background": [400, 402, 409, 410], "slotted_cylinders_radiu": [400, 402, 409, 410], "slow": 401, "slurm": [1, 65, 98, 141, 361, 383, 385, 386, 387, 388, 389, 390, 392, 413], "slurm_jobid": 384, "small": [2, 9, 46, 141, 333, 334, 357, 361, 384, 386, 387, 394, 395, 404, 409, 411, 413], "smaller": 413, "smallest": [40, 361, 382, 395, 419], "smoke_test": [357, 363], "smoketest": [357, 363], "smooth": [13, 100, 332], "snippet": [12, 384], "snow": 380, "so": [5, 6, 7, 9, 11, 12, 13, 14, 18, 19, 25, 39, 63, 111, 141, 144, 173, 318, 327, 329, 340, 343, 344, 349, 351, 352, 353, 357, 358, 361, 363, 364, 365, 377, 382, 384, 385, 390, 391, 392, 395, 398, 399, 400, 401, 402, 403, 404, 409, 410, 411, 413, 418], "soft": [386, 388, 391, 413], "softwar": [2, 88, 390, 392, 413], "software_compil": 390, "solar": 411, "solid": [342, 378, 398, 401, 404, 407], "solut": [18, 139, 147, 149, 150, 206, 207, 220, 236, 237, 257, 258, 259, 260, 280, 281, 282, 283, 284, 285, 286, 287, 289, 292, 344, 346, 348, 351, 353, 362, 381, 384, 396, 399, 403, 405, 406], "solv": [342, 381, 395], "solver": [2, 363, 365, 383, 413], "some": [5, 6, 8, 9, 10, 11, 13, 14, 15, 18, 51, 141, 144, 333, 334, 342, 345, 346, 347, 348, 354, 355, 357, 359, 361, 363, 364, 365, 381, 382, 384, 385, 386, 387, 388, 389, 390, 391, 392, 395, 396, 398, 404, 413, 414, 418, 419], "someth": [5, 7, 101, 105, 108, 140, 141, 142, 365, 384], "sometim": [6, 14, 318, 321, 327, 329, 357, 359, 361, 363, 382, 384, 418], "somewher": 361, "soon": [139, 141, 384, 413], "sophist": 14, "sort": [144, 358, 359, 364, 365], "sound": 364, "sourc": [2, 6, 7, 11, 17, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 361, 365, 368, 369, 370, 371, 372, 373, 374, 375, 376, 384, 385, 391, 392, 413], "source_typ": 100, "southern": [384, 398], "sowisc12to60": [361, 413], "spac": 13, "space": [5, 6, 7, 9, 13, 141, 144, 146, 147, 149, 154, 157, 216, 219, 220, 221, 225, 226, 232, 235, 236, 238, 254, 256, 257, 261, 280, 282, 283, 287, 292, 302, 305, 309, 351, 353, 361, 365, 384, 387, 391, 395, 401, 403, 406, 408, 413], "spack": [4, 5, 136, 138, 139, 381, 383, 384, 386, 387, 388, 389, 390, 391, 392], "spack_for_mache_1": 6, "spack_temp": 6, "spack_test": 6, "spackdir": 141, "span": 411, "spatial": [333, 334, 335, 406, 408, 411], "spawn": 381, "spec": [141, 381, 392], "special": [5, 382, 412], "specif": [7, 9, 14, 19, 53, 141, 144, 340, 357, 358, 359, 361, 377, 378, 383, 384, 385, 387, 391, 398, 404, 407, 412, 413, 417, 418], "specifi": [5, 6, 14, 17, 18, 19, 42, 141, 144, 342, 361, 365, 380, 384, 385, 390, 392, 398, 399, 400, 401, 402, 404, 409, 410, 412, 413, 417], "speed": 418, "sphere": [13, 304, 305, 307, 309, 312, 345, 346, 347, 348, 354, 355, 400, 401, 402, 409, 410], "sphere_radiu": 334, "sphere_transport": [345, 347, 354, 355, 400, 402, 409, 410], "sphere_transport_viz": [400, 402, 409, 410], "sphere_transport_viz_": [345, 347, 354, 355], "sphere_transport_viz_h": [400, 402, 409, 410], "sphere_transport_viz_h_diff": [400, 402, 409, 410], "sphere_transport_viz_trac": [400, 402, 409, 410], "sphere_transport_viz_tracer_diff": [400, 402, 409, 410], "spheretransport": [345, 347, 354, 355], "spheric": [1, 5, 154, 331, 345, 346, 347, 348, 354, 355, 363, 400, 401, 402, 409, 410, 418], "spherical_converg": [144, 348, 363, 400, 401, 402, 409, 410], "spherical_convergence_forward": [400, 402, 409, 410], "spherical_mesh": [13, 79], "sphericalconvergenceforward": [144, 345, 346, 347, 348, 354, 355], "sphinx": 7, "spin": 14, "split": [144, 364], "split_dt_per_km": [144, 393, 404], "split_explicit": [144, 393, 400, 401, 402, 403, 404, 409, 410], "split_explicit_t": [144, 384], "splitext": 364, "spuriou": [384, 398], "spyder": 364, "sqrt": [13, 15, 406], "squash": [349, 395], "squeue": 391, "src": 377, "src_": 17, "src_from_lon_lat": 17, "src_from_mpa": 17, "src_grid_info": 100, "src_mesh_filenam": 100, "sreport": 387, "srun": [141, 361, 381, 384, 385, 386, 387, 388, 389, 390, 391, 392, 413], "ss": [144, 179], "ssh": [7, 19, 144, 163, 318, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 332, 337, 340, 349, 351, 353, 361, 384, 385, 387, 390, 392, 395, 403, 404, 406, 408], "ssh_adjust": [144, 159, 160, 161, 340, 349, 361, 385, 393, 404], "ssh_amplitud": [406, 408], "ssh_color": 332, "ssh_forward": [144, 160, 163, 349], "sshadjust": [144, 349], "sshare": 387, "sshdir": 159, "sshforward": [144, 160, 349], "ssl": 385, "stabil": [212, 399], "stabl": 407, "stack": 381, "stackoverflow": [14, 62, 384], "staf": 2, "stage": [144, 342, 361, 363, 365, 373, 380, 396, 413], "stagger": [13, 83], "stai": [6, 365], "stair": 395, "stamp": 5, "stand": 6, "standalon": [5, 14, 139, 141, 358, 365, 382, 383, 391, 414], "standard": [19, 268, 269, 274, 352, 364, 365, 374, 384, 387, 407, 413], "standard_phys": 380, "standardphys": 380, "star": [144, 326, 329, 330, 349, 384, 398, 399, 400, 401, 402, 404, 406, 407, 408, 409, 410, 411, 412], "start": [6, 7, 8, 14, 15, 90, 120, 127, 141, 332, 342, 343, 348, 357, 362, 363, 364, 383, 387, 391, 392, 396, 414, 416], "start_color": 332, "start_xtim": 90, "startswith": 384, "state": [144, 149, 161, 180, 182, 183, 190, 191, 193, 198, 220, 236, 257, 268, 269, 274, 283, 342, 343, 344, 345, 346, 347, 348, 349, 351, 352, 353, 354, 355, 356, 361, 362, 384, 393, 401, 403], "statement": [2, 12, 361, 382], "static": [73, 74], "stationari": [398, 411], "statist": [15, 385], "stderr": [12, 40, 51, 361, 363], "stdout": [5, 12, 40, 51, 361, 363], "stdout_logg": [51, 363], "steadi": [362, 403], "steam": 135, "steer": 2, "step": [0, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 17, 18, 19, 20, 22, 24, 25, 26, 27, 28, 29, 30, 37, 51, 52, 54, 57, 71, 76, 78, 81, 84, 85, 95, 97, 99, 100, 106, 111, 112, 113, 114, 117, 118, 141, 144, 146, 147, 149, 152, 154, 156, 157, 159, 160, 161, 163, 165, 166, 167, 173, 180, 182, 183, 184, 186, 187, 188, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 205, 208, 209, 211, 212, 213, 215, 216, 219, 221, 222, 223, 226, 227, 228, 229, 230, 231, 232, 235, 238, 239, 240, 241, 242, 244, 245, 247, 248, 249, 250, 251, 252, 253, 256, 261, 263, 264, 265, 266, 268, 269, 271, 272, 273, 274, 276, 277, 278, 279, 282, 287, 289, 290, 292, 293, 296, 298, 299, 300, 301, 302, 305, 307, 308, 309, 310, 311, 312, 313, 314, 315, 342, 343, 344, 345, 346, 347, 348, 349, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 362, 363, 364, 371, 372, 373, 375, 376, 380, 382, 383, 385, 392, 395, 418, 419], "step_dir": 11, "step_is_subprocess": [5, 113], "step_path": 57, "step_subdir": [199, 228, 250, 371], "step_symlink": [51, 363], "steps_to_run": [5, 51, 114, 361, 363, 384, 385, 399], "steps_to_skip": 114, "stereograph": 385, "stewart": 395, "stick": 384, "still": [384, 396, 412, 413, 417], "stommel": 399, "storag": 387, "store": [8, 11, 19, 53, 141, 144, 349, 351, 353, 361, 384, 400, 402, 409, 410, 413], "str": [11, 14, 20, 25, 26, 27, 28, 29, 31, 32, 34, 40, 41, 42, 43, 48, 51, 52, 55, 57, 59, 61, 62, 63, 64, 65, 66, 67, 71, 78, 84, 88, 90, 92, 96, 97, 99, 100, 101, 102, 103, 104, 105, 108, 109, 110, 114, 115, 116, 117, 118, 119, 123, 124, 125, 126, 127, 129, 130, 132, 134, 135, 144, 146, 147, 148, 149, 150, 151, 154, 157, 160, 161, 163, 166, 167, 170, 172, 173, 176, 177, 179, 180, 182, 183, 184, 187, 190, 191, 193, 195, 198, 199, 201, 205, 206, 209, 216, 219, 220, 221, 222, 225, 226, 228, 230, 232, 235, 236, 237, 238, 239, 241, 244, 245, 248, 250, 252, 254, 256, 257, 261, 263, 265, 268, 269, 272, 274, 276, 280, 282, 283, 287, 289, 292, 296, 298, 300, 302, 305, 306, 307, 309, 310, 312, 314, 317, 332, 361, 363, 371, 373, 375, 384], "straightforward": 361, "strategi": [12, 386, 387, 388, 389, 390, 392], "stratif": 407, "stream": [5, 7, 8, 10, 25, 28, 30, 35, 49, 129, 130, 134, 135, 165, 178, 186, 189, 192, 197, 211, 215, 227, 247, 271, 340, 342, 343, 344, 345, 346, 347, 348, 349, 351, 352, 353, 354, 355, 356, 357, 358, 361, 363, 364, 377, 380, 385, 412, 417], "stream_replac": 14, "streamfunct": 399, "streams_data": 25, "streams_filenam": 119, "streams_sect": [25, 129, 130], "strenuou": 404, "stress": [344, 384, 399, 411], "stretch": [318, 321, 327, 329, 384, 395], "strftime": [14, 384], "strict": 384, "strictli": [6, 13, 364, 384], "stride": [25, 39, 173], "string": [5, 9, 15, 42, 104, 110, 141, 144, 159, 160, 163, 179, 302, 332, 365], "strip": 364, "structur": [5, 13, 31, 32, 33, 360, 363, 383, 384, 407], "studi": [400, 401, 402, 403, 409, 410], "style": [128, 144, 383, 384], "sub": [120, 384, 404], "subclass": [17, 75, 78, 79, 80, 85, 144, 384], "subdir": [1, 5, 9, 17, 25, 40, 51, 52, 71, 78, 84, 100, 144, 146, 154, 157, 159, 163, 173, 184, 209, 213, 219, 221, 222, 226, 230, 235, 238, 239, 241, 245, 256, 261, 263, 269, 282, 287, 289, 296, 305, 307, 309, 310, 312, 314, 361, 363, 371, 384], "subdirectori": [1, 5, 7, 8, 13, 20, 24, 25, 40, 42, 51, 52, 54, 67, 71, 78, 84, 100, 117, 144, 146, 154, 157, 159, 163, 173, 184, 209, 219, 221, 222, 226, 228, 230, 235, 238, 239, 241, 245, 256, 261, 263, 265, 269, 282, 287, 289, 292, 296, 298, 300, 305, 307, 309, 310, 312, 314, 357, 359, 361, 363, 364, 384, 412, 413, 417, 419], "subdivid": [166, 333, 334, 363], "subdivis": [13, 71, 72, 73, 74, 75], "subdivision_r": [333, 334], "submit": 391, "submodul": [6, 340, 358, 365, 377, 384, 413], "subpackag": 364, "subprocess": [12, 40, 96, 97, 113, 361, 364, 381], "subsequ": [19, 144, 361, 418], "subset": 5, "substanti": 365, "substep": [96, 97], "substitut": 14, "substr": [5, 141], "subtask": 47, "subtitl": [125, 126], "subtleti": 13, "success": [1, 2, 8, 50, 61, 340, 358, 377, 384, 385, 399], "successfulli": [1, 50, 384], "suffici": [40, 361, 407], "suffix": [6, 42, 118, 361], "suggest": [6, 141, 381], "suit": [1, 2, 6, 7, 12, 18, 40, 51, 66, 67, 113, 114, 115, 116, 118, 141, 343, 360, 361, 363, 365, 382, 383, 384, 385, 386, 387, 388, 389, 392, 396, 398], "suite_nam": [5, 8, 114, 116, 118, 123, 413], "suitenam": 413, "sum": 15, "summar": 2, "summari": [3, 387], "super": [9, 14, 17, 18, 144, 358, 361, 363, 364, 384], "superclass": 361, "supercomput": 384, "suppli": [5, 6, 7, 15, 18, 127, 135, 141, 361, 365, 384], "support": [5, 6, 8, 13, 17, 40, 144, 318, 327, 329, 342, 361, 364, 377, 382, 383, 384, 385, 386, 387, 388, 389, 390, 392, 395, 398, 400, 401, 402, 403, 404, 406, 407, 408, 409, 410, 411, 412, 419], "suppos": 384, "sure": [1, 5, 6, 7, 12, 14, 17, 18, 141, 144, 182, 190, 198, 225, 340, 343, 349, 361, 364, 365, 370, 377, 382, 384, 385, 391, 392, 398, 400, 401, 402, 404, 409, 410], "surfac": [7, 144, 161, 162, 207, 258, 260, 284, 286, 320, 324, 325, 326, 331, 332, 337, 340, 342, 349, 356, 380, 384, 385, 395, 398, 404, 406, 407, 408, 411], "surface_salin": [404, 411], "surface_temperatur": [361, 384, 398, 407, 411], "surface_x": 411, "surfacespe": 384, "switch": [6, 384, 385], "sxfyy4k": 141, "symbol": [1, 62, 361], "symlink": [1, 5, 8, 9, 14, 18, 40, 42, 51, 52, 363, 364, 365, 400, 401, 402, 409, 410], "symlog": [19, 125], "symlognorm": 19, "symmetr": 19, "sync": 6, "synchron": [14, 383], "syntax": [2, 144, 384], "system": [4, 5, 6, 25, 37, 40, 47, 96, 97, 98, 136, 138, 139, 141, 163, 173, 184, 209, 245, 269, 296, 361, 381, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 413], "t": [5, 6, 7, 9, 11, 12, 14, 15, 40, 41, 135, 141, 144, 146, 151, 259, 260, 285, 286, 296, 345, 346, 347, 348, 354, 355, 361, 363, 364, 365, 381, 384, 385, 387, 389, 390, 391, 397, 398, 400, 402, 406, 408, 409, 413, 418, 419], "t_": 398, "t_0": 398, "t_b": 398, "t_index": [19, 127, 384], "tab": [5, 413], "tabl": [13, 365, 391, 413], "tag": [14, 383], "take": [5, 6, 7, 11, 13, 14, 59, 141, 144, 150, 237, 357, 361, 362, 363, 365, 384, 400, 401, 402, 409, 418], "taken": [14, 25, 173, 334, 345, 346, 347, 348, 354, 355, 361, 384, 392, 413], "talk": 357, "tangent": 395, "tangenti": 342, "tanh": 395, "tanh_dz": 385, "target": [8, 11, 17, 18, 25, 42, 62, 66, 90, 100, 141, 144, 173, 343, 344, 351, 352, 353, 361, 363, 384, 400, 401, 402, 409, 410], "target_cor": 66, "task": [5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 23, 25, 34, 37, 39, 40, 43, 44, 46, 47, 49, 58, 59, 67, 70, 76, 81, 95, 96, 97, 99, 100, 113, 114, 115, 117, 118, 123, 141, 159, 160, 161, 163, 167, 173, 175, 178, 340, 342, 343, 344, 345, 346, 347, 348, 349, 351, 352, 353, 354, 355, 356, 358, 359, 361, 362, 365, 377, 378, 380, 381, 382, 383, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 406, 408, 409, 410, 411, 414, 418], "task_expr": [5, 67], "task_list": 118, "task_numb": 5, "taskdir": [265, 289, 292], "tasksthat": 393, "tau": [400, 401, 402, 409], "tau_0": 399, "tau_i": 399, "tau_x": 399, "tcsh": 365, "team": [6, 141, 383], "technic": [2, 7], "techniqu": 384, "tell": [5, 6, 141, 365], "temp": 5, "temp_vert": [361, 384], "temperatur": [18, 200, 251, 342, 343, 349, 352, 353, 356, 361, 380, 384, 398, 400, 401, 402, 403, 404, 407, 409, 410, 411, 412, 417], "temperature_differ": [361, 384, 398, 407], "temperature_difference_across_mixed_lay": 411, "temperature_gradient_interior": 411, "temperature_gradient_mixed_lay": 411, "temperature_interior_restoring_r": 411, "temperature_max": 385, "temperature_piston_veloc": 411, "temperature_surface_restoring_valu": 411, "temperaturemax": 385, "templat": [0, 5, 6, 7, 28, 29, 30, 64, 119, 130, 134, 141, 144, 154, 157, 160, 163, 165, 186, 192, 211, 227, 247, 271, 345, 346, 347, 354, 355, 383, 384, 385], "template_replac": [14, 28, 29, 144], "tempor": [406, 408], "temporari": [6, 141], "temporarili": 365, "ten": 404, "tendenc": [144, 401, 408], "term": [40, 382, 384, 399, 406, 408], "termin": [6, 8, 141, 361, 365, 384], "terrain": [321, 395], "test": [5, 7, 8, 9, 19, 51, 52, 57, 66, 95, 96, 97, 116, 124, 141, 145, 146, 152, 154, 157, 159, 161, 181, 183, 184, 190, 191, 193, 194, 195, 196, 198, 203, 204, 205, 212, 216, 217, 218, 219, 221, 222, 225, 226, 230, 231, 232, 233, 234, 235, 238, 239, 241, 242, 243, 244, 253, 254, 255, 256, 258, 261, 263, 264, 265, 266, 267, 268, 269, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 284, 287, 289, 290, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 307, 308, 309, 310, 312, 313, 314, 315, 316, 343, 344, 345, 346, 347, 348, 349, 351, 352, 353, 354, 355, 356, 357, 358, 359, 361, 362, 363, 364, 365, 368, 369, 370, 373, 374, 375, 376, 377, 380, 382, 383, 389, 391, 392, 395, 398, 399, 400, 401, 402, 403, 404, 406, 407, 408, 409, 410, 411, 412, 413, 414, 417, 418], "test_20210616": 18, "test_20230202": 6, "test_cas": 278, "test_group": 384, "test_nam": 203, "test_nightly_latest": 18, "test_subdir": 413, "test_suit": [5, 116, 361], "testcas": [214, 240, 278, 384, 385, 398, 404, 411, 413], "testgroup": 384, "tet": 384, "text": [7, 8, 64, 398, 401, 403, 411], "textrm": 403, "than": [1, 5, 6, 8, 9, 11, 13, 14, 40, 42, 47, 59, 141, 144, 163, 184, 209, 245, 269, 296, 343, 361, 362, 364, 365, 381, 384, 395, 398, 399], "thei": [1, 2, 5, 6, 7, 8, 12, 13, 14, 19, 40, 41, 42, 53, 59, 78, 114, 131, 141, 144, 179, 335, 340, 343, 349, 357, 360, 361, 363, 364, 365, 378, 382, 383, 384, 385, 391, 395, 398, 400, 401, 402, 403, 404, 409, 410, 413], "them": [1, 7, 8, 9, 14, 17, 18, 19, 25, 39, 63, 141, 144, 173, 345, 346, 347, 348, 354, 355, 358, 359, 361, 363, 364, 365, 382, 384, 389, 391, 397, 413, 419], "themselv": [14, 364, 383, 403], "theoret": 364, "theori": 364, "therefor": [141, 361, 382, 384], "theta": [400, 402, 403, 409], "thhe": 409, "thi": [1, 2, 3, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 17, 18, 19, 24, 25, 30, 31, 32, 33, 37, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 57, 59, 66, 70, 72, 75, 76, 79, 80, 81, 85, 96, 97, 99, 100, 106, 111, 114, 124, 136, 137, 138, 139, 140, 141, 142, 144, 146, 152, 156, 159, 160, 161, 163, 165, 173, 182, 183, 184, 186, 188, 189, 190, 192, 193, 194, 196, 197, 198, 202, 203, 208, 209, 211, 215, 216, 219, 221, 223, 225, 226, 227, 231, 232, 235, 240, 242, 244, 245, 247, 249, 253, 254, 256, 264, 266, 268, 269, 271, 273, 274, 275, 277, 278, 279, 280, 282, 290, 292, 293, 295, 296, 297, 298, 299, 300, 301, 302, 305, 307, 308, 311, 312, 313, 315, 331, 333, 334, 337, 340, 343, 344, 345, 346, 347, 349, 351, 352, 353, 354, 355, 357, 358, 359, 361, 362, 363, 364, 365, 376, 377, 381, 382, 383, 384, 385, 387, 390, 391, 392, 395, 398, 399, 400, 401, 402, 403, 404, 406, 407, 408, 409, 410, 411, 412, 413, 417, 418], "thick": [318, 321, 322, 323, 325, 326, 327, 328, 329, 330, 331, 337, 343, 345, 347, 348, 349, 352, 354, 355, 356, 378, 384, 385, 395, 398, 400, 402, 403, 404, 406, 409, 410, 416], "thing": [5, 136, 137, 138, 139, 140, 141, 142, 144, 357, 361, 364, 383, 418], "think": [1, 5, 384], "third": 384, "those": [9, 14, 51, 124, 141, 144, 343, 352, 363, 364, 365, 383, 384, 400, 401, 402, 403, 404, 409, 410, 412, 417, 418], "though": [1, 11, 40, 363, 364, 384], "thought": 384, "thread": [14, 25, 37, 40, 46, 47, 51, 97, 163, 173, 184, 209, 245, 269, 296, 358, 361, 362, 382, 384, 385, 387, 390, 392, 413, 418], "threads_per_cor": [387, 390, 392], "threads_test": 18, "three": [144, 391, 400, 402, 403, 404, 409, 410, 419], "threshold": [18, 144, 354, 400, 401, 402, 403, 406, 408, 409, 410], "through": [1, 2, 118, 144, 252, 278, 364, 365, 378, 384, 407], "throughout": [356, 398, 407, 411], "thu": [1, 2, 7, 14, 365, 384, 400, 401, 402, 409, 410], "thumb": 73, "ti": 384, "tick": [19, 125, 401], "tidal": [244, 245, 349, 404], "tidal_forc": [245, 342], "tide": 384, "tidx": 331, "time": [1, 6, 7, 8, 14, 18, 19, 40, 51, 65, 90, 124, 127, 141, 146, 147, 149, 150, 154, 156, 157, 163, 179, 180, 184, 193, 209, 212, 216, 219, 220, 221, 225, 226, 232, 235, 236, 237, 238, 254, 256, 257, 259, 260, 261, 269, 274, 280, 282, 283, 285, 286, 287, 292, 296, 302, 305, 309, 331, 342, 343, 344, 345, 346, 347, 348, 349, 351, 352, 353, 354, 355, 357, 361, 362, 363, 364, 365, 380, 381, 382, 385, 387, 390, 392, 393, 413, 418], "time_index": [15, 90], "time_index_from_xtim": 15, "time_integr": [14, 144, 384, 393, 400, 401, 402, 403, 404, 409, 410], "time_manag": [14, 144, 384], "time_slic": 357, "time_str": 179, "timelin": 2, "timer": [5, 18, 40, 361, 362, 364], "timeseri": 416, "timestep": 144, "tip": [7, 365], "titl": [19, 125, 126, 127, 144, 146, 151, 332], "tmp": [6, 141], "tmpdir": [6, 141], "tn": 387, "toctre": 7, "todai": [5, 57], "togeth": [14, 18, 141, 144, 357, 382, 384, 418], "toler": 124, "too": [13, 14, 25, 37, 40, 47, 96, 97, 173, 357, 361, 364, 384], "tool": [5, 6, 9, 12, 14, 17, 340, 358, 361, 365, 377, 383, 384, 385], "top": [5, 19, 127, 318, 319, 320, 321, 324, 325, 326, 327, 329, 332, 342, 349, 359, 384, 395, 407], "topographi": [11, 324, 357, 361, 384, 395, 398, 399, 400, 401, 402, 403, 404, 406, 407, 408, 409, 410, 411, 412, 419], "total": [95, 361, 362, 364, 384, 385, 387, 413], "total_area": 15, "touch": [141, 333, 334, 365], "tour": 6, "toward": 411, "tracer": [14, 19, 216, 224, 297, 298, 300, 302, 343, 345, 346, 347, 348, 351, 352, 353, 354, 355, 356, 384, 396, 401, 402, 405, 406, 408, 409, 410, 411], "tracer1": [19, 144, 229, 400, 402, 409, 410], "tracer2": [400, 402, 409, 410], "tracer3": [400, 402, 409, 410], "track": [9, 25, 361, 363, 365], "transect": [127, 144, 331, 332, 385], "transect_color": 127, "transect_end": 127, "transect_i": 127, "transect_linewidth": 127, "transect_markers": 127, "transect_start": 127, "transect_x": 127, "transectindicesonhoriznod": [333, 334], "transectvalu": [333, 334], "transectweightsonhoriznod": [333, 334], "transectz": 337, "transfer": 361, "transient": 404, "transit": [395, 400, 401, 402, 409, 410], "transition_level": 395, "translat": [5, 31, 32, 33], "transport": [304, 305, 307, 309, 312, 345, 347, 354, 355, 400, 401, 402, 409, 410], "transpos": [361, 384], "treat": [14, 362, 364], "tree": [1, 7, 119, 121, 135, 333, 334, 335, 363, 414], "tri": [144, 364], "triangl": [333, 334, 335, 336, 337], "triangles_filenam": 13, "tricellindic": 336, "trick": [12, 361], "tricki": 384, "trilino": [6, 365], "triplot": 345, "troubl": [365, 384], "troubleshoot": 383, "true": [1, 6, 7, 9, 13, 14, 18, 19, 25, 52, 61, 62, 63, 124, 125, 126, 127, 131, 136, 137, 138, 139, 140, 141, 142, 144, 173, 245, 297, 332, 334, 342, 357, 361, 365, 384, 385, 386, 387, 388, 390, 391, 392, 398, 413, 419], "truncat": [14, 144, 384], "try": [6, 14, 62, 141, 364, 365, 381, 384, 385, 387, 392, 413], "tupl": [9, 126, 127, 332], "turn": [40, 58, 358, 361, 381, 384, 411], "turquois": [70, 387], "tutori": [364, 365], "twice": [6, 333, 334, 384], "two": [1, 5, 6, 10, 18, 19, 124, 144, 190, 200, 225, 229, 251, 333, 334, 343, 344, 345, 346, 349, 352, 356, 357, 358, 361, 362, 364, 365, 370, 372, 384, 398, 400, 401, 402, 404, 406, 407, 408, 409, 410, 416], "txt": [6, 8, 123, 362, 381], "type": [7, 14, 17, 18, 19, 26, 102, 109, 135, 141, 144, 146, 147, 154, 157, 206, 216, 221, 224, 225, 226, 232, 238, 261, 287, 292, 295, 297, 302, 305, 309, 332, 345, 346, 347, 354, 355, 357, 361, 363, 364, 365, 377, 381, 382, 384, 385, 398, 399, 400, 401, 402, 403, 404, 406, 407, 408, 409, 410, 411, 412, 418], "typic": [5, 6, 7, 9, 11, 13, 14, 17, 18, 19, 40, 52, 114, 141, 144, 332, 333, 334, 357, 358, 359, 361, 363, 365, 382, 384, 385, 391, 393, 395, 411, 413, 419], "u": [6, 11, 361, 384, 391, 392, 400, 402, 403, 406, 408, 409], "u1": 392, "u_0": [401, 402, 403, 409], "ubuntu": 141, "ubuntu20": 141, "ubuntu22": 141, "ugetvbp": 141, "unaffect": 6, "uncach": 57, "uncoupl": 383, "under": [2, 17, 40, 41, 141, 144, 342, 361, 362, 365, 383, 395, 404, 419], "under_color": [19, 345, 347, 354, 355], "underli": 5, "underscor": [7, 384], "understand": [364, 385], "undesir": 364, "unexpect": [365, 382, 384], "unexpectedli": 403, "unifi": [6, 141, 365, 392], "uniform": [78, 83, 157, 343, 345, 346, 347, 348, 349, 351, 352, 353, 354, 355, 357, 363, 384, 385, 398, 399, 400, 401, 402, 403, 404, 406, 407, 408, 409, 410, 411, 412, 417], "uniqu": [6, 7, 14, 141, 363, 384], "unit": [40, 101, 105, 108, 361, 382, 398, 419], "univers": 358, "unix": [364, 383], "unknown": [5, 141, 364, 391], "unless": [62, 114, 365], "unlik": [14, 384], "unneed": 365, "unpickl": [116, 361], "unset": 381, "unstretch": 326, "unsupport": 365, "until": [40, 41, 361, 363, 413], "unus": 365, "unusu": 384, "unwant": 361, "up": [4, 5, 6, 7, 8, 9, 10, 11, 14, 17, 26, 27, 28, 29, 40, 49, 51, 64, 85, 99, 111, 112, 115, 117, 118, 123, 124, 136, 137, 138, 139, 140, 141, 142, 144, 171, 189, 197, 215, 291, 333, 334, 335, 337, 340, 343, 344, 345, 346, 347, 348, 349, 351, 352, 353, 354, 355, 356, 360, 361, 363, 364, 377, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 392, 393, 399, 400, 401, 402, 404, 409, 410, 412, 417, 418, 419], "updat": [5, 7, 8, 11, 25, 27, 29, 36, 37, 46, 47, 63, 120, 139, 141, 144, 175, 296, 322, 323, 328, 330, 340, 343, 344, 345, 346, 347, 351, 352, 353, 354, 355, 361, 377, 381, 383, 384, 413], "update_cach": 8, "update_jigsaw": 365, "update_layer_thick": 144, "update_namelist_pio": 14, "update_permiss": 11, "update_pio": [14, 25, 173], "update_spack": [6, 141, 365], "upper": [19, 127], "uppersurfac": 384, "ureconstructi": 384, "ureconstructx": 384, "url": [11, 42, 61, 361, 381, 385], "us": [5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 25, 30, 31, 32, 33, 37, 40, 41, 42, 46, 47, 51, 52, 57, 59, 61, 66, 79, 88, 93, 96, 97, 100, 106, 113, 124, 125, 126, 127, 128, 129, 130, 135, 136, 140, 141, 142, 144, 146, 147, 148, 149, 151, 154, 155, 157, 158, 160, 163, 164, 165, 173, 174, 175, 176, 177, 178, 179, 184, 185, 186, 192, 199, 206, 209, 210, 211, 216, 220, 225, 227, 228, 232, 236, 245, 246, 247, 252, 257, 262, 269, 270, 271, 280, 281, 283, 288, 296, 302, 306, 307, 312, 316, 318, 319, 320, 321, 322, 323, 327, 328, 329, 330, 331, 332, 333, 334, 336, 337, 340, 342, 343, 344, 345, 346, 347, 348, 349, 351, 352, 353, 354, 355, 356, 357, 358, 359, 361, 363, 364, 365, 371, 377, 378, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 395, 397, 398, 399, 400, 401, 402, 403, 404, 406, 407, 408, 409, 410, 411, 412, 413, 416, 418, 419], "usabl": 5, "usag": [5, 15, 19, 363, 385, 387, 392], "use_dist": [361, 384, 398, 407], "use_e3sm_hdf5_netcdf": [141, 386, 387, 388, 389, 390, 391, 392], "use_mplstyl": 19, "user": [5, 6, 7, 8, 9, 11, 14, 17, 40, 51, 52, 59, 66, 99, 141, 144, 153, 343, 344, 345, 346, 347, 348, 349, 351, 352, 353, 354, 355, 356, 361, 362, 363, 381, 382, 384, 386, 387, 388, 389, 390, 391, 392, 396, 398, 399, 400, 401, 402, 403, 404, 409, 410, 414], "usernam": [381, 384, 387, 390, 392], "users_guid": 384, "usr": [70, 141, 387, 413], "usual": [361, 363, 365, 384, 413], "util": [6, 364, 365, 408], "v": [5, 365, 384, 400, 402, 403, 406, 408, 409, 418], "v0": 6, "v1": [14, 395], "v2": [14, 385, 395], "v3": 395, "vadv_method": [268, 269, 274], "valid": [5, 10, 19, 25, 40, 43, 50, 127, 144, 154, 157, 244, 318, 319, 320, 321, 324, 325, 326, 327, 329, 337, 344, 351, 353, 356, 361, 364, 365, 383, 395, 398, 404], "validate_var": [18, 40, 43, 144, 154, 157, 296, 361], "validcel": 337, "validnod": 337, "valu": [5, 7, 9, 14, 15, 18, 19, 26, 31, 32, 33, 90, 124, 125, 126, 127, 131, 144, 146, 154, 157, 176, 177, 193, 224, 274, 292, 332, 333, 334, 337, 343, 352, 354, 358, 361, 363, 364, 383, 384, 385, 395, 398, 399, 400, 401, 402, 403, 407, 409, 410, 411], "valueerror": [18, 364], "var": [14, 120, 377, 384], "var_arrai": [14, 377], "var_struct": [14, 377], "vari": [342, 345, 346, 347, 348, 354, 355, 361, 381, 391, 395, 401, 403, 404], "variabl": [2, 5, 11, 13, 19, 20, 25, 40, 43, 50, 51, 59, 71, 78, 84, 88, 100, 101, 105, 108, 124, 127, 129, 130, 135, 141, 144, 146, 147, 148, 149, 150, 151, 154, 157, 159, 163, 167, 168, 169, 170, 171, 172, 173, 180, 184, 187, 193, 195, 199, 206, 209, 213, 216, 220, 221, 228, 230, 232, 236, 237, 241, 245, 248, 250, 256, 257, 258, 261, 263, 265, 269, 274, 276, 283, 284, 287, 289, 291, 292, 296, 302, 305, 306, 307, 312, 314, 318, 321, 322, 323, 327, 328, 329, 330, 336, 337, 342, 349, 356, 361, 364, 365, 371, 372, 377, 381, 384, 391, 393, 396, 398, 404, 412, 413, 414, 417], "variable_nam": [147, 151, 206], "variable_resolut": [357, 361, 413], "variant": [57, 218, 234, 302, 304, 343, 349, 352, 357, 362, 364, 365, 384, 391, 395, 398, 399, 400, 401, 402, 407, 409, 410], "variat": [398, 403], "variou": [141, 294, 361, 365, 369], "ve": [136, 137, 138, 139, 140, 142, 365, 384], "vector": 410, "vel_amp": [400, 402, 409], "vel_pd": [400, 401, 402, 409, 410], "vel_period": 403, "veldifftendencyen": 144, "velhyperdifftendencyen": 144, "velo_solv": 363, "veloc": [259, 285, 342, 343, 348, 349, 351, 352, 353, 363, 365, 384, 399, 400, 401, 402, 403, 404, 409, 410, 411, 413], "verbos": [1, 5, 6, 67, 69, 141, 361, 384, 418], "veri": [144, 349, 358, 361, 364, 365, 377, 384, 403, 404, 411], "verifi": [10, 346, 362, 385, 399, 401], "verison": 340, "versa": 364, "version": [5, 6, 16, 35, 59, 99, 124, 141, 340, 343, 352, 357, 358, 359, 361, 363, 364, 365, 377, 383, 384, 385, 391, 392, 396, 398, 401, 404, 406, 408, 413, 414], "vert": 331, "vert_dim": 127, "vert_level": [384, 385, 395, 398, 399, 400, 401, 402, 404, 406, 407, 408, 409, 410, 411, 412], "vertcoordmovementweight": [318, 321, 327, 329, 384], "vertex": [102, 109, 206], "vertic": [7, 15, 19, 89, 127, 149, 150, 220, 236, 237, 257, 268, 269, 274, 283, 295, 331, 332, 333, 334, 336, 337, 342, 343, 344, 345, 346, 347, 348, 349, 351, 352, 353, 354, 355, 356, 361, 385, 394, 396], "vertical_grid": [144, 316, 318, 321, 327, 329, 357, 361, 384, 385, 395, 398, 399, 400, 401, 402, 404, 406, 407, 408, 409, 410, 411, 412], "vi": 384, "via": [2, 5, 6, 14, 361, 365, 391, 399], "view": [4, 351, 353, 365, 406, 408], "vim": [364, 384], "violat": 364, "viridi": [19, 345, 346, 347, 354, 355, 384, 400, 401, 402, 409, 410], "virtu": 411, "visa": 364, "viscos": [9, 14, 184, 193, 195, 269, 274, 276, 343, 344, 352, 361, 364, 384, 398, 399, 407], "visibl": 127, "visoc": 399, "visual": [1, 10, 13, 17, 244, 252, 265, 278, 292, 345, 346, 347, 348, 349, 351, 353, 354, 355, 357, 361, 363, 382, 383, 400, 401, 402, 403, 404, 406, 408, 409, 410, 412, 417], "viz": [1, 5, 19, 144, 216, 232, 244, 302, 361, 363, 400, 401, 402, 403, 409, 410], "viz_map": 363, "vizmap": [17, 216, 232, 244, 302, 363], "vlr": [268, 269, 274, 352, 407], "vmax": [19, 127, 332, 384, 401], "vmin": [19, 127, 332, 384, 401], "volum": 380, "vpn": 381, "vtk": 13, "vtk_dir": 13, "vtk_lat_lon": 13, "w": [5, 6, 365, 382, 384, 413], "wa": [6, 8, 50, 61, 124, 141, 361, 363, 364, 365, 381, 382, 384, 385, 395, 404, 413], "wai": [1, 5, 7, 13, 14, 40, 75, 80, 141, 144, 361, 363, 364, 365, 381, 383, 384, 391, 395, 403, 411], "wall": [65, 413], "wall_tim": [65, 413], "want": [2, 5, 6, 11, 14, 17, 18, 53, 141, 144, 361, 363, 365, 381, 384, 385, 391, 392, 411, 413, 419], "warmer": 398, "warn": 6, "warrant": 412, "wasn": 384, "wast": 14, "water": [19, 348, 351, 384, 395, 398, 400, 401, 402, 403, 404, 406, 407, 408, 409, 410, 411, 412], "wave": [203, 204, 254, 255, 256, 258, 261, 263, 265, 267, 268, 269, 272, 274, 276, 278, 284, 351, 352, 361, 363, 384, 396, 398, 405, 408], "wavelength": [406, 408], "wc": 385, "wc14": 413, "we": [1, 2, 5, 7, 9, 11, 13, 14, 17, 18, 19, 139, 141, 144, 148, 149, 150, 178, 220, 236, 237, 257, 283, 306, 343, 349, 352, 356, 357, 360, 361, 363, 364, 365, 380, 383, 384, 385, 387, 389, 390, 391, 392, 395, 399, 401, 403, 404, 413, 418], "web": [11, 361, 385], "websit": [396, 414], "weight": [14, 15, 17, 88, 161, 318, 321, 327, 329, 333, 334, 336, 337, 384, 395], "weight_field": [14, 88], "welcom": [412, 417], "well": [2, 6, 9, 12, 13, 141, 144, 324, 336, 343, 344, 345, 346, 347, 348, 351, 352, 353, 354, 355, 356, 361, 365, 382, 384, 385, 401, 413, 419], "were": [1, 50, 63, 141, 296, 338, 339, 361, 364, 382, 384, 385, 389, 395], "western": 399, "wet": 362, "what": [1, 2, 6, 11, 13, 17, 141, 302, 363, 364, 384, 392, 412, 413, 417], "whatev": [338, 339, 365, 413], "when": [1, 5, 6, 12, 14, 17, 18, 26, 27, 28, 29, 31, 32, 33, 40, 41, 46, 51, 52, 59, 61, 62, 67, 113, 124, 141, 144, 326, 333, 334, 343, 344, 345, 346, 347, 348, 351, 352, 353, 354, 355, 356, 357, 361, 363, 364, 365, 383, 384, 386, 387, 388, 389, 390, 392, 395, 398, 399, 401, 403, 411, 413, 419], "whenev": [11, 361, 384], "where": [1, 5, 7, 9, 14, 18, 40, 42, 51, 59, 61, 63, 66, 99, 115, 118, 123, 125, 127, 141, 144, 163, 318, 321, 324, 327, 329, 333, 334, 340, 349, 358, 360, 361, 363, 365, 377, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 395, 398, 399, 400, 401, 402, 403, 404, 409, 411, 412, 413, 417, 418], "wherea": [5, 12, 361, 382, 384, 397, 404, 419], "whether": [5, 8, 13, 14, 17, 19, 25, 30, 40, 42, 50, 51, 52, 57, 61, 62, 63, 67, 113, 114, 118, 123, 124, 125, 126, 127, 131, 141, 144, 156, 165, 166, 173, 186, 192, 211, 216, 219, 221, 225, 226, 227, 232, 235, 247, 254, 256, 271, 280, 282, 296, 298, 300, 302, 307, 312, 331, 332, 334, 351, 353, 357, 361, 363, 365, 381, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 395, 398, 399, 400, 401, 402, 404, 406, 407, 408, 409, 410, 411, 412, 413, 417], "which": [1, 2, 5, 6, 7, 8, 9, 11, 13, 14, 15, 17, 18, 19, 25, 28, 29, 31, 32, 33, 40, 42, 51, 58, 89, 100, 102, 109, 117, 118, 119, 123, 127, 130, 141, 144, 146, 147, 148, 149, 150, 151, 153, 160, 161, 163, 173, 182, 183, 184, 187, 190, 191, 193, 195, 198, 199, 201, 205, 206, 209, 220, 221, 225, 226, 228, 236, 237, 238, 244, 245, 248, 250, 252, 257, 259, 260, 261, 268, 269, 272, 274, 276, 283, 285, 286, 287, 292, 296, 302, 306, 309, 332, 333, 334, 336, 337, 340, 342, 345, 347, 354, 355, 357, 358, 360, 361, 363, 365, 370, 371, 373, 375, 383, 384, 385, 387, 391, 395, 398, 399, 400, 401, 402, 403, 404, 406, 408, 409, 410, 411, 412, 413], "whichev": [6, 340, 365, 377, 395], "while": [10, 17, 19, 342, 343, 361, 381, 384, 401, 404], "whitespac": 64, "who": [7, 365, 384, 385, 392], "whole": [8, 51, 180, 357, 363, 364, 384, 404, 413], "whose": [5, 48, 55, 89, 361], "why": 364, "wide": [381, 404], "width": [13, 71, 72, 73, 78, 79, 80, 86, 127, 332, 384, 398, 399, 404, 407], "wiki": 413, "wildcard": 364, "william": 403, "williamson": [401, 403], "wind": [336, 344, 399, 403, 411], "wind_stress_meridion": 411, "wind_stress_zon": 411, "window": 8, "wish": [5, 7, 14, 52, 333, 334, 361, 365, 384, 413], "with_albani": [6, 365], "with_ice_shelf_cav": 361, "with_netlib_lapack": 365, "with_petsc": [6, 365], "with_restart": [349, 404], "with_viz": [1, 345, 346, 347, 348, 354, 355, 363, 400, 401, 402, 403, 409, 410], "with_viz_dir": 363, "within": [1, 5, 7, 9, 10, 11, 12, 14, 20, 37, 40, 42, 43, 47, 51, 52, 59, 115, 123, 124, 141, 144, 333, 334, 336, 343, 351, 353, 357, 358, 359, 361, 362, 363, 365, 378, 382, 384, 385, 387, 391, 411, 412, 417], "without": [5, 42, 144, 332, 361, 364, 365, 383, 384, 385, 389, 391, 401, 406, 408, 412, 413], "wno": 365, "woa": 17, "woa23_decav_0": 17, "won": [12, 364, 384, 385], "word": 361, "work": [2, 5, 6, 8, 9, 11, 12, 14, 15, 16, 17, 40, 42, 43, 45, 48, 49, 51, 52, 55, 57, 59, 66, 99, 113, 115, 118, 123, 139, 141, 154, 157, 160, 161, 163, 173, 184, 189, 197, 208, 209, 215, 230, 241, 314, 359, 360, 361, 362, 363, 364, 365, 381, 382, 384, 385, 391, 400, 401, 402, 403, 409, 410, 411, 413, 419], "work_dir": [5, 11, 40, 51, 66, 99, 117, 118, 123, 124, 361, 363, 384], "work_dir_target": [42, 361], "workdir": [365, 413], "workflow": [17, 361, 365], "workload": 391, "workstat": [141, 365], "worktre": [6, 383, 384], "world": 390, "worri": 14, "worth": [364, 384], "would": [1, 2, 5, 9, 11, 14, 18, 19, 25, 37, 40, 47, 52, 96, 97, 100, 141, 144, 163, 173, 184, 209, 245, 269, 296, 343, 359, 361, 363, 364, 365, 381, 383, 384, 391, 395, 399, 413], "writabl": 11, "write": [8, 11, 12, 13, 16, 19, 63, 111, 129, 144, 167, 172, 317, 332, 361, 363, 365, 380, 384], "write_model_dataset": 144, "write_netcdf": [361, 384], "written": [7, 8, 9, 40, 51, 59, 66, 125, 126, 127, 154, 157, 361, 363, 384, 416], "wtrw": 387, "x": [13, 19, 72, 79, 80, 83, 86, 104, 110, 127, 144, 180, 207, 258, 284, 331, 333, 344, 349, 361, 384, 398, 399, 404, 406, 408, 411], "x86_64": [6, 141], "x86_64_v4": 141, "x_cell": [361, 384], "x_difference_across_mixed_lay": 411, "x_gradient_interior": 411, "x_gradient_mixed_lay": 411, "x_max": [361, 384], "x_min": [361, 384], "x_perturb_max": [361, 384], "x_perturb_min": [361, 384], "x_transect": 333, "x_var": [104, 110], "xarrai": [7, 15, 17, 19, 89, 124, 126, 127, 144, 149, 150, 168, 169, 170, 172, 206, 207, 220, 236, 237, 257, 283, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 361, 384], "xcartnod": 334, "xcarttransect": 334, "xcell": [258, 284, 361, 384], "xedg": [258, 284, 361, 384], "xml": [6, 14, 119, 121, 122, 135, 377], "xnode": [333, 336], "xr": [15, 19, 258, 259, 260, 284, 285, 286, 361, 384], "xtime": [14, 15, 90, 144, 384], "xtransect": 333, "xvertex": [361, 384], "xylar": [1, 6, 18, 141, 384, 385, 391], "y": [13, 14, 19, 83, 104, 110, 127, 144, 207, 258, 284, 331, 333, 343, 344, 349, 351, 352, 353, 361, 384, 392, 398, 399, 404, 406, 407, 408], "y0_land_ice_height_above_float": 404, "y1": 404, "y1_water_column_thick": 404, "y2": 404, "y2_water_column_thick": 404, "y3": 404, "y_": 398, "y_cell": [361, 384], "y_max": [361, 384], "y_mid": [361, 384], "y_min": [361, 384], "y_offset": [361, 384], "y_transect": 333, "y_var": [104, 110], "yakl": 365, "yaml": [5, 9, 10, 25, 26, 29, 30, 31, 32, 33, 141, 154, 157, 160, 163, 165, 173, 176, 177, 178, 186, 192, 211, 227, 247, 271, 343, 344, 345, 346, 347, 348, 349, 351, 352, 353, 354, 355, 356, 357, 358, 361, 363, 383, 384, 387, 390, 392], "yaml_filenam": [144, 154, 157, 160, 163], "yaml_replac": [160, 163], "ycartnod": 334, "ycarttransect": 334, "ycell": [258, 284, 361, 384], "year": [344, 380, 396, 399, 416], "yedg": [258, 284], "yellow": 387, "yet": [6, 139, 141, 361, 364, 384, 390], "yet_another_channel": 384, "yet_another_channel_test_cas": 384, "yetanotherchannel": 384, "yetanotherchanneltestcas": 384, "yml": 14, "ynode": [333, 336], "you": [2, 4, 5, 6, 7, 9, 11, 12, 13, 14, 17, 18, 19, 136, 137, 138, 139, 140, 141, 142, 144, 340, 358, 361, 363, 364, 365, 377, 381, 382, 384, 385, 386, 387, 388, 389, 390, 391, 392, 400, 401, 402, 403, 404, 409, 410, 413, 418, 419], "your": [2, 4, 5, 6, 11, 141, 340, 364, 365, 377, 381, 384, 385, 386, 387, 391, 392, 400, 401, 402, 409, 410, 413], "your_new_branch": 365, "yourself": [14, 384, 391], "ytransect": 333, "yymmdd": [57, 385], "yyyi": 2, "z": [144, 146, 147, 149, 150, 151, 206, 220, 236, 237, 257, 283, 319, 320, 324, 325, 326, 327, 328, 329, 330, 349, 384, 398, 399, 400, 401, 402, 404, 406, 407, 408, 409, 410, 411, 412], "z_": [395, 411], "z_0": 395, "z_1": 395, "z_2": 395, "z_b": 398, "z_index": 127, "z_k": 395, "zcartnod": 334, "zcarttransect": 334, "zcellboundari": 337, "zero": [18, 319, 320, 324, 325, 326, 331, 333, 334, 337, 342, 343, 349, 352, 356, 384, 400, 401, 402, 404, 409, 410, 411], "zeros_lik": [361, 384], "zidx": [144, 146, 147, 149, 150, 151, 206, 220, 236, 237, 257, 283], "zinterfaceseg": 337, "ziso": [395, 419], "zlib": 141, "zmid": [144, 318, 321, 327, 329, 384], "znode": 336, "zonal": [398, 399, 403, 407, 411], "zppy": 6, "zseafloor": 337, "zstash": 392, "ztransectnod": 337}, "titles": ["Design Documents", "Shared steps", "Template", "API reference", "Building the Documentation", "Command-line interface", "Deploying a new spack environment", "Documentation", "Modules for polaris commands", "Config files", "Framework", "IO", "Logging", "Mesh", "Model", "MPAS", "Provenance", "Remapping", "Validation", "Visualization", "polaris.Component", "polaris.Component.add_config", "polaris.Component.add_step", "polaris.Component.add_task", "polaris.Component.remove_step", "polaris.ModelStep", "polaris.ModelStep.add_model_config_options", "polaris.ModelStep.add_namelist_file", "polaris.ModelStep.add_streams_file", "polaris.ModelStep.add_yaml_file", "polaris.ModelStep.dynamic_model_config", "polaris.ModelStep.map_yaml_configs", "polaris.ModelStep.map_yaml_options", "polaris.ModelStep.map_yaml_to_namelist", "polaris.ModelStep.partition", "polaris.ModelStep.process_inputs_and_outputs", "polaris.ModelStep.runtime_setup", "polaris.ModelStep.set_model_resources", "polaris.ModelStep.setup", "polaris.ModelStep.update_namelist_pio", "polaris.Step", "polaris.Step.add_dependency", "polaris.Step.add_input_file", "polaris.Step.add_output_file", "polaris.Step.constrain_resources", "polaris.Step.run", "polaris.Step.runtime_setup", "polaris.Step.set_resources", "polaris.Step.set_shared_config", "polaris.Step.setup", "polaris.Step.validate_baselines", "polaris.Task", "polaris.Task.add_step", "polaris.Task.configure", "polaris.Task.remove_step", "polaris.Task.set_shared_config", "polaris.__main__.main", "polaris.cache.update_cache", "polaris.components.get_components", "polaris.config.PolarisConfigParser", "polaris.config.PolarisConfigParser.setup", "polaris.io.download", "polaris.io.symlink", "polaris.io.update_permissions", "polaris.job.clean_up_whitespace", "polaris.job.get_slurm_options", "polaris.job.write_job_script", "polaris.list.list_cases", "polaris.list.list_machines", "polaris.list.list_suites", "polaris.logging.log_method_call", "polaris.mesh.IcosahedralMeshStep", "polaris.mesh.IcosahedralMeshStep.build_subdivisions_cell_width_lat_lon", "polaris.mesh.IcosahedralMeshStep.get_cell_width", "polaris.mesh.IcosahedralMeshStep.get_subdivisions", "polaris.mesh.IcosahedralMeshStep.make_jigsaw_mesh", "polaris.mesh.IcosahedralMeshStep.run", "polaris.mesh.IcosahedralMeshStep.setup", "polaris.mesh.QuasiUniformSphericalMeshStep", "polaris.mesh.QuasiUniformSphericalMeshStep.build_cell_width_lat_lon", "polaris.mesh.QuasiUniformSphericalMeshStep.make_jigsaw_mesh", "polaris.mesh.QuasiUniformSphericalMeshStep.run", "polaris.mesh.QuasiUniformSphericalMeshStep.setup", "polaris.mesh.planar.compute_planar_hex_nx_ny", "polaris.mesh.spherical.SphericalBaseStep", "polaris.mesh.spherical.SphericalBaseStep.run", "polaris.mesh.spherical.SphericalBaseStep.save_and_plot_cell_width", "polaris.mesh.spherical.SphericalBaseStep.setup", "polaris.model_step.make_graph_file", "polaris.mpas.area_for_field", "polaris.mpas.time_index_from_xtime", "polaris.namelist.ingest", "polaris.namelist.parse_replacements", "polaris.namelist.replace", "polaris.namelist.write", "polaris.parallel.get_available_parallel_resources", "polaris.parallel.get_parallel_command", "polaris.parallel.run_command", "polaris.parallel.set_cores_per_node", "polaris.provenance.write", "polaris.remap.MappingFileStep", "polaris.remap.MappingFileStep.dst_from_lon_lat", "polaris.remap.MappingFileStep.dst_from_mpas", "polaris.remap.MappingFileStep.dst_from_points", "polaris.remap.MappingFileStep.dst_from_proj", "polaris.remap.MappingFileStep.dst_global_lon_lat", "polaris.remap.MappingFileStep.get_remapper", "polaris.remap.MappingFileStep.runtime_setup", "polaris.remap.MappingFileStep.src_from_lon_lat", "polaris.remap.MappingFileStep.src_from_mpas", "polaris.remap.MappingFileStep.src_from_proj", "polaris.run.complete_step_run", "polaris.run.load_dependencies", "polaris.run.serial.run_single_step", "polaris.run.serial.run_tasks", "polaris.run.setup_config", "polaris.run.unpickle_suite", "polaris.setup.setup_task", "polaris.setup.setup_tasks", "polaris.streams.read", "polaris.streams.update_defaults", "polaris.streams.update_tree", "polaris.streams.write", "polaris.suite.setup_suite", "polaris.validate.compare_variables", "polaris.viz.plot_global_lat_lon_field", "polaris.viz.plot_global_mpas_field", "polaris.viz.plot_horiz_field", "polaris.viz.use_mplstyle", "polaris.yaml.PolarisYaml", "polaris.yaml.PolarisYaml.read", "polaris.yaml.PolarisYaml.update", "polaris.yaml.PolarisYaml.write", "polaris.yaml.main_mpas_to_yaml", "polaris.yaml.mpas_namelist_and_streams_to_yaml", "polaris.yaml.yaml_to_mpas_streams", "Anvil", "Chicoma", "Chrysalis", "CompyMcNodeFace", "Frontier", "Machines", "Perlmutter", "ocean", "Ocean framework", "polaris.ocean.Ocean", "polaris.ocean.convergence.analysis.ConvergenceAnalysis", "polaris.ocean.convergence.analysis.ConvergenceAnalysis.compute_error", "polaris.ocean.convergence.analysis.ConvergenceAnalysis.convergence_parameters", "polaris.ocean.convergence.analysis.ConvergenceAnalysis.exact_solution", "polaris.ocean.convergence.analysis.ConvergenceAnalysis.get_output_field", "polaris.ocean.convergence.analysis.ConvergenceAnalysis.plot_convergence", "polaris.ocean.convergence.analysis.ConvergenceAnalysis.run", "polaris.ocean.convergence.analysis.ConvergenceAnalysis.setup", "polaris.ocean.convergence.forward.ConvergenceForward", "polaris.ocean.convergence.forward.ConvergenceForward.compute_cell_count", "polaris.ocean.convergence.forward.ConvergenceForward.dynamic_model_config", "polaris.ocean.convergence.spherical.SphericalConvergenceForward", "polaris.ocean.convergence.spherical.SphericalConvergenceForward.compute_cell_count", "polaris.ocean.ice_shelf.IceShelfTask", "polaris.ocean.ice_shelf.IceShelfTask.setup_ssh_adjustment_steps", "polaris.ocean.ice_shelf.SshAdjustment", "polaris.ocean.ice_shelf.SshAdjustment.run", "polaris.ocean.ice_shelf.SshForward", "polaris.ocean.ice_shelf.SshForward.compute_cell_count", "polaris.ocean.ice_shelf.SshForward.dynamic_model_config", "polaris.ocean.mesh.spherical.add_spherical_base_mesh_step", "polaris.ocean.model.OceanIOStep", "polaris.ocean.model.OceanIOStep.map_from_native_model_vars", "polaris.ocean.model.OceanIOStep.map_to_native_model_vars", "polaris.ocean.model.OceanIOStep.open_model_dataset", "polaris.ocean.model.OceanIOStep.setup", "polaris.ocean.model.OceanIOStep.write_model_dataset", "polaris.ocean.model.OceanModelStep", "polaris.ocean.model.OceanModelStep.compute_cell_count", "polaris.ocean.model.OceanModelStep.constrain_resources", "polaris.ocean.model.OceanModelStep.map_yaml_configs", "polaris.ocean.model.OceanModelStep.map_yaml_options", "polaris.ocean.model.OceanModelStep.setup", "polaris.ocean.model.get_time_interval_string", "polaris.ocean.rpe.compute_rpe", "polaris.ocean.tasks.baroclinic_channel.add_baroclinic_channel_tasks", "polaris.ocean.tasks.baroclinic_channel.decomp.Decomp", "polaris.ocean.tasks.baroclinic_channel.default.Default", "polaris.ocean.tasks.baroclinic_channel.forward.Forward", "polaris.ocean.tasks.baroclinic_channel.forward.Forward.compute_cell_count", "polaris.ocean.tasks.baroclinic_channel.forward.Forward.dynamic_model_config", "polaris.ocean.tasks.baroclinic_channel.init.Init", "polaris.ocean.tasks.baroclinic_channel.init.Init.run", "polaris.ocean.tasks.baroclinic_channel.init.Init.setup", "polaris.ocean.tasks.baroclinic_channel.restart.Restart", "polaris.ocean.tasks.baroclinic_channel.restart.restart_step.RestartStep", "polaris.ocean.tasks.baroclinic_channel.restart.restart_step.RestartStep.dynamic_model_config", "polaris.ocean.tasks.baroclinic_channel.rpe.Rpe", "polaris.ocean.tasks.baroclinic_channel.rpe.Rpe.configure", "polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis", "polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis.run", "polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis.setup", "polaris.ocean.tasks.baroclinic_channel.threads.Threads", "polaris.ocean.tasks.baroclinic_channel.validate.Validate", "polaris.ocean.tasks.baroclinic_channel.validate.Validate.run", "polaris.ocean.tasks.baroclinic_channel.viz.Viz", "polaris.ocean.tasks.baroclinic_channel.viz.Viz.run", "polaris.ocean.tasks.barotropic_gyre.BarotropicGyre", "polaris.ocean.tasks.barotropic_gyre.add_barotropic_gyre_tasks", "polaris.ocean.tasks.barotropic_gyre.analysis.Analysis", "polaris.ocean.tasks.barotropic_gyre.analysis.Analysis.compute_error", "polaris.ocean.tasks.barotropic_gyre.analysis.Analysis.exact_solution", "polaris.ocean.tasks.barotropic_gyre.analysis.Analysis.run", "polaris.ocean.tasks.barotropic_gyre.forward.Forward", "polaris.ocean.tasks.barotropic_gyre.forward.Forward.compute_cell_count", "polaris.ocean.tasks.barotropic_gyre.forward.Forward.dynamic_model_config", "polaris.ocean.tasks.barotropic_gyre.forward.compute_max_time_step", "polaris.ocean.tasks.barotropic_gyre.init.Init", "polaris.ocean.tasks.barotropic_gyre.init.Init.run", "polaris.ocean.tasks.barotropic_gyre.init.Init.setup", "polaris.ocean.tasks.cosine_bell.CosineBell", "polaris.ocean.tasks.cosine_bell.CosineBell.configure", "polaris.ocean.tasks.cosine_bell.add_cosine_bell_tasks", "polaris.ocean.tasks.cosine_bell.analysis.Analysis", "polaris.ocean.tasks.cosine_bell.analysis.Analysis.exact_solution", "polaris.ocean.tasks.cosine_bell.forward.Forward", "polaris.ocean.tasks.cosine_bell.init.Init", "polaris.ocean.tasks.cosine_bell.init.Init.run", "polaris.ocean.tasks.cosine_bell.init.cosine_bell", "polaris.ocean.tasks.cosine_bell.restart.Restart", "polaris.ocean.tasks.cosine_bell.restart.RestartStep", "polaris.ocean.tasks.cosine_bell.restart.RestartStep.dynamic_model_config", "polaris.ocean.tasks.cosine_bell.validate.Validate", "polaris.ocean.tasks.cosine_bell.validate.Validate.run", "polaris.ocean.tasks.cosine_bell.viz.Viz", "polaris.ocean.tasks.cosine_bell.viz.Viz.run", "polaris.ocean.tasks.geostrophic.Geostrophic", "polaris.ocean.tasks.geostrophic.Geostrophic.configure", "polaris.ocean.tasks.geostrophic.add_geostrophic_tasks", "polaris.ocean.tasks.geostrophic.analysis.Analysis", "polaris.ocean.tasks.geostrophic.analysis.Analysis.exact_solution", "polaris.ocean.tasks.geostrophic.analysis.Analysis.get_output_field", "polaris.ocean.tasks.geostrophic.forward.Forward", "polaris.ocean.tasks.geostrophic.init.Init", "polaris.ocean.tasks.geostrophic.init.Init.run", "polaris.ocean.tasks.geostrophic.viz.Viz", "polaris.ocean.tasks.geostrophic.viz.Viz.run", "polaris.ocean.tasks.ice_shelf_2d.add_ice_shelf_2d_tasks", "polaris.ocean.tasks.ice_shelf_2d.default.Default", "polaris.ocean.tasks.ice_shelf_2d.forward.Forward", "polaris.ocean.tasks.ice_shelf_2d.forward.Forward.compute_cell_count", "polaris.ocean.tasks.ice_shelf_2d.forward.Forward.dynamic_model_config", "polaris.ocean.tasks.ice_shelf_2d.init.Init", "polaris.ocean.tasks.ice_shelf_2d.init.Init.run", "polaris.ocean.tasks.ice_shelf_2d.validate.Validate", "polaris.ocean.tasks.ice_shelf_2d.validate.Validate.run", "polaris.ocean.tasks.ice_shelf_2d.viz.Viz", "polaris.ocean.tasks.ice_shelf_2d.viz.Viz.run", "polaris.ocean.tasks.inertial_gravity_wave.InertialGravityWave", "polaris.ocean.tasks.inertial_gravity_wave.add_inertial_gravity_wave_tasks", "polaris.ocean.tasks.inertial_gravity_wave.analysis.Analysis", "polaris.ocean.tasks.inertial_gravity_wave.analysis.Analysis.exact_solution", "polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution", "polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution.normal_velocity", "polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution.ssh", "polaris.ocean.tasks.inertial_gravity_wave.forward.Forward", "polaris.ocean.tasks.inertial_gravity_wave.forward.Forward.compute_cell_count", "polaris.ocean.tasks.inertial_gravity_wave.init.Init", "polaris.ocean.tasks.inertial_gravity_wave.init.Init.run", "polaris.ocean.tasks.inertial_gravity_wave.viz.Viz", "polaris.ocean.tasks.inertial_gravity_wave.viz.Viz.run", "polaris.ocean.tasks.internal_wave.add_internal_wave_tasks", "polaris.ocean.tasks.internal_wave.default.Default", "polaris.ocean.tasks.internal_wave.forward.Forward", "polaris.ocean.tasks.internal_wave.forward.Forward.compute_cell_count", "polaris.ocean.tasks.internal_wave.forward.Forward.dynamic_model_config", "polaris.ocean.tasks.internal_wave.init.Init", "polaris.ocean.tasks.internal_wave.init.Init.run", "polaris.ocean.tasks.internal_wave.rpe.Rpe", "polaris.ocean.tasks.internal_wave.rpe.Rpe.configure", "polaris.ocean.tasks.internal_wave.rpe.analysis.Analysis", "polaris.ocean.tasks.internal_wave.rpe.analysis.Analysis.run", "polaris.ocean.tasks.internal_wave.viz.Viz", "polaris.ocean.tasks.internal_wave.viz.Viz.run", "polaris.ocean.tasks.manufactured_solution.ManufacturedSolution", "polaris.ocean.tasks.manufactured_solution.add_manufactured_solution_tasks", "polaris.ocean.tasks.manufactured_solution.analysis.Analysis", "polaris.ocean.tasks.manufactured_solution.analysis.Analysis.exact_solution", "polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution", "polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution.normal_velocity", "polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution.ssh", "polaris.ocean.tasks.manufactured_solution.forward.Forward", "polaris.ocean.tasks.manufactured_solution.forward.Forward.compute_cell_count", "polaris.ocean.tasks.manufactured_solution.init.Init", "polaris.ocean.tasks.manufactured_solution.init.Init.run", "polaris.ocean.tasks.manufactured_solution.init.Init.setup", "polaris.ocean.tasks.manufactured_solution.viz.Viz", "polaris.ocean.tasks.manufactured_solution.viz.Viz.run", "polaris.ocean.tasks.single_column.add_single_column_tasks", "polaris.ocean.tasks.single_column.cvmix.CVMix", "polaris.ocean.tasks.single_column.forward.Forward", "polaris.ocean.tasks.single_column.ideal_age.IdealAge", "polaris.ocean.tasks.single_column.init.Init", "polaris.ocean.tasks.single_column.init.Init.run", "polaris.ocean.tasks.single_column.viz.Viz", "polaris.ocean.tasks.single_column.viz.Viz.run", "polaris.ocean.tasks.sphere_transport.SphereTransport", "polaris.ocean.tasks.sphere_transport.SphereTransport.configure", "polaris.ocean.tasks.sphere_transport.add_sphere_transport_tasks", "polaris.ocean.tasks.sphere_transport.analysis.Analysis", "polaris.ocean.tasks.sphere_transport.analysis.Analysis.convergence_parameters", "polaris.ocean.tasks.sphere_transport.filament_analysis.FilamentAnalysis", "polaris.ocean.tasks.sphere_transport.filament_analysis.FilamentAnalysis.run", "polaris.ocean.tasks.sphere_transport.forward.Forward", "polaris.ocean.tasks.sphere_transport.init.Init", "polaris.ocean.tasks.sphere_transport.init.Init.run", "polaris.ocean.tasks.sphere_transport.mixing_analysis.MixingAnalysis", "polaris.ocean.tasks.sphere_transport.mixing_analysis.MixingAnalysis.run", "polaris.ocean.tasks.sphere_transport.viz.Viz", "polaris.ocean.tasks.sphere_transport.viz.Viz.run", "polaris.ocean.vertical.grid_1d.generate_1d_grid", "polaris.ocean.vertical.grid_1d.write_1d_grid", "polaris.ocean.vertical.init_vertical_coord", "polaris.ocean.vertical.partial_cells.alter_bottom_depth", "polaris.ocean.vertical.partial_cells.alter_ssh", "polaris.ocean.vertical.sigma.init_sigma_vertical_coord", "polaris.ocean.vertical.sigma.update_sigma_layer_thickness", "polaris.ocean.vertical.update_layer_thickness", "polaris.ocean.vertical.zlevel.compute_min_max_level_cell", "polaris.ocean.vertical.zlevel.compute_z_level_layer_thickness", "polaris.ocean.vertical.zlevel.compute_z_level_resting_thickness", "polaris.ocean.vertical.zlevel.init_z_level_vertical_coord", "polaris.ocean.vertical.zlevel.update_z_level_layer_thickness", "polaris.ocean.vertical.zstar.init_z_star_vertical_coord", "polaris.ocean.vertical.zstar.update_z_star_layer_thickness", "polaris.ocean.viz.compute_transect", "polaris.ocean.viz.plot_transect", "polaris.ocean.viz.transect.horiz.find_planar_transect_cells_and_weights", "polaris.ocean.viz.transect.horiz.find_spherical_transect_cells_and_weights", "polaris.ocean.viz.transect.horiz.make_triangle_tree", "polaris.ocean.viz.transect.horiz.mesh_to_triangles", "polaris.ocean.viz.transect.vert.find_transect_levels_and_weights", "polaris.ocean.viz.transect.vert.interp_mpas_to_transect_cells", "polaris.ocean.viz.transect.vert.interp_mpas_to_transect_nodes", "Ocean component", "Models", "MPAS-Ocean", "baroclinic_channel", "barotropic_gyre", "correlated_tracers_2d", "cosine_bell", "divergent_2d", "geostrophic", "ice_shelf_2d", "Tasks", "inertial_gravity_wave", "internal_wave", "manufactured_solution", "nondivergent_2d", "rotation_2d", "single_column", "Categories of tasks", "Components", "Directory structure", "Organization of Tasks", "Steps", "Suites", "Tasks", "Overview", "Quick Start for Developers", "seaice", "SeaIce framework", "polaris.seaice.SeaIce", "polaris.seaice.tasks.single_column.add_single_column_tasks", "polaris.seaice.tasks.single_column.exact_restart.ExactRestart", "polaris.seaice.tasks.single_column.exact_restart.validate.Validate", "polaris.seaice.tasks.single_column.exact_restart.validate.Validate.run", "polaris.seaice.tasks.single_column.forward.Forward", "polaris.seaice.tasks.single_column.standard_physics.StandardPhysics", "polaris.seaice.tasks.single_column.standard_physics.viz.Viz", "polaris.seaice.tasks.single_column.standard_physics.viz.Viz.run", "SeaIce component", "Supported Model: MPAS-Seaice", "Tasks", "single_column", "Troubleshooting", "Glossary", "Polaris", "Developer Tutorial: Adding a new test group", "Config Files", "Anvil", "Chicoma", "Chrysalis", "CompyMcNodeFace", "Frontier", "Machines", "Perlmutter", "Ice shelf", "Framework", "Vertical coordinate", "Ocean component", "Suites", "baroclinic channel", "barotropic gyre", "correlated tracers 2-d", "cosine bell", "divergent 2-d", "geostrophic", "ice shelf 2d", "Tasks", "inertial gravity wave", "internal wave", "manufactured solution", "nondivergent 2-d", "rotation 2-d", "single column", "<Category of task>", "Quick Start for Users", "Sea ice component", "Tasks", "single column", "<Category of task>", "Suites", "Tasks"], "titleterms": {"": 383, "100layere3smv1": 395, "1d": 395, "2": [400, 402, 409, 410], "2d": 404, "3d": 395, "60layerphc": 395, "80layere3smv1": 395, "A": 385, "And": 1, "No": 391, "The": 1, "__main__": 56, "activ": 365, "ad": [14, 141, 361, 384], "add_baroclinic_channel_task": 181, "add_barotropic_gyre_task": 204, "add_config": 21, "add_cosine_bell_task": 218, "add_depend": 41, "add_geostrophic_task": 234, "add_ice_shelf_2d_task": 243, "add_inertial_gravity_wave_task": 255, "add_input_fil": 42, "add_internal_wave_task": 267, "add_manufactured_solution_task": 281, "add_model_config_opt": 26, "add_namelist_fil": 27, "add_output_fil": 43, "add_single_column_task": [294, 369], "add_sphere_transport_task": 304, "add_spherical_base_mesh_step": 166, "add_step": [22, 52], "add_streams_fil": 28, "add_task": 23, "add_yaml_fil": 29, "adjust": 393, "advanc": 365, "ag": [356, 411], "again": 384, "against": 18, "albani": [6, 365], "algorithm": 2, "alter_bottom_depth": 319, "alter_ssh": 320, "an": [14, 144, 384], "analysi": [146, 147, 148, 149, 150, 151, 152, 153, 195, 196, 197, 205, 206, 207, 208, 219, 220, 235, 236, 237, 256, 257, 276, 277, 282, 283, 305, 306, 344, 345, 346, 347, 348, 351, 353, 354, 355, 384, 403], "anvil": [136, 386], "api": 3, "ar": 1, "area": 15, "area_for_field": 89, "attribut": [361, 363], "baroclin": 398, "baroclinic_channel": [143, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 343], "barotrop": 399, "barotropic_gyr": [143, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 344], "barotropicgyr": 203, "base": [3, 143], "base_mesh": [345, 346, 347, 348, 354, 355], "baselin": 18, "befor": 1, "beginn": 365, "bell": 401, "between": [365, 384], "boundari": 342, "branch": 6, "build": [4, 141, 365, 413], "build_cell_width_lat_lon": 79, "build_subdivisions_cell_width_lat_lon": 72, "cach": [3, 5, 8, 57, 361], "case": 385, "categori": [357, 412, 417], "cell": 384, "channel": 398, "chicoma": [137, 387], "chrysali": [138, 388], "class": [3, 364], "clean_up_whitespac": 64, "code": [364, 365, 384], "column": [411, 416], "command": [3, 5, 8], "comment": 9, "common": 19, "compare_vari": 124, "compass": 383, "compil": 365, "complete_step_run": 111, "compon": [3, 14, 20, 21, 22, 23, 24, 58, 144, 340, 358, 364, 365, 377, 396, 413, 414], "comput": 384, "compute_cell_count": [155, 158, 164, 174, 185, 210, 246, 262, 270, 288], "compute_error": [147, 206], "compute_max_time_step": 212, "compute_min_max_level_cel": 324, "compute_planar_hex_nx_ni": 83, "compute_rp": 180, "compute_transect": 331, "compute_z_level_layer_thick": 325, "compute_z_level_resting_thick": 326, "compymcnodefac": [139, 389], "conda": [6, 365, 381, 391, 413], "condit": [342, 378, 384, 398, 399, 400, 401, 402, 403, 404, 406, 407, 408, 409, 410, 411, 412, 416, 417], "config": [3, 6, 9, 14, 59, 60, 141, 144, 358, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 398, 399, 400, 401, 402, 403, 404, 406, 407, 408, 409, 410, 411, 412, 416, 417], "configur": [53, 194, 217, 233, 275, 303, 363, 381], "constrain_resourc": [44, 175, 361], "constructor": [358, 361, 363], "converg": [143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 408], "convergence_paramet": [148, 306], "convergenceanalysi": [146, 147, 148, 149, 150, 151, 152, 153], "convergenceforward": [154, 155, 156], "coordin": [143, 144, 384, 395], "copi": 361, "core": [398, 399, 400, 401, 402, 403, 404, 406, 407, 408, 409, 410, 411, 412, 416, 417], "correl": 400, "correlated_tracers_2d": 345, "cosin": 401, "cosine_bel": [143, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 346, 397], "cosine_bell_cached_init": 397, "cosinebel": [216, 217], "count": 384, "cpu": [137, 142, 387, 392], "crayclang": 140, "creat": [6, 365, 384], "cvmix": [295, 356, 411], "d": [400, 402, 409, 410], "data": [384, 392], "dataset": 18, "daughter": 1, "decomp": [182, 343, 398], "default": [183, 244, 268, 343, 344, 349, 352, 384, 398, 399, 404, 407], "default_tidal_forc": 404, "default_with_restart": 404, "defin": 384, "depend": [1, 6, 361], "deploi": 6, "describ": [6, 141], "descript": [398, 399, 400, 401, 402, 403, 404, 406, 407, 408, 409, 410, 411, 412, 416, 417], "design": [0, 2], "develop": [365, 383, 384], "differ": 365, "directori": [1, 359], "discover": 1, "diverg": 402, "divergent_2d": 347, "do": [1, 6], "docstr": 7, "document": [0, 4, 7, 384], "doe": 365, "download": [11, 61, 361], "dst_from_lon_lat": 101, "dst_from_mpa": 102, "dst_from_point": 103, "dst_from_proj": 104, "dst_global_lon_lat": 105, "durat": [398, 399, 400, 401, 402, 403, 404, 406, 407, 408, 409, 410, 411, 412, 416, 417], "dynam": [14, 384], "dynamic_model_config": [30, 156, 165, 186, 192, 211, 227, 247, 271], "e3sm": [6, 14, 144, 365, 413], "easili": 1, "energi": [143, 144], "enhanc": 384, "env": 6, "environ": [6, 141, 365, 381, 413], "error": 381, "etc": 6, "exact": 416, "exact_restart": [370, 371, 372], "exact_restart_test": 380, "exact_solut": [149, 207, 220, 236, 257, 258, 259, 260, 283, 284, 285, 286, 351, 353], "exactrestart": 370, "exactsolut": [258, 259, 260, 284, 285, 286], "fail": 381, "field": 19, "filament_analysi": [307, 308, 354], "filamentanalysi": [307, 308], "file": [9, 14, 141, 144, 358, 361, 384, 385], "find_planar_transect_cells_and_weight": 333, "find_spherical_transect_cells_and_weight": 334, "find_transect_levels_and_weight": 337, "flag": 365, "forc": [342, 378, 398, 399, 400, 401, 402, 403, 404, 406, 407, 408, 409, 410, 411, 412, 416, 417], "forg": 391, "forward": [154, 155, 156, 184, 185, 186, 209, 210, 211, 212, 221, 238, 245, 246, 247, 261, 262, 269, 270, 271, 287, 288, 296, 309, 343, 344, 345, 346, 347, 348, 349, 351, 352, 353, 354, 355, 356, 373, 380, 384], "framework": [3, 10, 143, 144, 343, 344, 345, 346, 347, 348, 349, 351, 352, 353, 354, 355, 356, 364, 367, 380, 394], "from": [1, 6, 19, 144, 361, 365, 391], "frontier": [140, 390], "gener": 13, "generate_1d_grid": 316, "geostroph": [143, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 348, 403], "get": 384, "get_available_parallel_resourc": 95, "get_cell_width": 73, "get_compon": 58, "get_output_field": [150, 237], "get_parallel_command": 96, "get_remapp": 106, "get_slurm_opt": 65, "get_subdivis": 74, "get_time_interval_str": 179, "gethostbynam": 381, "global": 19, "glossari": [382, 383], "gnu": [136, 137, 138, 139, 140, 142], "graph": 14, "graviti": 406, "grid": [19, 395, 398, 399, 400, 401, 402, 403, 404, 406, 407, 408, 409, 410, 411, 412], "grid_1d": [316, 317], "group": [364, 384], "guid": 383, "gyre": 399, "here": 2, "horiz": [333, 334, 335, 336], "horizont": [19, 384], "how": 384, "i": [1, 413], "ic": [143, 144, 393, 404, 414], "ice_shelf": [159, 160, 161, 162, 163, 164, 165], "ice_shelf_2d": [143, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 349], "iceshelftask": [159, 160], "icosahedr": 144, "icosahedralmeshstep": [71, 72, 73, 74, 75, 76, 77], "ideal": [356, 411], "ideal_ag": 297, "idealag": 297, "identifi": 6, "implement": [1, 2], "index_tanh_dz": 395, "inerti": 406, "inertial_gravity_wav": [143, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 351], "inertialgravitywav": 254, "ingest": 91, "init": [187, 188, 189, 213, 214, 215, 222, 223, 224, 239, 240, 248, 249, 263, 264, 272, 273, 289, 290, 291, 298, 299, 310, 311, 343, 344, 345, 346, 347, 348, 349, 351, 352, 353, 354, 355, 356, 384], "init_sigma_vertical_coord": 321, "init_vertical_coord": 318, "init_z_level_vertical_coord": 327, "init_z_star_vertical_coord": 329, "initi": [342, 378, 384, 398, 399, 400, 401, 402, 403, 404, 406, 407, 408, 409, 410, 411, 412, 416, 417], "input": [14, 144, 361], "intel": [136, 138, 139, 142], "interfac": [3, 5], "intern": 407, "internal_wav": [143, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 352], "interp_mpas_to_transect_cel": 338, "interp_mpas_to_transect_nod": 339, "interv": 144, "intuit": 1, "io": [3, 11, 61, 62, 63], "job": [3, 64, 65, 66, 391, 413], "jupyt": 392, "lanl": 381, "lapack": [6, 365], "lat": 19, "level": 395, "line": [3, 5], "list": [3, 5, 8, 67, 68, 69], "list_cas": 67, "list_machin": 68, "list_suit": 69, "load": [386, 387, 388, 389, 390, 392, 413], "load_depend": 112, "log": [3, 12, 70], "log_method_cal": 70, "lon": 19, "mac": 381, "mach": 6, "machin": [6, 141, 365, 391, 413], "mai": 1, "main": 56, "main_mpas_to_yaml": 133, "make": [14, 384], "make_graph_fil": 88, "make_jigsaw_mesh": [75, 80], "make_triangle_tre": 335, "mali": [6, 365], "manufactur": 408, "manufactured_solut": [143, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 353], "manufacturedsolut": 280, "map": 144, "map_from_native_model_var": 168, "map_to_native_model_var": 169, "map_yaml_config": [31, 176], "map_yaml_opt": [32, 177], "map_yaml_to_namelist": 33, "mappingfilestep": [100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110], "matplotlib": 19, "mesh": [3, 13, 14, 19, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 143, 144, 166, 384, 398, 399, 400, 401, 402, 403, 404, 406, 407, 408, 409, 410, 411, 412, 416, 417], "mesh_to_triangl": 336, "mixing_analysi": [312, 313, 345], "mixinganalysi": [312, 313], "model": [14, 143, 144, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 341, 378, 384, 398, 399, 400, 401, 402, 403, 404, 406, 407, 408, 409, 410, 411, 412, 413], "model_step": [3, 88], "modelstep": [3, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39], "modul": [6, 8, 364, 365], "more": 384, "mpa": [3, 6, 15, 19, 89, 90, 144, 342, 365, 378], "mpas_namelist_and_streams_to_yaml": 134, "mpas_to_yaml": [3, 5], "mpi": [144, 391], "mpich": 391, "multipl": 1, "name": 2, "namelist": [3, 14, 91, 92, 93, 94, 144], "netlib": [6, 365], "new": [6, 141, 384], "nightli": 362, "nondiverg": 409, "nondivergent_2d": 354, "norm": 18, "normal_veloc": [259, 285], "notebook": 392, "ocean": [6, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 342, 365, 396], "oceaniostep": [167, 168, 169, 170, 171, 172], "oceanmodelstep": [173, 174, 175, 176, 177, 178], "omega": [144, 365], "onc": 1, "one": 384, "onli": 365, "open_model_dataset": 170, "openmpi": 391, "option": [2, 6, 14, 144, 365, 384, 386, 387, 388, 389, 390, 391, 392, 393, 398, 399, 400, 401, 402, 403, 404, 406, 407, 408, 409, 410, 411, 412, 416, 417], "organ": 360, "other": [1, 141, 361, 384, 391, 413], "out": 384, "output": [1, 144, 361, 384], "overview": 364, "packag": 364, "parallel": [3, 95, 96, 97, 98], "paramet": 384, "parse_replac": 92, "partial_cel": [319, 320], "partit": [14, 34], "pass": 384, "path": 1, "perlmutt": [142, 392], "permiss": 11, "petsc": [6, 365], "physic": 416, "pio": 14, "planar": [13, 19, 83], "plot": [19, 384], "plot_converg": 151, "plot_global_lat_lon_field": 125, "plot_global_mpas_field": 126, "plot_horiz_field": 127, "plot_transect": 332, "pm": 142, "polari": [3, 5, 6, 8, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 361, 364, 365, 368, 369, 370, 371, 372, 373, 374, 375, 376, 383, 386, 387, 388, 389, 390, 392, 413], "polarisconfigpars": [59, 60], "polarisyaml": [129, 130, 131, 132], "potenti": [143, 144], "pr": 362, "process_inputs_and_output": 35, "proven": [3, 16, 99], "proxi": 381, "pull": 362, "quasi": 144, "quasiuniformsphericalmeshstep": [78, 79, 80, 81, 82], "queue": 391, "quick": [365, 413], "read": [119, 130], "refer": [3, 143, 144], "relat": 364, "reli": 1, "remap": [3, 17, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110], "remot": [6, 392], "remove_step": [24, 54], "replac": 93, "repo": 365, "repositori": 365, "request": 362, "requir": [1, 2], "resolut": 384, "resourc": 144, "rest": 144, "restart": [190, 191, 192, 225, 226, 227, 343, 346, 398, 416], "restart_step": [191, 192, 346], "restartstep": [191, 192, 226, 227], "rotat": 410, "rotation_2d": 355, "rpe": [143, 144, 180, 193, 194, 195, 196, 197, 274, 275, 276, 277, 343, 352, 398, 407], "run": [1, 3, 8, 14, 45, 76, 81, 85, 111, 112, 113, 114, 115, 116, 144, 152, 162, 188, 196, 200, 202, 208, 214, 223, 229, 231, 240, 242, 249, 251, 253, 264, 266, 273, 277, 279, 290, 293, 299, 301, 308, 311, 313, 315, 361, 365, 372, 376, 386, 387, 388, 389, 390, 392, 398, 399, 400, 401, 402, 403, 404, 406, 407, 408, 409, 410, 411, 412, 413, 416, 417], "run_command": 97, "run_single_step": 113, "run_task": 114, "runtime_setup": [36, 46, 107, 361], "same": 2, "save_and_plot_cell_width": 86, "script": [365, 413], "sea": 414, "seaic": [366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378], "second": 384, "serial": [5, 8, 113, 114], "set": [1, 144, 365, 413], "set_cores_per_nod": 98, "set_model_resourc": 37, "set_resourc": 47, "set_shared_config": [48, 55], "setup": [3, 5, 8, 38, 49, 60, 77, 82, 87, 117, 118, 153, 171, 178, 189, 197, 215, 291, 361], "setup_config": 115, "setup_ssh_adjustment_step": 160, "setup_suit": 123, "setup_task": [117, 118], "share": [1, 6, 9, 364, 384], "shelf": [143, 144, 393, 404], "shell": 365, "sigma": [321, 322, 395], "singl": [411, 416], "single_column": [143, 294, 295, 296, 297, 298, 299, 300, 301, 356, 366, 369, 370, 371, 372, 373, 374, 375, 376, 380], "slurm": 391, "solut": 408, "solver": 381, "spack": [6, 141, 365, 413], "sphere_transport": [143, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315], "spheretransport": [302, 303], "spheric": [13, 19, 84, 85, 86, 87, 143, 144, 157, 158, 166], "sphericalbasestep": [84, 85, 86, 87], "sphericalconvergenceforward": [157, 158], "src_from_lon_lat": 108, "src_from_mpa": 109, "src_from_proj": 110, "ssh": [260, 286, 393], "sshadjust": [161, 162], "sshforward": [163, 164, 165], "standalon": 413, "standard": 416, "standard_phys": [374, 375, 376], "standard_physics_test": 380, "standardphys": 374, "star": 395, "start": [365, 384, 413], "step": [1, 3, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 143, 361, 384, 393, 398, 399, 400, 401, 402, 403, 404, 406, 407, 408, 409, 410, 411, 412, 417], "stream": [3, 14, 119, 120, 121, 122, 144, 384], "structur": [1, 359], "studi": 384, "style": [19, 364, 365], "suit": [3, 5, 8, 123, 362, 397, 413, 418], "summari": [1, 2], "superclass": 384, "support": [141, 341, 365, 378, 391, 399, 413], "suppport": [398, 400, 401, 402, 403, 404, 406, 407, 408, 409, 410, 411, 412], "switch": 365, "symlink": [11, 62, 361], "system": 365, "tanh_dz": 395, "task": [1, 3, 51, 52, 53, 54, 55, 143, 144, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 350, 357, 360, 363, 364, 366, 369, 370, 371, 372, 373, 374, 375, 376, 379, 384, 405, 407, 412, 413, 415, 417, 419], "task_nam": [412, 417], "templat": [2, 14], "test": [1, 2, 6, 143, 144, 384, 385, 416], "thing": 384, "thread": [198, 343, 398], "time": [15, 144, 384, 398, 399, 400, 401, 402, 403, 404, 406, 407, 408, 409, 410, 411, 412, 417], "time_index_from_xtim": 90, "timestep": 416, "topic": 2, "tracer": 400, "transect": [333, 334, 335, 336, 337, 338, 339], "troubleshoot": [6, 365, 381], "tutori": [383, 384], "type": 395, "uniform": [13, 144, 395], "unix": 365, "unknown": 365, "unpickle_suit": 116, "up": [1, 365, 413], "updat": [6, 14, 131, 365], "update_cach": 57, "update_default": 120, "update_layer_thick": 323, "update_namelist_pio": 39, "update_permiss": 63, "update_sigma_layer_thick": 322, "update_tre": 121, "update_z_level_layer_thick": 328, "update_z_star_layer_thick": 330, "us": 1, "use_mplstyl": 128, "user": [1, 365, 383, 385, 413], "v": 144, "valid": [1, 2, 3, 18, 124, 199, 200, 228, 229, 250, 251, 343, 346, 349, 352, 371, 372, 384, 413], "validate_baselin": 50, "vari": 384, "variabl": [6, 18], "vert": [337, 338, 339], "vertic": [143, 144, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 384, 395, 398, 399, 400, 401, 402, 403, 404, 406, 407, 408, 409, 410, 411, 412], "visual": [19, 143, 144, 384, 416], "viz": [3, 125, 126, 127, 128, 201, 202, 230, 231, 241, 242, 252, 253, 265, 266, 278, 279, 292, 293, 300, 301, 314, 315, 331, 332, 333, 334, 335, 336, 337, 338, 339, 345, 346, 347, 348, 349, 351, 353, 354, 355, 356, 375, 376, 380, 384], "wave": [406, 407], "we": 6, "what": 365, "when": 381, "where": 6, "within": 364, "without": 6, "work": 1, "worktre": 365, "write": [94, 99, 122, 132], "write_1d_grid": 317, "write_job_script": 66, "write_model_dataset": 172, "yaml": [3, 14, 129, 130, 131, 132, 133, 134, 135, 144], "yaml_to_mpas_stream": 135, "yet": 413, "z": 395, "zlevel": [324, 325, 326, 327, 328], "zstar": [329, 330]}})