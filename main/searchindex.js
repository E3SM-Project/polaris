Search.setIndex({"docnames": ["design_docs/index", "design_docs/shared_steps", "design_docs/template", "developers_guide/api", "developers_guide/building_docs", "developers_guide/command_line", "developers_guide/deploying_spack", "developers_guide/docs", "developers_guide/framework/commands", "developers_guide/framework/config", "developers_guide/framework/index", "developers_guide/framework/io", "developers_guide/framework/logging", "developers_guide/framework/mesh", "developers_guide/framework/model", "developers_guide/framework/provenance", "developers_guide/framework/remapping", "developers_guide/framework/validation", "developers_guide/framework/visualization", "developers_guide/generated/polaris.Component", "developers_guide/generated/polaris.Component.add_task", "developers_guide/generated/polaris.ModelStep", "developers_guide/generated/polaris.ModelStep.add_model_config_options", "developers_guide/generated/polaris.ModelStep.add_namelist_file", "developers_guide/generated/polaris.ModelStep.add_streams_file", "developers_guide/generated/polaris.ModelStep.add_yaml_file", "developers_guide/generated/polaris.ModelStep.dynamic_model_config", "developers_guide/generated/polaris.ModelStep.map_yaml_to_namelist", "developers_guide/generated/polaris.ModelStep.partition", "developers_guide/generated/polaris.ModelStep.process_inputs_and_outputs", "developers_guide/generated/polaris.ModelStep.runtime_setup", "developers_guide/generated/polaris.ModelStep.set_model_resources", "developers_guide/generated/polaris.ModelStep.setup", "developers_guide/generated/polaris.ModelStep.update_namelist_pio", "developers_guide/generated/polaris.Step", "developers_guide/generated/polaris.Step.add_dependency", "developers_guide/generated/polaris.Step.add_input_file", "developers_guide/generated/polaris.Step.add_output_file", "developers_guide/generated/polaris.Step.constrain_resources", "developers_guide/generated/polaris.Step.run", "developers_guide/generated/polaris.Step.runtime_setup", "developers_guide/generated/polaris.Step.set_resources", "developers_guide/generated/polaris.Step.setup", "developers_guide/generated/polaris.Task", "developers_guide/generated/polaris.Task.add_step", "developers_guide/generated/polaris.Task.configure", "developers_guide/generated/polaris.__main__.main", "developers_guide/generated/polaris.cache.update_cache", "developers_guide/generated/polaris.components.get_components", "developers_guide/generated/polaris.config.PolarisConfigParser", "developers_guide/generated/polaris.io.download", "developers_guide/generated/polaris.io.imp_res", "developers_guide/generated/polaris.io.symlink", "developers_guide/generated/polaris.job.get_slurm_options", "developers_guide/generated/polaris.job.write_job_script", "developers_guide/generated/polaris.list.list_cases", "developers_guide/generated/polaris.list.list_machines", "developers_guide/generated/polaris.list.list_suites", "developers_guide/generated/polaris.logging.log_method_call", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.build_subdivisions_cell_width_lat_lon", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.get_cell_width", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.get_subdivisions", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.make_jigsaw_mesh", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.run", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.setup", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep.build_cell_width_lat_lon", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep.make_jigsaw_mesh", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep.run", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep.setup", "developers_guide/generated/polaris.mesh.planar.compute_planar_hex_nx_ny", "developers_guide/generated/polaris.mesh.spherical.SphericalBaseStep", "developers_guide/generated/polaris.mesh.spherical.SphericalBaseStep.run", "developers_guide/generated/polaris.mesh.spherical.SphericalBaseStep.save_and_plot_cell_width", "developers_guide/generated/polaris.mesh.spherical.SphericalBaseStep.setup", "developers_guide/generated/polaris.model_step.make_graph_file", "developers_guide/generated/polaris.namelist.ingest", "developers_guide/generated/polaris.namelist.parse_replacements", "developers_guide/generated/polaris.namelist.replace", "developers_guide/generated/polaris.namelist.write", "developers_guide/generated/polaris.parallel.get_available_parallel_resources", "developers_guide/generated/polaris.parallel.get_parallel_command", "developers_guide/generated/polaris.parallel.run_command", "developers_guide/generated/polaris.parallel.set_cores_per_node", "developers_guide/generated/polaris.provenance.write", "developers_guide/generated/polaris.remap.MappingFileStep", "developers_guide/generated/polaris.remap.MappingFileStep.dst_from_lon_lat", "developers_guide/generated/polaris.remap.MappingFileStep.dst_from_mpas", "developers_guide/generated/polaris.remap.MappingFileStep.dst_from_points", "developers_guide/generated/polaris.remap.MappingFileStep.dst_from_proj", "developers_guide/generated/polaris.remap.MappingFileStep.dst_global_lon_lat", "developers_guide/generated/polaris.remap.MappingFileStep.get_remapper", "developers_guide/generated/polaris.remap.MappingFileStep.runtime_setup", "developers_guide/generated/polaris.remap.MappingFileStep.src_from_lon_lat", "developers_guide/generated/polaris.remap.MappingFileStep.src_from_mpas", "developers_guide/generated/polaris.remap.MappingFileStep.src_from_proj", "developers_guide/generated/polaris.run.complete_step_run", "developers_guide/generated/polaris.run.load_dependencies", "developers_guide/generated/polaris.run.serial.run_single_step", "developers_guide/generated/polaris.run.serial.run_tasks", "developers_guide/generated/polaris.run.setup_config", "developers_guide/generated/polaris.run.unpickle_suite", "developers_guide/generated/polaris.setup.setup_task", "developers_guide/generated/polaris.setup.setup_tasks", "developers_guide/generated/polaris.streams.read", "developers_guide/generated/polaris.streams.update_defaults", "developers_guide/generated/polaris.streams.update_tree", "developers_guide/generated/polaris.streams.write", "developers_guide/generated/polaris.suite.setup_suite", "developers_guide/generated/polaris.validate.compare_variables", "developers_guide/generated/polaris.viz.globe.plot_global", "developers_guide/generated/polaris.viz.plot_horiz_field", "developers_guide/generated/polaris.yaml.PolarisYaml", "developers_guide/generated/polaris.yaml.PolarisYaml.read", "developers_guide/generated/polaris.yaml.PolarisYaml.update", "developers_guide/generated/polaris.yaml.PolarisYaml.write", "developers_guide/generated/polaris.yaml.main_mpas_to_yaml", "developers_guide/generated/polaris.yaml.mpas_namelist_and_streams_to_yaml", "developers_guide/generated/polaris.yaml.yaml_to_mpas_streams", "developers_guide/machines/anvil", "developers_guide/machines/chicoma", "developers_guide/machines/chrysalis", "developers_guide/machines/compy", "developers_guide/machines/index", "developers_guide/machines/perlmutter", "developers_guide/ocean/api", "developers_guide/ocean/framework", "developers_guide/ocean/generated/polaris.ocean.Ocean", "developers_guide/ocean/generated/polaris.ocean.convergence.spherical.SphericalConvergenceForward", "developers_guide/ocean/generated/polaris.ocean.mesh.spherical.add_spherical_base_mesh_step", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.compute_cell_count", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.constrain_resources", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.map_yaml_to_namelist", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.setup", "developers_guide/ocean/generated/polaris.ocean.model.get_time_interval_string", "developers_guide/ocean/generated/polaris.ocean.rpe.compute_rpe", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.add_baroclinic_channel_tasks", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.decomp.Decomp", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.default.Default", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.forward.Forward", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.forward.Forward.compute_cell_count", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.forward.Forward.dynamic_model_config", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.init.Init", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.init.Init.run", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.init.Init.setup", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.restart.Restart", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.restart.restart_step.RestartStep", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.restart.restart_step.RestartStep.dynamic_model_config", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.rpe.Rpe", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.rpe.Rpe.configure", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis.run", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis.setup", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.threads.Threads", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.validate.Validate", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.validate.Validate.run", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.viz.Viz", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.viz.Viz.run", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.CosineBell", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.CosineBell.configure", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.add_cosine_bell_tasks", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.analysis.Analysis", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.analysis.Analysis.rmse", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.analysis.Analysis.run", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.forward.Forward", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.forward.Forward.compute_cell_count", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.forward.Forward.dynamic_model_config", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.init.Init", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.init.Init.run", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.viz.Viz", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.viz.Viz.run", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.viz.VizMap", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.viz.VizMap.run", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.InertialGravityWave", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.add_inertial_gravity_wave_tasks", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.analysis.Analysis", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.analysis.Analysis.run", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution.normal_velocity", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution.ssh", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.forward.Forward", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.forward.Forward.compute_cell_count", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.forward.Forward.dynamic_model_config", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.init.Init", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.init.Init.run", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.viz.Viz", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.viz.Viz.run", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.ManufacturedSolution", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.add_manufactured_solution_tasks", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.analysis.Analysis", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.analysis.Analysis.run", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution.normal_velocity", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution.ssh", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.forward.Forward", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.forward.Forward.compute_cell_count", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.forward.Forward.dynamic_model_config", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.init.Init", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.init.Init.run", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.viz.Viz", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.viz.Viz.run", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.add_single_column_tasks", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.cvmix.CVMix", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.forward.Forward", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.ideal_age.IdealAge", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.init.Init", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.init.Init.run", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.viz.Viz", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.viz.Viz.run", "developers_guide/ocean/generated/polaris.ocean.vertical.grid_1d.generate_1d_grid", "developers_guide/ocean/generated/polaris.ocean.vertical.grid_1d.write_1d_grid", "developers_guide/ocean/generated/polaris.ocean.vertical.init_vertical_coord", "developers_guide/ocean/generated/polaris.ocean.vertical.partial_cells.alter_bottom_depth", "developers_guide/ocean/generated/polaris.ocean.vertical.partial_cells.alter_ssh", "developers_guide/ocean/generated/polaris.ocean.vertical.zlevel.compute_min_max_level_cell", "developers_guide/ocean/generated/polaris.ocean.vertical.zlevel.compute_z_level_layer_thickness", "developers_guide/ocean/generated/polaris.ocean.vertical.zlevel.compute_z_level_resting_thickness", "developers_guide/ocean/generated/polaris.ocean.vertical.zlevel.init_z_level_vertical_coord", "developers_guide/ocean/generated/polaris.ocean.vertical.zstar.init_z_star_vertical_coord", "developers_guide/ocean/index", "developers_guide/ocean/models/index", "developers_guide/ocean/models/mpas_ocean", "developers_guide/ocean/tasks/baroclinic_channel", "developers_guide/ocean/tasks/cosine_bell", "developers_guide/ocean/tasks/index", "developers_guide/ocean/tasks/inertial_gravity_wave", "developers_guide/ocean/tasks/manufactured_solution", "developers_guide/ocean/tasks/single_column", "developers_guide/organization/categories_of_tasks", "developers_guide/organization/components", "developers_guide/organization/directories", "developers_guide/organization/index", "developers_guide/organization/steps", "developers_guide/organization/suites", "developers_guide/organization/tasks", "developers_guide/overview", "developers_guide/quick_start", "developers_guide/seaice/api", "developers_guide/seaice/framework", "developers_guide/seaice/generated/polaris.seaice.SeaIce", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.add_single_column_tasks", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.exact_restart.ExactRestart", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.exact_restart.validate.Validate", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.exact_restart.validate.Validate.run", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.forward.Forward", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.standard_physics.StandardPhysics", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.standard_physics.viz.Viz", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.standard_physics.viz.Viz.run", "developers_guide/seaice/index", "developers_guide/seaice/mpas_seaice", "developers_guide/seaice/tasks/index", "developers_guide/seaice/tasks/single_column", "developers_guide/troubleshooting", "glossary", "index", "tutorials/dev_add_test_group", "users_guide/config_files", "users_guide/machines/anvil", "users_guide/machines/chicoma", "users_guide/machines/chrysalis", "users_guide/machines/compy", "users_guide/machines/index", "users_guide/machines/perlmutter", "users_guide/ocean/framework/index", "users_guide/ocean/framework/vertical", "users_guide/ocean/index", "users_guide/ocean/suites", "users_guide/ocean/tasks/baroclinic_channel", "users_guide/ocean/tasks/cosine_bell", "users_guide/ocean/tasks/index", "users_guide/ocean/tasks/inertial_gravity_wave", "users_guide/ocean/tasks/manufactured_solution", "users_guide/ocean/tasks/single_column", "users_guide/ocean/tasks/template", "users_guide/quick_start", "users_guide/seaice/index", "users_guide/seaice/tasks/index", "users_guide/seaice/tasks/single_column", "users_guide/seaice/tasks/template", "users_guide/suites", "users_guide/tasks"], "filenames": ["design_docs/index.md", "design_docs/shared_steps.md", "design_docs/template.md", "developers_guide/api.md", "developers_guide/building_docs.md", "developers_guide/command_line.md", "developers_guide/deploying_spack.md", "developers_guide/docs.md", "developers_guide/framework/commands.md", "developers_guide/framework/config.md", "developers_guide/framework/index.md", "developers_guide/framework/io.md", "developers_guide/framework/logging.md", "developers_guide/framework/mesh.md", "developers_guide/framework/model.md", "developers_guide/framework/provenance.md", "developers_guide/framework/remapping.md", "developers_guide/framework/validation.md", "developers_guide/framework/visualization.md", "developers_guide/generated/polaris.Component.rst", "developers_guide/generated/polaris.Component.add_task.rst", "developers_guide/generated/polaris.ModelStep.rst", "developers_guide/generated/polaris.ModelStep.add_model_config_options.rst", "developers_guide/generated/polaris.ModelStep.add_namelist_file.rst", "developers_guide/generated/polaris.ModelStep.add_streams_file.rst", "developers_guide/generated/polaris.ModelStep.add_yaml_file.rst", "developers_guide/generated/polaris.ModelStep.dynamic_model_config.rst", "developers_guide/generated/polaris.ModelStep.map_yaml_to_namelist.rst", "developers_guide/generated/polaris.ModelStep.partition.rst", "developers_guide/generated/polaris.ModelStep.process_inputs_and_outputs.rst", "developers_guide/generated/polaris.ModelStep.runtime_setup.rst", "developers_guide/generated/polaris.ModelStep.set_model_resources.rst", "developers_guide/generated/polaris.ModelStep.setup.rst", "developers_guide/generated/polaris.ModelStep.update_namelist_pio.rst", "developers_guide/generated/polaris.Step.rst", "developers_guide/generated/polaris.Step.add_dependency.rst", "developers_guide/generated/polaris.Step.add_input_file.rst", "developers_guide/generated/polaris.Step.add_output_file.rst", "developers_guide/generated/polaris.Step.constrain_resources.rst", "developers_guide/generated/polaris.Step.run.rst", "developers_guide/generated/polaris.Step.runtime_setup.rst", "developers_guide/generated/polaris.Step.set_resources.rst", "developers_guide/generated/polaris.Step.setup.rst", "developers_guide/generated/polaris.Task.rst", "developers_guide/generated/polaris.Task.add_step.rst", "developers_guide/generated/polaris.Task.configure.rst", "developers_guide/generated/polaris.__main__.main.rst", "developers_guide/generated/polaris.cache.update_cache.rst", "developers_guide/generated/polaris.components.get_components.rst", "developers_guide/generated/polaris.config.PolarisConfigParser.rst", "developers_guide/generated/polaris.io.download.rst", "developers_guide/generated/polaris.io.imp_res.rst", "developers_guide/generated/polaris.io.symlink.rst", "developers_guide/generated/polaris.job.get_slurm_options.rst", "developers_guide/generated/polaris.job.write_job_script.rst", "developers_guide/generated/polaris.list.list_cases.rst", "developers_guide/generated/polaris.list.list_machines.rst", "developers_guide/generated/polaris.list.list_suites.rst", "developers_guide/generated/polaris.logging.log_method_call.rst", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.rst", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.build_subdivisions_cell_width_lat_lon.rst", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.get_cell_width.rst", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.get_subdivisions.rst", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.make_jigsaw_mesh.rst", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.run.rst", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.setup.rst", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep.rst", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep.build_cell_width_lat_lon.rst", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep.make_jigsaw_mesh.rst", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep.run.rst", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep.setup.rst", "developers_guide/generated/polaris.mesh.planar.compute_planar_hex_nx_ny.rst", "developers_guide/generated/polaris.mesh.spherical.SphericalBaseStep.rst", "developers_guide/generated/polaris.mesh.spherical.SphericalBaseStep.run.rst", "developers_guide/generated/polaris.mesh.spherical.SphericalBaseStep.save_and_plot_cell_width.rst", "developers_guide/generated/polaris.mesh.spherical.SphericalBaseStep.setup.rst", "developers_guide/generated/polaris.model_step.make_graph_file.rst", "developers_guide/generated/polaris.namelist.ingest.rst", "developers_guide/generated/polaris.namelist.parse_replacements.rst", "developers_guide/generated/polaris.namelist.replace.rst", "developers_guide/generated/polaris.namelist.write.rst", "developers_guide/generated/polaris.parallel.get_available_parallel_resources.rst", "developers_guide/generated/polaris.parallel.get_parallel_command.rst", "developers_guide/generated/polaris.parallel.run_command.rst", "developers_guide/generated/polaris.parallel.set_cores_per_node.rst", "developers_guide/generated/polaris.provenance.write.rst", "developers_guide/generated/polaris.remap.MappingFileStep.rst", "developers_guide/generated/polaris.remap.MappingFileStep.dst_from_lon_lat.rst", "developers_guide/generated/polaris.remap.MappingFileStep.dst_from_mpas.rst", "developers_guide/generated/polaris.remap.MappingFileStep.dst_from_points.rst", "developers_guide/generated/polaris.remap.MappingFileStep.dst_from_proj.rst", "developers_guide/generated/polaris.remap.MappingFileStep.dst_global_lon_lat.rst", "developers_guide/generated/polaris.remap.MappingFileStep.get_remapper.rst", "developers_guide/generated/polaris.remap.MappingFileStep.runtime_setup.rst", "developers_guide/generated/polaris.remap.MappingFileStep.src_from_lon_lat.rst", "developers_guide/generated/polaris.remap.MappingFileStep.src_from_mpas.rst", "developers_guide/generated/polaris.remap.MappingFileStep.src_from_proj.rst", "developers_guide/generated/polaris.run.complete_step_run.rst", "developers_guide/generated/polaris.run.load_dependencies.rst", "developers_guide/generated/polaris.run.serial.run_single_step.rst", "developers_guide/generated/polaris.run.serial.run_tasks.rst", "developers_guide/generated/polaris.run.setup_config.rst", "developers_guide/generated/polaris.run.unpickle_suite.rst", "developers_guide/generated/polaris.setup.setup_task.rst", "developers_guide/generated/polaris.setup.setup_tasks.rst", "developers_guide/generated/polaris.streams.read.rst", "developers_guide/generated/polaris.streams.update_defaults.rst", "developers_guide/generated/polaris.streams.update_tree.rst", "developers_guide/generated/polaris.streams.write.rst", "developers_guide/generated/polaris.suite.setup_suite.rst", "developers_guide/generated/polaris.validate.compare_variables.rst", "developers_guide/generated/polaris.viz.globe.plot_global.rst", "developers_guide/generated/polaris.viz.plot_horiz_field.rst", "developers_guide/generated/polaris.yaml.PolarisYaml.rst", "developers_guide/generated/polaris.yaml.PolarisYaml.read.rst", "developers_guide/generated/polaris.yaml.PolarisYaml.update.rst", "developers_guide/generated/polaris.yaml.PolarisYaml.write.rst", "developers_guide/generated/polaris.yaml.main_mpas_to_yaml.rst", "developers_guide/generated/polaris.yaml.mpas_namelist_and_streams_to_yaml.rst", "developers_guide/generated/polaris.yaml.yaml_to_mpas_streams.rst", "developers_guide/machines/anvil.md", "developers_guide/machines/chicoma.md", "developers_guide/machines/chrysalis.md", "developers_guide/machines/compy.md", "developers_guide/machines/index.md", "developers_guide/machines/perlmutter.md", "developers_guide/ocean/api.md", "developers_guide/ocean/framework.md", "developers_guide/ocean/generated/polaris.ocean.Ocean.rst", "developers_guide/ocean/generated/polaris.ocean.convergence.spherical.SphericalConvergenceForward.rst", "developers_guide/ocean/generated/polaris.ocean.mesh.spherical.add_spherical_base_mesh_step.rst", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.rst", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.compute_cell_count.rst", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.constrain_resources.rst", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.map_yaml_to_namelist.rst", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.setup.rst", "developers_guide/ocean/generated/polaris.ocean.model.get_time_interval_string.rst", "developers_guide/ocean/generated/polaris.ocean.rpe.compute_rpe.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.add_baroclinic_channel_tasks.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.decomp.Decomp.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.default.Default.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.forward.Forward.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.forward.Forward.compute_cell_count.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.forward.Forward.dynamic_model_config.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.init.Init.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.init.Init.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.init.Init.setup.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.restart.Restart.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.restart.restart_step.RestartStep.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.restart.restart_step.RestartStep.dynamic_model_config.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.rpe.Rpe.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.rpe.Rpe.configure.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis.setup.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.threads.Threads.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.validate.Validate.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.validate.Validate.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.viz.Viz.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.viz.Viz.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.CosineBell.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.CosineBell.configure.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.add_cosine_bell_tasks.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.analysis.Analysis.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.analysis.Analysis.rmse.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.analysis.Analysis.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.forward.Forward.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.forward.Forward.compute_cell_count.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.forward.Forward.dynamic_model_config.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.init.Init.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.init.Init.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.viz.Viz.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.viz.Viz.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.viz.VizMap.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.viz.VizMap.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.InertialGravityWave.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.add_inertial_gravity_wave_tasks.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.analysis.Analysis.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.analysis.Analysis.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution.normal_velocity.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution.ssh.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.forward.Forward.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.forward.Forward.compute_cell_count.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.forward.Forward.dynamic_model_config.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.init.Init.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.init.Init.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.viz.Viz.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.viz.Viz.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.ManufacturedSolution.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.add_manufactured_solution_tasks.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.analysis.Analysis.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.analysis.Analysis.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution.normal_velocity.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution.ssh.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.forward.Forward.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.forward.Forward.compute_cell_count.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.forward.Forward.dynamic_model_config.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.init.Init.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.init.Init.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.viz.Viz.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.viz.Viz.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.add_single_column_tasks.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.cvmix.CVMix.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.forward.Forward.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.ideal_age.IdealAge.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.init.Init.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.init.Init.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.viz.Viz.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.viz.Viz.run.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.grid_1d.generate_1d_grid.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.grid_1d.write_1d_grid.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.init_vertical_coord.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.partial_cells.alter_bottom_depth.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.partial_cells.alter_ssh.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.zlevel.compute_min_max_level_cell.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.zlevel.compute_z_level_layer_thickness.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.zlevel.compute_z_level_resting_thickness.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.zlevel.init_z_level_vertical_coord.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.zstar.init_z_star_vertical_coord.rst", "developers_guide/ocean/index.md", "developers_guide/ocean/models/index.md", "developers_guide/ocean/models/mpas_ocean.md", "developers_guide/ocean/tasks/baroclinic_channel.md", "developers_guide/ocean/tasks/cosine_bell.md", "developers_guide/ocean/tasks/index.md", "developers_guide/ocean/tasks/inertial_gravity_wave.md", "developers_guide/ocean/tasks/manufactured_solution.md", "developers_guide/ocean/tasks/single_column.md", "developers_guide/organization/categories_of_tasks.md", "developers_guide/organization/components.md", "developers_guide/organization/directories.md", "developers_guide/organization/index.md", "developers_guide/organization/steps.md", "developers_guide/organization/suites.md", "developers_guide/organization/tasks.md", "developers_guide/overview.md", "developers_guide/quick_start.md", "developers_guide/seaice/api.md", "developers_guide/seaice/framework.md", "developers_guide/seaice/generated/polaris.seaice.SeaIce.rst", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.add_single_column_tasks.rst", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.exact_restart.ExactRestart.rst", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.exact_restart.validate.Validate.rst", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.exact_restart.validate.Validate.run.rst", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.forward.Forward.rst", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.standard_physics.StandardPhysics.rst", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.standard_physics.viz.Viz.rst", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.standard_physics.viz.Viz.run.rst", "developers_guide/seaice/index.md", "developers_guide/seaice/mpas_seaice.md", "developers_guide/seaice/tasks/index.md", "developers_guide/seaice/tasks/single_column.md", "developers_guide/troubleshooting.md", "glossary.md", "index.md", "tutorials/dev_add_test_group.md", "users_guide/config_files.md", "users_guide/machines/anvil.md", "users_guide/machines/chicoma.md", "users_guide/machines/chrysalis.md", "users_guide/machines/compy.md", "users_guide/machines/index.md", "users_guide/machines/perlmutter.md", "users_guide/ocean/framework/index.md", "users_guide/ocean/framework/vertical.md", "users_guide/ocean/index.md", "users_guide/ocean/suites.md", "users_guide/ocean/tasks/baroclinic_channel.md", "users_guide/ocean/tasks/cosine_bell.md", "users_guide/ocean/tasks/index.md", "users_guide/ocean/tasks/inertial_gravity_wave.md", "users_guide/ocean/tasks/manufactured_solution.md", "users_guide/ocean/tasks/single_column.md", "users_guide/ocean/tasks/template.md", "users_guide/quick_start.md", "users_guide/seaice/index.md", "users_guide/seaice/tasks/index.md", "users_guide/seaice/tasks/single_column.md", "users_guide/seaice/tasks/template.md", "users_guide/suites.md", "users_guide/tasks.md"], "titles": ["Design Documents", "Shared steps", "Template", "API reference", "Building the Documentation", "Command-line interface", "Deploying a new spack environment", "Documentation", "Modules for polaris commands", "Config files", "Framework", "IO", "Logging", "Mesh", "Model", "Provenance", "Remapping", "Validation", "Visualization", "polaris.Component", "polaris.Component.add_task", "polaris.ModelStep", "polaris.ModelStep.add_model_config_options", "polaris.ModelStep.add_namelist_file", "polaris.ModelStep.add_streams_file", "polaris.ModelStep.add_yaml_file", "polaris.ModelStep.dynamic_model_config", "polaris.ModelStep.map_yaml_to_namelist", "polaris.ModelStep.partition", "polaris.ModelStep.process_inputs_and_outputs", "polaris.ModelStep.runtime_setup", "polaris.ModelStep.set_model_resources", "polaris.ModelStep.setup", "polaris.ModelStep.update_namelist_pio", "polaris.Step", "polaris.Step.add_dependency", "polaris.Step.add_input_file", "polaris.Step.add_output_file", "polaris.Step.constrain_resources", "polaris.Step.run", "polaris.Step.runtime_setup", "polaris.Step.set_resources", "polaris.Step.setup", "polaris.Task", "polaris.Task.add_step", "polaris.Task.configure", "polaris.__main__.main", "polaris.cache.update_cache", "polaris.components.get_components", "polaris.config.PolarisConfigParser", "polaris.io.download", "polaris.io.imp_res", "polaris.io.symlink", "polaris.job.get_slurm_options", "polaris.job.write_job_script", "polaris.list.list_cases", "polaris.list.list_machines", "polaris.list.list_suites", "polaris.logging.log_method_call", "polaris.mesh.IcosahedralMeshStep", "polaris.mesh.IcosahedralMeshStep.build_subdivisions_cell_width_lat_lon", "polaris.mesh.IcosahedralMeshStep.get_cell_width", "polaris.mesh.IcosahedralMeshStep.get_subdivisions", "polaris.mesh.IcosahedralMeshStep.make_jigsaw_mesh", "polaris.mesh.IcosahedralMeshStep.run", "polaris.mesh.IcosahedralMeshStep.setup", "polaris.mesh.QuasiUniformSphericalMeshStep", "polaris.mesh.QuasiUniformSphericalMeshStep.build_cell_width_lat_lon", "polaris.mesh.QuasiUniformSphericalMeshStep.make_jigsaw_mesh", "polaris.mesh.QuasiUniformSphericalMeshStep.run", "polaris.mesh.QuasiUniformSphericalMeshStep.setup", "polaris.mesh.planar.compute_planar_hex_nx_ny", "polaris.mesh.spherical.SphericalBaseStep", "polaris.mesh.spherical.SphericalBaseStep.run", "polaris.mesh.spherical.SphericalBaseStep.save_and_plot_cell_width", "polaris.mesh.spherical.SphericalBaseStep.setup", "polaris.model_step.make_graph_file", "polaris.namelist.ingest", "polaris.namelist.parse_replacements", "polaris.namelist.replace", "polaris.namelist.write", "polaris.parallel.get_available_parallel_resources", "polaris.parallel.get_parallel_command", "polaris.parallel.run_command", "polaris.parallel.set_cores_per_node", "polaris.provenance.write", "polaris.remap.MappingFileStep", "polaris.remap.MappingFileStep.dst_from_lon_lat", "polaris.remap.MappingFileStep.dst_from_mpas", "polaris.remap.MappingFileStep.dst_from_points", "polaris.remap.MappingFileStep.dst_from_proj", "polaris.remap.MappingFileStep.dst_global_lon_lat", "polaris.remap.MappingFileStep.get_remapper", "polaris.remap.MappingFileStep.runtime_setup", "polaris.remap.MappingFileStep.src_from_lon_lat", "polaris.remap.MappingFileStep.src_from_mpas", "polaris.remap.MappingFileStep.src_from_proj", "polaris.run.complete_step_run", "polaris.run.load_dependencies", "polaris.run.serial.run_single_step", "polaris.run.serial.run_tasks", "polaris.run.setup_config", "polaris.run.unpickle_suite", "polaris.setup.setup_task", "polaris.setup.setup_tasks", "polaris.streams.read", "polaris.streams.update_defaults", "polaris.streams.update_tree", "polaris.streams.write", "polaris.suite.setup_suite", "polaris.validate.compare_variables", "polaris.viz.globe.plot_global", "polaris.viz.plot_horiz_field", "polaris.yaml.PolarisYaml", "polaris.yaml.PolarisYaml.read", "polaris.yaml.PolarisYaml.update", "polaris.yaml.PolarisYaml.write", "polaris.yaml.main_mpas_to_yaml", "polaris.yaml.mpas_namelist_and_streams_to_yaml", "polaris.yaml.yaml_to_mpas_streams", "Anvil", "Chicoma", "Chrysalis", "CompyMcNodeFace", "Machines", "Perlmutter", "ocean", "Ocean framework", "polaris.ocean.Ocean", "polaris.ocean.convergence.spherical.SphericalConvergenceForward", "polaris.ocean.mesh.spherical.add_spherical_base_mesh_step", "polaris.ocean.model.OceanModelStep", "polaris.ocean.model.OceanModelStep.compute_cell_count", "polaris.ocean.model.OceanModelStep.constrain_resources", "polaris.ocean.model.OceanModelStep.map_yaml_to_namelist", "polaris.ocean.model.OceanModelStep.setup", "polaris.ocean.model.get_time_interval_string", "polaris.ocean.rpe.compute_rpe", "polaris.ocean.tasks.baroclinic_channel.add_baroclinic_channel_tasks", "polaris.ocean.tasks.baroclinic_channel.decomp.Decomp", "polaris.ocean.tasks.baroclinic_channel.default.Default", "polaris.ocean.tasks.baroclinic_channel.forward.Forward", "polaris.ocean.tasks.baroclinic_channel.forward.Forward.compute_cell_count", "polaris.ocean.tasks.baroclinic_channel.forward.Forward.dynamic_model_config", "polaris.ocean.tasks.baroclinic_channel.init.Init", "polaris.ocean.tasks.baroclinic_channel.init.Init.run", "polaris.ocean.tasks.baroclinic_channel.init.Init.setup", "polaris.ocean.tasks.baroclinic_channel.restart.Restart", "polaris.ocean.tasks.baroclinic_channel.restart.restart_step.RestartStep", "polaris.ocean.tasks.baroclinic_channel.restart.restart_step.RestartStep.dynamic_model_config", "polaris.ocean.tasks.baroclinic_channel.rpe.Rpe", "polaris.ocean.tasks.baroclinic_channel.rpe.Rpe.configure", "polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis", "polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis.run", "polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis.setup", "polaris.ocean.tasks.baroclinic_channel.threads.Threads", "polaris.ocean.tasks.baroclinic_channel.validate.Validate", "polaris.ocean.tasks.baroclinic_channel.validate.Validate.run", "polaris.ocean.tasks.baroclinic_channel.viz.Viz", "polaris.ocean.tasks.baroclinic_channel.viz.Viz.run", "polaris.ocean.tasks.cosine_bell.CosineBell", "polaris.ocean.tasks.cosine_bell.CosineBell.configure", "polaris.ocean.tasks.cosine_bell.add_cosine_bell_tasks", "polaris.ocean.tasks.cosine_bell.analysis.Analysis", "polaris.ocean.tasks.cosine_bell.analysis.Analysis.rmse", "polaris.ocean.tasks.cosine_bell.analysis.Analysis.run", "polaris.ocean.tasks.cosine_bell.forward.Forward", "polaris.ocean.tasks.cosine_bell.forward.Forward.compute_cell_count", "polaris.ocean.tasks.cosine_bell.forward.Forward.dynamic_model_config", "polaris.ocean.tasks.cosine_bell.init.Init", "polaris.ocean.tasks.cosine_bell.init.Init.run", "polaris.ocean.tasks.cosine_bell.viz.Viz", "polaris.ocean.tasks.cosine_bell.viz.Viz.run", "polaris.ocean.tasks.cosine_bell.viz.VizMap", "polaris.ocean.tasks.cosine_bell.viz.VizMap.run", "polaris.ocean.tasks.inertial_gravity_wave.InertialGravityWave", "polaris.ocean.tasks.inertial_gravity_wave.add_inertial_gravity_wave_tasks", "polaris.ocean.tasks.inertial_gravity_wave.analysis.Analysis", "polaris.ocean.tasks.inertial_gravity_wave.analysis.Analysis.run", "polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution", "polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution.normal_velocity", "polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution.ssh", "polaris.ocean.tasks.inertial_gravity_wave.forward.Forward", "polaris.ocean.tasks.inertial_gravity_wave.forward.Forward.compute_cell_count", "polaris.ocean.tasks.inertial_gravity_wave.forward.Forward.dynamic_model_config", "polaris.ocean.tasks.inertial_gravity_wave.init.Init", "polaris.ocean.tasks.inertial_gravity_wave.init.Init.run", "polaris.ocean.tasks.inertial_gravity_wave.viz.Viz", "polaris.ocean.tasks.inertial_gravity_wave.viz.Viz.run", "polaris.ocean.tasks.manufactured_solution.ManufacturedSolution", "polaris.ocean.tasks.manufactured_solution.add_manufactured_solution_tasks", "polaris.ocean.tasks.manufactured_solution.analysis.Analysis", "polaris.ocean.tasks.manufactured_solution.analysis.Analysis.run", "polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution", "polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution.normal_velocity", "polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution.ssh", "polaris.ocean.tasks.manufactured_solution.forward.Forward", "polaris.ocean.tasks.manufactured_solution.forward.Forward.compute_cell_count", "polaris.ocean.tasks.manufactured_solution.forward.Forward.dynamic_model_config", "polaris.ocean.tasks.manufactured_solution.init.Init", "polaris.ocean.tasks.manufactured_solution.init.Init.run", "polaris.ocean.tasks.manufactured_solution.viz.Viz", "polaris.ocean.tasks.manufactured_solution.viz.Viz.run", "polaris.ocean.tasks.single_column.add_single_column_tasks", "polaris.ocean.tasks.single_column.cvmix.CVMix", "polaris.ocean.tasks.single_column.forward.Forward", "polaris.ocean.tasks.single_column.ideal_age.IdealAge", "polaris.ocean.tasks.single_column.init.Init", "polaris.ocean.tasks.single_column.init.Init.run", "polaris.ocean.tasks.single_column.viz.Viz", "polaris.ocean.tasks.single_column.viz.Viz.run", "polaris.ocean.vertical.grid_1d.generate_1d_grid", "polaris.ocean.vertical.grid_1d.write_1d_grid", "polaris.ocean.vertical.init_vertical_coord", "polaris.ocean.vertical.partial_cells.alter_bottom_depth", "polaris.ocean.vertical.partial_cells.alter_ssh", "polaris.ocean.vertical.zlevel.compute_min_max_level_cell", "polaris.ocean.vertical.zlevel.compute_z_level_layer_thickness", "polaris.ocean.vertical.zlevel.compute_z_level_resting_thickness", "polaris.ocean.vertical.zlevel.init_z_level_vertical_coord", "polaris.ocean.vertical.zstar.init_z_star_vertical_coord", "Ocean component", "Models", "MPAS-Ocean", "baroclinic_channel", "cosine_bell", "Tasks", "inertial_gravity_wave", "manufactured_solution", "single_column", "Categories of tasks", "Components", "Directory structure", "Organization of Tasks", "Steps", "Suites", "Tasks", "Overview", "Quick Start for Developers", "seaice", "SeaIce framework", "polaris.seaice.SeaIce", "polaris.seaice.tasks.single_column.add_single_column_tasks", "polaris.seaice.tasks.single_column.exact_restart.ExactRestart", "polaris.seaice.tasks.single_column.exact_restart.validate.Validate", "polaris.seaice.tasks.single_column.exact_restart.validate.Validate.run", "polaris.seaice.tasks.single_column.forward.Forward", "polaris.seaice.tasks.single_column.standard_physics.StandardPhysics", "polaris.seaice.tasks.single_column.standard_physics.viz.Viz", "polaris.seaice.tasks.single_column.standard_physics.viz.Viz.run", "SeaIce component", "Supported Model: MPAS-Seaice", "Tasks", "single_column", "Troubleshooting", "Glossary", "Polaris", "Developer Tutorial: Adding a new test group", "Config Files", "Anvil", "Chicoma", "Chrysalis", "CompyMcNodeFace", "Machines", "Perlmutter", "Framework", "Vertical coordinate", "Ocean component", "Suites", "baroclinic channel", "cosine bell", "Tasks", "inertial gravity wave", "manufactured solution", "single column", "<Category of task>", "Quick Start for Users", "Sea ice component", "Tasks", "single column", "<Category of task>", "Suites", "Tasks"], "terms": {"share": [0, 7, 18, 43, 44, 124, 127, 130, 139, 140, 147, 150, 155, 221, 224, 225, 229, 230, 231, 232, 234, 236, 238, 240, 253, 255, 256, 258, 259, 260, 261, 262, 263, 264, 265, 269, 270, 274, 275, 276, 280, 282], "step": [0, 5, 6, 7, 8, 10, 11, 12, 13, 14, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 31, 43, 44, 47, 59, 64, 66, 69, 72, 73, 81, 83, 85, 86, 92, 97, 98, 99, 100, 103, 104, 124, 127, 129, 130, 131, 137, 139, 140, 141, 143, 144, 145, 146, 147, 148, 149, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 163, 165, 166, 168, 169, 170, 171, 172, 173, 174, 177, 178, 182, 184, 185, 186, 187, 188, 191, 192, 196, 198, 199, 200, 201, 202, 205, 207, 208, 209, 210, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 235, 236, 237, 244, 245, 246, 248, 249, 253, 255, 256, 258, 264, 266, 281, 282], "templat": [0, 5, 6, 7, 24, 25, 26, 105, 114, 118, 124, 127, 129, 143, 149, 225, 256, 257, 258], "date": [1, 2, 5, 47, 221, 232, 238, 250, 258], "2023": [1, 16, 272, 273], "08": [1, 257, 269], "18": [1, 6, 258, 260], "contributor": [1, 2], "carolyn": 1, "begeman": 1, "xylar": [1, 6, 17, 124, 257, 258, 263], "asai": [1, 258], "davi": [1, 258], "capabl": [1, 2, 6, 16, 124, 234, 237, 257, 263, 276], "design": [1, 124, 222, 234, 236, 237, 256, 263, 269], "here": [1, 6, 9, 12, 14, 16, 17, 124, 127, 224, 229, 230, 233, 234, 236, 237, 238, 253, 257, 258, 259, 260, 261, 262, 263, 264, 274, 275, 276, 280, 281], "abil": [1, 7], "across": [1, 6, 7, 14, 18, 127, 224, 230, 234, 235, 236, 237, 238, 255, 257, 265, 269, 270], "In": [1, 2, 6, 7, 8, 9, 11, 14, 16, 17, 34, 124, 127, 230, 232, 234, 235, 236, 237, 238, 256, 257, 258, 263, 266, 270, 275, 276, 280, 281, 282], "thi": [1, 2, 3, 5, 6, 7, 8, 9, 11, 12, 13, 14, 16, 17, 21, 26, 27, 31, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 49, 54, 58, 60, 63, 64, 67, 68, 69, 73, 82, 83, 85, 86, 92, 97, 100, 110, 120, 121, 122, 123, 124, 125, 127, 131, 134, 139, 140, 141, 143, 145, 146, 147, 149, 150, 151, 153, 154, 155, 159, 160, 163, 165, 168, 170, 172, 174, 175, 178, 182, 184, 186, 188, 189, 192, 196, 198, 200, 202, 204, 205, 206, 207, 208, 209, 210, 221, 224, 225, 227, 228, 230, 231, 232, 234, 235, 236, 237, 238, 249, 250, 254, 255, 256, 257, 258, 260, 263, 264, 266, 269, 270, 272, 273, 274, 275, 276, 280, 281], "document": [1, 3, 9, 14, 234, 237, 256, 258, 276], "refer": [1, 7, 14, 34, 137, 150, 213, 216, 219, 220, 234, 237, 238, 255, 256, 257, 266, 269, 276], "ani": [1, 5, 6, 7, 8, 13, 14, 16, 17, 18, 30, 42, 97, 103, 104, 146, 154, 230, 231, 232, 234, 235, 236, 237, 238, 240, 257, 258, 263, 269, 270, 274, 275, 276, 279, 280], "which": [1, 2, 5, 6, 7, 8, 9, 13, 14, 16, 17, 18, 21, 24, 25, 27, 34, 36, 43, 48, 86, 88, 95, 103, 104, 105, 109, 112, 114, 124, 127, 131, 134, 139, 140, 141, 144, 147, 148, 150, 152, 155, 156, 158, 180, 181, 194, 195, 205, 221, 223, 230, 231, 233, 234, 236, 238, 243, 244, 246, 248, 257, 258, 260, 263, 266, 269, 270, 272, 273, 274, 275, 276], "avail": [1, 4, 5, 7, 11, 14, 18, 21, 31, 34, 37, 38, 41, 48, 55, 81, 82, 83, 124, 131, 141, 182, 196, 205, 224, 225, 234, 236, 237, 238, 257, 259, 260, 261, 262, 264, 269, 276, 281], "polari": [1, 2, 4, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 120, 122, 123, 124, 127, 221, 222, 224, 225, 227, 228, 229, 230, 231, 232, 233, 235, 236, 250, 253, 254, 255, 257, 258, 259, 260, 261, 262, 263, 264, 267, 268, 269, 277, 281, 282], "main": [1, 3, 6, 7, 9, 14, 39, 124, 174, 230, 231, 237, 238, 257, 282], "motiv": 1, "behind": [1, 237], "comput": [1, 7, 13, 14, 71, 124, 127, 131, 132, 137, 142, 164, 167, 179, 183, 193, 197, 216, 217, 218, 224, 225, 227, 228, 229, 234, 238, 260, 261, 263, 264, 269, 272, 273, 276], "expens": [1, 234, 235], "could": [1, 14, 16, 18, 124, 225, 234, 235, 236, 237, 238, 257, 270], "time": [1, 5, 6, 7, 8, 14, 17, 18, 34, 43, 53, 112, 124, 136, 137, 141, 150, 168, 180, 181, 184, 194, 195, 198, 205, 223, 224, 225, 227, 228, 230, 234, 235, 236, 237, 238, 253, 254, 255, 258, 260, 264, 276, 281], "order": [1, 5, 8, 13, 14, 127, 225, 231, 234, 235, 238, 257, 270, 273, 274, 276], "reflect": [1, 5, 238], "fact": [1, 14, 34, 124], "we": [1, 2, 5, 7, 9, 11, 13, 14, 16, 17, 18, 123, 124, 127, 135, 224, 225, 229, 230, 233, 234, 236, 237, 238, 253, 256, 257, 258, 260, 262, 263, 264, 266, 270, 276, 281], "present": [1, 44, 112, 238, 257], "new": [1, 2, 5, 19, 22, 34, 43, 49, 52, 59, 66, 72, 86, 106, 107, 127, 129, 141, 148, 166, 179, 182, 193, 196, 205, 213, 219, 220, 234, 236, 237, 238, 251, 254, 255, 256, 276], "success": [1, 2, 8, 50, 221, 231, 250, 257, 258], "insofar": 1, "guarante": [1, 14, 124, 221, 238, 250], "per": [1, 8, 14, 21, 31, 33, 34, 41, 82, 83, 124, 127, 131, 234, 257, 258, 259, 260, 261, 262, 263, 264, 269, 270, 272, 273, 275, 280], "slurm": [1, 53, 84, 124, 234, 256, 258, 259, 260, 261, 262, 264, 276], "job": [1, 6, 124, 238, 256, 257, 259, 260, 261, 262, 264], "role": 1, "clear": [1, 2, 237, 257], "should": [1, 2, 5, 6, 7, 9, 12, 14, 17, 22, 27, 34, 35, 36, 42, 43, 45, 50, 54, 67, 103, 104, 111, 112, 120, 121, 122, 123, 124, 125, 127, 134, 146, 154, 207, 209, 221, 230, 231, 232, 234, 235, 236, 238, 250, 251, 254, 255, 257, 258, 269, 270, 274, 275, 276, 280], "invoc": 1, "serial": [1, 40, 234, 236, 256, 257, 276], "A": [1, 6, 7, 8, 11, 13, 14, 16, 18, 19, 22, 24, 25, 27, 34, 35, 36, 37, 38, 43, 44, 48, 49, 55, 59, 60, 63, 66, 67, 68, 72, 78, 81, 83, 85, 86, 87, 88, 89, 90, 94, 95, 96, 100, 103, 104, 105, 107, 109, 110, 111, 112, 113, 114, 115, 116, 118, 119, 124, 127, 129, 134, 136, 139, 140, 141, 144, 147, 148, 150, 152, 155, 156, 158, 160, 163, 166, 169, 171, 173, 177, 182, 185, 187, 191, 196, 199, 201, 205, 207, 209, 211, 212, 213, 214, 215, 216, 217, 219, 220, 224, 225, 227, 228, 229, 231, 234, 235, 236, 237, 238, 243, 244, 246, 248, 255, 256, 257, 259, 260, 261, 262, 263, 264, 269, 270, 272, 273, 275, 276, 279, 280], "": [1, 5, 6, 7, 8, 9, 11, 12, 14, 16, 34, 36, 37, 43, 44, 45, 47, 73, 99, 106, 109, 124, 127, 171, 221, 224, 225, 227, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 250, 253, 254, 255, 257, 258, 259, 260, 261, 262, 263, 264, 267, 269, 270, 272, 273, 275, 276, 277, 280], "class": [1, 9, 11, 13, 14, 16, 17, 18, 19, 21, 29, 34, 39, 43, 49, 58, 59, 66, 72, 86, 113, 127, 128, 129, 131, 139, 140, 141, 144, 147, 148, 150, 152, 155, 156, 158, 160, 163, 166, 169, 171, 173, 174, 175, 177, 179, 182, 185, 187, 189, 191, 193, 196, 199, 201, 204, 205, 206, 207, 209, 221, 224, 225, 227, 228, 229, 231, 232, 234, 236, 241, 243, 244, 246, 247, 248, 250, 253, 257], "attribut": [1, 8, 12, 13, 14, 40, 90, 96, 97, 227, 228, 257], "includ": [1, 2, 5, 6, 7, 8, 9, 13, 14, 17, 18, 36, 42, 43, 50, 99, 100, 111, 124, 127, 146, 154, 160, 207, 209, 224, 225, 229, 230, 232, 234, 235, 236, 237, 238, 254, 255, 256, 257, 258, 265, 266, 267, 268, 269, 270, 272, 274, 275, 276, 277, 279, 280, 281, 282], "relat": [1, 6, 7, 11, 13, 14, 124, 127, 221, 224, 225, 227, 228, 229, 230, 234, 238, 254, 257, 258, 259, 260, 261, 262, 263, 264, 266, 267, 269, 270, 274, 275, 276, 277], "inform": [1, 5, 7, 8, 34, 86, 110, 119, 179, 193, 234, 236, 238, 258, 260, 267, 276, 277], "belong": [1, 10, 12, 14, 21, 31, 34, 41, 43, 59, 66, 72, 86, 127, 129, 131, 139, 140, 141, 144, 147, 148, 150, 152, 155, 156, 158, 160, 163, 166, 169, 171, 173, 175, 177, 182, 185, 187, 189, 191, 196, 199, 201, 204, 205, 206, 207, 209, 230, 231, 234, 236, 237, 243, 244, 246, 247, 248, 257, 281], "locat": [1, 5, 6, 14, 18, 34, 44, 103, 104, 109, 127, 221, 234, 238, 250, 255, 257, 258, 260, 263, 266, 269, 270, 276], "highest": 1, "level": [1, 2, 11, 12, 13, 17, 18, 127, 213, 214, 215, 216, 217, 218, 219, 220, 224, 230, 232, 233, 234, 236, 257, 258, 269, 270, 272, 273, 274, 275, 280], "where": [1, 5, 7, 14, 17, 34, 36, 43, 50, 54, 85, 103, 104, 109, 111, 124, 127, 213, 216, 219, 220, 221, 231, 233, 234, 236, 238, 250, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 266, 269, 270, 274, 275, 276, 280, 281], "all": [1, 5, 6, 7, 8, 10, 11, 12, 14, 16, 17, 19, 21, 34, 41, 43, 48, 82, 83, 85, 104, 110, 124, 127, 128, 131, 141, 182, 196, 205, 213, 219, 220, 221, 224, 230, 231, 232, 234, 235, 236, 237, 238, 241, 250, 255, 256, 257, 258, 263, 266, 267, 269, 270, 275, 276, 277, 280, 282], "below": [1, 5, 6, 14, 21, 31, 34, 41, 82, 83, 124, 131, 141, 182, 196, 205, 221, 230, 232, 234, 236, 238, 257, 258, 263, 266, 270, 272, 273, 274, 276], "There": [1, 5, 6, 13, 213, 219, 220, 229, 230, 232, 234, 237, 238, 254, 257, 258, 276], "wai": [1, 5, 7, 13, 14, 34, 63, 68, 124, 127, 234, 236, 237, 238, 254, 256, 257, 263, 266, 274], "list": [1, 2, 6, 7, 9, 14, 17, 21, 34, 37, 43, 44, 47, 48, 82, 83, 100, 103, 104, 109, 110, 127, 129, 137, 152, 156, 160, 163, 177, 187, 189, 191, 201, 205, 234, 235, 236, 237, 238, 244, 255, 256, 257, 258, 260, 263, 264, 270, 276, 281, 282], "within": [1, 5, 7, 9, 10, 11, 12, 14, 19, 31, 34, 36, 37, 41, 43, 44, 51, 109, 110, 124, 127, 224, 227, 228, 230, 231, 232, 234, 235, 236, 238, 251, 255, 257, 258, 260, 263, 270, 274, 275, 280], "each": [1, 2, 5, 6, 7, 8, 12, 13, 14, 16, 17, 34, 40, 43, 55, 61, 62, 71, 98, 104, 119, 124, 127, 156, 157, 160, 213, 214, 215, 216, 217, 218, 219, 220, 223, 224, 225, 227, 228, 229, 230, 232, 233, 234, 235, 236, 237, 238, 244, 245, 253, 255, 257, 258, 263, 266, 269, 270, 272, 273, 275, 276, 280, 281], "also": [1, 2, 5, 6, 7, 9, 13, 14, 18, 29, 40, 49, 110, 111, 124, 127, 171, 213, 219, 220, 221, 227, 228, 229, 230, 231, 232, 234, 236, 237, 238, 257, 258, 263, 264, 266, 270, 272, 273, 275, 276, 280, 282], "find": [1, 6, 7, 50, 62, 84, 124, 221, 236, 237, 238, 254, 257, 258, 276], "onli": [1, 5, 6, 7, 8, 14, 16, 17, 43, 124, 127, 221, 223, 225, 229, 231, 234, 236, 237, 250, 253, 256, 257, 258, 260, 263, 264, 266, 268, 269, 270, 273, 274, 276, 279], "its": [1, 5, 6, 7, 8, 12, 16, 18, 34, 45, 92, 97, 98, 106, 124, 127, 230, 231, 232, 234, 235, 236, 237, 238, 255, 257, 258, 259, 270, 276, 282], "would": [1, 2, 5, 9, 14, 17, 21, 31, 34, 41, 44, 82, 83, 86, 124, 127, 131, 141, 182, 196, 205, 224, 232, 234, 236, 237, 238, 254, 257, 263, 266, 276], "ident": [1, 2, 5, 17, 139, 147, 155, 224, 234, 235, 237, 243, 257, 269], "self": [1, 9, 11, 12, 14, 16, 17, 18, 45, 74, 127, 231, 234, 236, 237, 257, 258], "contain": [1, 2, 5, 6, 7, 8, 9, 16, 18, 19, 23, 24, 25, 38, 48, 51, 78, 81, 87, 88, 89, 90, 94, 95, 96, 105, 112, 113, 127, 129, 137, 213, 219, 220, 231, 232, 233, 234, 237, 238, 240, 250, 251, 255, 257, 258, 263, 267, 275, 276, 277, 280], "either": [1, 5, 6, 7, 8, 12, 13, 14, 16, 61, 124, 127, 221, 234, 238, 255, 257, 258, 266, 274, 276], "thei": [1, 2, 5, 6, 7, 8, 12, 13, 14, 18, 34, 35, 36, 45, 49, 66, 100, 115, 124, 127, 136, 221, 224, 225, 230, 233, 234, 236, 237, 238, 251, 255, 256, 257, 258, 263, 266, 269, 270, 276], "As": [1, 4, 5, 6, 13, 17, 61, 127, 230, 234, 235, 236, 237, 238, 257, 258, 266, 270, 274, 281], "setup": [1, 6, 7, 9, 11, 14, 17, 26, 31, 34, 35, 41, 43, 124, 127, 143, 149, 168, 184, 198, 224, 227, 228, 229, 236, 237, 238, 255, 256, 257, 258, 270, 276, 282], "suit": [1, 2, 6, 7, 12, 17, 34, 43, 54, 55, 99, 100, 102, 104, 124, 224, 233, 234, 236, 238, 255, 256, 257, 258, 259, 260, 261, 262, 264, 267, 269], "proce": [1, 238], "iter": [1, 221, 258], "through": [1, 2, 104, 237, 238, 251, 257], "an": [1, 2, 3, 5, 6, 7, 9, 11, 13, 16, 17, 18, 21, 29, 34, 35, 36, 37, 52, 59, 61, 62, 88, 95, 105, 107, 111, 118, 124, 131, 169, 224, 225, 229, 230, 231, 232, 234, 235, 236, 237, 238, 254, 255, 256, 258, 260, 263, 266, 272, 276, 281, 282], "setup_complet": 1, "ha": [1, 5, 6, 9, 14, 21, 31, 34, 35, 37, 41, 43, 44, 45, 84, 92, 97, 120, 122, 123, 124, 130, 131, 141, 182, 196, 205, 221, 225, 231, 232, 233, 234, 235, 236, 237, 238, 250, 251, 254, 255, 257, 258, 266, 269, 272, 274, 276], "been": [1, 5, 6, 34, 37, 43, 44, 45, 92, 103, 104, 109, 120, 122, 123, 124, 127, 130, 163, 177, 187, 191, 201, 221, 231, 234, 236, 237, 238, 250, 254, 257, 258, 259, 260, 261, 262, 263, 264, 266, 268, 269, 276], "ad": [1, 2, 5, 6, 7, 9, 10, 11, 16, 17, 35, 36, 42, 44, 45, 49, 127, 130, 136, 138, 146, 154, 162, 176, 190, 203, 213, 219, 220, 230, 231, 236, 238, 242, 251, 256, 259, 260, 261, 262, 264, 276], "initi": [1, 7, 8, 34, 112, 127, 137, 139, 140, 144, 147, 150, 155, 169, 185, 199, 204, 206, 207, 209, 224, 225, 227, 228, 229, 230, 234, 236, 237, 247, 254, 255, 256, 258, 266, 268, 281, 282], "fals": [1, 9, 13, 14, 17, 18, 21, 34, 36, 44, 47, 55, 57, 99, 100, 104, 109, 110, 112, 124, 131, 207, 209, 223, 230, 234, 236, 251, 257, 258, 260, 262, 264, 269], "setup_task": [1, 8, 9], "function": [1, 6, 7, 8, 9, 11, 12, 13, 14, 15, 17, 18, 42, 60, 67, 124, 127, 146, 154, 230, 231, 234, 236, 237, 255, 256, 257, 270, 282], "skip": [1, 5, 8, 110, 281], "true": [1, 6, 7, 9, 13, 14, 17, 18, 21, 44, 50, 52, 110, 111, 112, 115, 120, 121, 122, 123, 124, 125, 131, 206, 223, 230, 234, 238, 257, 258, 259, 260, 261, 262, 263, 264, 269, 276, 282], "when": [1, 5, 6, 12, 14, 16, 17, 22, 23, 24, 25, 27, 34, 35, 40, 43, 44, 49, 50, 52, 55, 99, 110, 124, 127, 134, 218, 224, 225, 227, 228, 229, 230, 234, 236, 237, 238, 256, 257, 259, 260, 261, 262, 264, 266, 269, 270, 274, 276, 282], "complet": [1, 5, 8, 23, 24, 25, 97, 257, 276], "alreadi": [1, 4, 5, 6, 11, 14, 44, 45, 52, 124, 127, 130, 205, 234, 237, 238, 257, 258, 263, 266, 270, 276], "satisfi": 1, "part": [1, 3, 5, 6, 7, 12, 14, 17, 18, 34, 43, 127, 129, 141, 166, 182, 196, 205, 224, 227, 228, 234, 235, 237, 238, 256, 257, 266], "parallel": [1, 5, 16, 21, 31, 34, 40, 41, 124, 131, 234, 237, 238, 254, 255, 257, 258, 259, 260, 261, 262, 263, 264, 276, 282], "make": [1, 4, 5, 6, 7, 11, 12, 16, 17, 21, 30, 36, 49, 60, 61, 63, 76, 120, 121, 122, 123, 124, 125, 127, 131, 135, 139, 147, 155, 173, 213, 219, 220, 221, 224, 230, 234, 236, 237, 238, 243, 250, 255, 258, 259, 260, 261, 262, 263, 264, 269, 270, 276, 281], "file": [1, 5, 6, 7, 8, 10, 11, 12, 13, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 28, 29, 30, 34, 35, 36, 37, 40, 42, 43, 45, 47, 50, 52, 58, 75, 76, 77, 78, 85, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 98, 101, 103, 104, 105, 107, 108, 109, 110, 111, 113, 114, 116, 118, 119, 129, 131, 135, 137, 143, 146, 149, 154, 171, 173, 212, 221, 224, 225, 227, 228, 229, 230, 235, 236, 237, 238, 244, 250, 251, 253, 254, 255, 256, 260, 263, 264, 266, 269, 270, 275, 276, 279, 280, 282], "mode": [1, 5, 14, 231, 238, 255, 256, 257, 276], "sure": [1, 5, 6, 7, 12, 14, 16, 17, 124, 127, 139, 147, 155, 221, 224, 234, 237, 238, 243, 250, 255, 257, 258, 263, 264, 269, 270], "dictionari": [1, 8, 9, 14, 18, 19, 22, 24, 25, 27, 34, 35, 38, 43, 49, 78, 81, 85, 104, 105, 113, 114, 115, 127, 129, 134, 225, 234, 236, 237, 257, 270], "them": [1, 7, 8, 14, 16, 17, 21, 33, 124, 127, 131, 225, 231, 232, 234, 236, 237, 238, 255, 257, 262, 263, 268, 276, 282], "constructor": [1, 14, 224, 227, 228, 230, 257], "argument": [1, 5, 7, 9, 12, 14, 17, 18, 32, 34, 82, 83, 93, 111, 224, 231, 234, 236, 237, 238, 257, 275, 280, 281], "replac": [1, 5, 7, 9, 14, 22, 23, 24, 25, 26, 27, 43, 52, 78, 105, 114, 115, 124, 127, 129, 134, 143, 149, 236, 237, 257, 258, 276], "compon": [1, 5, 6, 7, 8, 10, 13, 21, 34, 36, 43, 44, 54, 57, 59, 66, 72, 85, 86, 103, 109, 113, 124, 129, 130, 131, 138, 139, 140, 141, 144, 147, 148, 150, 152, 155, 156, 158, 160, 162, 163, 166, 169, 171, 173, 175, 176, 177, 182, 185, 187, 189, 190, 191, 196, 199, 201, 203, 204, 205, 206, 207, 209, 230, 232, 233, 234, 235, 236, 240, 241, 242, 243, 244, 246, 247, 248, 251, 255, 256, 257, 258, 263, 265, 268, 281, 282], "subdir": [1, 5, 16, 21, 34, 43, 44, 59, 66, 72, 86, 127, 129, 131, 141, 163, 166, 169, 171, 173, 205, 234, 236, 244, 257], "now": [1, 6, 124, 234, 238, 257, 258, 263], "rel": [1, 2, 5, 9, 16, 17, 36, 37, 44, 47, 49, 103, 104, 109, 110, 221, 231, 234, 236, 237, 238, 244, 250, 255, 257, 269, 276, 282], "rather": [1, 2, 5, 6, 8, 9, 11, 13, 14, 34, 36, 49, 124, 224, 234, 238, 254, 257, 266], "than": [1, 5, 6, 8, 9, 11, 13, 14, 34, 36, 41, 49, 124, 141, 182, 196, 205, 224, 234, 235, 237, 238, 254, 257, 266, 269], "parent": [1, 29, 127, 225, 230, 231, 234, 236], "resid": [1, 5, 36, 163, 232, 234, 236], "insid": [1, 12, 232, 234, 237, 270], "situat": [1, 16, 27, 134, 257, 276], "anoth": [1, 2, 6, 7, 9, 10, 13, 16, 17, 34, 35, 36, 110, 221, 224, 230, 232, 234, 236, 237, 238, 255, 257, 258, 269, 276, 281, 282], "li": 1, "moment": 1, "cosine_bel": [1, 5, 14, 127, 221, 226, 231, 236, 257, 270, 275, 280, 281], "with_viz": [1, 225, 236, 270], "base": [1, 5, 8, 13, 14, 15, 17, 19, 34, 36, 38, 43, 47, 65, 70, 72, 103, 104, 109, 124, 127, 130, 133, 135, 166, 169, 171, 173, 213, 214, 215, 216, 217, 218, 219, 220, 221, 224, 225, 227, 228, 229, 231, 233, 234, 236, 237, 238, 250, 255, 257, 258, 259, 260, 261, 262, 263, 264, 266, 269, 282], "mesh": [1, 5, 7, 10, 16, 21, 34, 76, 88, 95, 112, 129, 131, 132, 133, 135, 137, 140, 142, 144, 160, 163, 164, 166, 167, 169, 171, 173, 177, 179, 183, 185, 187, 191, 193, 197, 199, 201, 204, 206, 207, 213, 219, 220, 223, 224, 225, 227, 228, 229, 230, 232, 234, 236, 237, 238, 246, 247, 255, 256, 258, 266, 268, 276, 281], "init": [1, 5, 6, 7, 14, 17, 18, 31, 41, 127, 129, 139, 140, 147, 150, 155, 166, 171, 221, 223, 231, 234, 236, 237, 238, 250, 258, 269, 270, 272, 273, 276], "forward": [1, 5, 7, 14, 34, 127, 129, 137, 140, 148, 150, 171, 204, 206, 221, 231, 234, 236, 237, 247, 250, 258, 269, 270, 272, 273, 275, 280], "resolut": [1, 13, 14, 16, 59, 62, 66, 67, 71, 87, 91, 94, 127, 129, 130, 139, 140, 141, 144, 147, 148, 150, 152, 155, 160, 163, 164, 166, 177, 182, 185, 187, 189, 191, 196, 199, 201, 224, 225, 227, 228, 229, 230, 231, 232, 234, 236, 258, 269, 270, 272, 273, 274, 275, 280, 282], "singl": [1, 5, 8, 18, 112, 124, 203, 204, 206, 207, 209, 229, 234, 236, 237, 242, 243, 244, 246, 247, 248, 250, 251, 255, 257, 263, 267, 270, 271, 272, 273, 277, 278], "analysi": [1, 6, 18, 127, 224, 236, 237, 255, 256, 258, 270, 272, 273, 282], "add": [1, 2, 5, 6, 7, 9, 13, 14, 17, 20, 22, 23, 24, 25, 26, 35, 36, 37, 44, 45, 65, 70, 75, 105, 106, 107, 114, 115, 118, 119, 124, 127, 130, 138, 143, 149, 162, 176, 190, 203, 230, 231, 234, 236, 237, 238, 242, 255, 257, 258, 264, 270], "remap": [1, 10, 18, 171, 225, 256, 270, 275, 280], "visual": [1, 10, 13, 16, 187, 201, 225, 227, 228, 230, 234, 236, 255, 256, 270, 272, 273, 275, 280], "ocean": [1, 3, 5, 7, 9, 10, 11, 13, 14, 17, 18, 19, 27, 36, 109, 124, 222, 224, 225, 227, 228, 229, 230, 231, 233, 234, 236, 237, 238, 255, 256, 257, 258, 263, 265, 266, 268, 269, 270, 272, 273, 274, 275, 276, 281, 282], "spheric": [1, 5, 225, 236, 270, 281], "qu": [1, 5, 127, 236, 257, 258, 268, 270, 281], "base_mesh": [1, 5, 13, 59, 66, 127, 129, 130, 166, 169, 171, 173, 234, 236, 257, 270], "60km": [1, 5, 236, 270], "90km": [1, 5], "120km": [1, 5, 236], "150km": 1, "180km": 1, "210km": [1, 5], "240km": [1, 5, 130, 236], "map": [1, 8, 16, 19, 27, 66, 67, 86, 111, 112, 134, 171, 173, 225, 236, 238, 258], "viz": [1, 5, 18, 160, 234, 236], "two": [1, 5, 10, 17, 110, 127, 147, 157, 224, 225, 227, 228, 229, 230, 231, 234, 235, 237, 238, 243, 245, 257, 269, 270, 272, 273, 279], "first": [1, 6, 9, 14, 104, 124, 127, 224, 227, 228, 229, 234, 236, 237, 238, 254, 257, 259, 260, 261, 262, 263, 264, 269, 270, 274, 276], "verbos": [1, 5, 6, 55, 57, 124, 234, 257, 281], "10": [1, 13, 61, 124, 221, 224, 227, 228, 230, 231, 257, 258, 263, 266, 269, 272, 273, 274, 282], "name": [1, 5, 7, 8, 9, 13, 14, 16, 17, 18, 19, 21, 23, 24, 25, 27, 28, 34, 35, 36, 37, 43, 45, 50, 52, 53, 54, 55, 59, 66, 72, 76, 78, 86, 87, 88, 89, 90, 91, 94, 95, 96, 99, 100, 102, 103, 104, 105, 109, 110, 111, 112, 113, 114, 118, 124, 127, 129, 130, 131, 134, 137, 139, 140, 141, 144, 147, 148, 150, 152, 155, 156, 158, 164, 166, 169, 171, 173, 205, 212, 230, 231, 234, 236, 237, 238, 244, 246, 248, 255, 257, 258, 264, 269, 276, 281], "qu_base_mesh_60km": 1, "qu_init_60km": 1, "qu_forward_60km": 1, "qu_map_60km": 1, "qu_viz_60km": 1, "qu_base_mesh_90km": 1, "qu_init_90km": 1, "qu_forward_90km": 1, "qu_map_90km": 1, "qu_viz_90km": 1, "qu_base_mesh_120km": 1, "qu_init_120km": 1, "qu_forward_120km": 1, "qu_map_120km": 1, "qu_viz_120km": 1, "qu_base_mesh_150km": 1, "qu_init_150km": 1, "qu_forward_150km": 1, "qu_map_150km": 1, "qu_viz_150km": 1, "qu_base_mesh_180km": 1, "qu_init_180km": 1, "qu_forward_180km": 1, "qu_map_180km": 1, "qu_viz_180km": 1, "qu_base_mesh_210km": 1, "qu_init_210km": 1, "qu_forward_210km": 1, "qu_map_210km": 1, "qu_viz_210km": 1, "qu_base_mesh_240km": 1, "qu_init_240km": 1, "qu_forward_240km": 1, "qu_map_240km": 1, "qu_viz_240km": 1, "second": [1, 9, 13, 14, 127, 136, 141, 205, 229, 234, 237, 269, 274, 279], "symlink": [1, 5, 8, 14, 17, 34, 36, 43, 44, 236, 237, 238, 270], "what": [1, 2, 6, 11, 13, 16, 124, 236, 237, 257, 264, 275, 276, 280], "follow": [1, 4, 5, 7, 13, 14, 18, 58, 124, 213, 219, 220, 221, 223, 234, 235, 236, 238, 250, 251, 254, 257, 258, 263, 264, 266, 268, 270, 272, 273, 274, 276, 279], "subdirectori": [1, 5, 7, 8, 13, 19, 21, 34, 36, 43, 44, 55, 59, 66, 72, 86, 103, 127, 129, 131, 141, 163, 166, 169, 171, 173, 177, 182, 185, 187, 191, 196, 199, 201, 205, 207, 209, 230, 232, 234, 236, 237, 257, 275, 276, 280, 282], "bold": [1, 236], "elsewher": [1, 238], "tree": [1, 7, 105, 107, 119, 236, 277], "thu": [1, 2, 7, 14, 257, 270], "similar": [1, 2, 5, 9, 12, 13, 14, 121, 124, 125, 127, 230, 232, 236, 237, 238, 257, 258, 276], "had": [1, 124], "maintain": [1, 221, 276], "local": [1, 5, 6, 8, 11, 17, 34, 36, 43, 221, 232, 234, 236, 238, 250, 254, 257, 258, 263, 264, 266], "debug": [1, 8, 120, 121, 122, 123, 124, 125, 257, 259, 260, 261, 262, 264], "easier": [1, 14, 234, 236, 237, 238, 258, 276, 281], "symbol": [1, 52, 234], "link": [1, 2, 7, 11, 14, 36, 52, 124, 230, 234, 238, 257, 263, 267, 276, 277], "were": [1, 124, 205, 234, 237, 255, 257, 258, 262, 266], "even": [1, 6, 12, 13, 14, 36, 49, 124, 234, 237, 238, 257, 258, 263, 276], "compass": [1, 5, 221, 234, 236, 237, 255, 257], "though": [1, 11, 34, 236, 237, 257], "global": [1, 13, 16, 90, 91, 96, 225, 230, 234, 235, 237, 255, 256, 257, 258, 264, 268, 270, 275, 276, 280, 282], "dynamic_adjust": [1, 14, 258], "allow": [1, 2, 8, 16, 17, 21, 31, 34, 41, 49, 110, 124, 127, 131, 234, 255, 257, 258, 263, 266, 270, 274, 282], "one": [1, 2, 5, 6, 7, 10, 14, 16, 17, 18, 21, 33, 34, 36, 37, 43, 47, 52, 103, 104, 109, 124, 127, 130, 131, 147, 205, 221, 224, 227, 228, 229, 230, 232, 234, 236, 237, 238, 243, 253, 254, 255, 256, 258, 263, 264, 266, 269, 270, 273, 275, 276, 279, 280, 281, 282], "input": [1, 5, 8, 10, 11, 16, 29, 34, 35, 36, 37, 42, 76, 127, 146, 154, 224, 225, 227, 228, 229, 257, 274], "port": [1, 257, 264], "instead": [1, 5, 6, 12, 14, 21, 100, 120, 124, 234, 237, 238, 255, 257, 259, 270, 276, 281], "seri": [1, 14, 127, 152, 158, 225, 227, 253, 257, 268], "indic": [1, 7, 8, 14, 16, 17, 34, 35, 97, 104, 112, 124, 127, 216, 232, 234, 254, 257, 258, 266, 274], "becaus": [1, 5, 6, 7, 11, 12, 13, 14, 34, 35, 223, 234, 236, 237, 238, 257, 260, 262, 264, 276], "ran": [1, 98], "ico": [1, 5, 127, 236, 257, 268, 270, 281], "icos_base_mesh_60km": 1, "execut": [1, 5, 8, 14, 21, 103, 104, 109, 124, 131, 221, 231, 234, 238, 250, 257, 258, 259, 260, 261, 262, 263, 264, 276], "runtim": [1, 8, 14, 26, 40, 127, 143, 149, 168, 184, 198, 234, 257], "0": [1, 2, 5, 6, 7, 13, 14, 16, 17, 18, 61, 87, 91, 94, 110, 112, 120, 121, 122, 123, 124, 125, 127, 213, 218, 219, 220, 223, 225, 230, 234, 237, 251, 254, 257, 258, 260, 263, 266, 267, 269, 270, 272, 273, 274, 275, 276, 277, 280], "01": [1, 14, 127, 251, 257, 274, 279], "00": [1, 14, 17, 127, 236, 251, 257, 264, 276], "icos_init_60km": 1, "icos_forward_60km": 1, "38": [1, 276], "02": [1, 260], "59": 1, "icos_map_60km": 1, "20": [1, 150, 224, 235, 257, 269, 274], "icos_viz_60km": 1, "06": 1, "03": 1, "23": 1, "ensur": [1, 2, 9, 14, 49, 124, 224, 237, 238, 270, 274], "mechan": [1, 234], "prevent": [1, 234], "expect": [1, 2, 12, 16, 124, 127, 231, 234, 238, 257, 270], "affect": [1, 6, 234, 238, 257], "howev": [1, 13, 234, 235, 236, 238, 257], "perform": [1, 2, 5, 8, 14, 16, 17, 34, 39, 40, 42, 59, 110, 124, 127, 129, 140, 141, 146, 150, 154, 166, 174, 182, 196, 204, 205, 206, 221, 224, 225, 227, 228, 229, 234, 235, 236, 247, 255, 256, 257, 258, 263, 269, 281], "successfulli": [1, 257], "after": [1, 5, 6, 7, 16, 17, 18, 34, 36, 37, 73, 92, 97, 124, 127, 214, 215, 221, 231, 234, 236, 238, 250, 257, 258, 260, 264, 276, 279], "have": [1, 2, 4, 5, 6, 7, 11, 12, 14, 16, 27, 34, 35, 98, 103, 104, 109, 123, 124, 127, 134, 163, 177, 187, 191, 201, 221, 224, 227, 228, 230, 232, 234, 235, 236, 237, 238, 254, 255, 257, 258, 259, 260, 261, 262, 263, 264, 266, 268, 269, 270, 276, 281, 282], "remov": [1, 5, 14, 100, 224, 227, 228, 238, 257], "longer": [1, 147, 224, 235, 243, 257, 269, 270], "about": [1, 5, 6, 7, 8, 12, 14, 34, 86, 113, 127, 230, 234, 236, 237, 238, 257, 258, 260], "formerli": 1, "need": [1, 2, 4, 5, 6, 7, 11, 12, 13, 14, 16, 17, 26, 44, 49, 67, 124, 127, 143, 149, 221, 225, 231, 234, 236, 237, 238, 250, 251, 254, 256, 257, 258, 259, 263, 264, 266, 269, 270, 276, 281], "develop": [1, 5, 6, 7, 8, 12, 13, 18, 124, 127, 221, 223, 231, 234, 235, 236, 237, 251, 254, 258, 263, 267, 276], "enforc": [1, 223, 238], "framework": [1, 5, 7, 9, 12, 13, 14, 99, 221, 230, 231, 234, 236, 250, 255, 256, 257, 267, 274, 275, 277, 280, 282], "propos": [1, 2], "close": [1, 6, 62, 124, 256, 270], "root": [1, 36, 124, 164, 221, 225, 227, 228, 231, 234, 237, 238, 250, 255, 258, 259, 260, 261, 262, 263, 264, 266, 272, 273, 276], "live": [1, 44, 276], "deem": 1, "between": [1, 2, 5, 6, 7, 8, 12, 13, 14, 16, 17, 21, 33, 36, 60, 67, 68, 71, 74, 86, 92, 110, 127, 131, 147, 156, 179, 193, 213, 219, 220, 225, 231, 232, 234, 236, 237, 243, 244, 263, 266, 269, 272, 273], "think": [1, 5, 257], "condit": [1, 7, 34, 127, 140, 144, 169, 185, 199, 204, 206, 207, 209, 224, 225, 227, 228, 229, 230, 234, 235, 236, 237, 247, 253, 255, 256, 258, 268, 281, 282], "shown": [1, 14, 124, 232, 274], "can": [1, 2, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 16, 17, 18, 31, 34, 35, 36, 37, 41, 43, 63, 66, 68, 87, 91, 92, 94, 103, 104, 109, 120, 121, 122, 123, 124, 125, 127, 221, 224, 227, 228, 230, 231, 232, 234, 235, 236, 237, 238, 250, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 268, 269, 270, 273, 276, 281, 282], "simpli": [1, 14, 17, 49, 124, 140, 231, 234, 238, 257, 266, 276, 281], "prefer": [1, 2, 124, 234, 235, 257, 258], "convent": [1, 234, 238, 257], "futur": [1, 13, 40, 234, 237, 255, 256, 257, 258, 274, 276, 282], "current": [1, 2, 5, 6, 8, 11, 21, 31, 34, 41, 110, 124, 131, 221, 229, 231, 234, 237, 238, 240, 250, 251, 255, 256, 257, 258, 263, 266, 269, 273, 274, 276, 281, 282], "independ": [1, 2, 5, 235, 255], "yyyi": 2, "mm": [2, 127, 136], "dd": 2, "The": [2, 5, 6, 7, 8, 9, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 28, 34, 35, 36, 37, 40, 42, 43, 44, 47, 49, 50, 52, 54, 55, 58, 59, 60, 61, 62, 63, 66, 67, 71, 72, 76, 78, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 94, 95, 96, 97, 98, 100, 101, 102, 103, 104, 105, 109, 110, 111, 112, 113, 114, 118, 119, 124, 127, 128, 129, 130, 131, 132, 136, 139, 140, 141, 142, 144, 146, 147, 148, 150, 152, 154, 155, 156, 158, 160, 163, 164, 166, 167, 169, 171, 173, 175, 177, 182, 183, 185, 187, 189, 191, 196, 197, 199, 201, 204, 205, 206, 207, 209, 213, 214, 215, 216, 217, 218, 219, 220, 221, 223, 224, 225, 227, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 240, 241, 244, 246, 247, 248, 250, 251, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 272, 273, 274, 275, 276, 277, 279, 280, 282], "purpos": [2, 230, 237, 257, 282], "section": [2, 3, 5, 6, 7, 9, 12, 14, 16, 21, 27, 67, 111, 115, 124, 127, 131, 134, 211, 213, 219, 220, 221, 225, 229, 230, 231, 234, 235, 237, 238, 250, 254, 257, 258, 259, 260, 261, 262, 263, 264, 266, 270, 274, 275, 276, 280], "i": [2, 5, 6, 7, 8, 9, 11, 12, 13, 14, 16, 17, 18, 21, 26, 31, 34, 35, 36, 37, 40, 41, 43, 44, 47, 50, 52, 66, 67, 72, 82, 83, 86, 90, 96, 97, 99, 100, 105, 107, 110, 112, 114, 119, 120, 122, 123, 124, 127, 129, 130, 131, 139, 140, 141, 143, 144, 147, 148, 149, 150, 152, 155, 156, 158, 168, 182, 184, 196, 198, 205, 213, 219, 220, 221, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 244, 246, 248, 250, 251, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 269, 270, 272, 273, 274, 275, 279, 280, 281, 282], "summar": 2, "process": [2, 6, 8, 14, 29, 82, 83, 119, 234, 237, 238, 250, 255, 256, 257], "It": [2, 5, 6, 14, 16, 34, 40, 111, 127, 227, 228, 230, 234, 235, 236, 237, 238, 255, 257, 258, 263, 272, 273], "code": [2, 5, 7, 9, 12, 14, 34, 127, 221, 230, 231, 234, 235, 236, 240, 250, 255, 256, 258, 265, 269, 274, 276], "do": [2, 5, 9, 11, 14, 16, 17, 114, 124, 127, 230, 234, 236, 238, 254, 255, 256, 257, 263, 270, 276], "doe": [2, 6, 9, 12, 14, 234, 240, 256, 257, 263], "primari": [2, 5, 9, 257, 281], "challeng": 2, "respect": [2, 8, 9, 14, 18, 127, 234, 237, 270, 275, 280], "softwar": [2, 76, 264, 276], "appropri": [2, 5, 6, 14, 22, 71, 124, 127, 221, 224, 227, 228, 229, 231, 232, 234, 238, 250, 256, 257, 258, 259, 260, 261, 262, 263, 264, 275, 276, 280], "final": [2, 5, 6, 7, 8, 124, 224, 225, 227, 228, 229, 234, 236, 253, 257, 270], "statement": [2, 12, 234, 255], "gener": [2, 3, 5, 7, 8, 12, 14, 18, 22, 23, 24, 25, 29, 42, 66, 110, 127, 146, 154, 211, 221, 223, 224, 227, 228, 229, 231, 234, 238, 250, 257, 258, 263, 270, 272, 273, 276], "regard": 2, "last": [2, 235, 238, 269, 276], "modifi": [2, 8, 13, 14, 21, 33, 45, 105, 107, 131, 151, 224, 227, 228, 234, 236, 238, 256, 257, 258, 269, 276], "your": [2, 4, 5, 6, 11, 124, 221, 237, 238, 250, 254, 257, 258, 259, 260, 263, 264, 270, 276], "appear": [2, 124, 234, 257], "under": [2, 16, 34, 35, 124, 127, 223, 234, 235, 238, 256, 266, 282], "head": [2, 223, 260], "correspond": [2, 6, 7, 110, 124, 127, 221, 234, 238, 250, 269], "discuss": [2, 6, 127, 225, 234, 237, 257, 269], "technic": [2, 7], "issu": [2, 6, 234, 235, 238, 270, 272, 273], "focu": [2, 257], "model": [2, 5, 10, 21, 22, 26, 27, 29, 34, 36, 103, 104, 109, 113, 118, 120, 121, 122, 123, 124, 125, 129, 139, 141, 143, 147, 148, 149, 150, 155, 168, 184, 198, 205, 221, 224, 225, 227, 228, 229, 231, 234, 235, 237, 238, 243, 250, 254, 255, 256, 258, 259, 260, 261, 262, 263, 264, 269, 272, 273, 275, 280], "To": [2, 5, 6, 12, 16, 17, 110, 124, 127, 221, 234, 237, 238, 250, 251, 257, 259, 260, 261, 262, 263, 264, 266, 270, 276], "extent": [2, 13, 16, 257, 269], "possibl": [2, 8, 11, 62, 127, 223, 225, 234, 235, 236, 237, 257, 266], "other": [2, 5, 6, 7, 8, 9, 10, 13, 16, 18, 34, 35, 37, 49, 97, 120, 157, 225, 229, 230, 231, 232, 236, 237, 238, 245, 254, 255, 256, 258, 259, 269, 270, 282], "clean": [2, 4, 5, 6, 104, 109, 234, 236, 238], "plan": [2, 13, 127, 221, 227, 228, 234, 250, 255, 272, 273, 282], "For": [2, 3, 5, 6, 7, 12, 14, 16, 18, 104, 120, 124, 127, 223, 224, 227, 228, 229, 234, 237, 238, 257, 258, 259, 267, 270, 272, 273, 276, 277, 282], "you": [2, 4, 5, 6, 7, 9, 11, 12, 13, 14, 16, 17, 18, 120, 121, 122, 123, 124, 125, 127, 221, 231, 234, 236, 237, 238, 250, 254, 255, 257, 258, 259, 260, 261, 262, 263, 264, 270, 276, 281, 282], "provid": [2, 3, 5, 8, 9, 14, 16, 17, 18, 21, 34, 36, 37, 43, 86, 90, 96, 110, 114, 124, 127, 131, 136, 141, 205, 221, 224, 225, 227, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 250, 253, 254, 255, 256, 257, 258, 263, 267, 270, 275, 276], "intend": [2, 6, 8, 9, 235, 258, 273, 282], "meet": 2, "detail": [2, 3, 5, 7, 9, 11, 12, 13, 55, 110, 223, 225, 232, 234, 237, 238, 254, 257, 276], "pde": 2, "solver": [2, 236, 238, 256, 276], "well": [2, 6, 9, 12, 13, 124, 127, 216, 224, 225, 227, 228, 229, 234, 238, 255, 257, 258, 270, 276, 282], "steer": 2, "awai": 2, "from": [2, 5, 7, 8, 9, 11, 12, 13, 14, 16, 17, 19, 21, 23, 24, 27, 34, 35, 36, 43, 45, 47, 50, 52, 76, 78, 83, 87, 88, 89, 90, 91, 94, 95, 96, 98, 100, 101, 104, 105, 106, 107, 110, 112, 114, 115, 118, 119, 124, 131, 134, 141, 163, 168, 171, 177, 184, 187, 191, 198, 201, 217, 221, 223, 224, 225, 227, 228, 229, 230, 231, 236, 237, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 264, 266, 268, 269, 270, 272, 273, 275, 276, 279, 280, 281, 282], "low": [2, 112], "variabl": [2, 5, 13, 18, 19, 21, 34, 37, 43, 59, 66, 72, 76, 86, 87, 91, 94, 110, 112, 113, 114, 119, 124, 127, 129, 131, 137, 141, 144, 150, 152, 156, 160, 163, 171, 173, 177, 179, 182, 185, 187, 189, 191, 193, 196, 199, 201, 205, 213, 219, 220, 223, 229, 234, 237, 238, 244, 245, 250, 254, 257, 259, 260, 261, 262, 263, 264, 267, 269, 275, 276, 277, 280], "declar": [2, 7], "interfac": [2, 10, 211, 212, 213, 219, 220, 237, 238, 256, 257, 266], "sequenc": [2, 5, 14, 225, 233, 234, 237, 255, 257, 276, 281, 282], "If": [2, 5, 6, 7, 8, 9, 12, 14, 17, 18, 21, 31, 34, 36, 41, 43, 44, 45, 52, 82, 83, 84, 86, 97, 110, 112, 120, 121, 122, 123, 124, 125, 131, 136, 141, 182, 196, 205, 224, 234, 236, 237, 238, 251, 254, 255, 257, 258, 263, 264, 266, 270, 275, 276, 280], "want": [2, 5, 6, 11, 14, 16, 17, 45, 124, 127, 234, 236, 238, 254, 257, 258, 263, 264, 274, 276, 282], "math": 2, "syntax": [2, 127, 257], "almost": [2, 9], "latex": 2, "b": [2, 5, 6, 238, 255, 257, 276], "2": [2, 6, 13, 14, 17, 35, 124, 127, 155, 223, 224, 232, 235, 238, 244, 251, 257, 258, 260, 263, 266, 269, 270, 272, 273, 276], "2ab": 2, "imag": [2, 7, 18, 111, 112, 230, 257, 275, 280], "keep": [2, 5, 6, 9, 14, 21, 49, 225, 230, 231, 234, 236, 238, 257, 275, 280], "mind": [2, 5, 257], "quit": [2, 232, 234, 236, 257], "small": [2, 9, 40, 124, 230, 234, 257, 259, 260, 265, 266, 274, 276], "jpeg": 2, "ar": [2, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 17, 18, 19, 21, 30, 31, 34, 36, 40, 41, 43, 49, 71, 82, 83, 86, 99, 100, 104, 115, 124, 127, 131, 136, 141, 182, 196, 205, 213, 216, 219, 220, 221, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 250, 251, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 266, 269, 270, 272, 273, 274, 275, 276, 279, 280, 281, 282], "png": [2, 13, 18, 225, 234, 257], "okai": [2, 6, 234, 257], "size": [2, 13, 61, 62, 71, 127, 133, 135, 137, 230, 257, 258, 269, 270, 272, 273, 274, 275, 280], "repo": [2, 5, 6, 124, 221, 250, 256, 257, 277], "exampl": [2, 3, 5, 6, 7, 9, 11, 12, 13, 14, 16, 17, 18, 124, 127, 230, 231, 232, 234, 235, 236, 237, 238, 254, 255, 257, 258, 260, 266, 275, 276, 281, 282], "centric": 2, "pseudo": 2, "actual": [2, 5, 6, 12, 234, 236, 238, 257], "sourc": [2, 6, 7, 16, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 169, 170, 171, 172, 173, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 234, 238, 241, 242, 243, 244, 245, 246, 247, 248, 249, 257, 258, 259, 260, 261, 262, 263, 264, 276], "project": [2, 5, 6, 7, 58, 90, 96, 221, 237, 238, 250, 251, 257, 258, 259, 260, 263, 276, 277], "manag": [2, 254, 263], "item": [2, 257], "git": [2, 6, 15, 85, 221, 238, 250, 257, 258, 276], "branch": [2, 5, 124, 221, 231, 234, 238, 250, 256, 257, 276], "timelin": 2, "staf": 2, "via": [2, 5, 6, 14, 234, 238, 263], "block": [2, 236], "like": [2, 5, 6, 7, 8, 9, 10, 11, 14, 17, 87, 91, 94, 124, 127, 230, 232, 234, 236, 237, 238, 254, 256, 257, 258, 263, 269, 270, 276, 282], "def": [2, 7, 9, 11, 12, 14, 16, 17, 18, 127, 230, 231, 234, 236, 237, 257], "example_funct": 2, "foo": [2, 237], "return": [2, 7, 27, 48, 50, 53, 60, 61, 62, 67, 71, 78, 81, 82, 92, 101, 102, 104, 105, 107, 110, 114, 118, 119, 127, 130, 132, 134, 136, 137, 142, 164, 167, 180, 181, 183, 194, 195, 197, 211, 214, 215, 216, 217, 218, 236, 237, 257, 270], "how": [2, 5, 6, 12, 14, 66, 127, 233, 234, 236, 237, 238, 258, 263, 264], "show": [2, 7, 13, 234, 257, 263, 264, 269, 270, 275, 280], "met": 2, "regress": [2, 224, 225, 235, 255, 256, 257, 269, 270, 276, 281], "configur": [2, 5, 6, 9, 11, 14, 16, 31, 34, 41, 43, 50, 54, 81, 82, 83, 84, 85, 103, 104, 109, 124, 127, 211, 213, 214, 215, 219, 220, 234, 237, 256, 257, 258, 260, 263, 264, 266, 272, 273, 275, 276, 280, 282], "work": [2, 5, 6, 8, 11, 12, 14, 15, 16, 34, 36, 37, 39, 42, 43, 44, 47, 54, 85, 99, 103, 104, 109, 123, 124, 146, 154, 171, 174, 232, 233, 234, 235, 236, 237, 238, 254, 255, 257, 258, 263, 270, 274, 276, 282], "properli": [2, 120, 122, 123, 257, 258, 276], "addit": [2, 7, 9, 17, 34, 127, 229, 230, 231, 232, 234, 236, 237, 238, 257], "modif": [2, 7, 234, 251], "nightli": [2, 238, 276, 281], "might": [2, 6, 11, 14, 16, 18, 124, 127, 230, 234, 238, 257, 258, 263, 276], "made": [2, 5, 16, 34, 37, 43, 110, 234, 236, 237, 251, 253, 255, 257, 282], "continu": [2, 6, 234, 257], "page": [3, 7, 124, 259], "auto": 3, "summari": [3, 260], "more": [3, 5, 6, 9, 11, 12, 13, 14, 16, 34, 43, 47, 67, 103, 104, 124, 127, 223, 224, 225, 230, 232, 234, 235, 237, 238, 255, 263, 267, 269, 275, 276, 277, 280, 282], "relev": [3, 7, 9, 127, 225, 227, 228, 257, 259, 260, 261, 262, 263, 264, 275, 276, 280], "seaic": [3, 10, 19, 36, 231, 234, 253, 255, 256, 276, 277, 280, 282], "long": [4, 21, 31, 34, 41, 82, 83, 131, 141, 182, 196, 205, 234, 257, 269, 276], "procedur": [4, 124, 238, 257, 264], "conda": [4, 5, 15, 85, 120, 122, 123, 124, 221, 231, 237, 250, 256, 257, 258, 259, 260, 261, 262, 264], "environ": [4, 5, 120, 122, 123, 221, 231, 237, 250, 256, 257, 258, 259, 260, 261, 262, 263, 264], "spack": [4, 5, 120, 122, 123, 254, 256, 257, 259, 260, 261, 262, 263, 264], "compil": [4, 5, 6, 14, 120, 121, 122, 123, 124, 125, 254, 256, 257, 259, 260, 261, 262, 263, 264, 276], "system": [4, 5, 6, 21, 31, 34, 41, 82, 83, 84, 120, 122, 123, 124, 131, 141, 182, 196, 205, 234, 254, 256, 257, 258, 259, 260, 261, 262, 263, 264, 276], "modul": [4, 5, 9, 10, 12, 14, 15, 23, 24, 25, 58, 78, 105, 120, 122, 123, 124, 127, 129, 230, 231, 232, 234, 236, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 268, 276], "set": [4, 5, 6, 7, 8, 9, 10, 11, 14, 16, 17, 22, 23, 24, 25, 26, 34, 36, 42, 67, 84, 85, 87, 88, 89, 90, 91, 93, 94, 95, 96, 101, 103, 104, 105, 107, 109, 110, 111, 112, 120, 121, 122, 123, 124, 125, 143, 146, 149, 154, 161, 168, 184, 198, 205, 213, 219, 220, 221, 223, 224, 225, 227, 228, 229, 230, 233, 234, 236, 237, 251, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 268, 269, 270, 272, 273, 274, 275, 280, 281], "up": [4, 5, 6, 7, 8, 10, 11, 14, 16, 22, 23, 24, 25, 34, 42, 43, 73, 85, 97, 98, 101, 103, 104, 109, 110, 120, 121, 122, 123, 124, 125, 127, 146, 154, 221, 224, 225, 227, 228, 229, 233, 234, 236, 237, 250, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 264, 270, 275, 280, 281, 282], "packag": [4, 5, 6, 7, 9, 10, 13, 14, 15, 23, 24, 25, 36, 45, 51, 78, 85, 105, 109, 114, 124, 127, 129, 230, 231, 232, 233, 234, 236, 238, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 276], "Then": [4, 6, 7, 11, 14, 120, 121, 122, 123, 124, 125, 221, 224, 227, 228, 229, 231, 234, 236, 238, 250, 257, 263, 269, 276], "run": [4, 5, 6, 7, 10, 12, 16, 17, 18, 21, 26, 31, 34, 35, 37, 40, 41, 43, 44, 47, 58, 81, 82, 83, 92, 103, 104, 109, 123, 124, 129, 131, 140, 141, 143, 147, 149, 152, 156, 158, 163, 166, 168, 177, 182, 184, 187, 191, 196, 198, 201, 204, 205, 206, 221, 224, 225, 227, 228, 229, 232, 233, 235, 236, 237, 243, 244, 247, 250, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 268, 281, 282], "script": [4, 5, 6, 12, 18, 46, 54, 121, 124, 125, 237, 255, 256, 257, 260, 263], "doc": [4, 7, 257, 264], "cd": [4, 6, 221, 238, 250, 257, 260, 276], "html": [4, 267], "view": [4, 227, 228, 238, 272, 273], "open": [4, 6, 238, 257], "_build": 4, "index": [4, 17, 112, 213, 214, 215, 216, 217, 218, 219, 220, 230, 257], "act": [5, 237, 266], "essenti": [5, 14], "4": [5, 7, 13, 14, 124, 139, 140, 224, 227, 228, 229, 231, 234, 236, 257, 258, 263, 269, 270, 272, 273, 274, 276], "These": [5, 6, 8, 14, 19, 34, 124, 127, 221, 223, 231, 234, 236, 237, 238, 250, 251, 256, 257, 258, 263, 269, 273, 276, 281, 282], "user": [5, 6, 7, 8, 9, 11, 14, 16, 34, 43, 44, 49, 54, 85, 124, 127, 224, 225, 227, 228, 229, 234, 235, 236, 254, 255, 257, 260, 263, 264, 267, 269, 270, 277], "describ": [5, 7, 14, 16, 85, 105, 107, 119, 127, 224, 225, 227, 228, 229, 230, 233, 234, 235, 236, 237, 238, 253, 254, 257, 258, 259, 260, 261, 262, 263, 264, 266, 270, 276], "instal": [5, 6, 124, 238, 257, 263, 264, 276], "abov": [5, 7, 14, 17, 124, 230, 232, 234, 235, 236, 237, 238, 257, 258, 270, 272, 273, 274, 276, 281], "off": [5, 6, 238, 254], "http": [5, 7, 11, 14, 52, 234, 237, 254, 256, 257, 258, 264, 267, 276, 277], "github": [5, 6, 7, 237, 238, 256, 257, 258, 267, 276, 277], "com": [5, 6, 7, 14, 52, 237, 238, 256, 257, 258, 276, 277], "e3sm": [5, 7, 10, 11, 34, 113, 124, 221, 231, 234, 235, 237, 250, 251, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 266, 267, 277], "creat": [5, 8, 11, 12, 13, 14, 15, 16, 17, 19, 21, 34, 36, 40, 43, 52, 59, 60, 66, 67, 72, 86, 93, 103, 104, 109, 113, 124, 127, 129, 130, 139, 140, 141, 144, 147, 148, 150, 152, 155, 156, 158, 160, 163, 166, 169, 171, 173, 175, 177, 179, 182, 185, 187, 189, 191, 193, 196, 199, 201, 204, 205, 206, 207, 209, 213, 219, 220, 225, 229, 230, 234, 235, 236, 237, 243, 244, 246, 247, 248, 254, 255, 256, 258, 259, 260, 261, 262, 263, 264, 270, 276, 281], "see": [5, 6, 7, 8, 9, 12, 13, 14, 16, 17, 120, 122, 123, 124, 224, 225, 228, 234, 236, 238, 254, 257, 258, 263, 267, 268, 269, 270, 274, 275, 276, 277, 279, 280, 281, 282], "mean": [5, 164, 225, 227, 228, 238, 257, 266, 269, 270, 272, 273, 281], "chang": [5, 6, 8, 16, 66, 97, 98, 127, 221, 231, 234, 235, 236, 237, 238, 250, 255, 257, 258, 260, 264, 266, 269, 276, 281], "call": [5, 6, 8, 10, 11, 12, 13, 14, 16, 17, 18, 21, 29, 34, 40, 43, 44, 45, 58, 92, 99, 124, 127, 224, 227, 228, 229, 231, 234, 235, 236, 237, 238, 254, 255, 256, 257, 258, 263, 264, 276], "tool": [5, 6, 9, 12, 14, 16, 221, 231, 234, 238, 250, 256, 257, 258], "us": [5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 21, 26, 27, 31, 34, 35, 36, 40, 41, 43, 44, 47, 50, 54, 67, 76, 79, 82, 83, 86, 92, 99, 110, 111, 112, 113, 114, 119, 120, 124, 127, 131, 132, 133, 134, 135, 136, 141, 142, 143, 149, 156, 160, 163, 167, 171, 182, 183, 189, 190, 196, 197, 205, 211, 213, 214, 215, 219, 220, 221, 223, 224, 225, 227, 228, 229, 230, 231, 232, 234, 236, 237, 238, 244, 250, 251, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 266, 268, 269, 270, 272, 273, 274, 275, 276, 279, 281, 282], "task": [5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 28, 31, 33, 34, 37, 38, 40, 41, 42, 48, 55, 58, 64, 69, 81, 82, 83, 85, 86, 99, 100, 103, 104, 109, 124, 127, 131, 133, 135, 221, 223, 224, 225, 227, 228, 229, 231, 232, 234, 235, 238, 250, 251, 253, 254, 255, 256, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 272, 273, 274, 277, 281], "support": [5, 6, 8, 13, 16, 34, 127, 213, 219, 220, 223, 234, 237, 250, 255, 256, 257, 258, 260, 264, 266, 269, 274, 282], "machin": [5, 8, 9, 34, 36, 43, 53, 54, 85, 103, 104, 109, 221, 234, 236, 237, 250, 256, 257, 258, 259, 260, 261, 262, 264], "option": [5, 7, 9, 13, 16, 17, 18, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 34, 35, 36, 37, 41, 43, 44, 45, 47, 49, 50, 52, 53, 54, 55, 59, 65, 66, 67, 70, 72, 76, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 94, 95, 96, 99, 100, 103, 104, 105, 109, 110, 111, 112, 113, 114, 115, 116, 118, 119, 124, 129, 131, 134, 136, 141, 143, 149, 151, 161, 168, 179, 182, 184, 193, 196, 198, 205, 207, 209, 211, 213, 214, 215, 219, 220, 221, 224, 225, 227, 228, 229, 230, 231, 234, 235, 236, 237, 246, 250, 251, 254, 256, 258, 266, 268, 276, 282], "help": [5, 6, 13, 124, 230, 231, 232, 234, 238, 256, 257, 263, 267, 277], "usag": [5, 18, 258, 260, 264], "h": [5, 14, 257], "t": [5, 6, 7, 9, 11, 12, 14, 34, 35, 119, 124, 127, 180, 181, 194, 195, 205, 225, 234, 236, 237, 238, 254, 257, 258, 260, 262, 263, 268, 269, 272, 273, 276, 281, 282], "n": [5, 6, 60, 67, 68, 74, 234, 257, 260, 263, 264, 269, 270, 272, 273, 275, 276, 280], "number": [5, 6, 8, 13, 14, 21, 28, 31, 33, 34, 38, 40, 41, 53, 54, 55, 59, 60, 61, 62, 63, 71, 81, 82, 83, 86, 104, 124, 127, 131, 132, 133, 135, 141, 142, 156, 164, 167, 179, 182, 183, 193, 196, 197, 205, 221, 224, 227, 228, 230, 234, 235, 236, 237, 244, 255, 257, 258, 263, 266, 268, 269, 270, 272, 273, 274, 275, 276, 280], "v": [5, 238, 257, 272, 273, 281], "By": [5, 14, 17, 35, 36, 127, 221, 231, 234, 236, 250, 257, 258, 269, 274], "default": [5, 7, 9, 14, 17, 18, 21, 34, 35, 36, 43, 47, 54, 67, 72, 77, 85, 86, 87, 91, 94, 100, 103, 104, 106, 109, 112, 120, 122, 123, 124, 127, 141, 221, 225, 227, 228, 229, 230, 231, 234, 236, 238, 250, 251, 256, 258, 259, 260, 261, 262, 263, 264, 266, 270, 274, 275, 276, 280, 282], "planar": [5, 112, 127, 223, 231, 234, 257, 272, 273, 274, 275, 280, 281, 282], "baroclinic_channel": [5, 7, 9, 14, 17, 221, 226, 230, 231, 234, 237, 257, 269, 276, 281, 282], "10km": [5, 17, 224, 257, 269, 276, 281, 282], "1": [5, 7, 13, 14, 16, 17, 18, 34, 61, 120, 121, 122, 123, 124, 125, 127, 139, 141, 155, 182, 196, 204, 205, 206, 213, 219, 220, 224, 225, 227, 228, 229, 231, 232, 234, 236, 238, 251, 254, 257, 258, 260, 263, 264, 266, 269, 270, 272, 273, 274, 275, 276], "decomp": [5, 9, 231, 257, 276, 281], "displai": [5, 8, 264], "path": [5, 6, 9, 11, 14, 17, 34, 36, 37, 43, 44, 47, 49, 50, 52, 55, 58, 85, 103, 104, 109, 110, 112, 124, 221, 231, 234, 236, 237, 238, 244, 250, 255, 257, 258, 259, 260, 261, 262, 263, 264, 276, 282], "directori": [5, 6, 8, 11, 12, 14, 15, 18, 21, 34, 36, 37, 42, 43, 44, 47, 52, 54, 85, 86, 99, 103, 104, 109, 110, 124, 131, 139, 140, 141, 144, 146, 147, 148, 150, 152, 154, 155, 156, 158, 171, 205, 221, 224, 231, 233, 234, 235, 236, 237, 238, 244, 246, 248, 250, 251, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 270, 276, 282], "messag": [5, 8, 124, 234, 254, 264], "task_expr": [5, 55], "flag": [5, 6, 124, 234, 237, 254, 255, 257, 258, 267, 269, 276, 277], "suppli": [5, 6, 7, 17, 119, 124, 234, 238, 257], "substr": [5, 124], "regular": [5, 18, 55, 60, 67, 160, 163, 257, 259, 262, 263, 264, 276], "express": [5, 55], "subset": 5, "search": [5, 55, 260], "given": [5, 7, 8, 13, 14, 16, 17, 19, 21, 50, 61, 71, 78, 82, 83, 100, 105, 107, 110, 114, 127, 130, 131, 150, 164, 216, 224, 225, 229, 234, 236, 254, 256, 257, 258, 269, 270, 274, 275, 276, 280, 281], "pass": [5, 8, 12, 13, 14, 17, 71, 110, 111, 127, 230, 231, 234, 236, 237, 238, 255, 276], "similarli": [5, 8, 221, 234, 236, 238, 263, 276], "result": [5, 13, 17, 50, 62, 71, 124, 127, 139, 147, 152, 155, 158, 209, 224, 225, 234, 235, 237, 238, 243, 248, 255, 257, 258, 269, 270, 275, 280, 281], "descript": [5, 7, 257, 258, 267, 277], "short": [5, 140, 204, 206, 234, 235, 236, 237, 247, 257, 269], "core": [5, 7, 8, 14, 21, 31, 33, 34, 36, 38, 40, 41, 43, 54, 81, 82, 83, 109, 124, 127, 128, 131, 139, 140, 204, 206, 224, 229, 230, 231, 234, 235, 236, 237, 251, 255, 257, 258, 259, 260, 261, 262, 263, 264, 276, 281], "underli": 5, "must": [5, 7, 11, 14, 18, 21, 24, 25, 34, 37, 39, 109, 111, 112, 124, 127, 131, 174, 223, 234, 236, 238, 257, 266, 282], "built": [5, 14, 103, 104, 109, 124, 221, 231, 238, 250, 256, 258, 263, 276], "standalon": [5, 14, 123, 124, 231, 238, 255, 256, 263, 277], "mpa": [5, 9, 11, 12, 13, 14, 16, 17, 18, 21, 27, 34, 36, 58, 76, 88, 95, 105, 107, 109, 118, 119, 120, 121, 122, 123, 124, 125, 128, 131, 134, 137, 171, 179, 193, 212, 221, 222, 224, 225, 227, 228, 229, 231, 234, 237, 238, 241, 250, 253, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 267, 269, 272, 274, 275, 276, 277, 280, 281, 282], "befor": [5, 6, 8, 14, 16, 40, 104, 109, 124, 234, 236, 237, 238, 254, 257, 260, 264, 266, 270, 276], "num": 5, "f": [5, 9, 11, 17, 231, 234, 236, 237, 238, 257, 258, 264, 269, 272, 276], "m": [5, 6, 14, 60, 67, 68, 74, 224, 229, 230, 238, 257, 259, 260, 261, 262, 264, 266, 269, 270, 274, 276], "mach": [5, 9, 34, 124, 256, 259, 260, 261, 262, 263, 264, 276], "w": [5, 6, 238, 255, 257, 276], "p": [5, 6, 238, 257, 258, 276], "suite_nam": [5, 8, 100, 102, 104, 109, 276], "copy_execut": [5, 103, 104, 109, 276], "specifi": [5, 6, 14, 16, 17, 18, 36, 124, 223, 234, 238, 253, 257, 258, 264, 269, 270, 275, 276, 280], "altern": [5, 13, 234, 251, 276], "task_numb": 5, "multipl": [5, 14, 124, 222, 235, 237, 238, 257, 263, 269, 276], "test": [5, 7, 8, 9, 18, 43, 44, 47, 54, 81, 82, 83, 102, 110, 124, 128, 129, 138, 140, 141, 147, 148, 150, 151, 152, 153, 155, 160, 161, 162, 163, 165, 166, 169, 171, 172, 175, 176, 177, 178, 179, 182, 185, 186, 187, 188, 189, 190, 191, 192, 193, 196, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 224, 225, 227, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 241, 242, 243, 246, 247, 248, 249, 250, 253, 255, 256, 262, 263, 264, 266, 269, 270, 272, 273, 274, 275, 276, 277, 280, 281], "separ": [5, 7, 9, 14, 16, 17, 234, 235, 255, 257, 270, 276], "space": [5, 6, 7, 9, 13, 124, 227, 228, 234, 238, 257, 260, 263, 276], "requir": [5, 6, 8, 14, 21, 31, 34, 35, 41, 86, 127, 131, 141, 182, 196, 205, 221, 230, 231, 234, 235, 236, 237, 238, 250, 251, 254, 256, 257, 258, 263, 266, 267, 275, 276, 277, 280, 282], "few": [5, 13, 14, 21, 31, 34, 41, 82, 83, 124, 131, 224, 225, 227, 228, 229, 234, 237, 257, 258, 263], "basic": [5, 7, 258, 260, 263, 276], "piec": [5, 230, 231, 257], "abl": [5, 120, 121, 122, 123, 125, 127, 234, 235, 238, 257, 263, 276], "place": [5, 6, 14, 111, 124, 230, 234, 236, 251, 257, 263], "download": [5, 6, 8, 10, 34, 36, 42, 124, 146, 154, 236, 237, 238, 258, 276, 281], "some": [5, 6, 8, 9, 10, 11, 13, 14, 43, 124, 223, 225, 230, 232, 234, 236, 237, 238, 254, 255, 257, 258, 259, 260, 261, 262, 263, 264, 266, 267, 269, 276, 277, 281, 282], "data": [5, 10, 13, 16, 17, 18, 22, 34, 35, 36, 92, 105, 107, 108, 111, 112, 113, 119, 124, 171, 213, 219, 220, 234, 238, 256, 258, 259, 260, 261, 262, 263, 276, 281, 282], "r": [5, 264, 270], "tell": [5, 6, 124, 238], "re": [5, 6, 9, 237, 238, 255, 257, 258, 263, 264, 270], "leav": [5, 18, 225, 258, 270], "unknown": [5, 124, 237, 263], "component_path": [5, 103, 104, 109, 221, 231, 250, 258, 276], "absolut": [5, 9, 34, 36, 49, 103, 104, 109, 221, 231, 234, 238, 250, 276], "landic": [5, 6, 12, 19, 36, 58, 109, 230, 231, 233, 234, 236, 238, 255, 256, 257, 258, 276, 282], "e3sm_submodul": [5, 221, 231, 238, 250, 251, 257], "mali": [5, 124, 231, 234, 238, 255, 257, 258, 276, 282], "dev": [5, 6, 7, 230, 231, 233, 234, 237, 238, 256, 257, 267, 276, 277, 280], "albani": [5, 120, 122, 123, 124, 231, 258, 259, 260, 261, 264, 276], "depend": [5, 14, 16, 18, 34, 35, 42, 97, 98, 124, 127, 146, 154, 163, 236, 238, 255, 256, 257, 258, 263, 264, 266, 270, 276, 282], "whether": [5, 8, 13, 14, 18, 21, 26, 34, 36, 43, 44, 47, 50, 52, 55, 99, 100, 103, 104, 109, 110, 111, 112, 115, 124, 127, 130, 131, 143, 149, 160, 163, 168, 184, 198, 205, 207, 209, 227, 228, 230, 234, 236, 238, 254, 257, 258, 259, 260, 261, 262, 263, 264, 266, 269, 270, 272, 273, 274, 275, 276, 280], "omega": [5, 27, 113, 131, 134, 179, 193, 221, 231, 237, 238, 255, 257, 267, 272, 273, 276], "config": [5, 7, 8, 10, 11, 12, 13, 16, 18, 21, 22, 25, 26, 27, 34, 35, 36, 43, 45, 50, 53, 54, 65, 67, 70, 81, 82, 83, 84, 85, 101, 103, 104, 109, 111, 113, 114, 115, 116, 118, 119, 129, 131, 134, 136, 143, 149, 161, 168, 179, 184, 193, 198, 211, 213, 214, 215, 219, 220, 221, 224, 225, 227, 228, 229, 230, 234, 235, 236, 237, 238, 250, 251, 254, 256, 266, 276, 282], "point": [5, 6, 46, 52, 89, 124, 221, 223, 230, 231, 236, 237, 238, 250, 257, 258, 263, 276], "much": [5, 6, 14, 234, 257], "config_fil": [5, 103, 104, 109], "work_dir": [5, 11, 34, 43, 54, 85, 103, 104, 109, 110, 234, 236, 257], "recommend": [5, 7, 11, 18, 124, 234, 235, 237, 238, 257, 263], "itself": [5, 6, 7, 9, 34, 230, 231, 233, 234, 236, 238, 257, 276], "temp": 5, "scratch": [5, 6, 238, 257, 260, 264, 276], "avoid": [5, 234, 257], "confus": [5, 14, 237, 238, 257], "output": [5, 7, 8, 10, 12, 13, 14, 17, 19, 21, 34, 35, 37, 42, 43, 47, 75, 76, 83, 86, 99, 100, 110, 127, 129, 131, 137, 146, 154, 156, 157, 163, 171, 177, 187, 191, 201, 212, 224, 225, 227, 228, 229, 236, 244, 245, 253, 255, 258, 264, 270, 276, 281], "compar": [5, 10, 17, 34, 37, 103, 104, 109, 110, 127, 156, 157, 205, 225, 229, 234, 235, 236, 237, 238, 244, 245, 253, 255, 257, 268, 269, 276, 279, 281], "previou": [5, 157, 234, 238, 245, 257, 268, 276, 281], "same": [5, 7, 9, 14, 17, 34, 35, 36, 110, 124, 127, 224, 229, 230, 232, 234, 235, 236, 237, 238, 255, 257, 258, 259, 260, 261, 262, 263, 264, 266, 268, 269, 270, 274, 276, 281, 282], "baseline_dir": [5, 34, 103, 104, 109, 234], "mani": [5, 6, 8, 9, 127, 230, 232, 234, 236, 237, 238, 256, 257, 269, 275, 280], "valid": [5, 10, 34, 37, 127, 129, 213, 214, 215, 216, 217, 218, 219, 220, 227, 228, 229, 234, 237, 238, 256, 266, 269], "timer": [5, 17, 34, 234, 235, 237], "both": [5, 6, 7, 8, 13, 14, 26, 124, 127, 136, 143, 149, 224, 230, 231, 233, 234, 238, 256, 257, 258, 268, 272, 273, 274], "custom": [5, 6, 8, 13, 16, 49, 50, 103, 104, 109, 221, 231, 238, 250, 258, 264, 276], "give": [5, 14, 17, 124, 234, 237, 238, 257, 258, 276], "predefin": 5, "so": [5, 6, 7, 9, 12, 13, 14, 17, 18, 21, 33, 97, 124, 127, 131, 213, 219, 220, 221, 224, 227, 228, 230, 231, 234, 236, 237, 238, 250, 255, 257, 258, 263, 264, 266, 269, 270, 274, 276, 281], "case": [5, 6, 7, 8, 9, 14, 18, 24, 25, 43, 44, 47, 54, 81, 82, 83, 105, 110, 124, 127, 128, 140, 147, 148, 150, 151, 152, 153, 155, 161, 162, 163, 165, 166, 169, 171, 172, 175, 177, 178, 179, 182, 185, 186, 187, 188, 189, 191, 192, 193, 196, 199, 200, 201, 202, 204, 205, 206, 207, 208, 210, 211, 224, 225, 227, 228, 229, 230, 231, 232, 234, 236, 238, 241, 243, 246, 247, 249, 255, 256, 257, 263, 264, 266, 269, 270, 272, 273, 274, 275, 276, 280, 281], "pre": [5, 124, 238], "copi": [5, 6, 8, 36, 47, 103, 104, 109, 257, 260, 276], "just": [5, 14, 21, 31, 34, 41, 55, 124, 131, 234, 236, 237, 238, 255, 257, 260, 264], "wish": [5, 7, 14, 44, 234, 238, 257, 276], "again": [5, 14, 123, 127, 221, 234, 236, 238, 254, 276], "later": [5, 8, 17, 21, 31, 34, 41, 49, 124, 131, 234, 257, 258], "anticip": [5, 257], "mai": [5, 6, 7, 8, 9, 12, 13, 14, 17, 35, 37, 40, 98, 111, 124, 221, 223, 230, 234, 235, 236, 238, 250, 251, 254, 255, 257, 258, 264, 270, 274, 275, 276, 280, 282], "delet": [5, 104, 109, 237, 238, 254, 276], "fresh": [5, 6, 236, 257], "sinc": [5, 14, 98, 119, 127, 224, 234, 236, 237, 238, 257, 269, 270, 272, 273, 275, 280], "rerun": [5, 238], "c": [5, 6, 104, 124, 234, 238, 259, 260, 261, 262, 263, 264, 268, 276, 281], "test_suit": [5, 102, 234], "build": [5, 6, 10, 13, 14, 63, 68, 120, 121, 122, 123, 125, 221, 231, 236, 237, 250, 254, 256, 257, 258, 259, 260, 261, 262, 263, 264], "mpas_model": [5, 258], "overrid": [5, 13, 14, 39, 40, 42, 45, 49, 63, 66, 67, 68, 127, 146, 154, 174, 234, 236, 237, 257, 258, 264, 276], "baselin": [5, 6, 8, 10, 34, 37, 103, 104, 109, 110, 127, 129, 205, 224, 227, 228, 229, 234, 235, 237, 253, 255, 257, 268, 276], "comparison": [5, 8, 17, 34, 110, 234, 257, 258], "against": [5, 10, 37, 110, 127, 129, 224, 227, 228, 229, 234, 253, 257, 268], "oppos": [5, 14, 26, 130, 143, 149, 160, 163, 168, 184, 198, 257], "skip_step": 5, "q": 5, "step_is_subprocess": [5, 99], "wherea": [5, 12, 234, 255, 257, 268, 282], "typic": [5, 7, 9, 13, 14, 16, 17, 18, 34, 44, 100, 124, 127, 230, 231, 232, 234, 236, 238, 255, 257, 258, 263, 266, 274, 276, 282], "clone": [5, 6, 124, 221, 232, 238, 250, 257, 276], "pickl": [5, 8, 97, 98, 234, 257, 276], "latter": [5, 43, 124], "conveni": [5, 16, 213, 219, 220, 230, 234, 257, 258, 270, 276, 282], "tab": [5, 276], "explicitli": [5, 7, 127, 224, 227, 228, 234, 238, 257, 258, 276], "select": [5, 8, 112, 234, 238, 257], "edit": [5, 7, 238, 257, 276], "steps_to_run": [5, 43, 100, 234, 236, 257, 258], "full_run": [5, 17, 253, 269, 279], "restart_run": [5, 17, 253, 269, 279], "Or": [5, 234, 258], "accomplish": [5, 234, 237], "thing": [5, 120, 121, 122, 123, 124, 125, 127, 230, 234, 237, 256, 281], "take": [5, 6, 7, 11, 13, 14, 49, 124, 127, 230, 234, 235, 236, 238, 257, 270, 281], "preced": [5, 49, 127], "over": [5, 9, 14, 49, 111, 234, 236, 237, 256, 257, 266, 269, 274, 276], "intern": [5, 11, 21, 234, 238, 254], "shouldn": [5, 124, 205, 257], "special": [5, 255, 275], "databas": [5, 6, 8, 11, 16, 19, 21, 34, 36, 131, 234, 263], "polaris_cach": [5, 8, 19, 234], "structur": [5, 13, 27, 134, 233, 236, 256, 257], "without": [5, 36, 234, 237, 238, 257, 258, 262, 263, 272, 273, 275, 276], "redund": [5, 213, 219, 220, 224, 230, 257], "stamp": 5, "revis": [5, 258], "older": 5, "ones": [5, 213, 219, 220, 237, 257], "version": [5, 6, 15, 29, 49, 85, 110, 124, 221, 224, 230, 231, 232, 234, 236, 237, 238, 250, 256, 257, 258, 263, 264, 267, 269, 270, 276, 277], "updat": [5, 7, 8, 21, 23, 25, 30, 31, 40, 41, 106, 123, 124, 133, 205, 221, 224, 225, 227, 228, 234, 250, 254, 256, 257, 276], "cached_fil": [5, 19, 234], "json": [5, 8, 19, 47, 234, 264], "anvil": [5, 6, 124, 234, 258, 263, 276], "chrysali": [5, 6, 124, 234, 257, 258, 263, 276], "onto": [5, 238], "lcrc": [5, 6, 8, 11, 47, 234, 237, 258, 259, 261, 263, 276], "server": [5, 8, 36, 47, 234, 237, 258, 264], "d": [5, 18, 112, 179, 193, 213, 219, 220, 223, 234, 257, 274], "whose": [5, 234], "ocean_cached_fil": 5, "pr": [5, 6, 276, 281], "look": [5, 6, 7, 11, 17, 236, 237, 257, 258], "someth": [5, 7, 87, 91, 94, 124, 238, 257], "msh": [5, 13], "230914": 5, "nc": [5, 11, 12, 13, 14, 16, 17, 18, 86, 127, 129, 224, 234, 237, 257], "cellwidthvslatlon": [5, 13], "graph": [5, 21, 28, 30, 40, 76, 131, 224, 227, 228, 234, 257, 258], "info": [5, 12, 14, 21, 28, 76, 124, 131, 234, 257], "initial_st": [5, 17, 18, 127, 224, 234, 257], "date_str": [5, 47], "let": [5, 234, 238, 255, 257, 258, 264], "string": [5, 9, 36, 90, 96, 124, 127, 136, 238], "choos": [5, 234, 237, 238, 257, 259, 260, 261, 262, 264, 282], "todai": [5, 47], "dry_run": [5, 47], "saniti": [5, 257], "check": [5, 6, 17, 110, 234, 238, 257, 258, 260, 264, 276, 281], "print": [5, 12, 17, 55, 110, 115, 234, 237, 281], "stdout": [5, 12, 34, 43, 234, 236], "translat": [5, 27, 127, 134], "convert": [5, 9, 13, 14, 127, 136, 234, 257], "namelist": [5, 7, 8, 10, 21, 22, 23, 26, 27, 29, 30, 33, 42, 103, 104, 109, 118, 119, 131, 134, 135, 143, 146, 149, 154, 221, 224, 227, 228, 230, 231, 234, 236, 237, 250, 251, 253, 256, 257, 258, 274], "stream": [5, 7, 8, 10, 21, 24, 26, 29, 42, 113, 118, 119, 135, 143, 146, 149, 154, 221, 223, 224, 225, 227, 228, 229, 230, 231, 234, 236, 237, 250, 253, 258, 275, 280], "yaml": [5, 10, 21, 22, 25, 26, 27, 124, 129, 131, 134, 135, 143, 149, 224, 225, 227, 228, 229, 230, 231, 234, 236, 256, 257, 260, 264], "e": [5, 6, 7, 11, 14, 27, 34, 35, 45, 58, 113, 124, 127, 130, 134, 221, 230, 232, 234, 235, 236, 237, 238, 250, 254, 255, 256, 257, 258, 264, 266, 269, 270, 272, 273, 274, 275, 276, 280, 282], "g": [5, 6, 7, 11, 14, 27, 34, 35, 45, 58, 113, 124, 127, 130, 134, 221, 230, 232, 234, 235, 236, 237, 238, 250, 254, 255, 256, 257, 258, 266, 269, 270, 272, 273, 274, 275, 276, 280], "don": [5, 6, 7, 14, 124, 127, 234, 236, 237, 238, 257, 262, 276, 282], "format": [5, 7, 11, 13, 14, 113, 119, 136, 235, 236, 238, 257, 258, 260], "note": [5, 7, 16, 17, 257, 264], "keyword": [5, 7, 14, 17, 18, 225, 234, 270], "top": [5, 18, 213, 214, 215, 216, 217, 218, 219, 220, 223, 232, 257, 266], "ignor": [5, 90, 96], "get": [5, 6, 7, 9, 11, 12, 14, 16, 21, 22, 23, 24, 25, 34, 43, 44, 48, 53, 61, 81, 92, 99, 124, 127, 131, 230, 233, 234, 236, 237, 238, 255, 258, 266, 276], "pars": [5, 9, 14, 22, 23, 24, 25, 78, 105, 107], "valu": [5, 7, 9, 14, 17, 18, 22, 27, 110, 111, 112, 115, 129, 134, 150, 224, 231, 234, 236, 237, 256, 257, 258, 266, 269, 270, 274], "doesn": [5, 6, 119, 124, 234, 236, 257, 258, 263, 276], "matter": [5, 257], "usabl": 5, "try": [6, 14, 52, 124, 237, 238, 254, 257, 258, 260, 264, 276], "stai": [6, 238], "sync": 6, "mpi": [6, 14, 16, 86, 120, 123, 124, 131, 133, 135, 224, 227, 228, 234, 238, 254, 256, 257, 259, 260, 261, 262, 264, 276], "librari": [6, 14, 120, 124, 238, 257, 259, 260, 261, 262, 263, 264, 276], "netcdf": [6, 124, 137, 229, 258, 259, 260, 261, 262, 263, 264], "fortran": [6, 124, 259, 260, 261, 262, 263, 264], "pnetcdf": [6, 124, 259, 260, 261, 262, 263, 264], "mkl": [6, 124], "linear": [6, 18, 111, 112, 225, 227, 257, 269, 270, 272], "algebra": 6, "lib": [6, 124], "esmf": [6, 238, 276], "scorpio": [6, 238, 263, 276], "forg": [6, 124, 256, 276], "python": [6, 7, 8, 9, 22, 40, 45, 127, 230, 232, 234, 236, 237, 238, 255, 256, 257, 258, 263, 264, 276], "aren": [6, 11, 34, 35, 124, 234, 237, 238, 257, 281], "brief": [6, 7, 257], "tour": 6, "login": [6, 124, 238, 260, 264], "node": [6, 14, 21, 33, 34, 38, 41, 53, 81, 82, 83, 124, 131, 234, 235, 237, 238, 257, 258, 259, 260, 261, 262, 263, 264, 276], "bootstrap": 6, "rest": [6, 137, 218, 266, 270], "u": [6, 234, 257, 263, 264, 272, 273], "unifi": [6, 124, 238, 264], "diagnost": [6, 258, 259, 260, 262, 263, 264, 276], "e3sm_diag": 6, "zppy": 6, "know": [6, 9, 11, 13, 127, 234, 236, 237, 238, 257], "cach": [6, 19, 21, 34, 36, 103, 104, 131, 256, 258, 263, 268, 276, 281], "own": [6, 7, 8, 11, 12, 18, 34, 124, 127, 234, 236, 237, 238, 255, 257, 258, 270, 276, 282], "config_machin": 6, "xml": [6, 14, 105, 107, 108, 119, 250], "ey": 6, "master": [6, 221, 250, 277], "happen": [6, 9, 12, 16, 98, 234, 257, 270], "me": [6, 257], "dev_quick_start": 6, "fork": [6, 257], "haven": [6, 257], "mkdir": [6, 238], "involv": [6, 14, 234, 255, 257], "coupl": [6, 254, 256], "alpha": [6, 120, 121, 122, 123, 124, 125, 257], "beta": 6, "rc": 6, "simplify_local_mach": 6, "often": [6, 17, 18, 34, 127, 230, 232, 234, 235, 236, 237, 238, 257, 258, 281, 282], "stand": 6, "omit": [6, 234, 276], "suffix": [6, 36, 104, 234], "onc": [6, 14, 37, 224, 238, 257, 258, 270, 276], "releas": [6, 124, 237, 256, 263, 267, 276], "spack_for_mache_1": 6, "12": [6, 13, 61, 253, 257, 260, 279], "worktre": [6, 256, 257], "my": [6, 124, 260], "fetch": [6, 238, 257], "out": [6, 8, 13, 80, 84, 112, 124, 129, 232, 234, 237, 238, 258, 266, 276], "checkout": [6, 238, 257], "mambaforg": [6, 238, 257, 263, 276], "manual": [6, 14, 43, 44, 234, 236, 282], "linux": [6, 124, 238, 263], "x86_64": [6, 124], "our": [6, 124, 237, 257, 276], "found": [6, 9, 14, 114, 124, 237, 238, 256, 257, 259, 260, 261, 262, 263, 264], "exist": [6, 7, 9, 27, 34, 37, 52, 105, 107, 109, 124, 134, 224, 234, 236, 237, 238, 254, 257, 263, 281], "miniconda3": [6, 238], "alwai": [6, 7, 9, 12, 49, 124, 127, 221, 231, 234, 236, 237, 238, 250, 255, 257, 258], "pleas": [6, 124, 231, 237, 238, 257, 276], "start": [6, 7, 8, 14, 106, 124, 223, 224, 230, 235, 236, 237, 256, 260, 263, 264, 267, 277, 279], "definit": [6, 14, 257], "defin": [6, 7, 8, 13, 14, 15, 18, 34, 43, 66, 90, 96, 103, 104, 109, 124, 127, 162, 176, 190, 221, 223, 224, 225, 227, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 242, 250, 251, 253, 255, 256, 258, 263, 266, 269, 270, 274, 281, 282], "export": [6, 254], "conda_bas": 6, "home": [6, 17, 124, 238, 257, 258, 260, 263, 264], "readi": [6, 257, 264], "configure_polaris_env": [6, 124, 238, 254, 257], "py": [6, 12, 14, 17, 58, 124, 230, 231, 237, 238, 255, 257, 258], "mache_fork": 6, "mache_branch": 6, "update_spack": [6, 124, 238], "tmpdir": [6, 124], "group": [6, 7, 230, 256, 259, 261, 263, 264, 275, 276, 282], "spack_temp": 6, "spack_test": 6, "intel": [6, 124, 263], "gnu": [6, 124, 238, 262, 263, 276], "openmpi": [6, 120, 124, 238, 256, 259, 261, 262, 276], "impi": [6, 120, 124, 259, 262], "recreat": [6, 238, 254], "request": [6, 7, 14, 21, 28, 30, 124, 129, 131, 214, 215, 234, 237, 238, 254, 257, 258, 270], "twice": [6, 257], "deploy": [6, 238], "prebootstrap": 6, "load": [6, 98, 121, 124, 125, 238, 256, 257, 258, 259, 260, 261, 262, 263, 264], "activ": [6, 124, 263, 264, 276], "differ": [6, 14, 16, 17, 49, 63, 68, 110, 124, 127, 138, 141, 150, 221, 224, 230, 231, 232, 234, 235, 236, 237, 250, 255, 257, 258, 260, 264, 269, 270, 272, 273, 275, 280], "On": [6, 7, 13, 124, 238, 263], "tmp": [6, 124], "safe": [6, 14, 234, 238, 269], "strictli": [6, 13, 237, 257], "necessari": [6, 7, 13, 124, 257], "good": [6, 12, 34, 234, 238, 257], "idea": [6, 12, 257], "Be": [6, 264], "awar": [6, 7, 124, 257, 263], "with_petsc": [6, 238], "wa": [6, 8, 50, 110, 124, 234, 236, 237, 238, 254, 255, 257, 258, 266, 276], "limit": [6, 235, 238, 269], "amount": [6, 21, 31, 34, 41, 131, 234, 265, 274], "team": [6, 124, 256], "petsc_support": 6, "txt": [6, 8, 109, 235, 254], "with_albani": [6, 238], "albany_support": 6, "encount": [6, 235, 254], "error": [6, 8, 34, 43, 124, 127, 164, 225, 227, 228, 234, 236, 238, 256, 257, 272, 273], "dev_polaris_0_2_0_gnu_mpich": 6, "armpl": 6, "dure": [6, 8, 11, 14, 17, 26, 34, 43, 143, 149, 168, 184, 198, 234, 236, 237, 238, 257, 258, 276, 281, 282], "attempt": [6, 124, 256, 263], "sh": [6, 120, 121, 122, 123, 124, 125, 238, 254, 257, 259, 260, 261, 262, 264, 276], "build_": 6, "command": [6, 10, 15, 32, 34, 40, 82, 83, 85, 93, 124, 234, 237, 238, 255, 256, 257, 260, 263, 264, 276], "pscratch": 6, "suggest": [6, 124, 254], "correctli": 6, "seem": [6, 14, 257, 260, 264], "switch": [6, 257, 258], "v0": 6, "19": 6, "submodul": [6, 221, 231, 238, 250, 257, 276], "serv": [6, 103, 104, 109, 127, 230, 257], "kind": [6, 257], "whichev": [6, 221, 250, 266], "load_dev_polaris_0": [6, 120, 121, 122, 123, 124, 125, 257], "0_chrysalis_intel_openmpi": 6, "recurs": [6, 221, 237, 238, 250, 257, 276], "pio": [6, 21, 30, 33, 131, 224, 227, 228], "openmp": [6, 21, 31, 34, 41, 83, 120, 122, 123, 131, 141, 182, 196, 205, 234, 257, 259, 260, 261, 262, 264], "ifort": [6, 120, 122, 124, 257, 259, 261], "ac": [6, 257], "test_20230202": 6, "ocean_pr_chrys_intel_openmpi": 6, "sbatch": [6, 257, 263, 276], "job_script": [6, 257, 276], "bash": [6, 238, 254, 257, 276], "termin": [6, 8, 124, 234, 238, 257], "isn": [6, 9, 225, 234, 237, 257], "ll": [6, 18, 124, 225, 237, 257, 264, 270], "warn": [6, 270, 272, 273], "0_chrysalis_gnu_openmpi": 6, "e3sm_chrys_gnu_openmpi": 6, "gfortran": [6, 120, 122, 123, 124, 238, 259, 261], "ocean_pr_chrys_gnu_openmpi": 6, "explor": [6, 230, 234, 257, 266], "util": [6, 237, 273], "matrix": 6, "sever": [6, 12, 124, 127, 230, 234, 236, 237, 238, 256, 257, 275, 276, 281], "automat": [6, 7, 9, 12, 14, 18, 124, 127, 234, 237, 238, 257, 258, 259, 261, 262, 263, 264, 276], "0_chrysalis_gnu_openmpi_albani": 6, "full_integr": [6, 276], "landice_full_chrys_gnu_openmpi": 6, "nonhydrostat": 6, "yet": [6, 123, 124, 127, 234, 237, 257], "integr": [6, 127, 150, 224, 237, 257, 269, 270, 275, 280], "sara": 6, "calandrini": 6, "nonhydro": 6, "0_chrysalis_intel_openmpi_petsc": 6, "scalandr": 6, "nonhydro_chrys_intel_openmpi": 6, "grep": [6, 260, 276], "245": 6, "246": 6, "non": [6, 14, 17, 223, 234, 257, 276], "care": [6, 11, 13, 127, 230, 234, 238, 257], "temporari": [6, 124], "begin": [6, 7, 17, 224, 234, 238, 251, 256, 257, 263, 269, 270, 274], "anymor": 6, "best": [6, 16, 124, 234, 238], "hard": [6, 234, 257, 269, 274], "reset": 6, "sphinx": 7, "written": [7, 8, 34, 43, 54, 111, 112, 129, 234, 236, 257, 279], "myst": [7, 257], "tip": [7, 238], "easi": [7, 36, 237, 257], "pull": [7, 124, 237, 238, 257, 258], "guid": [7, 127, 224, 225, 227, 228, 229, 235, 237, 257, 260, 263, 267, 277], "baroclin": [7, 9, 14, 138, 139, 140, 141, 144, 147, 150, 152, 155, 156, 158, 205, 224, 231, 234, 257, 267, 271, 282], "channel": [7, 9, 14, 138, 139, 140, 141, 144, 147, 150, 152, 155, 156, 158, 205, 224, 231, 234, 254, 257, 267, 271, 282], "label": [7, 111, 263, 276], "prepend": 7, "categori": [7, 231, 232, 233, 256, 282], "uniqu": [7, 14, 124, 236, 257], "And": [7, 14, 238, 257], "becom": [7, 234, 236, 257], "who": [7, 238, 257, 258, 264], "citat": 7, "basi": [7, 257], "overview": [7, 256, 260, 264], "common": [7, 9, 12, 14, 40, 43, 124, 224, 225, 227, 228, 229, 230, 234, 235, 236, 237, 254, 255, 257, 258, 263, 264, 275, 276, 280, 281, 282], "characterist": [7, 275, 280], "comment": [7, 235, 236, 258], "appli": [7, 13, 14, 55, 223, 230, 257, 269, 274, 275, 280], "vertic": [7, 18, 204, 223, 224, 225, 227, 228, 229, 234, 258, 265, 267], "grid": [7, 13, 16, 60, 67, 71, 74, 86, 87, 88, 89, 90, 91, 92, 94, 95, 96, 127, 171, 211, 212, 213, 214, 215, 216, 219, 220, 224, 225, 227, 228, 229, 234, 251, 257, 258], "forc": [7, 229, 253, 257, 282], "specif": [7, 9, 14, 45, 124, 127, 221, 230, 231, 232, 234, 250, 251, 256, 257, 258, 260, 263, 269, 275, 276, 280, 281], "public": [7, 11, 234, 257, 258], "api": [7, 12, 256, 257], "underscor": [7, 257], "md": [7, 257], "eval": 7, "rst": [7, 14, 257], "currentmodul": 7, "autosummari": 7, "toctre": 7, "add_baroclinic_channel_task": [7, 231, 237], "compute_cell_count": [7, 127, 224, 227, 228, 257], "dynamic_model_config": [7, 14, 224, 227, 228, 257], "ot": [7, 257], "numpydoc": [7, 257], "text": [7, 8, 269, 270, 274], "restructuredtext": 7, "compute_land_ice_pressure_and_draft": 7, "ssh": [7, 127, 213, 215, 216, 217, 218, 219, 220, 221, 227, 228, 234, 257, 258, 260, 264, 272, 273], "modifysshmask": 7, "ref_dens": 7, "pressur": [7, 221, 258, 272, 273], "overli": [7, 257], "ic": [7, 127, 221, 236, 237, 238, 251, 253, 256, 257, 258, 260, 266, 279, 282], "shelf": [7, 127, 230, 237, 257, 258, 266], "draft": [7, 266], "paramet": [7, 13, 14, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 31, 34, 35, 36, 37, 38, 41, 43, 44, 47, 50, 52, 53, 54, 55, 58, 59, 61, 62, 63, 66, 71, 72, 74, 76, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 109, 110, 111, 112, 114, 115, 116, 118, 119, 127, 129, 130, 131, 134, 136, 137, 139, 140, 141, 143, 144, 147, 148, 149, 150, 152, 155, 156, 158, 160, 163, 164, 166, 168, 169, 171, 173, 175, 177, 179, 180, 181, 182, 184, 185, 187, 189, 191, 193, 194, 195, 196, 198, 199, 201, 205, 207, 209, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 227, 228, 230, 234, 236, 242, 243, 244, 246, 247, 248, 269, 270, 272, 273, 274], "xarrai": [7, 16, 18, 112, 213, 214, 215, 216, 217, 218, 219, 220, 234, 257], "dataarrai": [7, 179, 180, 181, 193, 194, 195, 214, 215, 216, 217, 218], "sea": [7, 127, 179, 181, 193, 195, 215, 216, 217, 218, 221, 251, 253, 256, 257, 258, 266, 272, 273, 279, 282], "surfac": [7, 127, 179, 181, 193, 195, 215, 216, 217, 218, 221, 223, 229, 253, 257, 258, 266, 269, 272, 273, 274], "height": [7, 127, 179, 181, 193, 195, 215, 216, 217, 218, 221, 257, 258, 266, 272, 273], "mask": [7, 213, 216, 219, 220, 234, 257, 258, 266], "landicepressur": 7, "deviat": 7, "float": [7, 9, 14, 22, 59, 61, 62, 66, 71, 91, 110, 112, 127, 129, 130, 136, 139, 140, 141, 144, 147, 150, 152, 155, 160, 163, 164, 166, 177, 179, 180, 181, 182, 185, 187, 189, 191, 193, 194, 195, 196, 199, 201, 205, 234, 257], "densiti": [7, 13, 127, 257], "seawat": 7, "displac": 7, "land": [7, 127, 221, 236, 256, 257, 258, 266], "landicedraft": 7, "equal": [7, 229, 234, 237, 274], "entri": [7, 46, 79, 104], "line": [7, 10, 32, 34, 82, 83, 93, 124, 234, 235, 237, 238, 256, 276], "type": [7, 14, 16, 17, 18, 22, 88, 95, 119, 124, 127, 204, 206, 225, 230, 234, 236, 237, 238, 250, 254, 255, 257, 258, 269, 270, 272, 273, 274, 275, 281], "side": 7, "colon": 7, "doubl": [7, 14, 127, 234, 235, 257], "back": [7, 236, 257, 260, 276], "quot": 7, "interfer": 7, "arg": [7, 12, 34, 82, 83, 234], "next": [7, 124, 224, 228, 257, 266, 276], "indent": [7, 234], "obviou": [7, 14, 257], "none": [7, 9, 14, 17, 21, 24, 25, 31, 34, 35, 36, 37, 41, 43, 44, 47, 50, 54, 55, 57, 59, 66, 72, 76, 85, 86, 87, 90, 91, 94, 96, 100, 104, 105, 109, 110, 111, 112, 114, 118, 127, 129, 131, 132, 136, 141, 142, 167, 182, 183, 193, 196, 197, 205, 234, 236, 246, 257, 266, 269, 270, 272, 273, 274, 275, 279], "els": [7, 8, 124, 234, 236, 257], "further": [7, 230, 236, 264, 275, 280], "rais": [7, 9, 17, 34, 37, 50, 52, 127, 234, 237, 257], "list_cas": 8, "list_machin": [8, 237], "list_suit": 8, "anywher": [8, 12, 124, 238], "object": [8, 12, 16, 23, 24, 25, 44, 78, 97, 98, 101, 105, 113, 114, 118, 119, 129, 179, 193, 231, 236, 237, 257], "contrast": 8, "read": [8, 19, 23, 24, 25, 34, 35, 43, 51, 77, 78, 113, 223, 234, 236, 257], "properti": [8, 223, 234, 263, 270], "setup_suit": 8, "write": [8, 12, 13, 15, 18, 97, 113, 212, 234, 236, 238, 253, 257], "proven": [8, 10, 49, 256, 258], "save": [8, 18, 50, 74, 124, 224, 230, 234, 236, 257, 263, 268, 269], "target": [8, 11, 16, 17, 21, 36, 52, 54, 86, 124, 127, 131, 224, 227, 228, 234, 236, 257, 270], "minimum": [8, 54, 112, 127, 131, 224, 227, 228, 234, 257, 258, 266, 269, 270, 272, 273, 274, 275, 280], "determin": [8, 13, 14, 18, 36, 40, 119, 124, 127, 135, 224, 225, 227, 228, 234, 257, 266, 269, 270, 272, 273, 275, 276, 280], "maximum": [8, 17, 110, 112, 257, 258, 266], "product": 8, "ntask": [8, 14, 16, 21, 31, 34, 38, 41, 82, 83, 86, 127, 131, 141, 182, 196, 205, 234, 236, 257], "cpus_per_task": [8, 14, 34, 38, 41, 82, 83, 234], "quickli": 8, "caveat": 8, "sit": 8, "idl": 8, "fraction": [8, 257, 266, 269, 270, 272, 273, 274, 275], "min_task": [8, 14, 16, 21, 31, 34, 41, 82, 83, 86, 127, 131, 141, 182, 196, 205, 234, 257], "min_cpus_per_task": [8, 14, 34, 41, 82, 83, 234], "fewest": 8, "least": [8, 13, 231, 238, 269], "fail": [8, 14, 17, 21, 31, 34, 41, 50, 124, 131, 141, 182, 196, 205, 234, 256, 257, 258, 270, 272, 273], "run_task": [8, 234, 236], "run_single_step": 8, "oper": [8, 42, 124, 146, 154, 234, 236, 281], "log": [8, 10, 18, 34, 43, 83, 110, 111, 112, 234, 236, 238, 256, 276], "figur": [8, 229, 230, 232, 234, 258], "cpu": [8, 124, 234, 257, 276], "method": [8, 9, 13, 14, 16, 17, 19, 21, 26, 27, 34, 35, 39, 40, 43, 44, 45, 49, 58, 59, 63, 66, 67, 68, 72, 73, 86, 92, 113, 127, 128, 129, 131, 134, 139, 140, 141, 143, 144, 147, 148, 149, 150, 152, 155, 156, 158, 160, 163, 166, 168, 169, 171, 173, 174, 175, 177, 179, 182, 184, 185, 187, 189, 190, 191, 193, 196, 198, 199, 201, 204, 205, 206, 207, 209, 225, 227, 228, 231, 234, 236, 237, 241, 243, 244, 246, 247, 248, 257, 270, 275, 280], "retriev": [8, 254], "store": [8, 45, 124, 127, 227, 228, 234, 236, 257, 276], "case_output": [8, 12], "individu": [8, 9, 18, 231, 236, 237, 257, 263, 264, 269, 276, 282], "overal": 8, "whole": [8, 43, 137, 230, 236, 237, 257, 276], "window": 8, "update_cach": 8, "_cached_fil": [8, 234], "origin": [8, 47, 238, 257, 276], "enabl": [8, 18, 229, 234, 254, 258, 264, 272, 273], "consum": [8, 234, 236, 257, 281], "faster": [8, 238], "parser": [9, 49], "mpas_tool": [9, 12, 13, 71, 224, 227, 228, 229, 234, 257], "mpasconfigpars": 9, "polarisconfigpars": [9, 34, 43, 50, 53, 54, 81, 84, 85, 101, 111, 179, 193, 211, 213, 214, 215, 219, 220, 236, 257], "certain": [9, 17, 49, 124, 234, 238, 258, 275, 280], "add_from_packag": [9, 127, 236, 237, 257], "content": [9, 14, 104, 105, 107, 109, 119, 127, 230, 232, 234, 237, 253, 257, 276, 279], "cfg": [9, 45, 127, 231, 236, 237, 257, 258, 276], "except": [9, 34, 37, 50, 234, 237, 257], "behavior": [9, 14, 100, 234, 235, 236, 238, 257], "noth": [9, 124, 254, 270], "particular": [9, 124, 230, 238, 256, 260, 263, 276], "fine": [9, 236, 257, 274], "larg": [9, 234, 236, 257, 259], "those": [9, 14, 43, 110, 124, 224, 236, 237, 238, 256, 257, 270, 275, 280, 281], "configpars": [9, 82, 83], "getinteg": 9, "getfloat": [9, 12, 14, 16, 127, 234, 257], "getboolean": [9, 234, 257], "implement": [9, 231, 234, 237, 269, 270, 272, 273], "getlist": [9, 236, 257], "comma": [9, 270], "integ": [9, 13], "boolean": [9, 112, 216], "etc": [9, 14, 106, 109, 231, 234, 269], "getexpress": 9, "tupl": 9, "rang": [9, 112, 257, 270], "numpi": [9, 13, 60, 67, 68, 74, 111, 127, 137, 211, 212, 234, 257], "linspac": [9, 18, 225, 270], "arang": 9, "arrai": [9, 60, 67, 68, 74, 111, 127, 211, 212, 214, 215, 216, 217, 257], "One": [9, 13, 257, 276, 281], "advantag": [9, 14, 124, 236, 237, 257, 263], "track": [9, 21, 234, 236, 238], "associ": [9, 13, 14, 18, 127, 213, 219, 220, 224, 234, 236, 238, 255], "while": [10, 16, 18, 223, 224, 234, 254, 257], "meant": [10, 237, 258], "simplifi": 10, "verifi": [10, 235, 258], "io": [10, 234, 236, 237, 256, 257, 258, 267, 277], "lot": [11, 127, 234, 237, 257], "o": [11, 12, 105, 107, 119, 124, 237, 238, 257, 258, 276], "handl": [11, 12, 238, 257, 263], "lower": [11, 236, 257, 269], "directli": [11, 13, 14, 16, 34, 232, 234, 237, 255, 256, 257, 260], "readm": [11, 236], "importlib": 11, "resourc": [11, 14, 31, 38, 41, 51, 81, 82, 83, 132, 142, 167, 183, 197, 205, 224, 227, 228, 234, 236, 257], "import": [11, 12, 13, 16, 17, 18, 127, 230, 231, 234, 236, 237, 238, 255, 257], "global_ocean": [11, 14, 234, 236, 237, 238, 258, 276], "files_for_e3sm": [11, 234, 236, 258], "str": [11, 14, 19, 21, 22, 23, 24, 25, 28, 34, 35, 36, 37, 43, 44, 47, 50, 52, 53, 54, 55, 59, 66, 72, 76, 78, 82, 83, 85, 86, 87, 88, 89, 90, 91, 94, 95, 96, 100, 101, 102, 103, 104, 105, 109, 110, 111, 112, 113, 114, 116, 118, 119, 127, 129, 130, 131, 136, 137, 139, 140, 141, 144, 147, 148, 150, 152, 155, 156, 158, 163, 164, 166, 169, 171, 173, 177, 182, 185, 187, 191, 196, 199, 201, 205, 207, 209, 212, 234, 236, 244, 246, 248, 257], "did": [11, 255, 257], "add_input_fil": [11, 16, 17, 35, 234, 236, 257], "collect": [11, 89, 128, 231, 233, 241, 255, 257], "whenev": [11, 234, 257], "flexibl": [11, 127, 234, 236, 238, 257], "No": [11, 256, 272, 273], "step_dir": 11, "database_root": [11, 124, 234, 258, 259, 260, 261, 262, 263, 264, 276], "download_path": 11, "join": [11, 257], "bathymetry_databas": [11, 234, 258], "remote_filenam": 11, "bedmachineantarctica_and_gebco_2019_0": 11, "05_degre": 11, "200128": 11, "local_filenam": 11, "topographi": [11, 216, 230, 234, 257, 266, 269, 270, 272, 273, 274, 275, 282], "url": [11, 36, 50, 234, 254, 258], "web": [11, 234, 258], "anl": [11, 234, 258], "gov": [11, 234, 254, 258, 260, 264], "mpas_standalonedata": [11, 124, 258, 263], "dest_path": [11, 50], "remot": [11, 36, 238, 256], "bathymetri": [11, 234, 258], "strategi": 12, "stderr": [12, 34, 43, 234, 236], "loggingcontext": 12, "check_cal": [12, 234], "most": [12, 40, 124, 221, 230, 231, 234, 237, 238, 250, 257, 258, 263, 264, 266, 267, 277, 282], "won": [12, 237, 257, 258], "logger": [12, 17, 34, 43, 58, 83, 110, 234, 236, 257], "full": [12, 34, 82, 100, 214, 215, 224, 234, 236, 238, 253, 256, 257, 263, 266, 268, 269, 270, 272, 273, 274, 275, 276], "although": [12, 127], "captur": 12, "explicit": [12, 237], "go": [12, 207, 209, 230, 234, 236, 237, 238, 257, 264], "subprocess": [12, 34, 82, 83, 99, 234, 237, 254], "produc": [12, 14, 16, 18, 34, 35, 37, 47, 127, 139, 147, 155, 224, 225, 227, 228, 229, 234, 237, 238, 243, 253, 257, 272, 273, 276, 279], "otherwis": [12, 124, 234, 236, 257, 259, 260, 261, 262, 263, 264, 269], "intent": 12, "desir": [12, 13, 14, 17, 18, 110, 127, 234, 235, 236, 257, 258, 276], "trick": [12, 234], "direct": [12, 13, 14, 71, 179, 193, 224, 227, 228, 257, 264, 269, 272, 273], "snippet": [12, 257], "dome": [12, 58, 230, 234, 236, 276, 282], "setup_mesh": [12, 234], "setupmesh": [12, 234, 236], "create_landice_grid_from_generic_mpas_grid": 12, "mpas_grid": [12, 234], "landice_grid": [12, 234, 257], "l": [12, 110, 257, 264], "quasiuniformsphericalmeshstep": [13, 127, 236], "icosahedralmeshstep": [13, 127, 236], "jigsaw": [13, 59, 63, 65, 66, 68, 70, 72, 160, 163, 234], "complex": [13, 67, 236, 237, 257], "build_cell_width_lat_lon": [13, 66], "opt": [13, 72], "make_jigsaw_mesh": [13, 66], "icosahedr": [13, 59, 61, 130, 160, 163, 225, 236, 270], "significantli": [13, 266], "smooth": 13, "cell": [13, 14, 18, 59, 60, 61, 62, 66, 67, 68, 71, 74, 88, 95, 127, 131, 132, 142, 164, 167, 179, 181, 183, 193, 195, 197, 213, 214, 215, 216, 219, 220, 224, 227, 228, 230, 251, 266, 269, 270, 272, 273, 274, 275, 279], "quasi": [13, 66, 225, 236, 258, 270, 275, 280], "hand": [13, 91, 237], "restrict": [13, 257, 275], "subdivis": [13, 59, 60, 61, 62, 63], "icosahedron": [13, 60, 61, 62, 63], "tabl": [13, 238, 263, 276], "approxim": [13, 59, 61, 62, 66, 127, 132, 142, 167, 183, 197, 224, 227, 228, 238, 257], "width": [13, 59, 60, 61, 66, 67, 68, 74, 257, 269], "km": [13, 14, 59, 60, 61, 62, 66, 67, 68, 71, 74, 127, 129, 130, 139, 140, 141, 144, 147, 148, 150, 152, 155, 166, 182, 185, 189, 196, 199, 224, 225, 227, 228, 234, 236, 257, 258, 269, 270, 272, 273, 274, 275, 280, 282], "5": [13, 14, 61, 124, 127, 150, 224, 225, 234, 235, 237, 254, 257, 258, 269, 270, 275, 276, 280], "240": [13, 61, 127, 225, 236, 258, 270], "6": [13, 61, 234, 257, 267, 269, 274, 276, 277], "120": [13, 61, 127, 235, 236, 270], "7": [13, 61, 124, 257, 264, 270, 276], "60": [13, 61, 127, 225, 236, 266, 270], "8": [13, 61, 124, 224, 238, 257, 258, 269, 270, 272, 273, 276], "30": [13, 14, 61, 127, 230, 257, 264, 269, 274, 275, 280], "9": [13, 18, 61, 124, 225, 257, 270, 276], "15": [13, 14, 61, 224, 257, 269, 270, 274, 275, 276, 280], "11": [13, 61, 124, 257, 276], "3": [13, 61, 124, 127, 224, 234, 235, 238, 254, 257, 258, 263, 264, 266, 269, 270, 272, 273, 275, 276], "13": [13, 61, 257, 269], "94": [13, 61], "spherical_mesh": [13, 67], "cell_width": [13, 59, 60, 61, 62, 66, 67, 68, 74], "icosahedral_method": 13, "jigsaw_mesh_filenam": 13, "jigsaw_geom_filenam": 13, "geom": 13, "jigsaw_jcfg_filenam": 13, "jig": 13, "jigsaw_hfun_filenam": 13, "spac": 13, "triangles_filenam": 13, "mesh_triangl": 13, "mpas_mesh_filenam": 13, "plot": [13, 74, 111, 112, 127, 152, 158, 171, 209, 224, 225, 227, 228, 248, 270, 272, 273, 279, 282], "plot_cell_width": 13, "cell_width_filenam": [13, 74], "cell_width_image_filenam": 13, "cellwidthglob": 13, "cell_width_colormap": 13, "3wbgy5": 13, "add_mesh_dens": 13, "vtk": 13, "convert_to_vtk": 13, "vtk_dir": 13, "base_mesh_vtk": 13, "extract": 13, "lat": [13, 16, 60, 66, 67, 68, 74, 87, 89, 91, 94, 111, 171, 225, 258, 270], "lon": [13, 16, 60, 66, 67, 68, 74, 87, 89, 91, 94, 111, 171, 225, 258, 270], "sphere": [13, 225, 270], "vtk_lat_lon": 13, "far": [13, 124, 213, 219, 220, 237, 257], "But": [13, 124, 230, 234, 237, 238, 257, 258, 263], "hexagon": [13, 71, 257, 272, 273], "planar_hex": [13, 71, 224, 227, 228, 229, 234, 257], "make_planar_hex_mesh": [13, 71, 224, 227, 228, 229, 234, 257], "x": [13, 18, 60, 67, 68, 71, 74, 90, 96, 112, 137, 179, 193, 234, 257, 269, 272, 273, 274], "y": [13, 14, 18, 71, 90, 96, 112, 179, 193, 224, 227, 228, 234, 257, 264, 269, 272, 273], "nx": [13, 71, 230, 234, 257, 274], "ny": [13, 71, 230, 234, 257, 274], "dc": [13, 230, 234, 257], "distanc": [13, 71, 257, 269], "adjac": [13, 266], "center": [13, 18, 71, 179, 193, 230, 257, 266, 269], "admittedli": 13, "oddli": 13, "period": [13, 223, 224, 227, 228, 234, 257, 269, 270, 272, 273], "nonperiodic_x": [13, 234, 257], "nonperiodic_i": [13, 234, 257], "consider": [13, 213, 219, 220, 223, 251], "compute_planar_hex_nx_ni": [13, 234, 257], "lx": [13, 71, 234, 257, 269, 272, 273, 274], "ly": [13, 71, 234, 257, 269, 274], "explan": 13, "subtleti": 13, "account": [13, 71, 238, 257, 259, 260, 262, 263, 264, 276], "behav": 13, "stagger": [13, 71], "physic": [13, 71, 247, 253, 257], "np": [13, 18, 225, 234, 257, 270], "sqrt": [13, 272], "domain": [13, 21, 28, 71, 112, 127, 131, 137, 223, 230, 251, 257, 269, 270, 272, 273, 274, 275, 280, 282], "extra": [13, 238], "factor": 13, "500e3": 13, "160e3": 13, "1e3": [13, 234, 257], "max": [13, 127, 234, 257, 269, 270], "int": [13, 14, 21, 22, 31, 34, 41, 53, 54, 55, 59, 60, 61, 62, 63, 71, 82, 83, 86, 112, 131, 132, 141, 142, 164, 167, 182, 183, 196, 197, 205, 234, 236, 257, 274], "ds_mesh": [13, 18, 112, 234, 257], "creation": [13, 234, 258], "build_mesh": 13, "build_planar_mesh": 13, "too": [13, 14, 21, 31, 34, 41, 82, 83, 131, 230, 234, 237, 257], "distant": 13, "descend": [14, 16, 127, 225, 230, 231, 234, 236, 237, 257], "modelstep": [14, 127, 234, 236, 257], "update_pio": [14, 21, 131], "make_graph": [14, 21, 131], "construct": [14, 128, 211, 213, 214, 215, 219, 220, 223, 229, 231, 236, 241, 257, 269], "At": [14, 34, 43, 232, 233, 236, 257], "set_model_resourc": 14, "thread": [14, 21, 31, 34, 40, 41, 43, 83, 131, 141, 182, 196, 205, 231, 234, 235, 255, 257, 258, 260, 264, 276, 281], "openmp_thread": [14, 21, 31, 34, 41, 83, 131, 141, 182, 196, 205, 234, 236, 257], "prefix": [14, 36, 124, 236, 238, 258], "end": [14, 129, 234, 236, 237, 238, 253, 255, 257, 260, 269, 270, 272, 273, 274, 279], "yml": 14, "reason": [14, 16, 40, 124, 234, 237, 257, 281], "add_namelist_fil": [14, 21, 127, 234, 236], "add_yaml_fil": [14, 21, 127, 234, 236, 257], "add_model_config_opt": [14, 21, 127, 234, 236, 257], "add_streams_fil": [14, 21, 127, 234, 236], "themselv": [14, 237, 256], "question": [14, 234, 258], "never": [14, 124, 255], "hierarch": 14, "run_mod": 14, "config_ocean_run_mod": 14, "time_manag": [14, 127, 257], "config_run_dur": [14, 127, 236, 257], "0024_00": 14, "ale_vertical_grid": 14, "config_vert_coord_mov": 14, "impermeable_interfac": 14, "decomposit": [14, 43, 139, 255, 257], "config_block_decomp_file_prefix": [14, 257], "time_integr": [14, 127, 257, 270], "config_time_integr": [14, 127], "rk4": [14, 127, 237, 270], "filename_templ": [14, 127, 257], "restart": [14, 17, 43, 127, 225, 227, 228, 229, 231, 235, 237, 243, 244, 253, 255, 257, 276, 281], "output_interv": [14, 127, 257, 270], "0030_00": 14, "clobber_mod": [14, 127, 257], "truncat": [14, 127, 257], "reference_tim": [14, 127], "0001": [14, 127, 257], "01_00": [14, 127, 251, 257], "tracer": [14, 18, 160, 206, 207, 209, 224, 225, 227, 228, 229, 257, 270, 272, 273, 274], "xtime": [14, 127, 257], "normalveloc": [14, 17, 18, 127, 157, 194, 223, 224, 227, 228, 229, 234, 257, 274], "layerthick": [14, 17, 127, 157, 213, 217, 218, 219, 220, 224, 227, 228, 229, 234, 257], "refzmid": [14, 213, 219, 220, 234, 257], "reflayerthick": 14, "kineticenergycel": 14, "relativevorticitycel": 14, "unlik": [14, 257], "clariti": [14, 234], "global_converg": [14, 225, 236, 257, 268], "substitut": 14, "config_write_output_on_startup": [14, 257], "0000_00": [14, 257], "config_use_mom_del2": [14, 257], "config_implicit_bottom_drag_coeff": [14, 257], "0e": [14, 273, 274], "config_use_cvmix_background": 14, "config_cvmix_background_diffus": [14, 257], "config_cvmix_background_viscos": [14, 257], "worri": 14, "sometim": [14, 213, 219, 220, 230, 232, 234, 236, 255, 257, 281], "togeth": [14, 17, 124, 230, 255, 257, 281], "overkil": 14, "reli": [14, 234, 257], "along": [14, 18, 124, 224, 234, 256, 257], "nu": [14, 141, 152, 224, 234, 257], "viscos": [14, 141, 150, 152, 224, 234, 237, 257, 269], "dict": [14, 19, 22, 24, 25, 27, 34, 38, 43, 78, 79, 81, 85, 86, 102, 104, 105, 111, 113, 114, 115, 127, 129, 134, 163, 234, 236, 257], "config_mom_del2": [14, 224, 234, 257], "precis": [14, 127, 234, 257], "bool": [14, 21, 22, 26, 34, 36, 43, 44, 47, 50, 52, 55, 99, 100, 103, 104, 109, 110, 111, 115, 130, 131, 143, 149, 160, 163, 168, 184, 198, 205, 207, 209, 257], "algorithm": [14, 127, 205, 224, 227, 228, 234, 257], "possibli": [14, 231, 234, 238, 257], "at_setup": [14, 26, 143, 149, 168, 184, 198, 257], "being": [14, 26, 34, 43, 99, 104, 110, 124, 143, 149, 168, 184, 198, 234, 236, 237, 238, 257, 266], "super": [14, 16, 17, 127, 231, 234, 236, 237, 257], "dt": [14, 127, 141, 205, 234, 257, 269, 270, 272, 273, 275, 280], "proport": [14, 127, 257, 266, 269, 270, 272, 273, 275, 280], "dt_per_km": [14, 127, 225, 257, 269, 272, 273, 275, 280], "stackoverflow": [14, 52, 257], "1384565": [14, 257], "7728169": [14, 52, 257], "config_dt": [14, 127, 257], "strftime": [14, 257], "gmtime": [14, 257], "run_time_step": [14, 141, 234, 257], "durat": [14, 127, 224, 227, 228, 229, 235, 257], "run_second": [14, 257], "btr_dt": [14, 127, 141, 205, 234, 257, 269], "btr_dt_per_km": [14, 127, 257, 269], "config_btr_dt": [14, 127, 257], "bit": [14, 124, 237, 255, 257, 269, 276], "complic": [14, 237, 238, 257], "slightli": [14, 238], "sophist": 14, "immutable_stream": [14, 257], "var_struct": [14, 250], "var": [14, 106, 250, 257], "var_arrai": [14, 250], "tag": [14, 256], "taken": [14, 21, 131, 225, 234, 257, 264, 276], "past": 14, "experi": [14, 124, 237, 266], "featur": [14, 237, 238, 255, 257, 258, 269, 274], "difficult": [14, 124, 263], "synchron": [14, 256], "out_nam": 14, "equival": [14, 238, 257, 259], "template_replac": [14, 24, 25, 127], "treat": [14, 235, 237], "jinja2": [14, 24, 25, 105, 129], "render": [14, 24, 25, 105], "d_": 14, "restart_interv": 14, "stream_replac": 14, "qu240": [14, 234, 237, 238, 258, 276], "qu240dynamicadjust": 14, "adjust": [14, 124, 127, 221, 258], "interv": [14, 136, 270], "spin": 14, "reus": [14, 234, 237, 238, 257, 258, 276], "qualit": 14, "forgotten": 14, "broken": [14, 234, 237], "immedi": [14, 58, 238, 257], "miss": [14, 234, 257, 258], "detect": [14, 18, 258, 259, 261, 262, 263, 276], "gpmeti": [14, 258], "divid": [14, 266], "partition_graph": [14, 21, 131], "circumst": [14, 17, 34, 35, 234, 257], "wast": 14, "update_namelist_pio": 14, "config_pio_num_iotask": 14, "config_pio_strid": 14, "particularli": [14, 254, 257, 275, 280], "v1": [14, 266], "better": [14, 16, 124, 276], "v2": [14, 258, 266], "littl": [14, 237, 238, 256, 257], "feel": [14, 124, 234, 257], "runtime_setup": [14, 16, 31, 41, 224, 227, 228, 236], "yourself": [14, 257, 263], "culler": 14, "cull": [14, 224, 227, 228, 234, 257], "model_step": 14, "make_graph_fil": 14, "field": [14, 17, 74, 76, 112, 127, 171, 213, 219, 220, 223, 224, 227, 228, 229, 257, 269, 270, 272, 273], "weight": [14, 16, 76, 213, 219, 220, 257, 266], "weight_field": [14, 76], "frequent": [16, 221, 250], "observ": [16, 256], "dataset": [16, 112, 179, 193, 213, 219, 220, 234, 257], "region": [16, 18, 256, 258], "pyremap": [16, 92], "interpol": [16, 86, 225, 258], "hood": 16, "esmf_regridweightgen": 16, "mappingfilestep": [16, 18], "woa": 16, "__init__": [16, 17, 19, 21, 34, 43, 49, 58, 59, 66, 72, 86, 113, 127, 128, 129, 131, 139, 140, 141, 144, 147, 148, 150, 152, 155, 156, 158, 160, 163, 166, 169, 171, 173, 175, 177, 179, 182, 185, 187, 189, 191, 193, 196, 199, 201, 204, 205, 206, 207, 209, 230, 231, 234, 236, 237, 241, 243, 244, 246, 247, 248, 255, 257], "mytestcas": 16, "__int__": 16, "make_map": 16, "64": [16, 266], "bilinear": [16, 86, 225, 270, 275, 280], "filenam": [16, 17, 36, 37, 80, 87, 88, 89, 90, 94, 95, 96, 101, 110, 114, 116, 234, 238, 257], "woa23_decav_0": 16, "25_extrap": 16, "20230414": 16, "initial_condition_databas": [16, 258], "destin": [16, 86, 87, 88, 89, 90, 91, 92], "src_from_lon_lat": 16, "lon_var": [16, 87, 89, 94], "lat_var": [16, 87, 89, 94], "dst_from_mpa": 16, "mesh_nam": [16, 87, 88, 89, 90, 91, 94, 95, 96, 130, 164, 171, 173, 236], "qu60": 16, "subclass": [16, 63, 66, 67, 68, 73, 127, 257], "src_": 16, "dst_": 16, "pick": [16, 97, 98], "vizmap": [16, 160, 171, 225, 236], "128": [16, 235, 260, 261, 264], "cosine_bell_viz": [16, 18, 225, 270, 275, 280], "dlon": [16, 91, 225, 270, 275, 280], "dlat": [16, 91, 225, 270, 275, 280], "remap_method": [16, 225, 270, 275, 280], "src_from_mpa": 16, "dst_global_lon_lat": 16, "lon_min": [16, 91], "With": [16, 238], "approach": [16, 234, 237, 238, 254, 257, 266], "perhap": [16, 18, 37, 230, 232, 236], "cover": [16, 251, 257], "nearli": [16, 234, 236, 255, 256, 257], "workflow": [16, 234, 238], "critic": [17, 257], "easiest": [17, 124, 238], "validate_var": [17, 34, 37, 127, 129, 205, 234], "meth": 17, "add_output_fil": [17, 35, 234, 236, 257], "temperatur": [17, 157, 223, 224, 228, 229, 234, 253, 257, 269, 270, 274, 275, 280], "salin": [17, 157, 223, 224, 229, 234, 257, 269, 270, 274, 275, 280], "done": [17, 31, 41, 234, 238, 257, 276], "compare_vari": [17, 257], "filename1": [17, 110, 257], "filename2": [17, 110, 257], "compact": [17, 257], "output_full_run": 17, "output_restart_run": 17, "all_pass": [17, 110], "valueerror": [17, 237], "quiet": [17, 99, 100, 110, 115], "report": 17, "threshold": [17, 270, 272, 273], "l1": [17, 110], "00000000000000e": 17, "l2": [17, 110], "l_infin": 17, "linf": [17, 110], "test_nightly_latest": 17, "threads_test": 17, "1thread": [17, 224, 269], "2thread": [17, 269], "test_20210616": 17, "further_valid": 17, "zero": [17, 214, 215, 216, 217, 218, 223, 224, 229, 257, 270, 274], "l1_norm": [17, 110], "l2_norm": [17, 110], "linf_norm": [17, 110], "nonzero": [17, 110], "solut": [17, 123, 179, 180, 181, 189, 190, 191, 193, 194, 195, 196, 199, 201, 225, 227, 228, 235, 254, 257, 267, 271, 272], "aspect": [18, 257], "routin": 18, "plot_horiz_field": [18, 234, 257], "patch": [18, 112, 257], "style": [18, 127, 256, 257], "edg": [18, 88, 91, 95, 112, 179, 180, 193, 194, 223, 257], "polygon": 18, "character": 18, "accordingli": [18, 84], "final_normalveloc": [18, 257], "t_index": [18, 112, 257], "vmin": [18, 112, 225, 257, 270], "max_veloc": [18, 257], "vmax": [18, 112, 225, 257, 270], "cmap": [18, 112, 234, 257], "cmo": [18, 234, 257], "balanc": [18, 234, 257], "show_patch_edg": [18, 112, 234, 257], "globe": [18, 270], "plot_glob": 18, "plot_land": [18, 111], "disabl": [18, 223, 270, 282], "contin": [18, 111], "overlain": 18, "cmocean": [18, 234, 257], "noqa": [18, 58, 234, 257], "f401": [18, 234, 257], "xr": [18, 179, 180, 181, 193, 194, 195, 234, 257], "open_dataset": [18, 234, 257], "tracer1": [18, 127], "isel": 18, "nvertlevel": [18, 112, 213, 219, 220, 234, 257, 266], "out_filenam": [18, 108, 111, 212], "colormap_sect": [18, 111], "titl": [18, 111, 112], "colormap": [18, 111, 112, 225, 257, 270], "cosin": [18, 127, 160, 162, 163, 166, 169, 171, 173, 225, 257, 267, 268, 271, 275, 280], "bell": [18, 127, 160, 162, 163, 166, 169, 171, 173, 225, 257, 267, 268, 271, 275, 280], "converg": [18, 160, 175, 176, 189, 190, 225, 227, 228, 232, 235, 256, 257, 268, 270, 272, 275, 280], "colormap_nam": [18, 111, 225, 270], "viridi": [18, 225, 257, 270], "norm": [18, 110, 111, 225, 270], "norm_typ": [18, 111, 225, 270], "norm_arg": [18, 111, 225, 270], "colorbar": [18, 111, 112, 225, 270], "tick": [18, 111, 225, 270], "mark": [18, 225, 238, 270], "colorbar_tick": [18, 111, 225, 270], "matplotlib": [18, 257], "standard": [18, 237, 238, 247, 257, 260, 276], "symlog": [18, 111], "symmetr": 18, "central": [18, 270], "logarithm": [18, 112], "color": [18, 112], "normal": [18, 179, 180, 193, 194, 223, 234, 235, 238, 257, 263], "symlognorm": 18, "lognorm": 18, "hous": [19, 270], "kei": [19, 43, 104, 236], "indir": [21, 34, 43, 86, 131, 139, 140, 141, 144, 147, 148, 150, 152, 155, 156, 158, 205, 207, 209, 231, 234, 244, 246, 248], "max_memori": [21, 31, 34, 41, 131, 234], "mesh_filenam": [21, 76, 131, 137], "graph_filenam": [21, 76, 131], "make_yaml": 21, "stride": [21, 33, 131], "consist": [21, 33, 124, 131, 221, 238, 257, 258, 269], "partit": [21, 30, 40, 53, 76, 131, 224, 227, 228, 234, 258, 259, 260, 261, 262, 264, 276], "model_config_data": 21, "streams_data": 21, "neither": [21, 34, 43, 86, 131, 141, 205, 234], "nor": [21, 34, 43, 86, 131, 141, 205, 234, 257], "append": [21, 34, 36, 43, 86, 131, 139, 140, 141, 144, 147, 148, 150, 152, 155, 156, 158, 205, 234, 244, 246, 248], "ideal": [21, 31, 34, 41, 82, 83, 86, 127, 131, 141, 182, 196, 205, 206, 207, 209, 230, 234, 237, 256, 257, 258, 282], "accommod": [21, 31, 34, 41, 82, 83, 131], "fewer": [21, 31, 34, 41, 82, 83, 131, 141, 182, 196, 205, 234, 257, 276], "memori": [21, 31, 34, 41, 131, 234, 258], "mb": [21, 31, 34, 41, 131, 234, 258], "placehold": [21, 31, 34, 41, 131, 234, 276], "overridden": [27, 127, 134, 236, 257], "diverg": [27, 134], "counterpart": [27, 127, 134], "nest": [27, 113, 115, 134], "graph_fil": 28, "run_as_subprocess": [34, 234], "smallest": [34, 234, 255, 266, 282], "unit": [34, 87, 91, 94, 234, 255, 269, 282], "term": [34, 255, 257, 272, 273], "necessarili": [34, 36], "input_data": 34, "until": [34, 35, 234, 236, 276], "finish": [34, 35, 73, 234, 257], "known": [34, 35, 124, 225, 234, 257], "suffici": [34, 234], "establish": [34, 35, 234], "is_depend": [34, 234], "combin": [34, 36, 43, 49, 54, 85, 113, 234, 235, 236, 254, 257, 258, 276], "machine_info": [34, 234], "machineinfo": 34, "config_filenam": [34, 43, 101, 234, 236], "base_work_dir": [34, 43, 234, 236], "log_filenam": [34, 43, 234, 236], "redirect": [34, 234], "extern": [34, 124, 221, 231, 234, 250, 267, 277], "turn": [34, 48, 231, 234, 254, 257, 274], "access": [35, 236, 237, 238, 257, 259, 263, 264], "database_compon": [36, 234], "work_dir_target": [36, 234], "come": [36, 124, 234, 238, 257, 259, 260, 261, 262, 263, 264, 267], "_database_root": 36, "available_resourc": [38, 81], "constrain": [38, 132, 142, 167, 183, 197, 224, 227, 228, 234, 257], "cores_per_nod": [38, 81, 84, 124, 258, 259, 260, 261, 262, 263, 264, 276], "everi": [39, 174, 224, 234, 236, 237, 253, 254, 255, 257, 269, 274], "child": [39, 174, 231, 234, 236, 237], "subtask": 41, "step_symlink": [43, 236], "outsid": [43, 44, 230, 232, 234, 236, 238], "stdout_logg": [43, 236], "goe": [43, 234, 236, 257], "regardless": [43, 236], "new_step_log_fil": [43, 236], "run_by_default": [44, 234, 236], "assum": [45, 105, 114, 124, 238, 257, 264, 269], "prior": [45, 234], "step_path": 47, "variant": [47, 162, 224, 230, 235, 237, 238, 257, 263, 266, 269, 270], "uncach": 47, "datestamp": 47, "yymmdd": [47, 258], "dry": [47, 235], "meta": 49, "empti": [49, 234, 237, 238, 255, 257], "link_nam": 52, "overwrit": 52, "55742015": 52, "fileexistserror": 52, "unless": [52, 100, 238], "isadirectoryerror": 52, "qo": [53, 259, 260, 262, 263, 264, 276], "qualiti": [53, 259, 260, 262, 263, 264, 276], "servic": [53, 259, 260, 262, 263, 264, 276], "constraint": [53, 264, 276], "wall_tim": [53, 276], "wall": [53, 276], "target_cor": 54, "min_cor": 54, "decomposition_test": [58, 230, 276], "decompositiontest": [58, 230], "e501": [58, 257], "turquois": [58, 260], "usr": [58, 124, 260, 276], "climat": [58, 259, 260, 261, 263, 276], "mhoffman": 58, "constant": [59, 66, 67, 127, 223, 257, 269, 270, 272, 274, 275, 280], "latitud": [60, 67, 87, 89, 91, 94, 111, 225, 270, 275, 280], "longitud": [60, 67, 68, 74, 87, 89, 91, 94, 111, 225, 270, 275, 280], "ndarrai": [60, 67, 68, 74, 111, 137, 211, 212, 257], "degre": [60, 67, 68, 74, 91, 258, 269], "length": [60, 67, 68, 74], "180": [60, 67, 68, 74, 91, 127, 236, 270], "90": [60, 67, 68, 74, 127, 234, 236, 270], "static": [61, 62], "rule": 61, "thumb": 61, "achiev": [62, 235], "uniform": [66, 71, 129, 166, 224, 225, 227, 228, 230, 236, 257, 258, 269, 270, 272, 273, 274, 275, 280], "natur": 71, "jigsawpi": [72, 234], "jigsaw_jig_t": 72, "meti": 76, "defaults_filenam": 77, "total": [81, 234, 235, 237, 257, 258, 260, 276], "substep": [82, 83], "command_line_arg": 82, "cpus_per_nod": 84, "map_filenam": 86, "src_grid_info": 86, "dst_grid_info": 86, "neareststod": [86, 225, 270, 275, 280], "conserv": [86, 225, 270, 275, 280], "map_": 86, "source_typ": 86, "_": [86, 124, 234, 236, 238, 257, 274], "dest_typ": 86, "1d": [87, 91, 94, 111, 127, 211, 212, 213, 214, 215, 216, 217, 219, 220], "2d": [87, 91, 94, 111], "5x0": [87, 91, 94], "5degre": [87, 91, 94], "coordin": [87, 89, 90, 94, 96, 111, 112, 179, 193, 213, 219, 220, 265, 267, 269, 270, 272, 273, 274, 275, 279], "mesh_typ": [88, 95, 230, 234, 236], "vertex": [88, 95], "x_var": [90, 96], "y_var": [90, 96], "proj_attr": [90, 96], "proj_str": [90, 96], "proj": [90, 96], "left": [91, 127, 257, 266, 269, 270], "remapp": [92, 93], "remap_fil": 92, "progress": [99, 100], "is_task": 100, "steps_to_skip": 100, "unpickl": [102, 234], "cached_step": 103, "identifi": [103, 124, 231, 250, 282], "task_list": 104, "_all": 104, "streams_filenam": 105, "lxml": [105, 107, 119], "etre": [105, 107, 119], "new_child": 106, "children": 106, "sub": [106, 257], "new_tre": 107, "infin": 110, "toler": 110, "data_arrai": 111, "colorbar_label": 111, "subtitl": 111, "field_nam": 112, "out_file_nam": 112, "ax": 112, "z_index": 112, "cmap_set_und": 112, "cmap_scal": 112, "cmap_titl": 112, "horizont": [112, 127, 137, 223, 224, 225, 227, 228, 229, 269, 272, 273, 274], "depth": [112, 127, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 257, 258, 266, 269, 270, 272, 273, 274, 275], "slice": 112, "fieldnam": 112, "visibl": 112, "bar": 112, "classmethod": 114, "jinja": [114, 127, 225], "namelist_templ": 118, "polarisyaml": [118, 119], "processed_registry_filenam": 119, "registri": [119, 223, 250], "steam": 119, "1_anvil_intel_impi": [120, 124], "mvapich": [120, 124, 259], "ve": [120, 121, 122, 123, 125, 238, 257], "1_anvil_gnu_openmpi": 120, "1_chicoma": 121, "cpu_gnu_mpich": [121, 125], "crai": [121, 124, 125, 260, 264], "1_chrysalis_intel_openmpi": 122, "1_chrysalis_gnu_openmpi": 122, "soon": [123, 124, 257, 276], "1_compy_intel_impi": 123, "1_compy_gnu_openmpi": 123, "load_polaris_env": [124, 238, 257, 276], "right": [124, 127, 236, 238, 257, 258, 266, 269, 270, 276], "therefor": [124, 234, 255, 257], "chicoma": [124, 263, 276], "mpich": [124, 238, 256, 260, 264, 276], "compi": [124, 262, 276], "pm": [124, 264, 276], "compymcnodefac": [124, 263], "perlmutt": [124, 260, 263, 276], "pretti": [124, 234, 237, 257, 258], "conda_path": [124, 238], "osx": [124, 263], "clang": [124, 238], "1_": 124, "morpheu": 124, "cobalt": [124, 259, 260, 261, 262, 263, 264], "single_nod": [124, 258, 259, 260, 261, 262, 263, 264, 276], "mpirun": [124, 254, 258, 259, 260, 261, 262, 263, 264, 276], "srun": [124, 234, 254, 257, 258, 259, 260, 261, 262, 263, 264, 276], "parallel_execut": [124, 254, 258, 259, 260, 261, 262, 263, 264, 276], "modules_befor": [124, 260, 264], "modules_aft": [124, 260, 264], "polaris_env": [124, 259, 260, 261, 262, 263, 264], "deploi": [124, 238, 256, 259, 260, 261, 262, 263, 264], "mpi_gnu": [124, 259, 260, 261, 262, 263, 264], "hdf5": [124, 259, 260, 261, 262, 263, 264], "use_e3sm_hdf5_netcdf": [124, 259, 260, 261, 262, 263, 264], "discoveri": 124, "hostnam": 124, "hostname_contain": 124, "queu": 124, "laptop": [124, 238, 257, 258], "workstat": [124, 238], "high": [124, 234, 261, 263], "hpc": [124, 238, 260, 263], "safest": [124, 238], "mpi_": 124, "simpl": [124, 127, 237, 250, 257, 276], "compiler_gnu": 124, "compiler_intel": 124, "hopefulli": [124, 258], "parlanc": 124, "concret": 124, "ubuntu": 124, "spec": [124, 254, 264], "gcc": 124, "curl": 124, "81": 124, "buildabl": 124, "install_missing_compil": 124, "cc": 124, "bin": [124, 238, 264, 276], "cxx": 124, "f77": 124, "fc": 124, "operating_system": 124, "ubuntu22": 124, "04": 124, "extra_rpath": 124, "luck": 124, "catch": [124, 235], "22": 124, "guess": [124, 257], "correct": [124, 238], "potenti": [124, 137, 150, 234, 257, 269], "purg": 124, "perl": 124, "32": [124, 235, 276], "bsnc6lt": 124, "ugetvbp": 124, "sxfyy4k": 124, "2020": 124, "304": 124, "n3b5fye": 124, "j3zxncu": 124, "7ohuiwq": 124, "k2zu3y5": 124, "mirrcz7": 124, "variou": [124, 203, 234, 238, 242], "ask": 124, "gb": 124, "minut": [124, 224, 235, 269, 281], "hour": [124, 227, 228, 235, 253, 260, 264, 272, 273, 276, 279], "zlib": 124, "incompat": 124, "ubuntu20": 124, "readlin": 124, "pkgconf": 124, "spackdir": 124, "env": [124, 264], "arch": 124, "repositori": [124, 232, 256, 257, 276], "x86_64_v4": 124, "free": [124, 223, 257, 258], "touch": [124, 238], "everyth": 124, "1_pm": 125, "ever": [127, 237], "expand": [127, 266], "oceanmodelstep": [127, 234, 257], "decid": [127, 257], "veri": [127, 231, 234, 237, 238, 250, 257, 274], "earli": [127, 267, 276], "stage": [127, 223, 234, 236, 238, 246, 253, 267, 276], "map_yaml_to_namelist": 127, "heurist": 127, "200": [127, 227, 228, 257, 269, 272, 273, 274], "round": [127, 270], "cell_count": [127, 132, 142, 167, 183, 197, 257], "goal_cells_per_cor": [127, 257, 270, 272, 273, 275, 280], "pinch": 127, "2000": [127, 230, 251, 253, 257, 279], "max_cells_per_cor": [127, 257, 270, 272, 273, 275, 280], "seciton": 127, "control": [127, 225, 234, 258, 269, 270, 274, 276], "scale": [127, 269, 276], "tri": [127, 237], "apport": 127, "dai": [127, 136, 150, 224, 225, 229, 253, 257, 269, 270, 274, 279], "form": [127, 282], "dddd_hh": [127, 136], "ss": [127, 136], "get_time_interval_str": 127, "run_dur": [127, 270], "fill": 127, "dt_str": 127, "run_duration_str": 127, "output_interval_str": 127, "yaml_filenam": [127, 129], "caviti": [127, 237, 257, 258, 266], "frazil": 127, "flux": [127, 223, 274], "fix": [127, 257], "add_spherical_base_mesh_step": [127, 236], "spherical_converg": [127, 225, 270], "icos_resolut": [127, 270], "480": [127, 236, 270], "qu_resolut": [127, 270], "150": [127, 236, 270], "210": [127, 236, 266, 270], "evalu": [127, 180, 181, 194, 195, 270], "convergence_eval_tim": [127, 270], "spherical_convergence_forward": [127, 270], "split_explicit": [127, 270], "rk4_dt_per_km": [127, 270], "split": [127, 237], "split_dt_per_km": 127, "barotrop": [127, 141, 205, 234, 257, 269, 274], "simul": [127, 227, 228, 234, 255, 257, 268, 269, 272, 273, 275, 276, 280], "bring": [127, 257], "cosinebel": [127, 225, 236], "sphericalconvergenceforward": [127, 225], "output_filenam": [127, 129, 137], "analyz": [127, 163, 257], "split_explicit_t": [127, 257], "grid_1d": 127, "generate_1d_grid": 127, "vertical_grid": [127, 211, 213, 219, 220, 230, 234, 257, 258, 266, 269, 270, 272, 273, 274, 275], "z": [127, 214, 215, 216, 217, 218, 219, 220, 257, 269, 270, 272, 273, 274, 275], "star": [127, 218, 220, 257, 269, 270, 272, 273, 274, 275], "init_vertical_coord": [127, 234, 257], "minlevelcel": [127, 213, 215, 216, 217, 218, 219, 220, 257], "maxlevelcel": [127, 213, 214, 215, 216, 217, 218, 219, 220, 257], "cellmask": [127, 213, 216, 219, 220, 257], "zmid": [127, 213, 219, 220, 257], "restingthick": [127, 213, 218, 219, 220, 257], "bottomdepth": [127, 213, 214, 216, 217, 218, 219, 220, 234, 257], "entir": [127, 257, 269, 281], "petersen": [127, 238, 257, 269], "et": [127, 257, 266, 269, 270, 272, 273], "al": [127, 257, 266, 269, 270, 272, 273], "2015": [127, 257, 269], "int_": 127, "rho": 127, "dv": 127, "sort": [127, 231, 232, 237, 238], "increas": [127, 237], "compute_rp": [127, 257], "csv": [127, 257], "subdivid": [130, 236], "dynamic_ntask": 131, "dynam": [131, 221, 229, 258, 269, 270, 274, 275], "available_cor": 133, "estim": [133, 135, 257], "time_str": 136, "initial_state_filenam": 137, "energi": [137, 150, 256, 257, 269], "state": [137, 139, 140, 147, 150, 155, 223, 224, 225, 227, 228, 229, 234, 235, 257, 270], "len": [137, 257], "output_fil": [137, 234, 257], "shorter": [147, 235, 243], "step_subdir": [156, 244], "processor": [156, 234, 244, 269], "rpe": [158, 231, 237, 257, 276], "include_viz": [160, 236], "advect": [160, 225, 270, 272, 273, 274], "less": [160, 163, 234, 266], "rmsevalu": 164, "squar": [164, 225, 227, 228, 272, 273], "ncell": [164, 234, 257], "viz_map": [171, 236], "inerti": [175, 176, 177, 179, 182, 185, 187, 227, 236, 267, 271], "graviti": [175, 176, 177, 179, 182, 185, 187, 227, 236, 267, 271], "wave": [175, 176, 177, 179, 182, 185, 187, 193, 227, 234, 236, 257, 267, 269, 271, 273], "taskdir": [177, 182, 185, 187, 191, 196, 199, 201], "analys": [177, 191], "exact": [179, 180, 181, 193, 194, 195, 225, 227, 228, 237, 272, 273], "angleedg": [179, 193], "angl": [179, 193], "posit": [179, 193, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 257, 266, 274], "xcell": [179, 193, 234, 257], "ycell": [179, 193, 234, 257], "xedg": [179, 193, 234, 257], "yedg": [179, 193], "f0": 179, "corioli": [179, 227, 228, 257, 269, 270, 273, 274], "eta0": [179, 193], "amplitid": [179, 193], "kx": [179, 193], "ky": [179, 193], "angular": [179, 193], "frequenc": [179, 193, 224], "veloc": [180, 194, 223, 224, 227, 228, 236, 238, 257, 270, 274, 276], "norm_vel": 180, "eta": [181, 195, 272, 273], "manufactur": [189, 190, 191, 193, 196, 199, 201, 228, 267, 271], "column": [203, 204, 206, 207, 209, 229, 238, 242, 243, 244, 246, 247, 248, 250, 251, 253, 267, 271, 276, 277, 278], "mix": [204, 230, 231, 272, 273, 274], "param": [204, 206], "resources_fix": 205, "ag": [206, 207, 209], "evolv": [206, 256, 266, 270, 274], "ideal_ag": [207, 209], "layer": [211, 212, 213, 217, 218, 219, 220, 223, 224, 227, 228, 229, 257, 258, 266, 269, 270, 272, 273, 274, 275], "meter": [211, 212], "bottom": [213, 214, 215, 216, 217, 218, 219, 220, 223, 257, 258, 266, 269, 270, 272, 273, 274, 275], "thick": [213, 217, 218, 219, 220, 224, 229, 251, 257, 258, 266, 269, 272, 279], "stretch": [213, 219, 220, 257, 266], "elev": [213, 219, 220, 257, 266], "midpoint": [213, 219, 220, 257], "reftopdepth": [213, 216, 217, 219, 220, 257], "down": [213, 214, 215, 216, 217, 218, 219, 220, 257, 266, 270], "ref": [213, 219, 220, 257], "middl": [213, 219, 220, 257], "refbottomdepth": [213, 214, 215, 216, 217, 219, 220, 234, 257], "refinterfac": [213, 219, 220, 257], "element": [213, 219, 220, 257], "vertcoordmovementweight": [213, 219, 220, 257], "movement": [213, 219, 220, 257], "alter": [214, 215, 234, 236, 256, 257, 266, 269, 270, 272, 273, 274, 275], "partial": [214, 215, 257, 266, 269, 270, 272, 273, 274, 275], "seafloor": [214, 216, 217, 218, 266], "unstretch": 218, "shelv": [221, 258, 266], "ssh_adjust": [221, 234, 258], "compass_branch": 221, "example_compact": [221, 231, 250, 258], "default_input": [221, 231, 250, 257, 258], "ocean_model": [221, 238, 258], "latest": [221, 238, 250, 256, 267, 276], "compat": [221, 238, 250, 254, 256], "verison": 221, "inertial_gravity_wav": [221, 226, 231, 236, 272, 281], "manufactured_solut": [221, 226, 231, 273], "single_column": [221, 226, 231, 250, 252, 274], "minim": 223, "fcell": [223, 234, 257, 270], "fedg": [223, 234, 257, 270], "fvertex": [223, 234, 257, 270], "slip": 223, "solid": [223, 251, 269, 270], "tangenti": 223, "nonperiod": 223, "drag": [223, 225], "mass": 223, "momentum": [223, 224, 225, 227, 228, 272, 273], "scalar": 223, "rigid": 223, "solv": [223, 254, 266], "mid": [223, 269], "vari": [223, 225, 234, 254, 263, 266, 270], "consult": [223, 257], "tidal_forc": 223, "eddi": [224, 269], "addition": [224, 225, 227, 228, 229, 234, 259, 260, 261, 262, 264], "diffus": [224, 225, 227, 228, 229], "50": [224, 227, 228, 257, 269, 272, 273, 274], "prescrib": [224, 227, 228], "intens": 224, "enough": [224, 234, 237, 257], "24": [225, 270, 279], "shape": [225, 270], "blob": 225, "around": [225, 257, 258, 269, 270], "rate": [225, 227, 228, 257, 270, 272, 273, 274], "distribut": 225, "rmse": [225, 227, 228, 272, 273], "fast": [225, 257], "shallow": [227, 238, 270, 272, 273, 275], "water": [227, 257, 269, 270, 272, 273, 274, 275], "100": [227, 228, 229, 266, 272, 273, 274], "25": [227, 228, 272, 273, 274], "inertialgravitywav": [227, 236], "calcul": [227, 234, 236], "exactsolut": [227, 228], "obtain": [227, 228, 238, 260], "normal_veloc": [227, 228, 234, 257], "assign": [227, 228, 270], "fall": [227, 228, 276], "accept": [227, 228], "bound": [227, 228], "manufacturedsolut": 228, "exercis": [229, 253, 270, 274], "kpp_test": 229, "mixedlayerdepthsoutput": 229, "idealagetrac": [229, 274], "dimens": [229, 269], "single_column_forc": [229, 274], "profil": [229, 254, 274], "throughout": [229, 269, 274], "idealag": 229, "enabel": 229, "formal": 230, "organ": [230, 232, 235, 256], "conceptu": [230, 237], "broadli": [230, 231, 237], "realist": [230, 256, 282], "greenland": [230, 256, 282], "2000m": [230, 276], "34": [230, 276], "halfar": 230, "cism": 230, "dome_typ": 230, "closest": 230, "put_origin_on_a_cel": 230, "hydrologi": 230, "hydro": [230, 282], "dome_viz": 230, "time_slic": 230, "save_imag": 230, "hide": [230, 257], "hide_fig": 230, "helper": [230, 231], "clutter": 230, "smoke_test": [230, 236], "smoketest": [230, 236], "restart_test": 230, "restarttest": 230, "add_dome_task": 230, "variable_resolut": [230, 234, 276], "add_task": [230, 231], "talk": 230, "reduc": [230, 234], "among": [230, 232, 238, 257], "encompass": 231, "perspect": 231, "four": 231, "major": [231, 234], "broader": 231, "univers": 231, "add_cosine_bell_task": 231, "add_inertial_gravity_wave_task": 231, "add_manufactured_solution_task": 231, "add_single_column_task": 231, "alphabet": [231, 257], "resolution_to_subdir": 231, "resdir": 231, "landice_model": [231, 238], "diagram": 232, "green": 232, "blue": [232, 259, 276], "orang": 232, "red": 232, "laid": 232, "fig": 232, "organiz": 232, "concept": [232, 237, 257, 282], "somewher": 234, "multiprocess": [234, 237, 258], "aspir": 234, "emploi": 234, "unwant": 234, "outer": 234, "inner": 234, "dome_varres_grid": 234, "signific": [234, 235, 236], "neglig": 234, "culled_graph": [234, 257], "meshstep": 234, "getint": 234, "mesh_cpus_per_task": 234, "mesh_min_cpus_per_task": 234, "fit": [234, 258], "applic": [234, 237, 238, 275, 280], "launch": [234, 256], "write_netcdf": [234, 257], "convers": [234, 257], "greater": [234, 257], "graphinfofilenam": [234, 257], "culled_mesh": [234, 257], "use_dist": [234, 257, 269], "gradient_width_dist": [234, 257, 269], "gradient_width_frac": [234, 257, 269], "bottom_temperatur": [234, 257, 269], "surface_temperatur": [234, 257, 269, 274], "temperature_differ": [234, 257, 269], "coriolis_paramet": [234, 257, 269, 272, 273, 274], "x_cell": [234, 257], "y_cell": [234, 257], "bottom_depth": [234, 257, 258, 266, 269, 270, 272, 273, 274, 275], "ones_lik": [234, 257], "zeros_lik": [234, 257], "x_min": [234, 257], "min": [234, 257, 269, 274], "x_max": [234, 257], "y_min": [234, 257], "y_max": [234, 257], "y_mid": [234, 257], "x_perturb_min": [234, 257], "x_perturb_max": [234, 257], "perturb_width": [234, 257, 269], "y_offset": [234, 257], "sin": [234, 257, 269, 272, 273], "pi": [234, 257, 266, 269, 270], "temp_vert": [234, 257], "frac": [234, 257, 266, 269, 272], "logical_and": [234, 257], "transpos": [234, 257], "3rd": [234, 257], "crest": [234, 257, 269], "expand_dim": [234, 257], "dim": [234, 257], "axi": [234, 257], "broadcast": [234, 257], "nedg": [234, 257], "xvertex": [234, 257], "attr": [234, 257], "initial_temperatur": [234, 257], "initial_normal_veloc": [234, 257], "superclass": 234, "commandlin": 234, "harm": 234, "likewis": [234, 257], "subsequ": [234, 281], "arisen": 234, "problemat": 234, "add_depend": 234, "usual": [234, 236, 238, 257, 276], "forwardstep": 234, "mesh_path": 234, "mesh_step": 234, "with_ice_shelf_cav": 234, "initial_state_target": 234, "adjusted_init": 234, "forcing_data": 234, "init_mode_forcing_data": 234, "entha_analy_result": 234, "mat": 234, "enthalpy_benchmark": 234, "ourselv": 234, "problem": [234, 238, 254, 257], "firewal": 234, "bedmachineantarctica_v2_and_gebco_2022_0": 234, "05_degree_20220729": 234, "slate": 234, "icepresent_qu60km_polar": 234, "practic": [234, 237, 238], "straightforward": 234, "commonli": [234, 255], "notat": [234, 275, 280], "phc": [234, 266], "That": [234, 237, 255, 257, 276], "word": 234, "ff": 234, "quwisc240": [234, 237, 276], "90c": 234, "91c": 234, "92": [234, 266], "91": 234, "sowisc12to60": [234, 276], "performance_test": 234, "effici": [234, 257], "transfer": 234, "feasibl": 234, "overhead": 234, "philosophi": [235, 237, 257], "context": [235, 257], "namesak": 235, "256": [235, 260, 264], "count": [235, 255], "quicker": 235, "exce": 235, "offer": 235, "benefit": [235, 256], "bug": 235, "coverag": 235, "exhaust": 235, "recent": [235, 267, 277], "merg": 235, "reach": 235, "steadi": 235, "wet": 235, "fundament": 236, "incorpor": 236, "velo_solv": 236, "sia": [236, 238], "fo": 236, "add_step": [236, 257], "runmodel": 236, "run_step": 236, "0200": 236, "00_00": [236, 251, 257], "recip": 236, "demonstr": [236, 257], "fairli": [236, 237, 238, 257], "_setup_step": [236, 257], "default_resolut": 236, "prioriti": [236, 260], "dtype": [236, 257], "remove_step": 236, "cos_bell_dir": 236, "_init_": 236, "_forward_": 236, "with_viz_dir": 236, "_map_": 236, "_viz_": 236, "rare": [236, 238], "480km": 236, "closer": 236, "inherit": [236, 237, 257], "imp_r": 236, "joinpath": 236, "initial_condit": 237, "dig": [237, 258], "infrastructur": [237, 257], "background": 237, "adher": [237, 257], "pep8": [237, 238], "bot": [237, 266], "violat": 237, "consid": 237, "editor": 237, "pycharm": [237, 238, 257], "spyder": 237, "linter": 237, "flake8": [237, 238], "discourag": [237, 255], "reformat": 237, "autopep8": 237, "undesir": 237, "lint": 237, "wildcard": 237, "vim": [237, 257], "plugin": 237, "id": [237, 238], "commit": [237, 238], "why": 237, "sound": 237, "subpackag": 237, "understand": [237, 258], "downstream": 237, "tutori": [237, 238], "clu": 237, "intro": 237, "docstr": [237, 256, 257], "strip": 237, "mpas_ocean": 237, "hidden": 237, "shortcut": [237, 276], "referenc": [237, 257], "mention": 237, "dot": 237, "charact": 237, "unix": [237, 256], "distinct": 237, "mayb": [237, 257], "machine_config": 237, "endswith": 237, "splitext": 237, "exactli": [237, 238, 257, 266], "move": [237, 238, 257, 275, 280], "renam": 237, "visa": 237, "versa": 237, "comfort": [237, 257], "orient": 237, "program": [237, 258], "led": 237, "felt": 237, "contribut": 237, "hesit": 237, "predecessor": [237, 255, 256], "clumsi": 237, "harder": 237, "outcom": 237, "augment": 237, "explain": 237, "hope": 237, "dens": 237, "learn": [237, 257], "curv": 237, "worth": [237, 257], "skill": 237, "endeavor": 237, "readabl": 237, "manipul": 237, "get_available_cores_and_nod": 237, "theoret": 237, "dozen": 237, "theori": 237, "biogeochemistri": 237, "ksh": 238, "mac": [238, 256], "csh": 238, "tcsh": 238, "temporarili": 238, "recogn": [238, 258, 276], "permiss": 238, "anyon": 238, "caus": [238, 260, 264, 266], "person": [238, 254], "base_path_to_install_or_update_conda": 238, "with_netlib_lapack": 238, "flavor": [238, 257], "troubl": [238, 257], "recognit": 238, "trilino": 238, "downsid": 238, "unneed": 238, "reinstal": 238, "caution": 238, "load_": 238, "encod": 238, "load_dev_polaris_": [238, 257], "env_nam": 238, "dev_polaris_": [238, 254], "workdir": [238, 276], "unexpect": [238, 255, 257], "occur": [238, 254], "echo": 238, "proceed": 238, "notic": 238, "conda_env": [238, 262, 276], "rememb": 238, "incorrect": 238, "unus": 238, "session": [238, 257], "pip": 238, "substanti": 238, "risk": [238, 257], "unsupport": 238, "env_onli": 238, "mpas_make_target": [238, 276], "scientif": [238, 276], "_albani": 238, "instruct": [238, 257], "es3m": 238, "compli": 238, "memor": 238, "guidelin": 238, "complianc": 238, "checker": 238, "isort": 238, "flynt": 238, "mypi": 238, "77": 238, "e302": 238, "blank": 238, "resolv": 238, "simpler": [238, 257], "new_branch_nam": 238, "put": [238, 257], "disk": [238, 258, 260, 264], "respons": 238, "simplest": 238, "your_new_branch": 238, "restart_filenam": 244, "polaris_branch": 250, "post": 250, "src": 250, "registry_process": 250, "seaice_model": 250, "1m": [251, 279], "disc": [251, 279], "config_initial_ice_area": 251, "config_initial_ice_volum": 251, "config_atmospheric_forcing_typ": 251, "config_forcing_start_tim": 251, "config_forcing_cycle_start": 251, "config_forcing_cycle_dur": 251, "config_forcing_precipitation_unit": 251, "mm_per_sec": 251, "config_forcing_sst_typ": 251, "ncar": 251, "config_update_ocean_flux": 251, "config_include_pond_freshwater_feedback": 251, "standard_phys": 253, "standardphys": 253, "year": [253, 267, 279], "volum": 253, "snow": 253, "exact_restart": 253, "exactrestart": 253, "geo": 254, "cartopi": 254, "14": 254, "np110py27_4": 254, "calledprocesserror": 254, "deploy_tmp": 254, "vpn": 254, "site": 254, "shell": [254, 256], "honor": 254, "wide": 254, "spawn": 254, "usernam": [254, 257, 260, 264], "proxy_en": 254, "all_proxi": 254, "proxyout": 254, "8080": 254, "no_proxi": 254, "localhost": [254, 258, 263, 264, 276], "127": 254, "proxy_dis": 254, "unset": 254, "anytim": 254, "fatal": 254, "mpi_init": 254, "stack": 254, "mpir_init_thread": 254, "159": 254, "mpid_init": 254, "164": 254, "mpidi_ch3_init": 254, "95": 254, "mpid_nem_init": 254, "314": 254, "mpid_nem_tcp_init": 254, "173": 254, "mpid_nem_tcp_get_business_card": 254, "395": 254, "getsockinterfaceaddr": 254, "369": 254, "pn2034311": 254, "errno": 254, "host": [254, 258, 263, 276], "focus": 255, "plu": 255, "autom": 256, "exascal": 256, "earth": 256, "kept": 256, "sens": [256, 257], "boundari": [256, 269, 282], "expert": 256, "uncoupl": 256, "quick": [256, 257, 267, 277], "queue": 256, "beginn": [256, 257], "advanc": [256, 257], "mpas_to_yaml": 256, "troubleshoot": 256, "proxi": 256, "lanl": [256, 258, 260], "gethostbynam": 256, "glossari": 257, "stick": 257, "miniconda": 257, "3_chrysalis_intel_openmpi": 257, "strict": 257, "push": 257, "lowercas": 257, "hyphen": 257, "settl": 257, "desktop": 257, "realli": [257, 264], "nice": [257, 264], "supercomput": 257, "yet_another_channel": 257, "testgroup": 257, "vi": 257, "polaris_head": 257, "yetanotherchannel": 257, "instanc": 257, "repres": [257, 266, 270], "highli": 257, "camelcas": 257, "capit": 257, "letter": 257, "cap": 257, "awkward": 257, "encourag": 257, "enclos": 257, "briefli": 257, "baroclinicchannel": 257, "globalconverg": 257, "add_test_group": 257, "interest": 257, "test_group": 257, "add_test_cas": 257, "anyth": 257, "testcas": [257, 258, 269, 274, 276], "probabl": [257, 263], "suppos": 257, "easili": 257, "tide": 257, "sai": [257, 263], "res_str": 257, "1000": [257, 258, 266, 269, 272, 273], "still": [257, 267, 275, 276, 280], "ti": 257, "loop": 257, "1km": [257, 269, 276], "4km": [257, 269, 276], "coarsest": [257, 258], "especi": 257, "promot": 257, "pattern": 257, "familiar": 257, "seen": 257, "brows": 257, "row": 257, "disadvantag": 257, "foremost": 257, "magic": 257, "effect": [257, 275], "pain": 257, "160": [257, 269], "500": [257, 258, 266, 269], "path_to_mpas_ocean": 257, "path_to_working_dir": 257, "cat": 257, "slurm_jobid": 257, "_run_test": 257, "gpf": 257, "fs1": 257, "cbegeman": 257, "grid_typ": [257, 258, 266, 269, 270, 272, 273, 274, 275], "vert_level": [257, 258, 266, 269, 270, 272, 273, 274, 275], "coord_typ": [257, 266, 269, 270, 272, 273, 274, 275], "partial_cell_typ": [257, 266, 269, 270, 272, 273, 274, 275], "min_pc_fract": [257, 266, 269, 270, 272, 273, 274, 275], "everywher": 257, "depress": [257, 266], "mostli": 257, "logic": [257, 269], "northern": [257, 269], "half": [257, 269], "southern": [257, 269], "halv": [257, 269], "gradient": [257, 269, 272, 273, 274], "500km": [257, 269], "40e3": [257, 269], "35": [257, 269, 270, 274, 275, 276, 280], "2e": [257, 269], "connect": [257, 264], "match": 257, "light": 257, "e3sm_compon": 257, "interact": [257, 260, 263, 264, 276], "interrupt": 257, "pty": 257, "navig": 257, "newli": 257, "bunch": 257, "didn": 257, "mistak": 257, "finger": 257, "cross": 257, "initial_normalveloc": 257, "initial_salin": 257, "obvious": 257, "stress": [257, 274], "landicemodelstep": 257, "huge": 257, "cp": 257, "05": 257, "hmix_del2": 257, "bottom_drag": 257, "cvmix": 257, "0002": 257, "filename_interv": 257, "0100": 257, "input_interv": 257, "initial_onli": 257, "basicmesh": 257, "dayssincestart": 257, "surfacespe": 257, "lowersurfac": 257, "uppersurfac": 257, "ureconstructx": 257, "ureconstructi": 257, "great": 257, "remain": [257, 270, 274], "load_dataset": 257, "final_temperatur": 257, "ab": 257, "proc": 257, "area": 257, "4proc": [257, 269], "8proc": [257, 269], "markdown": 257, "developers_guid": 257, "users_guid": 257, "daunt": 257, "flesh": 257, "bonu": 257, "improv": 257, "introduc": 257, "techniqu": 257, "cannot": 257, "aim": 257, "constrain_resourc": 257, "becam": 257, "mainten": 257, "counter": 257, "thought": 257, "yet_another_channel_test_cas": 257, "yetanotherchanneltestcas": 257, "choic": [257, 270], "spuriou": [257, 269], "dissip": [257, 269], "pop": [257, 269], "mom": [257, 269], "mitgcm": [257, 269], "higher": 257, "heavi": 257, "analogi": 257, "tet": 257, "bear": 257, "late": 257, "_add_step": 257, "startswith": 257, "enumer": 257, "rpe_": 257, "_nu_": 257, "privat": 257, "break": [257, 269], "unusu": 257, "rpe_1_nu_1": [257, 269], "rpe_2_nu_5": [257, 269], "rpe_3_nu_10": 257, "rpe_4_nu_20": 257, "rpe_5_nu_200": 257, "20_00": 257, "0000": 257, "dayssincestartofsim": 257, "relativevort": 257, "pyplot": 257, "plt": 257, "output_": 257, "sections_yet_another_channel_": 257, "rpe_t": 257, "init_filenam": 257, "initial_state_file_nam": 257, "ds_init": 257, "_plot": 257, "dirti": 257, "adopt": 257, "lesson": 257, "tricki": 257, "commun": 257, "nuanc": 257, "fake": 257, "wasn": 257, "fold": 257, "proper": 257, "third": 257, "previous": 257, "extens": 258, "multinod": [258, 276], "explanatori": 258, "my_machin": 258, "extend": 258, "gitconfig": 258, "enter": 258, "author": 258, "email": 258, "pull_request": 258, "28": 258, "address": 258, "metadata": 258, "customize_config_pars": 258, "server_base_url": 258, "inej": 258, "check_siz": 258, "ssl": 258, "certif": 258, "core_path": 258, "partition_execut": 258, "dask": 258, "netcdf4": 258, "netcdf4_class": 258, "netcdf3_64bit": 258, "netcdf3_class": 258, "engin": 258, "scipi": 258, "mesh_databas": 258, "ocean_database_root": 258, "landice_database_root": 258, "mesh_cor": 258, "mesh_min_cor": 258, "mesh_max_memori": 258, "mesh_max_disk": 258, "init_cor": 258, "init_min_cor": 258, "init_max_memori": 258, "init_max_disk": 258, "init_thread": 258, "forward_cor": 258, "forward_min_cor": 258, "forward_thread": 258, "forward_max_memori": 258, "forward_max_disk": 258, "add_metadata": 258, "ec": 258, "wc": 258, "mesh_descript": 258, "autodetect": 258, "bathy_descript": 258, "gebco": 258, "2022": 258, "bedmachin": 258, "antarctica": 258, "init_descript": 258, "e3sm_vers": 258, "increment": 258, "mesh_revis": 258, "finest": 258, "min_r": 258, "max_r": 258, "max_depth": 258, "creation_d": 258, "peopl": 258, "contact": 258, "temperaturemax": 258, "statist": 258, "temperature_max": 258, "33": [258, 276], "enable_ocean_initial_condit": 258, "enable_ocean_graph_partit": 258, "enable_seaice_initial_condit": 258, "scrip": 258, "enable_scrip": 258, "transect": 258, "onlin": 258, "member": 258, "offlin": 258, "enable_diagnostics_fil": 258, "coarser": [258, 270], "finer": 258, "comparisonlatresolut": 258, "comparisonlonresolut": 258, "antarct": 258, "polar": [258, 259, 261, 266], "stereograph": 258, "comparisonantarcticstereowidth": 258, "6000": [258, 266], "comparisonantarcticstereoresolut": 258, "arctic": [258, 279], "comparisonarcticstereowidth": 258, "comparisonarcticstereoresolut": 258, "tanh_dz": 258, "16": [258, 274, 276], "3000": 258, "min_layer_thick": [258, 266], "max_layer_thick": [258, 266], "retain": 258, "ecosystem": 259, "gain": 259, "confluenc": 259, "public_html": [259, 261, 263], "soft": [259, 261, 263, 276], "mpi_intel": [259, 261, 262, 263], "36": [259, 263, 274, 276], "condo": [259, 276], "acm": [259, 276], "medium": 259, "acme_high": 259, "load_latest_polaris_intel_impi": [259, 262], "load_latest_polaris_gnu_openmpi": [259, 261, 276], "dst": 260, "calendar": 260, "network": 260, "introduct": 260, "platform": 260, "batch": 260, "wtrw": 260, "ch": 260, "fe": 260, "lustr": 260, "scratch4": 260, "scratch5": 260, "sacctmgr": 260, "assoc": 260, "cluster": 260, "45": 260, "sshare": 260, "sreport": 260, "accountutilizationbyus": 260, "2019": 260, "yellow": 260, "chkhome": 260, "petabyt": 260, "df": 260, "bp": 260, "archiv": [260, 264], "hpss": [260, 264], "front": 260, "tn": 260, "storag": 260, "project_nam": 260, "salloc": [260, 263, 264], "account_nam": 260, "gpu": [260, 264], "hyperthread": [260, 264], "hang": [260, 264], "threads_per_cor": [260, 264], "shared_clim": [260, 276], "load_latest_polaris_gnu_mpich": [260, 264], "load_latest_polaris_intel_openmpi": 261, "compyf": 262, "app": [262, 276], "pmi2": 262, "40": 262, "submit": 263, "workload": 263, "squeue": 263, "my_usernam": [263, 264], "scancel": 263, "jobid": 263, "cancel": 263, "emtpi": 263, "three": [263, 282], "mpi_mpich": [263, 276], "mpi_openmpi": [263, 276], "nompi": [263, 276], "p1": 264, "nersc": 264, "iri": 264, "filesystem": 264, "myquota": 264, "prjquota": 264, "projectid": 264, "m1795": 264, "hsi": 264, "htar": 264, "zstash": 264, "cf": [264, 276], "cdir": [264, 276], "premium": 264, "cray_compil": 264, "8844": 264, "monik": 264, "browser": 264, "grab": 264, "logon": 264, "kernel": 264, "myenv": 264, "ipykernel": 264, "kernelspec": 264, "u1": 264, "interpret": 264, "argv": 264, "ipykernel_launch": 264, "connection_fil": 264, "display_nam": 264, "languag": 264, "2500": 266, "deepest": 266, "stewart": 266, "2017": 266, "delta": [266, 269, 274], "z_2": 266, "z_1": 266, "mathrm": 266, "tanh": 266, "rightarrow": 266, "infti": 266, "z_k": 266, "z_0": 266, "z_": [266, 274], "k": 266, "finder": 266, "n_z": 266, "h_": 266, "scienc": 266, "hydrograph": 266, "climatologi": 266, "250": 266, "5500": 266, "renorm": 266, "51": 266, "221": 266, "ziso": [266, 282], "63": 266, "floor": 266, "flat": [266, 269], "collaps": 266, "adcroft": 266, "campin": 266, "2004": 266, "absenc": 266, "squash": 266, "watercolumn": 266, "press": 266, "batymetri": 266, "stair": 266, "month": 267, "websit": [267, 277], "release_6": 267, "ilicak": 269, "2012": 269, "variat": 269, "distinguish": 269, "zonal": [269, 274], "meridion": [269, 274], "psu": [269, 274], "cooler": 269, "north": 269, "sinusoid": 269, "perturb": [269, 270, 273], "t_0": 269, "t_b": 269, "t_": 269, "z_b": 269, "y_": 269, "l_x": 269, "warmer": 269, "ge": [269, 270], "gradient_width_fract": 269, "l_y": 269, "le": [269, 274], "flow": [269, 270], "stationari": [269, 274], "literatur": 269, "mk": 269, "celsiu": 269, "prognost": 269, "williamson": 270, "1992": 270, "sec": 270, "3a": 270, "skamarock": 270, "gassmann": 270, "bodi": 270, "rotat": [270, 272, 273], "transport": 270, "psi": 270, "proportion": 270, "slow": 270, "icosohydr": 270, "nearest": 270, "insensit": [270, 274], "300": [270, 275], "passiv": 270, "psi_0": 270, "co": [270, 272, 273], "radiu": 270, "debug_tracers_1": 270, "equatori": 270, "u_0": 270, "tau": 270, "transit": 270, "equat": [270, 272, 273, 274], "vel_pd": 270, "tendenc": [270, 273], "rung": 270, "kutta": 270, "4th": 270, "multipli": 270, "her": 270, "rad": 270, "lat_cent": 270, "lon_cent": 270, "14159265": 270, "2123666": 270, "6667": 270, "hill": 270, "psi0": 270, "qu_conv_thresh": 270, "qu_conv_max": 270, "icos_conv_thresh": 270, "icos_conv_max": 270, "roughli": 270, "studi": 270, "propag": [272, 273], "doubli": [272, 273], "assess": [272, 273], "numer": [272, 273], "accuraci": [272, 273], "discret": [272, 273], "bishnu": [272, 273], "friction": [272, 273], "neglect": [272, 273], "nonlinear": [272, 273], "analyt": [272, 282], "k_x": [272, 273], "k_y": [272, 273], "accord": [272, 273, 276], "availi": [272, 273], "10000": [272, 273], "coriloi": 272, "1e": 272, "amplitud": [272, 273], "ssh_amplitud": [272, 273], "wavelength": [272, 273], "n_wavelengths_x": [272, 273], "n_wavelengths_i": [272, 273], "conv_thresh": [272, 273], "conv_max": [272, 273], "embed": 273, "eta_0": 273, "span": 274, "arbitrarili": 274, "chosen": 274, "virtu": 274, "examin": 274, "400": 274, "phi": 274, "phi_0": 274, "dz": 274, "ml": 274, "mld": 274, "surface_x": 274, "x_gradient_mixed_lay": 274, "mixed_layer_depth_x": 274, "x_difference_across_mixed_lay": 274, "x_gradient_interior": 274, "spatial": 274, "4x4": 274, "960": 274, "degc": 274, "temperature_gradient_mixed_lay": 274, "temperature_difference_across_mixed_lay": 274, "temperature_gradient_interior": 274, "mixed_layer_depth_temperatur": 274, "surface_salin": 274, "salinity_gradient_mixed_lay": 274, "salinity_difference_across_mixed_lay": 274, "salinity_gradient_interior": 274, "mixed_layer_depth_salin": 274, "scheme": 274, "dictat": 274, "kpp": 274, "restor": 274, "piston": 274, "toward": 274, "temperature_surface_restoring_valu": 274, "temperature_piston_veloc": 274, "salinity_surface_restoring_valu": 274, "salinity_piston_veloc": 274, "temperature_interior_restoring_r": 274, "salinity_interior_restoring_r": 274, "net": 274, "latent": 274, "heat": 274, "bulk": 274, "latent_heat_flux": 274, "sensibl": 274, "sensible_heat_flux": 274, "solar": 274, "shortwav": 274, "shortwave_heat_flux": 274, "evapor": 274, "evaporation_flux": 274, "5e": 274, "rain": 274, "rain_flux": 274, "wind": 274, "wind_stress_zon": 274, "wind_stress_meridion": 274, "welcom": [275, 280], "icosohedr": [275, 280], "pertain": [275, 280], "inher": 275, "warrant": 275, "investig": 275, "load_latest_polari": 276, "minu": 276, "create_polaris_load_script": 276, "load_polaris_1": 276, "0_mpich": 276, "exclud": 276, "wiki": 276, "circular_shelf": 276, "sia_smoke_test": 276, "sia_decomposition_test": 276, "sia_restart_test": 276, "fo_smoke_test": 276, "fo_decomposition_test": 276, "fo_restart_test": 276, "37": 276, "17": 276, "210131_test_new_branch": 276, "my_config": 276, "smaller": 276, "previous_workdir": 276, "paper": 276, "recompil": 276, "safer": 276, "preserv": 276, "test_subdir": 276, "whatev": 276, "clock": 276, "j": 276, "exclus": 276, "job_nam": 276, "fo_integr": 276, "sia_integr": 276, "cosine_bell_cached_init": [276, 281], "ec30to60": 276, "ecwisc30to60": 276, "qu240_for_e3sm": 276, "quwisc240_for_e3sm": 276, "wc14": 276, "suitenam": 276, "seaice_standalone_framework": 277, "71": 279, "35n": 279, "156": 279, "5w": 279, "atmospher": 279, "timeseri": 279, "pair": 279, "prohibit": 281, "speed": 281, "radial": 282}, "objects": {"polaris": [[19, 0, 1, "", "Component"], [21, 0, 1, "", "ModelStep"], [34, 0, 1, "", "Step"], [43, 0, 1, "", "Task"]], "polaris.Component": [[19, 1, 1, "", "__init__"], [20, 1, 1, "", "add_task"]], "polaris.ModelStep": [[21, 1, 1, "", "__init__"], [22, 1, 1, "", "add_model_config_options"], [23, 1, 1, "", "add_namelist_file"], [24, 1, 1, "", "add_streams_file"], [25, 1, 1, "", "add_yaml_file"], [26, 1, 1, "", "dynamic_model_config"], [27, 1, 1, "", "map_yaml_to_namelist"], [28, 1, 1, "", "partition"], [29, 1, 1, "", "process_inputs_and_outputs"], [30, 1, 1, "", "runtime_setup"], [31, 1, 1, "", "set_model_resources"], [32, 1, 1, "", "setup"], [33, 1, 1, "", "update_namelist_pio"]], "polaris.Step": [[34, 1, 1, "", "__init__"], [35, 1, 1, "", "add_dependency"], [36, 1, 1, "", "add_input_file"], [37, 1, 1, "", "add_output_file"], [38, 1, 1, "", "constrain_resources"], [39, 1, 1, "", "run"], [40, 1, 1, "", "runtime_setup"], [41, 1, 1, "", "set_resources"], [42, 1, 1, "", "setup"]], "polaris.Task": [[43, 1, 1, "", "__init__"], [44, 1, 1, "", "add_step"], [45, 1, 1, "", "configure"]], "polaris.__main__": [[46, 2, 1, "", "main"]], "polaris.cache": [[47, 2, 1, "", "update_cache"]], "polaris.components": [[48, 2, 1, "", "get_components"]], "polaris.config": [[49, 0, 1, "", "PolarisConfigParser"]], "polaris.config.PolarisConfigParser": [[49, 1, 1, "", "__init__"]], "polaris.io": [[50, 2, 1, "", "download"], [51, 3, 0, "-", "imp_res"], [52, 2, 1, "", "symlink"]], "polaris.job": [[53, 2, 1, "", "get_slurm_options"], [54, 2, 1, "", "write_job_script"]], "polaris.list": [[55, 2, 1, "", "list_cases"], [56, 2, 1, "", "list_machines"], [57, 2, 1, "", "list_suites"]], "polaris.logging": [[58, 2, 1, "", "log_method_call"]], "polaris.mesh": [[59, 0, 1, "", "IcosahedralMeshStep"], [66, 0, 1, "", "QuasiUniformSphericalMeshStep"]], "polaris.mesh.IcosahedralMeshStep": [[59, 1, 1, "", "__init__"], [60, 1, 1, "", "build_subdivisions_cell_width_lat_lon"], [61, 1, 1, "", "get_cell_width"], [62, 1, 1, "", "get_subdivisions"], [63, 1, 1, "", "make_jigsaw_mesh"], [64, 1, 1, "", "run"], [65, 1, 1, "", "setup"]], "polaris.mesh.QuasiUniformSphericalMeshStep": [[66, 1, 1, "", "__init__"], [67, 1, 1, "", "build_cell_width_lat_lon"], [68, 1, 1, "", "make_jigsaw_mesh"], [69, 1, 1, "", "run"], [70, 1, 1, "", "setup"]], "polaris.mesh.planar": [[71, 2, 1, "", "compute_planar_hex_nx_ny"]], "polaris.mesh.spherical": [[72, 0, 1, "", "SphericalBaseStep"]], "polaris.mesh.spherical.SphericalBaseStep": [[72, 1, 1, "", "__init__"], [73, 1, 1, "", "run"], [74, 1, 1, "", "save_and_plot_cell_width"], [75, 1, 1, "", "setup"]], "polaris.model_step": [[76, 2, 1, "", "make_graph_file"]], "polaris.namelist": [[77, 2, 1, "", "ingest"], [78, 2, 1, "", "parse_replacements"], [79, 2, 1, "", "replace"], [80, 2, 1, "", "write"]], "polaris.ocean": [[128, 0, 1, "", "Ocean"]], "polaris.ocean.Ocean": [[128, 1, 1, "", "__init__"]], "polaris.ocean.convergence.spherical": [[129, 0, 1, "", "SphericalConvergenceForward"]], "polaris.ocean.convergence.spherical.SphericalConvergenceForward": [[129, 1, 1, "", "__init__"]], "polaris.ocean.mesh.spherical": [[130, 2, 1, "", "add_spherical_base_mesh_step"]], "polaris.ocean.model": [[131, 0, 1, "", "OceanModelStep"], [136, 2, 1, "", "get_time_interval_string"]], "polaris.ocean.model.OceanModelStep": [[131, 1, 1, "", "__init__"], [132, 1, 1, "", "compute_cell_count"], [133, 1, 1, "", "constrain_resources"], [134, 1, 1, "", "map_yaml_to_namelist"], [135, 1, 1, "", "setup"]], "polaris.ocean.rpe": [[137, 2, 1, "", "compute_rpe"]], "polaris.ocean.tasks.baroclinic_channel": [[138, 2, 1, "", "add_baroclinic_channel_tasks"]], "polaris.ocean.tasks.baroclinic_channel.decomp": [[139, 0, 1, "", "Decomp"]], "polaris.ocean.tasks.baroclinic_channel.decomp.Decomp": [[139, 1, 1, "", "__init__"]], "polaris.ocean.tasks.baroclinic_channel.default": [[140, 0, 1, "", "Default"]], "polaris.ocean.tasks.baroclinic_channel.default.Default": [[140, 1, 1, "", "__init__"]], "polaris.ocean.tasks.baroclinic_channel.forward": [[141, 0, 1, "", "Forward"]], "polaris.ocean.tasks.baroclinic_channel.forward.Forward": [[141, 1, 1, "", "__init__"], [142, 1, 1, "", "compute_cell_count"], [143, 1, 1, "", "dynamic_model_config"]], "polaris.ocean.tasks.baroclinic_channel.init": [[144, 0, 1, "", "Init"]], "polaris.ocean.tasks.baroclinic_channel.init.Init": [[144, 1, 1, "", "__init__"], [145, 1, 1, "", "run"], [146, 1, 1, "", "setup"]], "polaris.ocean.tasks.baroclinic_channel.restart": [[147, 0, 1, "", "Restart"]], "polaris.ocean.tasks.baroclinic_channel.restart.Restart": [[147, 1, 1, "", "__init__"]], "polaris.ocean.tasks.baroclinic_channel.restart.restart_step": [[148, 0, 1, "", "RestartStep"]], "polaris.ocean.tasks.baroclinic_channel.restart.restart_step.RestartStep": [[148, 1, 1, "", "__init__"], [149, 1, 1, "", "dynamic_model_config"]], "polaris.ocean.tasks.baroclinic_channel.rpe": [[150, 0, 1, "", "Rpe"]], "polaris.ocean.tasks.baroclinic_channel.rpe.Rpe": [[150, 1, 1, "", "__init__"], [151, 1, 1, "", "configure"]], "polaris.ocean.tasks.baroclinic_channel.rpe.analysis": [[152, 0, 1, "", "Analysis"]], "polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis": [[152, 1, 1, "", "__init__"], [153, 1, 1, "", "run"], [154, 1, 1, "", "setup"]], "polaris.ocean.tasks.baroclinic_channel.threads": [[155, 0, 1, "", "Threads"]], "polaris.ocean.tasks.baroclinic_channel.threads.Threads": [[155, 1, 1, "", "__init__"]], "polaris.ocean.tasks.baroclinic_channel.validate": [[156, 0, 1, "", "Validate"]], "polaris.ocean.tasks.baroclinic_channel.validate.Validate": [[156, 1, 1, "", "__init__"], [157, 1, 1, "", "run"]], "polaris.ocean.tasks.baroclinic_channel.viz": [[158, 0, 1, "", "Viz"]], "polaris.ocean.tasks.baroclinic_channel.viz.Viz": [[158, 1, 1, "", "__init__"], [159, 1, 1, "", "run"]], "polaris.ocean.tasks.cosine_bell": [[160, 0, 1, "", "CosineBell"], [162, 2, 1, "", "add_cosine_bell_tasks"]], "polaris.ocean.tasks.cosine_bell.CosineBell": [[160, 1, 1, "", "__init__"], [161, 1, 1, "", "configure"]], "polaris.ocean.tasks.cosine_bell.analysis": [[163, 0, 1, "", "Analysis"]], "polaris.ocean.tasks.cosine_bell.analysis.Analysis": [[163, 1, 1, "", "__init__"], [164, 1, 1, "", "rmse"], [165, 1, 1, "", "run"]], "polaris.ocean.tasks.cosine_bell.forward": [[166, 0, 1, "", "Forward"]], "polaris.ocean.tasks.cosine_bell.forward.Forward": [[166, 1, 1, "", "__init__"], [167, 1, 1, "", "compute_cell_count"], [168, 1, 1, "", "dynamic_model_config"]], "polaris.ocean.tasks.cosine_bell.init": [[169, 0, 1, "", "Init"]], "polaris.ocean.tasks.cosine_bell.init.Init": [[169, 1, 1, "", "__init__"], [170, 1, 1, "", "run"]], "polaris.ocean.tasks.cosine_bell.viz": [[171, 0, 1, "", "Viz"], [173, 0, 1, "", "VizMap"]], "polaris.ocean.tasks.cosine_bell.viz.Viz": [[171, 1, 1, "", "__init__"], [172, 1, 1, "", "run"]], "polaris.ocean.tasks.cosine_bell.viz.VizMap": [[173, 1, 1, "", "__init__"], [174, 1, 1, "", "run"]], "polaris.ocean.tasks.inertial_gravity_wave": [[175, 0, 1, "", "InertialGravityWave"], [176, 2, 1, "", "add_inertial_gravity_wave_tasks"]], "polaris.ocean.tasks.inertial_gravity_wave.InertialGravityWave": [[175, 1, 1, "", "__init__"]], "polaris.ocean.tasks.inertial_gravity_wave.analysis": [[177, 0, 1, "", "Analysis"]], "polaris.ocean.tasks.inertial_gravity_wave.analysis.Analysis": [[177, 1, 1, "", "__init__"], [178, 1, 1, "", "run"]], "polaris.ocean.tasks.inertial_gravity_wave.exact_solution": [[179, 0, 1, "", "ExactSolution"]], "polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution": [[179, 1, 1, "", "__init__"], [180, 1, 1, "", "normal_velocity"], [181, 1, 1, "", "ssh"]], "polaris.ocean.tasks.inertial_gravity_wave.forward": [[182, 0, 1, "", "Forward"]], "polaris.ocean.tasks.inertial_gravity_wave.forward.Forward": [[182, 1, 1, "", "__init__"], [183, 1, 1, "", "compute_cell_count"], [184, 1, 1, "", "dynamic_model_config"]], "polaris.ocean.tasks.inertial_gravity_wave.init": [[185, 0, 1, "", "Init"]], "polaris.ocean.tasks.inertial_gravity_wave.init.Init": [[185, 1, 1, "", "__init__"], [186, 1, 1, "", "run"]], "polaris.ocean.tasks.inertial_gravity_wave.viz": [[187, 0, 1, "", "Viz"]], "polaris.ocean.tasks.inertial_gravity_wave.viz.Viz": [[187, 1, 1, "", "__init__"], [188, 1, 1, "", "run"]], "polaris.ocean.tasks.manufactured_solution": [[189, 0, 1, "", "ManufacturedSolution"], [190, 2, 1, "", "add_manufactured_solution_tasks"]], "polaris.ocean.tasks.manufactured_solution.ManufacturedSolution": [[189, 1, 1, "", "__init__"]], "polaris.ocean.tasks.manufactured_solution.analysis": [[191, 0, 1, "", "Analysis"]], "polaris.ocean.tasks.manufactured_solution.analysis.Analysis": [[191, 1, 1, "", "__init__"], [192, 1, 1, "", "run"]], "polaris.ocean.tasks.manufactured_solution.exact_solution": [[193, 0, 1, "", "ExactSolution"]], "polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution": [[193, 1, 1, "", "__init__"], [194, 1, 1, "", "normal_velocity"], [195, 1, 1, "", "ssh"]], "polaris.ocean.tasks.manufactured_solution.forward": [[196, 0, 1, "", "Forward"]], "polaris.ocean.tasks.manufactured_solution.forward.Forward": [[196, 1, 1, "", "__init__"], [197, 1, 1, "", "compute_cell_count"], [198, 1, 1, "", "dynamic_model_config"]], "polaris.ocean.tasks.manufactured_solution.init": [[199, 0, 1, "", "Init"]], "polaris.ocean.tasks.manufactured_solution.init.Init": [[199, 1, 1, "", "__init__"], [200, 1, 1, "", "run"]], "polaris.ocean.tasks.manufactured_solution.viz": [[201, 0, 1, "", "Viz"]], "polaris.ocean.tasks.manufactured_solution.viz.Viz": [[201, 1, 1, "", "__init__"], [202, 1, 1, "", "run"]], "polaris.ocean.tasks.single_column": [[203, 2, 1, "", "add_single_column_tasks"]], "polaris.ocean.tasks.single_column.cvmix": [[204, 0, 1, "", "CVMix"]], "polaris.ocean.tasks.single_column.cvmix.CVMix": [[204, 1, 1, "", "__init__"]], "polaris.ocean.tasks.single_column.forward": [[205, 0, 1, "", "Forward"]], "polaris.ocean.tasks.single_column.forward.Forward": [[205, 1, 1, "", "__init__"]], "polaris.ocean.tasks.single_column.ideal_age": [[206, 0, 1, "", "IdealAge"]], "polaris.ocean.tasks.single_column.ideal_age.IdealAge": [[206, 1, 1, "", "__init__"]], "polaris.ocean.tasks.single_column.init": [[207, 0, 1, "", "Init"]], "polaris.ocean.tasks.single_column.init.Init": [[207, 1, 1, "", "__init__"], [208, 1, 1, "", "run"]], "polaris.ocean.tasks.single_column.viz": [[209, 0, 1, "", "Viz"]], "polaris.ocean.tasks.single_column.viz.Viz": [[209, 1, 1, "", "__init__"], [210, 1, 1, "", "run"]], "polaris.ocean.vertical.grid_1d": [[211, 2, 1, "", "generate_1d_grid"], [212, 2, 1, "", "write_1d_grid"]], "polaris.ocean.vertical": [[213, 2, 1, "", "init_vertical_coord"]], "polaris.ocean.vertical.partial_cells": [[214, 2, 1, "", "alter_bottom_depth"], [215, 2, 1, "", "alter_ssh"]], "polaris.ocean.vertical.zlevel": [[216, 2, 1, "", "compute_min_max_level_cell"], [217, 2, 1, "", "compute_z_level_layer_thickness"], [218, 2, 1, "", "compute_z_level_resting_thickness"], [219, 2, 1, "", "init_z_level_vertical_coord"]], "polaris.ocean.vertical.zstar": [[220, 2, 1, "", "init_z_star_vertical_coord"]], "polaris.parallel": [[81, 2, 1, "", "get_available_parallel_resources"], [82, 2, 1, "", "get_parallel_command"], [83, 2, 1, "", "run_command"], [84, 2, 1, "", "set_cores_per_node"]], "polaris.provenance": [[85, 2, 1, "", "write"]], "polaris.remap": [[86, 0, 1, "", "MappingFileStep"]], "polaris.remap.MappingFileStep": [[86, 1, 1, "", "__init__"], [87, 1, 1, "", "dst_from_lon_lat"], [88, 1, 1, "", "dst_from_mpas"], [89, 1, 1, "", "dst_from_points"], [90, 1, 1, "", "dst_from_proj"], [91, 1, 1, "", "dst_global_lon_lat"], [92, 1, 1, "", "get_remapper"], [93, 1, 1, "", "runtime_setup"], [94, 1, 1, "", "src_from_lon_lat"], [95, 1, 1, "", "src_from_mpas"], [96, 1, 1, "", "src_from_proj"]], "polaris.run": [[97, 2, 1, "", "complete_step_run"], [98, 2, 1, "", "load_dependencies"], [101, 2, 1, "", "setup_config"], [102, 2, 1, "", "unpickle_suite"]], "polaris.run.serial": [[99, 2, 1, "", "run_single_step"], [100, 2, 1, "", "run_tasks"]], "polaris.seaice": [[241, 0, 1, "", "SeaIce"]], "polaris.seaice.SeaIce": [[241, 1, 1, "", "__init__"]], "polaris.seaice.tasks.single_column": [[242, 2, 1, "", "add_single_column_tasks"]], "polaris.seaice.tasks.single_column.exact_restart": [[243, 0, 1, "", "ExactRestart"]], "polaris.seaice.tasks.single_column.exact_restart.ExactRestart": [[243, 1, 1, "", "__init__"]], "polaris.seaice.tasks.single_column.exact_restart.validate": [[244, 0, 1, "", "Validate"]], "polaris.seaice.tasks.single_column.exact_restart.validate.Validate": [[244, 1, 1, "", "__init__"], [245, 1, 1, "", "run"]], "polaris.seaice.tasks.single_column.forward": [[246, 0, 1, "", "Forward"]], "polaris.seaice.tasks.single_column.forward.Forward": [[246, 1, 1, "", "__init__"]], "polaris.seaice.tasks.single_column.standard_physics": [[247, 0, 1, "", "StandardPhysics"]], "polaris.seaice.tasks.single_column.standard_physics.StandardPhysics": [[247, 1, 1, "", "__init__"]], "polaris.seaice.tasks.single_column.standard_physics.viz": [[248, 0, 1, "", "Viz"]], "polaris.seaice.tasks.single_column.standard_physics.viz.Viz": [[248, 1, 1, "", "__init__"], [249, 1, 1, "", "run"]], "polaris.setup": [[103, 2, 1, "", "setup_task"], [104, 2, 1, "", "setup_tasks"]], "polaris.streams": [[105, 2, 1, "", "read"], [106, 2, 1, "", "update_defaults"], [107, 2, 1, "", "update_tree"], [108, 2, 1, "", "write"]], "polaris.suite": [[109, 2, 1, "", "setup_suite"]], "polaris.validate": [[110, 2, 1, "", "compare_variables"]], "polaris.viz.globe": [[111, 2, 1, "", "plot_global"]], "polaris.viz": [[112, 2, 1, "", "plot_horiz_field"]], "polaris.yaml": [[113, 0, 1, "", "PolarisYaml"], [117, 2, 1, "", "main_mpas_to_yaml"], [118, 2, 1, "", "mpas_namelist_and_streams_to_yaml"], [119, 2, 1, "", "yaml_to_mpas_streams"]], "polaris.yaml.PolarisYaml": [[113, 1, 1, "", "__init__"], [114, 1, 1, "", "read"], [115, 1, 1, "", "update"], [116, 1, 1, "", "write"]]}, "objtypes": {"0": "py:class", "1": "py:method", "2": "py:function", "3": "py:module"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"], "2": ["py", "function", "Python function"], "3": ["py", "module", "Python module"]}, "titleterms": {"design": [0, 2], "document": [0, 4, 7, 257], "share": [1, 6, 237, 257], "step": [1, 3, 34, 35, 36, 37, 38, 39, 40, 41, 42, 126, 234, 257, 269, 270, 272, 273, 274, 275, 280], "summari": [1, 2], "requir": [1, 2], "ar": 1, "run": [1, 3, 8, 14, 39, 64, 69, 73, 97, 98, 99, 100, 101, 102, 127, 145, 153, 157, 159, 165, 170, 172, 174, 178, 186, 188, 192, 200, 202, 208, 210, 234, 238, 245, 249, 269, 270, 272, 273, 274, 275, 276, 279, 280], "onc": 1, "befor": 1, "depend": [1, 6, 234], "output": [1, 234, 257], "daughter": 1, "task": [1, 3, 43, 44, 45, 126, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 226, 230, 233, 236, 237, 239, 242, 243, 244, 245, 246, 247, 248, 249, 252, 257, 271, 275, 276, 278, 280, 282], "work": 1, "directori": [1, 232], "structur": [1, 232], "i": [1, 276], "intuit": 1, "path": 1, "easili": 1, "discover": 1, "user": [1, 238, 256, 258, 276], "The": 1, "mai": 1, "us": 1, "multipl": 1, "do": [1, 6], "reli": 1, "from": [1, 6, 18, 127, 234, 238, 263], "other": [1, 124, 234, 257, 263, 276], "implement": [1, 2], "set": [1, 127, 238, 276], "up": [1, 238, 276], "test": [1, 2, 6, 126, 127, 257, 258, 279], "And": 1, "valid": [1, 2, 3, 17, 110, 156, 157, 224, 244, 245, 257, 276], "templat": [2, 14], "name": 2, "topic": 2, "here": 2, "algorithm": 2, "option": [2, 6, 14, 127, 238, 257, 259, 260, 261, 262, 263, 264, 269, 270, 272, 273, 274, 275, 279, 280], "same": 2, "api": 3, "refer": [3, 126, 127], "compon": [3, 14, 19, 20, 48, 127, 221, 231, 237, 238, 250, 267, 276, 277], "polari": [3, 5, 6, 8, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 234, 237, 238, 241, 242, 243, 244, 245, 246, 247, 248, 249, 256, 276], "framework": [3, 10, 126, 127, 224, 225, 227, 228, 229, 237, 240, 253, 265], "command": [3, 5, 8], "line": [3, 5], "interfac": [3, 5], "list": [3, 5, 8, 55, 56, 57], "setup": [3, 5, 8, 32, 42, 65, 70, 75, 103, 104, 135, 146, 154, 234], "suit": [3, 5, 8, 109, 235, 268, 276, 281], "cach": [3, 5, 8, 47, 234], "mpas_to_yaml": [3, 5], "base": [3, 126], "class": [3, 237], "modelstep": [3, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33], "config": [3, 6, 9, 14, 49, 124, 127, 231, 257, 258, 259, 260, 261, 262, 263, 264, 269, 270, 272, 273, 274, 275, 279, 280], "io": [3, 11, 50, 51, 52], "job": [3, 53, 54, 263, 276], "log": [3, 12, 58], "mesh": [3, 13, 14, 18, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 126, 127, 130, 257, 269, 270, 272, 273, 274, 275, 279, 280], "model_step": [3, 76], "namelist": [3, 14, 77, 78, 79, 80, 127], "parallel": [3, 81, 82, 83, 84], "proven": [3, 15, 85], "remap": [3, 16, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96], "stream": [3, 14, 105, 106, 107, 108, 127, 257], "viz": [3, 111, 112, 158, 159, 171, 172, 173, 174, 187, 188, 201, 202, 209, 210, 225, 227, 228, 229, 248, 249, 253, 257], "yaml": [3, 14, 113, 114, 115, 116, 117, 118, 119, 127], "build": [4, 124, 238, 276], "serial": [5, 8, 99, 100], "deploi": 6, "new": [6, 124, 257], "spack": [6, 124, 238, 276], "environ": [6, 124, 238, 254, 276], "where": 6, "we": 6, "updat": [6, 14, 115, 238], "mach": 6, "conda": [6, 238, 254, 263, 276], "identifi": 6, "e3sm": [6, 14, 127, 238, 276], "machin": [6, 124, 238, 263, 276], "describ": [6, 124], "modul": [6, 8, 237, 238], "env": 6, "variabl": [6, 17], "etc": 6, "creat": [6, 238, 257], "remot": [6, 264], "branch": 6, "petsc": [6, 238], "netlib": [6, 238], "lapack": [6, 238], "albani": [6, 238], "troubleshoot": [6, 238, 254], "mpa": [6, 127, 223, 251], "ocean": [6, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 223, 267], "without": 6, "mali": 6, "docstr": 7, "file": [9, 14, 124, 127, 231, 234, 257, 258], "comment": 9, "symlink": [11, 52, 234], "download": [11, 50, 234], "spheric": [13, 18, 72, 73, 74, 75, 126, 127, 129, 130], "planar": [13, 18, 71], "uniform": [13, 127, 266], "gener": 13, "model": [14, 126, 127, 131, 132, 133, 134, 135, 136, 222, 251, 257, 276], "an": [14, 127, 257], "ad": [14, 124, 234, 257], "dynam": [14, 257], "input": [14, 234], "partit": [14, 28], "pio": 14, "make": [14, 257], "graph": 14, "against": 17, "baselin": 17, "norm": 17, "visual": [18, 257, 279], "horizont": [18, 257], "field": 18, "global": 18, "lat": 18, "lon": 18, "plot": [18, 257], "add_task": 20, "add_model_config_opt": 22, "add_namelist_fil": 23, "add_streams_fil": 24, "add_yaml_fil": 25, "dynamic_model_config": [26, 143, 149, 168, 184, 198], "map_yaml_to_namelist": [27, 134], "process_inputs_and_output": 29, "runtime_setup": [30, 40, 93, 234], "set_model_resourc": 31, "update_namelist_pio": 33, "add_depend": 35, "add_input_fil": 36, "add_output_fil": 37, "constrain_resourc": [38, 133, 234], "set_resourc": 41, "add_step": 44, "configur": [45, 151, 161, 236, 254], "__main__": 46, "main": 46, "update_cach": 47, "get_compon": 48, "polarisconfigpars": 49, "imp_r": 51, "get_slurm_opt": 53, "write_job_script": 54, "list_cas": 55, "list_machin": 56, "list_suit": 57, "log_method_cal": 58, "icosahedralmeshstep": [59, 60, 61, 62, 63, 64, 65], "build_subdivisions_cell_width_lat_lon": 60, "get_cell_width": 61, "get_subdivis": 62, "make_jigsaw_mesh": [63, 68], "quasiuniformsphericalmeshstep": [66, 67, 68, 69, 70], "build_cell_width_lat_lon": 67, "compute_planar_hex_nx_ni": 71, "sphericalbasestep": [72, 73, 74, 75], "save_and_plot_cell_width": 74, "make_graph_fil": 76, "ingest": 77, "parse_replac": 78, "replac": 79, "write": [80, 85, 108, 116], "get_available_parallel_resourc": 81, "get_parallel_command": 82, "run_command": 83, "set_cores_per_nod": 84, "mappingfilestep": [86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96], "dst_from_lon_lat": 87, "dst_from_mpa": 88, "dst_from_point": 89, "dst_from_proj": 90, "dst_global_lon_lat": 91, "get_remapp": 92, "src_from_lon_lat": 94, "src_from_mpa": 95, "src_from_proj": 96, "complete_step_run": 97, "load_depend": 98, "run_single_step": 99, "run_task": 100, "setup_config": 101, "unpickle_suit": 102, "setup_task": [103, 104], "read": [105, 114], "update_default": 106, "update_tre": 107, "setup_suit": 109, "compare_vari": 110, "globe": 111, "plot_glob": 111, "plot_horiz_field": 112, "polarisyaml": [113, 114, 115, 116], "main_mpas_to_yaml": 117, "mpas_namelist_and_streams_to_yaml": 118, "yaml_to_mpas_stream": 119, "anvil": [120, 259], "intel": [120, 122, 123, 259, 261, 262], "gnu": [120, 121, 122, 123, 125, 259, 260, 261, 264], "chicoma": [121, 260], "cpu": [121, 125, 260, 264], "chrysali": [122, 261], "compymcnodefac": [123, 262], "support": [124, 222, 238, 251, 263, 276], "perlmutt": [125, 264], "pm": 125, "baroclinic_channel": [126, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 224], "inertial_gravity_wav": [126, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 227], "cosine_bel": [126, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 225, 268], "manufactured_solut": [126, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 228], "single_column": [126, 203, 204, 205, 206, 207, 208, 209, 210, 229, 239, 242, 243, 244, 245, 246, 247, 248, 249, 253], "converg": [126, 127, 129, 273], "potenti": [126, 127], "energi": [126, 127], "rpe": [126, 127, 137, 150, 151, 152, 153, 154, 224, 269], "vertic": [126, 127, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 257, 266, 269, 270, 272, 273, 274, 275], "coordin": [126, 127, 257, 266], "v": 127, "map": 127, "omega": 127, "mpi": [127, 263], "resourc": 127, "time": [127, 257, 269, 270, 272, 273, 274, 275, 280], "interv": 127, "quasi": 127, "icosahedr": 127, "rest": 127, "sphericalconvergenceforward": 129, "add_spherical_base_mesh_step": 130, "oceanmodelstep": [131, 132, 133, 134, 135], "compute_cell_count": [132, 142, 167, 183, 197], "get_time_interval_str": 136, "compute_rp": 137, "add_baroclinic_channel_task": 138, "decomp": [139, 224, 269], "default": [140, 224, 257, 269], "forward": [141, 142, 143, 166, 167, 168, 182, 183, 184, 196, 197, 198, 205, 224, 225, 227, 228, 229, 246, 253, 257], "init": [144, 145, 146, 169, 170, 185, 186, 199, 200, 207, 208, 224, 225, 227, 228, 229, 257], "restart": [147, 148, 149, 224, 269, 279], "restart_step": [148, 149], "restartstep": [148, 149], "analysi": [152, 153, 154, 163, 164, 165, 177, 178, 191, 192, 225, 227, 228, 257], "thread": [155, 224, 269], "cosinebel": [160, 161], "add_cosine_bell_task": 162, "rmse": 164, "vizmap": [173, 174], "inertialgravitywav": 175, "add_inertial_gravity_wave_task": 176, "exact_solut": [179, 180, 181, 193, 194, 195, 227, 228], "exactsolut": [179, 180, 181, 193, 194, 195], "normal_veloc": [180, 194], "ssh": [181, 195], "manufacturedsolut": 189, "add_manufactured_solution_task": 190, "add_single_column_task": [203, 242], "cvmix": [204, 229, 274], "ideal_ag": 206, "idealag": 206, "grid_1d": [211, 212], "generate_1d_grid": 211, "write_1d_grid": 212, "init_vertical_coord": 213, "partial_cel": [214, 215], "alter_bottom_depth": 214, "alter_ssh": 215, "zlevel": [216, 217, 218, 219], "compute_min_max_level_cel": 216, "compute_z_level_layer_thick": 217, "compute_z_level_resting_thick": 218, "init_z_level_vertical_coord": 219, "zstar": 220, "init_z_star_vertical_coord": 220, "initi": [223, 251, 257, 269, 270, 272, 273, 274, 275, 279, 280], "condit": [223, 251, 257, 269, 270, 272, 273, 274, 275, 279, 280], "boundari": 223, "forc": [223, 251, 269, 270, 272, 273, 274, 275, 279, 280], "base_mesh": 225, "ideal": [229, 274], "ag": [229, 274], "categori": [230, 275, 280], "constructor": [231, 234, 236], "organ": 233, "attribut": [234, 236], "copi": 234, "pull": 235, "request": 235, "pr": 235, "nightli": 235, "overview": 237, "code": [237, 238, 257], "style": [237, 238], "packag": 237, "within": 237, "group": [237, 257], "relat": 237, "quick": [238, 276], "start": [238, 257, 276], "develop": [238, 256, 257], "unix": 238, "shell": 238, "repositori": 238, "beginn": 238, "compil": 238, "system": 238, "unknown": 238, "what": 238, "script": [238, 276], "doe": 238, "flag": 238, "activ": 238, "switch": 238, "between": [238, 257], "differ": 238, "onli": 238, "repo": 238, "worktre": 238, "advanc": 238, "seaic": [239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251], "exact_restart": [243, 244, 245], "exactrestart": 243, "standard_phys": [247, 248, 249], "standardphys": 247, "standard_physics_test": 253, "exact_restart_test": 253, "solver": 254, "error": 254, "when": 254, "proxi": 254, "lanl": 254, "mac": 254, "gethostbynam": 254, "fail": 254, "glossari": [255, 256], "": 256, "guid": 256, "tutori": [256, 257], "compass": 256, "get": 257, "vari": 257, "resolut": 257, "paramet": 257, "thing": 257, "out": 257, "defin": 257, "more": 257, "again": 257, "one": 257, "second": 257, "enhanc": 257, "comput": 257, "cell": 257, "count": 257, "superclass": 257, "studi": 257, "how": 257, "pass": 257, "data": [257, 264], "A": 258, "case": 258, "slurm": 263, "queue": 263, "mpich": 263, "openmpi": 263, "No": 263, "forg": 263, "jupyt": 264, "notebook": 264, "1d": 266, "grid": [266, 269, 270, 272, 273, 274, 275], "type": 266, "tanh_dz": 266, "60layerphc": 266, "100layere3smv1": 266, "3d": 266, "z": 266, "star": 266, "level": 266, "cosine_bell_cached_init": 268, "baroclin": 269, "channel": 269, "descript": [269, 270, 272, 273, 274, 275, 279, 280], "durat": [269, 270, 272, 273, 274, 275, 279, 280], "core": [269, 270, 272, 273, 274, 275, 279, 280], "cosin": 270, "bell": 270, "inerti": 272, "graviti": 272, "wave": 272, "manufactur": 273, "solut": 273, "singl": [274, 279], "column": [274, 279], "task_nam": [275, 280], "yet": 276, "load": 276, "standalon": 276, "sea": 277, "ic": 277, "standard": 279, "physic": 279, "timestep": 279, "exact": 279}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.viewcode": 1, "sphinx": 57}, "alltitles": {"Design Documents": [[0, "design-documents"]], "Shared steps": [[1, "shared-steps"]], "Summary": [[1, "summary"], [2, "summary"]], "Requirements": [[1, "requirements"], [2, "requirements"]], "Requirement: Shared steps are run once.": [[1, "requirement-shared-steps-are-run-once"]], "Requirement: Shared steps are run before steps that depend on their output.": [[1, "requirement-shared-steps-are-run-before-steps-that-depend-on-their-output"]], "Requirement: Shared steps are not daughters of a task": [[1, "requirement-shared-steps-are-not-daughters-of-a-task"]], "Requirement: Working directory structure is intuitive.": [[1, "requirement-working-directory-structure-is-intuitive"]], "Requirement: Working directory step paths are easily discoverable by users.": [[1, "requirement-working-directory-step-paths-are-easily-discoverable-by-users"]], "Requirement: The output of shared steps may be used by multiple tasks.": [[1, "requirement-the-output-of-shared-steps-may-be-used-by-multiple-tasks"]], "Requirement: tasks do not rely on outputs from steps in other tasks": [[1, "requirement-tasks-do-not-rely-on-outputs-from-steps-in-other-tasks"]], "Implementation": [[1, "implementation"], [2, "implementation"]], "Implementation: Shared steps are set up once.": [[1, "implementation-shared-steps-are-set-up-once"]], "Implementation: Shared steps are run before steps that depend on their output.": [[1, "implementation-shared-steps-are-run-before-steps-that-depend-on-their-output"]], "Implementation: Shared steps are not daughters of a task": [[1, "implementation-shared-steps-are-not-daughters-of-a-task"]], "Implementation: Working directory structure is intuitive.": [[1, "implementation-working-directory-structure-is-intuitive"]], "Implementation: Working directory step paths are easily discoverable by users.": [[1, "implementation-working-directory-step-paths-are-easily-discoverable-by-users"]], "Implementation: The output of shared steps may be used by multiple tasks.": [[1, "implementation-the-output-of-shared-steps-may-be-used-by-multiple-tasks"]], "Implementation: tasks do not rely on outputs from steps in other tasks": [[1, "implementation-tasks-do-not-rely-on-outputs-from-steps-in-other-tasks"]], "Testing": [[1, "testing"], [2, "testing"]], "Testing And Validation: Shared steps are run once.": [[1, "testing-and-validation-shared-steps-are-run-once"]], "Testing And Validation: Shared steps are run before steps that depend on their output.": [[1, "testing-and-validation-shared-steps-are-run-before-steps-that-depend-on-their-output"]], "Testing And Validation: Shared steps are not daughters of a task": [[1, "testing-and-validation-shared-steps-are-not-daughters-of-a-task"]], "Testing And Validation: Working directory structure is intuitive.": [[1, "testing-and-validation-working-directory-structure-is-intuitive"]], "Testing And Validation: Working directory step paths are easily discoverable by users.": [[1, "testing-and-validation-working-directory-step-paths-are-easily-discoverable-by-users"]], "Testing And Validation: The output of shared steps may be used by multiple tasks.": [[1, "testing-and-validation-the-output-of-shared-steps-may-be-used-by-multiple-tasks"]], "Testing And Validation: tasks do not rely on outputs from steps in other tasks": [[1, "testing-and-validation-tasks-do-not-rely-on-outputs-from-steps-in-other-tasks"]], "Template": [[2, "template"]], "Requirement: name-of-topic-here": [[2, "requirement-name-of-topic-here"]], "Algorithm Design (optional)": [[2, "algorithm-design-optional"]], "Algorithm Design: name-of-topic-here (same as Requirement)": [[2, "algorithm-design-name-of-topic-here-same-as-requirement"]], "Implementation: name-of-topic-here (same as Requirement)": [[2, "implementation-name-of-topic-here-same-as-requirement"]], "Testing and Validation: name-of-topic-here (same as Requirement)": [[2, "testing-and-validation-name-of-topic-here-same-as-requirement"]], "API reference": [[3, "api-reference"]], "Components": [[3, "components"], [231, "components"]], "polaris framework": [[3, "polaris-framework"]], "Command-line interface": [[3, "command-line-interface"], [5, "command-line-interface"]], "list": [[3, "list"]], "setup": [[3, "setup"]], "suite": [[3, "suite"]], "run": [[3, "run"]], "cache": [[3, "cache"]], "mpas_to_yaml": [[3, "mpas-to-yaml"], [5, "mpas-to-yaml"]], "Base Classes": [[3, "base-classes"]], "Component": [[3, "component"]], "Task": [[3, "task"]], "Step": [[3, "step"]], "ModelStep": [[3, "modelstep"]], "components": [[3, "id1"]], "config": [[3, "config"]], "io": [[3, "io"]], "job": [[3, "job"]], "logging": [[3, "logging"]], "mesh": [[3, "mesh"], [269, "mesh"], [269, "id2"], [269, "id9"], [269, "id17"], [269, "id25"], [269, "id32"], [270, "mesh"], [272, "mesh"], [273, "mesh"], [274, "mesh"], [274, "id3"], [274, "id8"], [275, "mesh"], [279, "mesh"], [279, "id1"], [279, "id6"], [280, "mesh"]], "model_step": [[3, "model-step"]], "namelist": [[3, "namelist"]], "parallel": [[3, "parallel"]], "provenance": [[3, "provenance"]], "remap": [[3, "remap"]], "streams": [[3, "streams"]], "validate": [[3, "validate"], [224, "validate"]], "viz": [[3, "viz"], [225, "viz"], [227, "viz"], [228, "viz"], [229, "viz"], [253, "viz"]], "yaml": [[3, "yaml"]], "Building the Documentation": [[4, "building-the-documentation"]], "polaris list": [[5, "polaris-list"]], "polaris setup": [[5, "polaris-setup"]], "polaris suite": [[5, "polaris-suite"]], "polaris serial": [[5, "polaris-serial"]], "polaris cache": [[5, "polaris-cache"]], "Deploying a new spack environment": [[6, "deploying-a-new-spack-environment"]], "Where do we update polaris dependencies?": [[6, "where-do-we-update-polaris-dependencies"]], "Mache": [[6, "mache"], [6, "id1"]], "Spack": [[6, "spack"]], "Conda": [[6, "conda"]], "Identifying E3SM machines": [[6, "identifying-e3sm-machines"]], "Config options describing E3SM machines": [[6, "config-options-describing-e3sm-machines"]], "Modules, env. variables, etc. for  E3SM machines": [[6, "modules-env-variables-etc-for-e3sm-machines"]], "Creating spack environments": [[6, "creating-spack-environments"]], "Updating spack from polaris with mache from a remote branch": [[6, "updating-spack-from-polaris-with-mache-from-a-remote-branch"]], "Testing spack with PETSc (and Netlib LAPACK)": [[6, "testing-spack-with-petsc-and-netlib-lapack"]], "Testing spack with Albany": [[6, "testing-spack-with-albany"]], "Troubleshooting spack": [[6, "troubleshooting-spack"]], "Testing polaris": [[6, "testing-polaris"]], "Testing MPAS-Ocean without PETSc": [[6, "testing-mpas-ocean-without-petsc"]], "Testing MALI with Albany": [[6, "testing-mali-with-albany"]], "Testing MPAS-Ocean with PETSc": [[6, "testing-mpas-ocean-with-petsc"]], "Deploying shared spack environments": [[6, "deploying-shared-spack-environments"]], "Deploy spack for polaris without Albany or PETSc": [[6, "deploy-spack-for-polaris-without-albany-or-petsc"]], "Deploying spack with Albany": [[6, "deploying-spack-with-albany"]], "Deploying spack with PETSc (and Netlib LAPACK)": [[6, "deploying-spack-with-petsc-and-netlib-lapack"]], "Documentation": [[7, "documentation"], [257, "documentation"]], "Docstrings": [[7, "docstrings"]], "Modules for polaris commands": [[8, "modules-for-polaris-commands"]], "list module": [[8, "list-module"]], "setup module": [[8, "setup-module"]], "suite module": [[8, "suite-module"]], "run.serial module": [[8, "run-serial-module"]], "cache module": [[8, "cache-module"]], "Config files": [[9, "config-files"]], "Comments in config files": [[9, "comments-in-config-files"]], "Framework": [[10, "framework"], [265, "framework"]], "IO": [[11, "io"]], "Symlinks": [[11, "symlinks"]], "Download": [[11, "download"]], "Logging": [[12, "logging"]], "Mesh": [[13, "mesh"]], "Spherical Meshes": [[13, "spherical-meshes"]], "Planar Meshes": [[13, "planar-meshes"]], "Uniform planar meshes": [[13, "uniform-planar-meshes"]], "General planar meshes": [[13, "general-planar-meshes"]], "Model": [[14, "model"], [127, "model"]], "Running an E3SM component": [[14, "running-an-e3sm-component"], [127, "running-an-e3sm-component"]], "Adding yaml, namelist and streams files": [[14, "adding-yaml-namelist-and-streams-files"]], "Adding a yaml file": [[14, "adding-a-yaml-file"]], "Adding a namelist file": [[14, "adding-a-namelist-file"]], "Adding model config options": [[14, "adding-model-config-options"]], "Dynamic model config options": [[14, "dynamic-model-config-options"]], "Adding a streams file": [[14, "adding-a-streams-file"]], "Adding a template streams file": [[14, "adding-a-template-streams-file"]], "Adding E3SM component as an input": [[14, "adding-e3sm-component-as-an-input"]], "Partitioning the mesh": [[14, "partitioning-the-mesh"]], "Updating PIO namelist options": [[14, "updating-pio-namelist-options"]], "Making a graph file": [[14, "making-a-graph-file"]], "Provenance": [[15, "provenance"]], "Remapping": [[16, "remapping"]], "Validation": [[17, "validation"]], "Validating variables against a baseline": [[17, "validating-variables-against-a-baseline"]], "Validating variables": [[17, "validating-variables"]], "Norms": [[17, "norms"]], "Visualization": [[18, "visualization"]], "horizontal fields from planar meshes": [[18, "horizontal-fields-from-planar-meshes"]], "global lat/lon plots from spherical meshes": [[18, "global-lat-lon-plots-from-spherical-meshes"]], "polaris.Component": [[19, "polaris-component"]], "polaris.Component.add_task": [[20, "polaris-component-add-task"]], "polaris.ModelStep": [[21, "polaris-modelstep"]], "polaris.ModelStep.add_model_config_options": [[22, "polaris-modelstep-add-model-config-options"]], "polaris.ModelStep.add_namelist_file": [[23, "polaris-modelstep-add-namelist-file"]], "polaris.ModelStep.add_streams_file": [[24, "polaris-modelstep-add-streams-file"]], "polaris.ModelStep.add_yaml_file": [[25, "polaris-modelstep-add-yaml-file"]], "polaris.ModelStep.dynamic_model_config": [[26, "polaris-modelstep-dynamic-model-config"]], "polaris.ModelStep.map_yaml_to_namelist": [[27, "polaris-modelstep-map-yaml-to-namelist"]], "polaris.ModelStep.partition": [[28, "polaris-modelstep-partition"]], "polaris.ModelStep.process_inputs_and_outputs": [[29, "polaris-modelstep-process-inputs-and-outputs"]], "polaris.ModelStep.runtime_setup": [[30, "polaris-modelstep-runtime-setup"]], "polaris.ModelStep.set_model_resources": [[31, "polaris-modelstep-set-model-resources"]], "polaris.ModelStep.setup": [[32, "polaris-modelstep-setup"]], "polaris.ModelStep.update_namelist_pio": [[33, "polaris-modelstep-update-namelist-pio"]], "polaris.Step": [[34, "polaris-step"]], "polaris.Step.add_dependency": [[35, "polaris-step-add-dependency"]], "polaris.Step.add_input_file": [[36, "polaris-step-add-input-file"]], "polaris.Step.add_output_file": [[37, "polaris-step-add-output-file"]], "polaris.Step.constrain_resources": [[38, "polaris-step-constrain-resources"]], "polaris.Step.run": [[39, "polaris-step-run"]], "polaris.Step.runtime_setup": [[40, "polaris-step-runtime-setup"]], "polaris.Step.set_resources": [[41, "polaris-step-set-resources"]], "polaris.Step.setup": [[42, "polaris-step-setup"]], "polaris.Task": [[43, "polaris-task"]], "polaris.Task.add_step": [[44, "polaris-task-add-step"]], "polaris.Task.configure": [[45, "polaris-task-configure"]], "polaris.__main__.main": [[46, "polaris-main-main"]], "polaris.cache.update_cache": [[47, "polaris-cache-update-cache"]], "polaris.components.get_components": [[48, "polaris-components-get-components"]], "polaris.config.PolarisConfigParser": [[49, "polaris-config-polarisconfigparser"]], "polaris.io.download": [[50, "polaris-io-download"]], "polaris.io.imp_res": [[51, "module-polaris.io.imp_res"]], "polaris.io.symlink": [[52, "polaris-io-symlink"]], "polaris.job.get_slurm_options": [[53, "polaris-job-get-slurm-options"]], "polaris.job.write_job_script": [[54, "polaris-job-write-job-script"]], "polaris.list.list_cases": [[55, "polaris-list-list-cases"]], "polaris.list.list_machines": [[56, "polaris-list-list-machines"]], "polaris.list.list_suites": [[57, "polaris-list-list-suites"]], "polaris.logging.log_method_call": [[58, "polaris-logging-log-method-call"]], "polaris.mesh.IcosahedralMeshStep": [[59, "polaris-mesh-icosahedralmeshstep"]], "polaris.mesh.IcosahedralMeshStep.build_subdivisions_cell_width_lat_lon": [[60, "polaris-mesh-icosahedralmeshstep-build-subdivisions-cell-width-lat-lon"]], "polaris.mesh.IcosahedralMeshStep.get_cell_width": [[61, "polaris-mesh-icosahedralmeshstep-get-cell-width"]], "polaris.mesh.IcosahedralMeshStep.get_subdivisions": [[62, "polaris-mesh-icosahedralmeshstep-get-subdivisions"]], "polaris.mesh.IcosahedralMeshStep.make_jigsaw_mesh": [[63, "polaris-mesh-icosahedralmeshstep-make-jigsaw-mesh"]], "polaris.mesh.IcosahedralMeshStep.run": [[64, "polaris-mesh-icosahedralmeshstep-run"]], "polaris.mesh.IcosahedralMeshStep.setup": [[65, "polaris-mesh-icosahedralmeshstep-setup"]], "polaris.mesh.QuasiUniformSphericalMeshStep": [[66, "polaris-mesh-quasiuniformsphericalmeshstep"]], "polaris.mesh.QuasiUniformSphericalMeshStep.build_cell_width_lat_lon": [[67, "polaris-mesh-quasiuniformsphericalmeshstep-build-cell-width-lat-lon"]], "polaris.mesh.QuasiUniformSphericalMeshStep.make_jigsaw_mesh": [[68, "polaris-mesh-quasiuniformsphericalmeshstep-make-jigsaw-mesh"]], "polaris.mesh.QuasiUniformSphericalMeshStep.run": [[69, "polaris-mesh-quasiuniformsphericalmeshstep-run"]], "polaris.mesh.QuasiUniformSphericalMeshStep.setup": [[70, "polaris-mesh-quasiuniformsphericalmeshstep-setup"]], "polaris.mesh.planar.compute_planar_hex_nx_ny": [[71, "polaris-mesh-planar-compute-planar-hex-nx-ny"]], "polaris.mesh.spherical.SphericalBaseStep": [[72, "polaris-mesh-spherical-sphericalbasestep"]], "polaris.mesh.spherical.SphericalBaseStep.run": [[73, "polaris-mesh-spherical-sphericalbasestep-run"]], "polaris.mesh.spherical.SphericalBaseStep.save_and_plot_cell_width": [[74, "polaris-mesh-spherical-sphericalbasestep-save-and-plot-cell-width"]], "polaris.mesh.spherical.SphericalBaseStep.setup": [[75, "polaris-mesh-spherical-sphericalbasestep-setup"]], "polaris.model_step.make_graph_file": [[76, "polaris-model-step-make-graph-file"]], "polaris.namelist.ingest": [[77, "polaris-namelist-ingest"]], "polaris.namelist.parse_replacements": [[78, "polaris-namelist-parse-replacements"]], "polaris.namelist.replace": [[79, "polaris-namelist-replace"]], "polaris.namelist.write": [[80, "polaris-namelist-write"]], "polaris.parallel.get_available_parallel_resources": [[81, "polaris-parallel-get-available-parallel-resources"]], "polaris.parallel.get_parallel_command": [[82, "polaris-parallel-get-parallel-command"]], "polaris.parallel.run_command": [[83, "polaris-parallel-run-command"]], "polaris.parallel.set_cores_per_node": [[84, "polaris-parallel-set-cores-per-node"]], "polaris.provenance.write": [[85, "polaris-provenance-write"]], "polaris.remap.MappingFileStep": [[86, "polaris-remap-mappingfilestep"]], "polaris.remap.MappingFileStep.dst_from_lon_lat": [[87, "polaris-remap-mappingfilestep-dst-from-lon-lat"]], "polaris.remap.MappingFileStep.dst_from_mpas": [[88, "polaris-remap-mappingfilestep-dst-from-mpas"]], "polaris.remap.MappingFileStep.dst_from_points": [[89, "polaris-remap-mappingfilestep-dst-from-points"]], "polaris.remap.MappingFileStep.dst_from_proj": [[90, "polaris-remap-mappingfilestep-dst-from-proj"]], "polaris.remap.MappingFileStep.dst_global_lon_lat": [[91, "polaris-remap-mappingfilestep-dst-global-lon-lat"]], "polaris.remap.MappingFileStep.get_remapper": [[92, "polaris-remap-mappingfilestep-get-remapper"]], "polaris.remap.MappingFileStep.runtime_setup": [[93, "polaris-remap-mappingfilestep-runtime-setup"]], "polaris.remap.MappingFileStep.src_from_lon_lat": [[94, "polaris-remap-mappingfilestep-src-from-lon-lat"]], "polaris.remap.MappingFileStep.src_from_mpas": [[95, "polaris-remap-mappingfilestep-src-from-mpas"]], "polaris.remap.MappingFileStep.src_from_proj": [[96, "polaris-remap-mappingfilestep-src-from-proj"]], "polaris.run.complete_step_run": [[97, "polaris-run-complete-step-run"]], "polaris.run.load_dependencies": [[98, "polaris-run-load-dependencies"]], "polaris.run.serial.run_single_step": [[99, "polaris-run-serial-run-single-step"]], "polaris.run.serial.run_tasks": [[100, "polaris-run-serial-run-tasks"]], "polaris.run.setup_config": [[101, "polaris-run-setup-config"]], "polaris.run.unpickle_suite": [[102, "polaris-run-unpickle-suite"]], "polaris.setup.setup_task": [[103, "polaris-setup-setup-task"]], "polaris.setup.setup_tasks": [[104, "polaris-setup-setup-tasks"]], "polaris.streams.read": [[105, "polaris-streams-read"]], "polaris.streams.update_defaults": [[106, "polaris-streams-update-defaults"]], "polaris.streams.update_tree": [[107, "polaris-streams-update-tree"]], "polaris.streams.write": [[108, "polaris-streams-write"]], "polaris.suite.setup_suite": [[109, "polaris-suite-setup-suite"]], "polaris.validate.compare_variables": [[110, "polaris-validate-compare-variables"]], "polaris.viz.globe.plot_global": [[111, "polaris-viz-globe-plot-global"]], "polaris.viz.plot_horiz_field": [[112, "polaris-viz-plot-horiz-field"]], "polaris.yaml.PolarisYaml": [[113, "polaris-yaml-polarisyaml"]], "polaris.yaml.PolarisYaml.read": [[114, "polaris-yaml-polarisyaml-read"]], "polaris.yaml.PolarisYaml.update": [[115, "polaris-yaml-polarisyaml-update"]], "polaris.yaml.PolarisYaml.write": [[116, "polaris-yaml-polarisyaml-write"]], "polaris.yaml.main_mpas_to_yaml": [[117, "polaris-yaml-main-mpas-to-yaml"]], "polaris.yaml.mpas_namelist_and_streams_to_yaml": [[118, "polaris-yaml-mpas-namelist-and-streams-to-yaml"]], "polaris.yaml.yaml_to_mpas_streams": [[119, "polaris-yaml-yaml-to-mpas-streams"]], "Anvil": [[120, "anvil"], [259, "anvil"]], "intel": [[120, "intel"], [122, "intel"], [123, "intel"]], "gnu": [[120, "gnu"], [122, "gnu"], [123, "gnu"]], "Chicoma": [[121, "chicoma"], [260, "chicoma"]], "chicoma-cpu, gnu": [[121, "chicoma-cpu-gnu"]], "Chrysalis": [[122, "chrysalis"], [261, "chrysalis"]], "CompyMcNodeFace": [[123, "compymcnodeface"], [262, "compymcnodeface"]], "Machines": [[124, "machines"], [263, "machines"]], "Supported Machines": [[124, "supported-machines"], [263, "supported-machines"]], "Other Machines": [[124, "other-machines"], [263, "other-machines"]], "Adding a New Supported Machine": [[124, "adding-a-new-supported-machine"]], "Adding a Machine Config File": [[124, "adding-a-machine-config-file"]], "Describing a Spack Environment": [[124, "describing-a-spack-environment"]], "Building the Spack Environment": [[124, "building-the-spack-environment"]], "Perlmutter": [[125, "perlmutter"], [264, "perlmutter"]], "pm-cpu, gnu": [[125, "pm-cpu-gnu"]], "ocean": [[126, "ocean"]], "Tasks": [[126, "tasks"], [226, "tasks"], [236, "tasks"], [239, "tasks"], [252, "tasks"], [271, "tasks"], [278, "tasks"], [282, "tasks"]], "baroclinic_channel": [[126, "baroclinic-channel"], [224, "baroclinic-channel"]], "inertial_gravity_wave": [[126, "inertial-gravity-wave"], [227, "inertial-gravity-wave"]], "cosine_bell": [[126, "cosine-bell"], [225, "cosine-bell"]], "manufactured_solution": [[126, "manufactured-solution"], [228, "manufactured-solution"]], "single_column": [[126, "single-column"], [229, "single-column"], [239, "single-column"], [253, "single-column"]], "Ocean Framework": [[126, "ocean-framework"]], "Spherical Convergence Tests": [[126, "spherical-convergence-tests"], [127, "spherical-convergence-tests"]], "Ocean Model": [[126, "ocean-model"]], "Spherical Base Mesh Step": [[126, "spherical-base-mesh-step"]], "Reference Potential Energy (RPE)": [[126, "reference-potential-energy-rpe"]], "Vertical coordinates": [[126, "vertical-coordinates"]], "Ocean framework": [[127, "ocean-framework"]], "YAML files vs. namelists and streams": [[127, "yaml-files-vs-namelists-and-streams"]], "Mapping from Omega to MPAS-Ocean config options": [[127, "mapping-from-omega-to-mpas-ocean-config-options"]], "Setting MPI resources": [[127, "setting-mpi-resources"]], "Setting time intervals in model config options": [[127, "setting-time-intervals-in-model-config-options"]], "Model config options and streams": [[127, "model-config-options-and-streams"]], "Quasi-uniform and Icosahedral Spherical Meshes": [[127, "quasi-uniform-and-icosahedral-spherical-meshes"]], "Vertical coordinate": [[127, "vertical-coordinate"], [266, "vertical-coordinate"]], "reference (resting) potential energy (RPE)": [[127, "reference-resting-potential-energy-rpe"]], "polaris.ocean.Ocean": [[128, "polaris-ocean-ocean"]], "polaris.ocean.convergence.spherical.SphericalConvergenceForward": [[129, "polaris-ocean-convergence-spherical-sphericalconvergenceforward"]], "polaris.ocean.mesh.spherical.add_spherical_base_mesh_step": [[130, "polaris-ocean-mesh-spherical-add-spherical-base-mesh-step"]], "polaris.ocean.model.OceanModelStep": [[131, "polaris-ocean-model-oceanmodelstep"]], "polaris.ocean.model.OceanModelStep.compute_cell_count": [[132, "polaris-ocean-model-oceanmodelstep-compute-cell-count"]], "polaris.ocean.model.OceanModelStep.constrain_resources": [[133, "polaris-ocean-model-oceanmodelstep-constrain-resources"]], "polaris.ocean.model.OceanModelStep.map_yaml_to_namelist": [[134, "polaris-ocean-model-oceanmodelstep-map-yaml-to-namelist"]], "polaris.ocean.model.OceanModelStep.setup": [[135, "polaris-ocean-model-oceanmodelstep-setup"]], "polaris.ocean.model.get_time_interval_string": [[136, "polaris-ocean-model-get-time-interval-string"]], "polaris.ocean.rpe.compute_rpe": [[137, "polaris-ocean-rpe-compute-rpe"]], "polaris.ocean.tasks.baroclinic_channel.add_baroclinic_channel_tasks": [[138, "polaris-ocean-tasks-baroclinic-channel-add-baroclinic-channel-tasks"]], "polaris.ocean.tasks.baroclinic_channel.decomp.Decomp": [[139, "polaris-ocean-tasks-baroclinic-channel-decomp-decomp"]], "polaris.ocean.tasks.baroclinic_channel.default.Default": [[140, "polaris-ocean-tasks-baroclinic-channel-default-default"]], "polaris.ocean.tasks.baroclinic_channel.forward.Forward": [[141, "polaris-ocean-tasks-baroclinic-channel-forward-forward"]], "polaris.ocean.tasks.baroclinic_channel.forward.Forward.compute_cell_count": [[142, "polaris-ocean-tasks-baroclinic-channel-forward-forward-compute-cell-count"]], "polaris.ocean.tasks.baroclinic_channel.forward.Forward.dynamic_model_config": [[143, "polaris-ocean-tasks-baroclinic-channel-forward-forward-dynamic-model-config"]], "polaris.ocean.tasks.baroclinic_channel.init.Init": [[144, "polaris-ocean-tasks-baroclinic-channel-init-init"]], "polaris.ocean.tasks.baroclinic_channel.init.Init.run": [[145, "polaris-ocean-tasks-baroclinic-channel-init-init-run"]], "polaris.ocean.tasks.baroclinic_channel.init.Init.setup": [[146, "polaris-ocean-tasks-baroclinic-channel-init-init-setup"]], "polaris.ocean.tasks.baroclinic_channel.restart.Restart": [[147, "polaris-ocean-tasks-baroclinic-channel-restart-restart"]], "polaris.ocean.tasks.baroclinic_channel.restart.restart_step.RestartStep": [[148, "polaris-ocean-tasks-baroclinic-channel-restart-restart-step-restartstep"]], "polaris.ocean.tasks.baroclinic_channel.restart.restart_step.RestartStep.dynamic_model_config": [[149, "polaris-ocean-tasks-baroclinic-channel-restart-restart-step-restartstep-dynamic-model-config"]], "polaris.ocean.tasks.baroclinic_channel.rpe.Rpe": [[150, "polaris-ocean-tasks-baroclinic-channel-rpe-rpe"]], "polaris.ocean.tasks.baroclinic_channel.rpe.Rpe.configure": [[151, "polaris-ocean-tasks-baroclinic-channel-rpe-rpe-configure"]], "polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis": [[152, "polaris-ocean-tasks-baroclinic-channel-rpe-analysis-analysis"]], "polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis.run": [[153, "polaris-ocean-tasks-baroclinic-channel-rpe-analysis-analysis-run"]], "polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis.setup": [[154, "polaris-ocean-tasks-baroclinic-channel-rpe-analysis-analysis-setup"]], "polaris.ocean.tasks.baroclinic_channel.threads.Threads": [[155, "polaris-ocean-tasks-baroclinic-channel-threads-threads"]], "polaris.ocean.tasks.baroclinic_channel.validate.Validate": [[156, "polaris-ocean-tasks-baroclinic-channel-validate-validate"]], "polaris.ocean.tasks.baroclinic_channel.validate.Validate.run": [[157, "polaris-ocean-tasks-baroclinic-channel-validate-validate-run"]], "polaris.ocean.tasks.baroclinic_channel.viz.Viz": [[158, "polaris-ocean-tasks-baroclinic-channel-viz-viz"]], "polaris.ocean.tasks.baroclinic_channel.viz.Viz.run": [[159, "polaris-ocean-tasks-baroclinic-channel-viz-viz-run"]], "polaris.ocean.tasks.cosine_bell.CosineBell": [[160, "polaris-ocean-tasks-cosine-bell-cosinebell"]], "polaris.ocean.tasks.cosine_bell.CosineBell.configure": [[161, "polaris-ocean-tasks-cosine-bell-cosinebell-configure"]], "polaris.ocean.tasks.cosine_bell.add_cosine_bell_tasks": [[162, "polaris-ocean-tasks-cosine-bell-add-cosine-bell-tasks"]], "polaris.ocean.tasks.cosine_bell.analysis.Analysis": [[163, "polaris-ocean-tasks-cosine-bell-analysis-analysis"]], "polaris.ocean.tasks.cosine_bell.analysis.Analysis.rmse": [[164, "polaris-ocean-tasks-cosine-bell-analysis-analysis-rmse"]], "polaris.ocean.tasks.cosine_bell.analysis.Analysis.run": [[165, "polaris-ocean-tasks-cosine-bell-analysis-analysis-run"]], "polaris.ocean.tasks.cosine_bell.forward.Forward": [[166, "polaris-ocean-tasks-cosine-bell-forward-forward"]], "polaris.ocean.tasks.cosine_bell.forward.Forward.compute_cell_count": [[167, "polaris-ocean-tasks-cosine-bell-forward-forward-compute-cell-count"]], "polaris.ocean.tasks.cosine_bell.forward.Forward.dynamic_model_config": [[168, "polaris-ocean-tasks-cosine-bell-forward-forward-dynamic-model-config"]], "polaris.ocean.tasks.cosine_bell.init.Init": [[169, "polaris-ocean-tasks-cosine-bell-init-init"]], "polaris.ocean.tasks.cosine_bell.init.Init.run": [[170, "polaris-ocean-tasks-cosine-bell-init-init-run"]], "polaris.ocean.tasks.cosine_bell.viz.Viz": [[171, "polaris-ocean-tasks-cosine-bell-viz-viz"]], "polaris.ocean.tasks.cosine_bell.viz.Viz.run": [[172, "polaris-ocean-tasks-cosine-bell-viz-viz-run"]], "polaris.ocean.tasks.cosine_bell.viz.VizMap": [[173, "polaris-ocean-tasks-cosine-bell-viz-vizmap"]], "polaris.ocean.tasks.cosine_bell.viz.VizMap.run": [[174, "polaris-ocean-tasks-cosine-bell-viz-vizmap-run"]], "polaris.ocean.tasks.inertial_gravity_wave.InertialGravityWave": [[175, "polaris-ocean-tasks-inertial-gravity-wave-inertialgravitywave"]], "polaris.ocean.tasks.inertial_gravity_wave.add_inertial_gravity_wave_tasks": [[176, "polaris-ocean-tasks-inertial-gravity-wave-add-inertial-gravity-wave-tasks"]], "polaris.ocean.tasks.inertial_gravity_wave.analysis.Analysis": [[177, "polaris-ocean-tasks-inertial-gravity-wave-analysis-analysis"]], "polaris.ocean.tasks.inertial_gravity_wave.analysis.Analysis.run": [[178, "polaris-ocean-tasks-inertial-gravity-wave-analysis-analysis-run"]], "polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution": [[179, "polaris-ocean-tasks-inertial-gravity-wave-exact-solution-exactsolution"]], "polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution.normal_velocity": [[180, "polaris-ocean-tasks-inertial-gravity-wave-exact-solution-exactsolution-normal-velocity"]], "polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution.ssh": [[181, "polaris-ocean-tasks-inertial-gravity-wave-exact-solution-exactsolution-ssh"]], "polaris.ocean.tasks.inertial_gravity_wave.forward.Forward": [[182, "polaris-ocean-tasks-inertial-gravity-wave-forward-forward"]], "polaris.ocean.tasks.inertial_gravity_wave.forward.Forward.compute_cell_count": [[183, "polaris-ocean-tasks-inertial-gravity-wave-forward-forward-compute-cell-count"]], "polaris.ocean.tasks.inertial_gravity_wave.forward.Forward.dynamic_model_config": [[184, "polaris-ocean-tasks-inertial-gravity-wave-forward-forward-dynamic-model-config"]], "polaris.ocean.tasks.inertial_gravity_wave.init.Init": [[185, "polaris-ocean-tasks-inertial-gravity-wave-init-init"]], "polaris.ocean.tasks.inertial_gravity_wave.init.Init.run": [[186, "polaris-ocean-tasks-inertial-gravity-wave-init-init-run"]], "polaris.ocean.tasks.inertial_gravity_wave.viz.Viz": [[187, "polaris-ocean-tasks-inertial-gravity-wave-viz-viz"]], "polaris.ocean.tasks.inertial_gravity_wave.viz.Viz.run": [[188, "polaris-ocean-tasks-inertial-gravity-wave-viz-viz-run"]], "polaris.ocean.tasks.manufactured_solution.ManufacturedSolution": [[189, "polaris-ocean-tasks-manufactured-solution-manufacturedsolution"]], "polaris.ocean.tasks.manufactured_solution.add_manufactured_solution_tasks": [[190, "polaris-ocean-tasks-manufactured-solution-add-manufactured-solution-tasks"]], "polaris.ocean.tasks.manufactured_solution.analysis.Analysis": [[191, "polaris-ocean-tasks-manufactured-solution-analysis-analysis"]], "polaris.ocean.tasks.manufactured_solution.analysis.Analysis.run": [[192, "polaris-ocean-tasks-manufactured-solution-analysis-analysis-run"]], "polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution": [[193, "polaris-ocean-tasks-manufactured-solution-exact-solution-exactsolution"]], "polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution.normal_velocity": [[194, "polaris-ocean-tasks-manufactured-solution-exact-solution-exactsolution-normal-velocity"]], "polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution.ssh": [[195, "polaris-ocean-tasks-manufactured-solution-exact-solution-exactsolution-ssh"]], "polaris.ocean.tasks.manufactured_solution.forward.Forward": [[196, "polaris-ocean-tasks-manufactured-solution-forward-forward"]], "polaris.ocean.tasks.manufactured_solution.forward.Forward.compute_cell_count": [[197, "polaris-ocean-tasks-manufactured-solution-forward-forward-compute-cell-count"]], "polaris.ocean.tasks.manufactured_solution.forward.Forward.dynamic_model_config": [[198, "polaris-ocean-tasks-manufactured-solution-forward-forward-dynamic-model-config"]], "polaris.ocean.tasks.manufactured_solution.init.Init": [[199, "polaris-ocean-tasks-manufactured-solution-init-init"]], "polaris.ocean.tasks.manufactured_solution.init.Init.run": [[200, "polaris-ocean-tasks-manufactured-solution-init-init-run"]], "polaris.ocean.tasks.manufactured_solution.viz.Viz": [[201, "polaris-ocean-tasks-manufactured-solution-viz-viz"]], "polaris.ocean.tasks.manufactured_solution.viz.Viz.run": [[202, "polaris-ocean-tasks-manufactured-solution-viz-viz-run"]], "polaris.ocean.tasks.single_column.add_single_column_tasks": [[203, "polaris-ocean-tasks-single-column-add-single-column-tasks"]], "polaris.ocean.tasks.single_column.cvmix.CVMix": [[204, "polaris-ocean-tasks-single-column-cvmix-cvmix"]], "polaris.ocean.tasks.single_column.forward.Forward": [[205, "polaris-ocean-tasks-single-column-forward-forward"]], "polaris.ocean.tasks.single_column.ideal_age.IdealAge": [[206, "polaris-ocean-tasks-single-column-ideal-age-idealage"]], "polaris.ocean.tasks.single_column.init.Init": [[207, "polaris-ocean-tasks-single-column-init-init"]], "polaris.ocean.tasks.single_column.init.Init.run": [[208, "polaris-ocean-tasks-single-column-init-init-run"]], "polaris.ocean.tasks.single_column.viz.Viz": [[209, "polaris-ocean-tasks-single-column-viz-viz"]], "polaris.ocean.tasks.single_column.viz.Viz.run": [[210, "polaris-ocean-tasks-single-column-viz-viz-run"]], "polaris.ocean.vertical.grid_1d.generate_1d_grid": [[211, "polaris-ocean-vertical-grid-1d-generate-1d-grid"]], "polaris.ocean.vertical.grid_1d.write_1d_grid": [[212, "polaris-ocean-vertical-grid-1d-write-1d-grid"]], "polaris.ocean.vertical.init_vertical_coord": [[213, "polaris-ocean-vertical-init-vertical-coord"]], "polaris.ocean.vertical.partial_cells.alter_bottom_depth": [[214, "polaris-ocean-vertical-partial-cells-alter-bottom-depth"]], "polaris.ocean.vertical.partial_cells.alter_ssh": [[215, "polaris-ocean-vertical-partial-cells-alter-ssh"]], "polaris.ocean.vertical.zlevel.compute_min_max_level_cell": [[216, "polaris-ocean-vertical-zlevel-compute-min-max-level-cell"]], "polaris.ocean.vertical.zlevel.compute_z_level_layer_thickness": [[217, "polaris-ocean-vertical-zlevel-compute-z-level-layer-thickness"]], "polaris.ocean.vertical.zlevel.compute_z_level_resting_thickness": [[218, "polaris-ocean-vertical-zlevel-compute-z-level-resting-thickness"]], "polaris.ocean.vertical.zlevel.init_z_level_vertical_coord": [[219, "polaris-ocean-vertical-zlevel-init-z-level-vertical-coord"]], "polaris.ocean.vertical.zstar.init_z_star_vertical_coord": [[220, "polaris-ocean-vertical-zstar-init-z-star-vertical-coord"]], "Ocean component": [[221, "ocean-component"], [267, "ocean-component"]], "Models": [[222, "models"]], "Supported Models": [[222, "supported-models"]], "MPAS-Ocean": [[223, "mpas-ocean"]], "Initial conditions": [[223, "initial-conditions"], [251, "initial-conditions"]], "Boundary conditions": [[223, "boundary-conditions"]], "Forcing": [[223, "forcing"], [251, "forcing"]], "framework": [[224, "framework"], [225, "framework"], [227, "framework"], [228, "framework"], [229, "framework"], [253, "framework"]], "init": [[224, "init"], [225, "init"], [227, "init"], [228, "init"], [229, "init"]], "forward": [[224, "forward"], [225, "forward"], [227, "forward"], [228, "forward"], [229, "forward"], [253, "forward"]], "default": [[224, "default"], [269, "default"]], "decomp": [[224, "decomp"], [269, "decomp"]], "restart": [[224, "restart"], [269, "restart"]], "threads": [[224, "threads"]], "rpe": [[224, "rpe"], [269, "rpe"]], "base_mesh": [[225, "base-mesh"]], "analysis": [[225, "analysis"], [227, "analysis"], [228, "analysis"]], "exact_solution": [[227, "exact-solution"], [228, "exact-solution"]], "cvmix": [[229, "cvmix"], [274, "cvmix"]], "ideal age": [[229, "ideal-age"], [274, "ocean-single-column-ideal-age"]], "Categories of tasks": [[230, "categories-of-tasks"]], "Constructor": [[231, "constructor"]], "Config file": [[231, "config-file"]], "Directory structure": [[232, "directory-structure"]], "Organization of Tasks": [[233, "organization-of-tasks"]], "Steps": [[234, "steps"]], "Step attributes": [[234, "step-attributes"]], "constructor": [[234, "constructor"], [236, "constructor"]], "setup()": [[234, "setup"]], "constrain_resources()": [[234, "constrain-resources"]], "runtime_setup()": [[234, "runtime-setup"]], "run()": [[234, "run"]], "inputs and outputs": [[234, "inputs-and-outputs"]], "Input files": [[234, "input-files"]], "Symlinks to input files": [[234, "symlinks-to-input-files"]], "Symlink to input files from polaris": [[234, "symlink-to-input-files-from-polaris"]], "Downloading and symlinking input files": [[234, "downloading-and-symlinking-input-files"]], "Copying input files": [[234, "copying-input-files"]], "Output files": [[234, "output-files"]], "Cached output files": [[234, "cached-output-files"]], "Adding other steps as dependencies": [[234, "adding-other-steps-as-dependencies"]], "Suites": [[235, "suites"], [268, "suites"], [276, "suites"], [281, "suites"]], "Pull-Request (PR) suite": [[235, "pull-request-pr-suite"]], "Nightly suite": [[235, "nightly-suite"]], "Task attributes": [[236, "task-attributes"]], "configure()": [[236, "configure"]], "Overview": [[237, "overview"]], "Code Style": [[237, "code-style"]], "Packages and Modules": [[237, "packages-and-modules"]], "Packages": [[237, "packages"]], "Modules": [[237, "modules"]], "Classes": [[237, "classes"]], "Code sharing": [[237, "code-sharing"]], "\u2026in the polaris framework": [[237, "in-the-polaris-framework"]], "\u2026within a component": [[237, "within-a-component"]], "\u2026within a group of related tasks": [[237, "within-a-group-of-related-tasks"]], "\u2026within a task": [[237, "within-a-task"]], "Quick Start for Developers": [[238, "quick-start-for-developers"]], "Unix Shell": [[238, "unix-shell"]], "Set up a polaris repository: for beginners": [[238, "set-up-a-polaris-repository-for-beginners"]], "polaris conda environment, spack environment, compilers and system modules": [[238, "polaris-conda-environment-spack-environment-compilers-and-system-modules"]], "Supported machines": [[238, "supported-machines"]], "Environments with Albany": [[238, "environments-with-albany"]], "Environments with PETSc and Netlib-LAPACK": [[238, "environments-with-petsc-and-netlib-lapack"]], "Unknown machines": [[238, "unknown-machines"]], "What the script does": [[238, "what-the-script-does"]], "Optional flags": [[238, "optional-flags"]], "Activating the environment": [[238, "activating-the-environment"]], "Switching between different polaris environments": [[238, "switching-between-different-polaris-environments"]], "Troubleshooting": [[238, "troubleshooting"], [254, "troubleshooting"]], "Creating/updating only the polaris environment": [[238, "creating-updating-only-the-polaris-environment"]], "Building E3SM components": [[238, "building-e3sm-components"]], "Running polaris from the repo": [[238, "running-polaris-from-the-repo"]], "Code style for polaris": [[238, "code-style-for-polaris"]], "Set up a polaris repository with worktrees: for advanced users": [[238, "set-up-a-polaris-repository-with-worktrees-for-advanced-users"]], "seaice": [[239, "seaice"]], "SeaIce framework": [[240, "seaice-framework"]], "polaris.seaice.SeaIce": [[241, "polaris-seaice-seaice"]], "polaris.seaice.tasks.single_column.add_single_column_tasks": [[242, "polaris-seaice-tasks-single-column-add-single-column-tasks"]], "polaris.seaice.tasks.single_column.exact_restart.ExactRestart": [[243, "polaris-seaice-tasks-single-column-exact-restart-exactrestart"]], "polaris.seaice.tasks.single_column.exact_restart.validate.Validate": [[244, "polaris-seaice-tasks-single-column-exact-restart-validate-validate"]], "polaris.seaice.tasks.single_column.exact_restart.validate.Validate.run": [[245, "polaris-seaice-tasks-single-column-exact-restart-validate-validate-run"]], "polaris.seaice.tasks.single_column.forward.Forward": [[246, "polaris-seaice-tasks-single-column-forward-forward"]], "polaris.seaice.tasks.single_column.standard_physics.StandardPhysics": [[247, "polaris-seaice-tasks-single-column-standard-physics-standardphysics"]], "polaris.seaice.tasks.single_column.standard_physics.viz.Viz": [[248, "polaris-seaice-tasks-single-column-standard-physics-viz-viz"]], "polaris.seaice.tasks.single_column.standard_physics.viz.Viz.run": [[249, "polaris-seaice-tasks-single-column-standard-physics-viz-viz-run"]], "SeaIce component": [[250, "seaice-component"]], "Supported Model: MPAS-Seaice": [[251, "supported-model-mpas-seaice"]], "standard_physics_test": [[253, "standard-physics-test"]], "exact_restart_test": [[253, "exact-restart-test"]], "Solver errors when configuring conda environment": [[254, "solver-errors-when-configuring-conda-environment"]], "Proxy on LANL Macs": [[254, "proxy-on-lanl-macs"]], "gethostbyname failed": [[254, "gethostbyname-failed"]], "Glossary": [[255, "glossary"], [256, null]], "Polaris": [[256, "polaris"]], "User's guide": [[256, null]], "Developer's guide": [[256, null]], "Tutorials": [[256, null]], "Compass": [[256, "compass"]], "Developer Tutorial: Adding a new test group": [[257, "developer-tutorial-adding-a-new-test-group"]], "Getting started": [[257, "getting-started"]], "Making a new test group": [[257, "making-a-new-test-group"]], "Adding a \u201cdefault\u201d task": [[257, "adding-a-default-task"]], "Varying resolution and other parameters": [[257, "varying-resolution-and-other-parameters"]], "Adding the init step": [[257, "adding-the-init-step"]], "Creating a horizontal mesh": [[257, "creating-a-horizontal-mesh"]], "Adding a config file": [[257, "adding-a-config-file"]], "Adding the step to the task": [[257, "adding-the-step-to-the-task"]], "Creating a vertical coordinate": [[257, "creating-a-vertical-coordinate"]], "Creating an initial condition": [[257, "creating-an-initial-condition"]], "Adding plots": [[257, "adding-plots"]], "Adding step outputs": [[257, "adding-step-outputs"]], "Adding validation": [[257, "adding-validation"], [257, "id1"]], "Test things out!": [[257, "test-things-out"]], "Adding the forward step": [[257, "adding-the-forward-step"]], "Defining model config options and streams": [[257, "defining-model-config-options-and-streams"]], "Adding the forward step to the task": [[257, "adding-the-forward-step-to-the-task"]], "Adding more validation": [[257, "adding-more-validation"]], "Test the task again!": [[257, "test-the-task-again"]], "Adding a visualization step": [[257, "adding-a-visualization-step"]], "Adding the viz step to the task": [[257, "adding-the-viz-step-to-the-task"]], "Test the task one more time!": [[257, "test-the-task-one-more-time"]], "Adding a second task": [[257, "adding-a-second-task"]], "Enhancements": [[257, "enhancements"]], "Adding model config options in code": [[257, "adding-model-config-options-in-code"]], "Adding dynamic model config options": [[257, "adding-dynamic-model-config-options"]], "Computing the cell count": [[257, "computing-the-cell-count"]], "Adding a shared \u201csuperclass\u201d for tasks": [[257, "adding-a-shared-superclass-for-tasks"]], "Adding a parameter study": [[257, "adding-a-parameter-study"]], "Adding the steps to the task": [[257, "adding-the-steps-to-the-task"]], "Adding the analysis step": [[257, "adding-the-analysis-step"]], "How to (and how not to) pass data between steps": [[257, "how-to-and-how-not-to-pass-data-between-steps"]], "Config Files": [[258, "config-files"]], "A \u201cuser\u201d config file": [[258, "a-user-config-file"]], "Test-case config files": [[258, "test-case-config-files"]], "config options": [[259, "config-options"], [260, "config-options"], [261, "config-options"], [262, "config-options"], [263, "config-options"], [264, "config-options"], [269, "config-options"], [269, "id7"], [269, "id14"], [269, "id22"], [269, "id30"], [269, "id37"], [270, "config-options"], [272, "config-options"], [273, "config-options"], [274, "config-options"], [274, "id1"], [274, "id6"], [274, "id13"], [275, "config-options"], [279, "config-options"], [279, "id5"], [279, "id10"], [280, "config-options"]], "Intel on Anvil": [[259, "intel-on-anvil"]], "Gnu on Anvil": [[259, "gnu-on-anvil"]], "Chicoma-CPU": [[260, "chicoma-cpu"]], "Gnu on Chicoma-CPU": [[260, "gnu-on-chicoma-cpu"]], "Intel on Chrysalis": [[261, "intel-on-chrysalis"]], "Gnu on Chrysalis": [[261, "gnu-on-chrysalis"]], "Intel on CompyMcNodeFace": [[262, "intel-on-compymcnodeface"]], "Slurm job queueing": [[263, "slurm-job-queueing"]], "MPICH": [[263, "mpich"]], "OpenMPI": [[263, "openmpi"]], "No MPI from conda-forge": [[263, "no-mpi-from-conda-forge"]], "Perlmutter-CPU": [[264, "perlmutter-cpu"]], "Gnu on Perlmutter-CPU": [[264, "gnu-on-perlmutter-cpu"]], "Jupyter notebook on remote data": [[264, "jupyter-notebook-on-remote-data"]], "1D Grid type": [[266, "d-grid-type"]], "uniform": [[266, "uniform"]], "tanh_dz": [[266, "tanh-dz"]], "60layerPHC": [[266, "layerphc"]], "100layerE3SMv1": [[266, "layere3smv1"]], "3D vertical coordinates": [[266, "d-vertical-coordinates"]], "z-star": [[266, "z-star"]], "z-level": [[266, "z-level"]], "cosine_bell and cosine_bell_cached_init suite": [[268, "cosine-bell-and-cosine-bell-cached-init-suite"]], "baroclinic channel": [[269, "baroclinic-channel"]], "description": [[269, "description"], [269, "id1"], [269, "id8"], [269, "id16"], [269, "id24"], [270, "description"], [272, "description"], [273, "description"], [274, "description"], [274, "id2"], [274, "id7"], [275, "description"], [279, "description"], [280, "description"]], "vertical grid": [[269, "vertical-grid"], [269, "id3"], [269, "id10"], [269, "id18"], [269, "id26"], [269, "id33"], [270, "vertical-grid"], [272, "vertical-grid"], [273, "vertical-grid"], [274, "vertical-grid"], [274, "id4"], [274, "id9"], [275, "vertical-grid"]], "initial conditions": [[269, "initial-conditions"], [269, "id4"], [269, "id11"], [269, "id19"], [269, "id27"], [269, "id34"], [270, "initial-conditions"], [272, "initial-conditions"], [273, "initial-conditions"], [274, "initial-conditions"], [274, "id5"], [274, "id10"], [275, "initial-conditions"], [279, "initial-conditions"], [279, "id2"], [279, "id7"], [280, "initial-conditions"]], "forcing": [[269, "forcing"], [269, "id5"], [269, "id12"], [269, "id20"], [269, "id28"], [269, "id35"], [270, "forcing"], [272, "forcing"], [273, "forcing"], [274, "forcing"], [274, "id11"], [275, "forcing"], [279, "forcing"], [279, "id3"], [279, "id8"], [280, "forcing"]], "time step and run duration": [[269, "time-step-and-run-duration"], [269, "id6"], [269, "id13"], [269, "id21"], [269, "id29"], [269, "id36"], [270, "time-step-and-run-duration"], [272, "time-step-and-run-duration"], [273, "time-step-and-run-duration"], [274, "time-step-and-run-duration"], [274, "id12"], [275, "time-step-and-run-duration"], [280, "time-step-and-run-duration"]], "cores": [[269, "cores"], [269, "id15"], [269, "id23"], [269, "id31"], [269, "id38"], [270, "cores"], [272, "cores"], [273, "cores"], [274, "cores"], [274, "id14"], [275, "cores"], [279, "cores"], [279, "id4"], [279, "id9"], [280, "cores"]], "thread": [[269, "thread"]], "cosine bell": [[270, "cosine-bell"]], "inertial gravity wave": [[272, "inertial-gravity-wave"]], "manufactured solution": [[273, "manufactured-solution"]], "convergence": [[273, "convergence"]], "single column": [[274, "single-column"], [279, "single-column"]], "<Category of task>": [[275, "ocean-category-of-task"], [280, "seaice-category-of-task"]], "task_name": [[275, "task-name"], [280, "task-name"]], "Quick Start for Users": [[276, "quick-start-for-users"]], "Quick Start for Users is not yet valid": [[276, null]], "Loading polaris conda and spack environments": [[276, "loading-polaris-conda-and-spack-environments"]], "E3SM supported machines": [[276, "e3sm-supported-machines"]], "Other machines": [[276, "other-machines"]], "Building supported E3SM components as standalone models": [[276, "building-supported-e3sm-components-as-standalone-models"]], "Setting up tasks": [[276, "setting-up-tasks"]], "Running a task": [[276, "running-a-task"]], "Running with a job script": [[276, "running-with-a-job-script"]], "Sea ice component": [[277, "sea-ice-component"]], "standard physics test": [[279, "standard-physics-test"]], "timestep and run duration": [[279, "timestep-and-run-duration"], [279, "id11"]], "visualization": [[279, "visualization"]], "exact restart test": [[279, "exact-restart-test"]]}, "indexentries": {"component (class in polaris)": [[19, "polaris.Component"]], "__init__() (polaris.component method)": [[19, "polaris.Component.__init__"]], "add_task() (polaris.component method)": [[20, "polaris.Component.add_task"]], "modelstep (class in polaris)": [[21, "polaris.ModelStep"]], "__init__() (polaris.modelstep method)": [[21, "polaris.ModelStep.__init__"]], "add_model_config_options() (polaris.modelstep method)": [[22, "polaris.ModelStep.add_model_config_options"]], "add_namelist_file() (polaris.modelstep method)": [[23, "polaris.ModelStep.add_namelist_file"]], "add_streams_file() (polaris.modelstep method)": [[24, "polaris.ModelStep.add_streams_file"]], "add_yaml_file() (polaris.modelstep method)": [[25, "polaris.ModelStep.add_yaml_file"]], "dynamic_model_config() (polaris.modelstep method)": [[26, "polaris.ModelStep.dynamic_model_config"]], "map_yaml_to_namelist() (polaris.modelstep method)": [[27, "polaris.ModelStep.map_yaml_to_namelist"]], "partition() (polaris.modelstep method)": [[28, "polaris.ModelStep.partition"]], "process_inputs_and_outputs() (polaris.modelstep method)": [[29, "polaris.ModelStep.process_inputs_and_outputs"]], "runtime_setup() (polaris.modelstep method)": [[30, "polaris.ModelStep.runtime_setup"]], "set_model_resources() (polaris.modelstep method)": [[31, "polaris.ModelStep.set_model_resources"]], "setup() (polaris.modelstep method)": [[32, "polaris.ModelStep.setup"]], "update_namelist_pio() (polaris.modelstep method)": [[33, "polaris.ModelStep.update_namelist_pio"]], "step (class in polaris)": [[34, "polaris.Step"]], "__init__() (polaris.step method)": [[34, "polaris.Step.__init__"]], "add_dependency() (polaris.step method)": [[35, "polaris.Step.add_dependency"]], "add_input_file() (polaris.step method)": [[36, "polaris.Step.add_input_file"]], "add_output_file() (polaris.step method)": [[37, "polaris.Step.add_output_file"]], "constrain_resources() (polaris.step method)": [[38, "polaris.Step.constrain_resources"]], "run() (polaris.step method)": [[39, "polaris.Step.run"]], "runtime_setup() (polaris.step method)": [[40, "polaris.Step.runtime_setup"]], "set_resources() (polaris.step method)": [[41, "polaris.Step.set_resources"]], "setup() (polaris.step method)": [[42, "polaris.Step.setup"]], "task (class in polaris)": [[43, "polaris.Task"]], "__init__() (polaris.task method)": [[43, "polaris.Task.__init__"]], "add_step() (polaris.task method)": [[44, "polaris.Task.add_step"]], "configure() (polaris.task method)": [[45, "polaris.Task.configure"]], "main() (in module polaris.__main__)": [[46, "polaris.__main__.main"]], "update_cache() (in module polaris.cache)": [[47, "polaris.cache.update_cache"]], "get_components() (in module polaris.components)": [[48, "polaris.components.get_components"]], "polarisconfigparser (class in polaris.config)": [[49, "polaris.config.PolarisConfigParser"]], "__init__() (polaris.config.polarisconfigparser method)": [[49, "polaris.config.PolarisConfigParser.__init__"]], "download() (in module polaris.io)": [[50, "polaris.io.download"]], "module": [[51, "module-polaris.io.imp_res"]], "polaris.io.imp_res": [[51, "module-polaris.io.imp_res"]], "symlink() (in module polaris.io)": [[52, "polaris.io.symlink"]], "get_slurm_options() (in module polaris.job)": [[53, "polaris.job.get_slurm_options"]], "write_job_script() (in module polaris.job)": [[54, "polaris.job.write_job_script"]], "list_cases() (in module polaris.list)": [[55, "polaris.list.list_cases"]], "list_machines() (in module polaris.list)": [[56, "polaris.list.list_machines"]], "list_suites() (in module polaris.list)": [[57, "polaris.list.list_suites"]], "log_method_call() (in module polaris.logging)": [[58, "polaris.logging.log_method_call"]], "icosahedralmeshstep (class in polaris.mesh)": [[59, "polaris.mesh.IcosahedralMeshStep"]], "__init__() (polaris.mesh.icosahedralmeshstep method)": [[59, "polaris.mesh.IcosahedralMeshStep.__init__"]], "build_subdivisions_cell_width_lat_lon() (polaris.mesh.icosahedralmeshstep method)": [[60, "polaris.mesh.IcosahedralMeshStep.build_subdivisions_cell_width_lat_lon"]], "get_cell_width() (polaris.mesh.icosahedralmeshstep static method)": [[61, "polaris.mesh.IcosahedralMeshStep.get_cell_width"]], "get_subdivisions() (polaris.mesh.icosahedralmeshstep static method)": [[62, "polaris.mesh.IcosahedralMeshStep.get_subdivisions"]], "make_jigsaw_mesh() (polaris.mesh.icosahedralmeshstep method)": [[63, "polaris.mesh.IcosahedralMeshStep.make_jigsaw_mesh"]], "run() (polaris.mesh.icosahedralmeshstep method)": [[64, "polaris.mesh.IcosahedralMeshStep.run"]], "setup() (polaris.mesh.icosahedralmeshstep method)": [[65, "polaris.mesh.IcosahedralMeshStep.setup"]], "quasiuniformsphericalmeshstep (class in polaris.mesh)": [[66, "polaris.mesh.QuasiUniformSphericalMeshStep"]], "__init__() (polaris.mesh.quasiuniformsphericalmeshstep method)": [[66, "polaris.mesh.QuasiUniformSphericalMeshStep.__init__"]], "build_cell_width_lat_lon() (polaris.mesh.quasiuniformsphericalmeshstep method)": [[67, "polaris.mesh.QuasiUniformSphericalMeshStep.build_cell_width_lat_lon"]], "make_jigsaw_mesh() (polaris.mesh.quasiuniformsphericalmeshstep method)": [[68, "polaris.mesh.QuasiUniformSphericalMeshStep.make_jigsaw_mesh"]], "run() (polaris.mesh.quasiuniformsphericalmeshstep method)": [[69, "polaris.mesh.QuasiUniformSphericalMeshStep.run"]], "setup() (polaris.mesh.quasiuniformsphericalmeshstep method)": [[70, "polaris.mesh.QuasiUniformSphericalMeshStep.setup"]], "compute_planar_hex_nx_ny() (in module polaris.mesh.planar)": [[71, "polaris.mesh.planar.compute_planar_hex_nx_ny"]], "sphericalbasestep (class in polaris.mesh.spherical)": [[72, "polaris.mesh.spherical.SphericalBaseStep"]], "__init__() (polaris.mesh.spherical.sphericalbasestep method)": [[72, "polaris.mesh.spherical.SphericalBaseStep.__init__"]], "run() (polaris.mesh.spherical.sphericalbasestep method)": [[73, "polaris.mesh.spherical.SphericalBaseStep.run"]], "save_and_plot_cell_width() (polaris.mesh.spherical.sphericalbasestep method)": [[74, "polaris.mesh.spherical.SphericalBaseStep.save_and_plot_cell_width"]], "setup() (polaris.mesh.spherical.sphericalbasestep method)": [[75, "polaris.mesh.spherical.SphericalBaseStep.setup"]], "make_graph_file() (in module polaris.model_step)": [[76, "polaris.model_step.make_graph_file"]], "ingest() (in module polaris.namelist)": [[77, "polaris.namelist.ingest"]], "parse_replacements() (in module polaris.namelist)": [[78, "polaris.namelist.parse_replacements"]], "replace() (in module polaris.namelist)": [[79, "polaris.namelist.replace"]], "write() (in module polaris.namelist)": [[80, "polaris.namelist.write"]], "get_available_parallel_resources() (in module polaris.parallel)": [[81, "polaris.parallel.get_available_parallel_resources"]], "get_parallel_command() (in module polaris.parallel)": [[82, "polaris.parallel.get_parallel_command"]], "run_command() (in module polaris.parallel)": [[83, "polaris.parallel.run_command"]], "set_cores_per_node() (in module polaris.parallel)": [[84, "polaris.parallel.set_cores_per_node"]], "write() (in module polaris.provenance)": [[85, "polaris.provenance.write"]], "mappingfilestep (class in polaris.remap)": [[86, "polaris.remap.MappingFileStep"]], "__init__() (polaris.remap.mappingfilestep method)": [[86, "polaris.remap.MappingFileStep.__init__"]], "dst_from_lon_lat() (polaris.remap.mappingfilestep method)": [[87, "polaris.remap.MappingFileStep.dst_from_lon_lat"]], "dst_from_mpas() (polaris.remap.mappingfilestep method)": [[88, "polaris.remap.MappingFileStep.dst_from_mpas"]], "dst_from_points() (polaris.remap.mappingfilestep method)": [[89, "polaris.remap.MappingFileStep.dst_from_points"]], "dst_from_proj() (polaris.remap.mappingfilestep method)": [[90, "polaris.remap.MappingFileStep.dst_from_proj"]], "dst_global_lon_lat() (polaris.remap.mappingfilestep method)": [[91, "polaris.remap.MappingFileStep.dst_global_lon_lat"]], "get_remapper() (polaris.remap.mappingfilestep method)": [[92, "polaris.remap.MappingFileStep.get_remapper"]], "runtime_setup() (polaris.remap.mappingfilestep method)": [[93, "polaris.remap.MappingFileStep.runtime_setup"]], "src_from_lon_lat() (polaris.remap.mappingfilestep method)": [[94, "polaris.remap.MappingFileStep.src_from_lon_lat"]], "src_from_mpas() (polaris.remap.mappingfilestep method)": [[95, "polaris.remap.MappingFileStep.src_from_mpas"]], "src_from_proj() (polaris.remap.mappingfilestep method)": [[96, "polaris.remap.MappingFileStep.src_from_proj"]], "complete_step_run() (in module polaris.run)": [[97, "polaris.run.complete_step_run"]], "load_dependencies() (in module polaris.run)": [[98, "polaris.run.load_dependencies"]], "run_single_step() (in module polaris.run.serial)": [[99, "polaris.run.serial.run_single_step"]], "run_tasks() (in module polaris.run.serial)": [[100, "polaris.run.serial.run_tasks"]], "setup_config() (in module polaris.run)": [[101, "polaris.run.setup_config"]], "unpickle_suite() (in module polaris.run)": [[102, "polaris.run.unpickle_suite"]], "setup_task() (in module polaris.setup)": [[103, "polaris.setup.setup_task"]], "setup_tasks() (in module polaris.setup)": [[104, "polaris.setup.setup_tasks"]], "read() (in module polaris.streams)": [[105, "polaris.streams.read"]], "update_defaults() (in module polaris.streams)": [[106, "polaris.streams.update_defaults"]], "update_tree() (in module polaris.streams)": [[107, "polaris.streams.update_tree"]], "write() (in module polaris.streams)": [[108, "polaris.streams.write"]], "setup_suite() (in module polaris.suite)": [[109, "polaris.suite.setup_suite"]], "compare_variables() (in module polaris.validate)": [[110, "polaris.validate.compare_variables"]], "plot_global() (in module polaris.viz.globe)": [[111, "polaris.viz.globe.plot_global"]], "plot_horiz_field() (in module polaris.viz)": [[112, "polaris.viz.plot_horiz_field"]], "polarisyaml (class in polaris.yaml)": [[113, "polaris.yaml.PolarisYaml"]], "__init__() (polaris.yaml.polarisyaml method)": [[113, "polaris.yaml.PolarisYaml.__init__"]], "read() (polaris.yaml.polarisyaml class method)": [[114, "polaris.yaml.PolarisYaml.read"]], "update() (polaris.yaml.polarisyaml method)": [[115, "polaris.yaml.PolarisYaml.update"]], "write() (polaris.yaml.polarisyaml method)": [[116, "polaris.yaml.PolarisYaml.write"]], "main_mpas_to_yaml() (in module polaris.yaml)": [[117, "polaris.yaml.main_mpas_to_yaml"]], "mpas_namelist_and_streams_to_yaml() (in module polaris.yaml)": [[118, "polaris.yaml.mpas_namelist_and_streams_to_yaml"]], "yaml_to_mpas_streams() (in module polaris.yaml)": [[119, "polaris.yaml.yaml_to_mpas_streams"]], "ocean (class in polaris.ocean)": [[128, "polaris.ocean.Ocean"]], "__init__() (polaris.ocean.ocean method)": [[128, "polaris.ocean.Ocean.__init__"]], "sphericalconvergenceforward (class in polaris.ocean.convergence.spherical)": [[129, "polaris.ocean.convergence.spherical.SphericalConvergenceForward"]], "__init__() (polaris.ocean.convergence.spherical.sphericalconvergenceforward method)": [[129, "polaris.ocean.convergence.spherical.SphericalConvergenceForward.__init__"]], "add_spherical_base_mesh_step() (in module polaris.ocean.mesh.spherical)": [[130, "polaris.ocean.mesh.spherical.add_spherical_base_mesh_step"]], "oceanmodelstep (class in polaris.ocean.model)": [[131, "polaris.ocean.model.OceanModelStep"]], "__init__() (polaris.ocean.model.oceanmodelstep method)": [[131, "polaris.ocean.model.OceanModelStep.__init__"]], "compute_cell_count() (polaris.ocean.model.oceanmodelstep method)": [[132, "polaris.ocean.model.OceanModelStep.compute_cell_count"]], "constrain_resources() (polaris.ocean.model.oceanmodelstep method)": [[133, "polaris.ocean.model.OceanModelStep.constrain_resources"]], "map_yaml_to_namelist() (polaris.ocean.model.oceanmodelstep method)": [[134, "polaris.ocean.model.OceanModelStep.map_yaml_to_namelist"]], "setup() (polaris.ocean.model.oceanmodelstep method)": [[135, "polaris.ocean.model.OceanModelStep.setup"]], "get_time_interval_string() (in module polaris.ocean.model)": [[136, "polaris.ocean.model.get_time_interval_string"]], "compute_rpe() (in module polaris.ocean.rpe)": [[137, "polaris.ocean.rpe.compute_rpe"]], "add_baroclinic_channel_tasks() (in module polaris.ocean.tasks.baroclinic_channel)": [[138, "polaris.ocean.tasks.baroclinic_channel.add_baroclinic_channel_tasks"]], "decomp (class in polaris.ocean.tasks.baroclinic_channel.decomp)": [[139, "polaris.ocean.tasks.baroclinic_channel.decomp.Decomp"]], "__init__() (polaris.ocean.tasks.baroclinic_channel.decomp.decomp method)": [[139, "polaris.ocean.tasks.baroclinic_channel.decomp.Decomp.__init__"]], "default (class in polaris.ocean.tasks.baroclinic_channel.default)": [[140, "polaris.ocean.tasks.baroclinic_channel.default.Default"]], "__init__() (polaris.ocean.tasks.baroclinic_channel.default.default method)": [[140, "polaris.ocean.tasks.baroclinic_channel.default.Default.__init__"]], "forward (class in polaris.ocean.tasks.baroclinic_channel.forward)": [[141, "polaris.ocean.tasks.baroclinic_channel.forward.Forward"]], "__init__() (polaris.ocean.tasks.baroclinic_channel.forward.forward method)": [[141, "polaris.ocean.tasks.baroclinic_channel.forward.Forward.__init__"]], "compute_cell_count() (polaris.ocean.tasks.baroclinic_channel.forward.forward method)": [[142, "polaris.ocean.tasks.baroclinic_channel.forward.Forward.compute_cell_count"]], "dynamic_model_config() (polaris.ocean.tasks.baroclinic_channel.forward.forward method)": [[143, "polaris.ocean.tasks.baroclinic_channel.forward.Forward.dynamic_model_config"]], "init (class in polaris.ocean.tasks.baroclinic_channel.init)": [[144, "polaris.ocean.tasks.baroclinic_channel.init.Init"]], "__init__() (polaris.ocean.tasks.baroclinic_channel.init.init method)": [[144, "polaris.ocean.tasks.baroclinic_channel.init.Init.__init__"]], "run() (polaris.ocean.tasks.baroclinic_channel.init.init method)": [[145, "polaris.ocean.tasks.baroclinic_channel.init.Init.run"]], "setup() (polaris.ocean.tasks.baroclinic_channel.init.init method)": [[146, "polaris.ocean.tasks.baroclinic_channel.init.Init.setup"]], "restart (class in polaris.ocean.tasks.baroclinic_channel.restart)": [[147, "polaris.ocean.tasks.baroclinic_channel.restart.Restart"]], "__init__() (polaris.ocean.tasks.baroclinic_channel.restart.restart method)": [[147, "polaris.ocean.tasks.baroclinic_channel.restart.Restart.__init__"]], "restartstep (class in polaris.ocean.tasks.baroclinic_channel.restart.restart_step)": [[148, "polaris.ocean.tasks.baroclinic_channel.restart.restart_step.RestartStep"]], "__init__() (polaris.ocean.tasks.baroclinic_channel.restart.restart_step.restartstep method)": [[148, "polaris.ocean.tasks.baroclinic_channel.restart.restart_step.RestartStep.__init__"]], "dynamic_model_config() (polaris.ocean.tasks.baroclinic_channel.restart.restart_step.restartstep method)": [[149, "polaris.ocean.tasks.baroclinic_channel.restart.restart_step.RestartStep.dynamic_model_config"]], "rpe (class in polaris.ocean.tasks.baroclinic_channel.rpe)": [[150, "polaris.ocean.tasks.baroclinic_channel.rpe.Rpe"]], "__init__() (polaris.ocean.tasks.baroclinic_channel.rpe.rpe method)": [[150, "polaris.ocean.tasks.baroclinic_channel.rpe.Rpe.__init__"]], "configure() (polaris.ocean.tasks.baroclinic_channel.rpe.rpe method)": [[151, "polaris.ocean.tasks.baroclinic_channel.rpe.Rpe.configure"]], "analysis (class in polaris.ocean.tasks.baroclinic_channel.rpe.analysis)": [[152, "polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis"]], "__init__() (polaris.ocean.tasks.baroclinic_channel.rpe.analysis.analysis method)": [[152, "polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis.__init__"]], "run() (polaris.ocean.tasks.baroclinic_channel.rpe.analysis.analysis method)": [[153, "polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis.run"]], "setup() (polaris.ocean.tasks.baroclinic_channel.rpe.analysis.analysis method)": [[154, "polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis.setup"]], "threads (class in polaris.ocean.tasks.baroclinic_channel.threads)": [[155, "polaris.ocean.tasks.baroclinic_channel.threads.Threads"]], "__init__() (polaris.ocean.tasks.baroclinic_channel.threads.threads method)": [[155, "polaris.ocean.tasks.baroclinic_channel.threads.Threads.__init__"]], "validate (class in polaris.ocean.tasks.baroclinic_channel.validate)": [[156, "polaris.ocean.tasks.baroclinic_channel.validate.Validate"]], "__init__() (polaris.ocean.tasks.baroclinic_channel.validate.validate method)": [[156, "polaris.ocean.tasks.baroclinic_channel.validate.Validate.__init__"]], "run() (polaris.ocean.tasks.baroclinic_channel.validate.validate method)": [[157, "polaris.ocean.tasks.baroclinic_channel.validate.Validate.run"]], "viz (class in polaris.ocean.tasks.baroclinic_channel.viz)": [[158, "polaris.ocean.tasks.baroclinic_channel.viz.Viz"]], "__init__() (polaris.ocean.tasks.baroclinic_channel.viz.viz method)": [[158, "polaris.ocean.tasks.baroclinic_channel.viz.Viz.__init__"]], "run() (polaris.ocean.tasks.baroclinic_channel.viz.viz method)": [[159, "polaris.ocean.tasks.baroclinic_channel.viz.Viz.run"]], "cosinebell (class in polaris.ocean.tasks.cosine_bell)": [[160, "polaris.ocean.tasks.cosine_bell.CosineBell"]], "__init__() (polaris.ocean.tasks.cosine_bell.cosinebell method)": [[160, "polaris.ocean.tasks.cosine_bell.CosineBell.__init__"]], "configure() (polaris.ocean.tasks.cosine_bell.cosinebell method)": [[161, "polaris.ocean.tasks.cosine_bell.CosineBell.configure"]], "add_cosine_bell_tasks() (in module polaris.ocean.tasks.cosine_bell)": [[162, "polaris.ocean.tasks.cosine_bell.add_cosine_bell_tasks"]], "analysis (class in polaris.ocean.tasks.cosine_bell.analysis)": [[163, "polaris.ocean.tasks.cosine_bell.analysis.Analysis"]], "__init__() (polaris.ocean.tasks.cosine_bell.analysis.analysis method)": [[163, "polaris.ocean.tasks.cosine_bell.analysis.Analysis.__init__"]], "rmse() (polaris.ocean.tasks.cosine_bell.analysis.analysis method)": [[164, "polaris.ocean.tasks.cosine_bell.analysis.Analysis.rmse"]], "run() (polaris.ocean.tasks.cosine_bell.analysis.analysis method)": [[165, "polaris.ocean.tasks.cosine_bell.analysis.Analysis.run"]], "forward (class in polaris.ocean.tasks.cosine_bell.forward)": [[166, "polaris.ocean.tasks.cosine_bell.forward.Forward"]], "__init__() (polaris.ocean.tasks.cosine_bell.forward.forward method)": [[166, "polaris.ocean.tasks.cosine_bell.forward.Forward.__init__"]], "compute_cell_count() (polaris.ocean.tasks.cosine_bell.forward.forward method)": [[167, "polaris.ocean.tasks.cosine_bell.forward.Forward.compute_cell_count"]], "dynamic_model_config() (polaris.ocean.tasks.cosine_bell.forward.forward method)": [[168, "polaris.ocean.tasks.cosine_bell.forward.Forward.dynamic_model_config"]], "init (class in polaris.ocean.tasks.cosine_bell.init)": [[169, "polaris.ocean.tasks.cosine_bell.init.Init"]], "__init__() (polaris.ocean.tasks.cosine_bell.init.init method)": [[169, "polaris.ocean.tasks.cosine_bell.init.Init.__init__"]], "run() (polaris.ocean.tasks.cosine_bell.init.init method)": [[170, "polaris.ocean.tasks.cosine_bell.init.Init.run"]], "viz (class in polaris.ocean.tasks.cosine_bell.viz)": [[171, "polaris.ocean.tasks.cosine_bell.viz.Viz"]], "__init__() (polaris.ocean.tasks.cosine_bell.viz.viz method)": [[171, "polaris.ocean.tasks.cosine_bell.viz.Viz.__init__"]], "run() (polaris.ocean.tasks.cosine_bell.viz.viz method)": [[172, "polaris.ocean.tasks.cosine_bell.viz.Viz.run"]], "vizmap (class in polaris.ocean.tasks.cosine_bell.viz)": [[173, "polaris.ocean.tasks.cosine_bell.viz.VizMap"]], "__init__() (polaris.ocean.tasks.cosine_bell.viz.vizmap method)": [[173, "polaris.ocean.tasks.cosine_bell.viz.VizMap.__init__"]], "run() (polaris.ocean.tasks.cosine_bell.viz.vizmap method)": [[174, "polaris.ocean.tasks.cosine_bell.viz.VizMap.run"]], "inertialgravitywave (class in polaris.ocean.tasks.inertial_gravity_wave)": [[175, "polaris.ocean.tasks.inertial_gravity_wave.InertialGravityWave"]], "__init__() (polaris.ocean.tasks.inertial_gravity_wave.inertialgravitywave method)": [[175, "polaris.ocean.tasks.inertial_gravity_wave.InertialGravityWave.__init__"]], "add_inertial_gravity_wave_tasks() (in module polaris.ocean.tasks.inertial_gravity_wave)": [[176, "polaris.ocean.tasks.inertial_gravity_wave.add_inertial_gravity_wave_tasks"]], "analysis (class in polaris.ocean.tasks.inertial_gravity_wave.analysis)": [[177, "polaris.ocean.tasks.inertial_gravity_wave.analysis.Analysis"]], "__init__() (polaris.ocean.tasks.inertial_gravity_wave.analysis.analysis method)": [[177, "polaris.ocean.tasks.inertial_gravity_wave.analysis.Analysis.__init__"]], "run() (polaris.ocean.tasks.inertial_gravity_wave.analysis.analysis method)": [[178, "polaris.ocean.tasks.inertial_gravity_wave.analysis.Analysis.run"]], "exactsolution (class in polaris.ocean.tasks.inertial_gravity_wave.exact_solution)": [[179, "polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution"]], "__init__() (polaris.ocean.tasks.inertial_gravity_wave.exact_solution.exactsolution method)": [[179, "polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution.__init__"]], "normal_velocity() (polaris.ocean.tasks.inertial_gravity_wave.exact_solution.exactsolution method)": [[180, "polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution.normal_velocity"]], "ssh() (polaris.ocean.tasks.inertial_gravity_wave.exact_solution.exactsolution method)": [[181, "polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution.ssh"]], "forward (class in polaris.ocean.tasks.inertial_gravity_wave.forward)": [[182, "polaris.ocean.tasks.inertial_gravity_wave.forward.Forward"]], "__init__() (polaris.ocean.tasks.inertial_gravity_wave.forward.forward method)": [[182, "polaris.ocean.tasks.inertial_gravity_wave.forward.Forward.__init__"]], "compute_cell_count() (polaris.ocean.tasks.inertial_gravity_wave.forward.forward method)": [[183, "polaris.ocean.tasks.inertial_gravity_wave.forward.Forward.compute_cell_count"]], "dynamic_model_config() (polaris.ocean.tasks.inertial_gravity_wave.forward.forward method)": [[184, "polaris.ocean.tasks.inertial_gravity_wave.forward.Forward.dynamic_model_config"]], "init (class in polaris.ocean.tasks.inertial_gravity_wave.init)": [[185, "polaris.ocean.tasks.inertial_gravity_wave.init.Init"]], "__init__() (polaris.ocean.tasks.inertial_gravity_wave.init.init method)": [[185, "polaris.ocean.tasks.inertial_gravity_wave.init.Init.__init__"]], "run() (polaris.ocean.tasks.inertial_gravity_wave.init.init method)": [[186, "polaris.ocean.tasks.inertial_gravity_wave.init.Init.run"]], "viz (class in polaris.ocean.tasks.inertial_gravity_wave.viz)": [[187, "polaris.ocean.tasks.inertial_gravity_wave.viz.Viz"]], "__init__() (polaris.ocean.tasks.inertial_gravity_wave.viz.viz method)": [[187, "polaris.ocean.tasks.inertial_gravity_wave.viz.Viz.__init__"]], "run() (polaris.ocean.tasks.inertial_gravity_wave.viz.viz method)": [[188, "polaris.ocean.tasks.inertial_gravity_wave.viz.Viz.run"]], "manufacturedsolution (class in polaris.ocean.tasks.manufactured_solution)": [[189, "polaris.ocean.tasks.manufactured_solution.ManufacturedSolution"]], "__init__() (polaris.ocean.tasks.manufactured_solution.manufacturedsolution method)": [[189, "polaris.ocean.tasks.manufactured_solution.ManufacturedSolution.__init__"]], "add_manufactured_solution_tasks() (in module polaris.ocean.tasks.manufactured_solution)": [[190, "polaris.ocean.tasks.manufactured_solution.add_manufactured_solution_tasks"]], "analysis (class in polaris.ocean.tasks.manufactured_solution.analysis)": [[191, "polaris.ocean.tasks.manufactured_solution.analysis.Analysis"]], "__init__() (polaris.ocean.tasks.manufactured_solution.analysis.analysis method)": [[191, "polaris.ocean.tasks.manufactured_solution.analysis.Analysis.__init__"]], "run() (polaris.ocean.tasks.manufactured_solution.analysis.analysis method)": [[192, "polaris.ocean.tasks.manufactured_solution.analysis.Analysis.run"]], "exactsolution (class in polaris.ocean.tasks.manufactured_solution.exact_solution)": [[193, "polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution"]], "__init__() (polaris.ocean.tasks.manufactured_solution.exact_solution.exactsolution method)": [[193, "polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution.__init__"]], "normal_velocity() (polaris.ocean.tasks.manufactured_solution.exact_solution.exactsolution method)": [[194, "polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution.normal_velocity"]], "ssh() (polaris.ocean.tasks.manufactured_solution.exact_solution.exactsolution method)": [[195, "polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution.ssh"]], "forward (class in polaris.ocean.tasks.manufactured_solution.forward)": [[196, "polaris.ocean.tasks.manufactured_solution.forward.Forward"]], "__init__() (polaris.ocean.tasks.manufactured_solution.forward.forward method)": [[196, "polaris.ocean.tasks.manufactured_solution.forward.Forward.__init__"]], "compute_cell_count() (polaris.ocean.tasks.manufactured_solution.forward.forward method)": [[197, "polaris.ocean.tasks.manufactured_solution.forward.Forward.compute_cell_count"]], "dynamic_model_config() (polaris.ocean.tasks.manufactured_solution.forward.forward method)": [[198, "polaris.ocean.tasks.manufactured_solution.forward.Forward.dynamic_model_config"]], "init (class in polaris.ocean.tasks.manufactured_solution.init)": [[199, "polaris.ocean.tasks.manufactured_solution.init.Init"]], "__init__() (polaris.ocean.tasks.manufactured_solution.init.init method)": [[199, "polaris.ocean.tasks.manufactured_solution.init.Init.__init__"]], "run() (polaris.ocean.tasks.manufactured_solution.init.init method)": [[200, "polaris.ocean.tasks.manufactured_solution.init.Init.run"]], "viz (class in polaris.ocean.tasks.manufactured_solution.viz)": [[201, "polaris.ocean.tasks.manufactured_solution.viz.Viz"]], "__init__() (polaris.ocean.tasks.manufactured_solution.viz.viz method)": [[201, "polaris.ocean.tasks.manufactured_solution.viz.Viz.__init__"]], "run() (polaris.ocean.tasks.manufactured_solution.viz.viz method)": [[202, "polaris.ocean.tasks.manufactured_solution.viz.Viz.run"]], "add_single_column_tasks() (in module polaris.ocean.tasks.single_column)": [[203, "polaris.ocean.tasks.single_column.add_single_column_tasks"]], "cvmix (class in polaris.ocean.tasks.single_column.cvmix)": [[204, "polaris.ocean.tasks.single_column.cvmix.CVMix"]], "__init__() (polaris.ocean.tasks.single_column.cvmix.cvmix method)": [[204, "polaris.ocean.tasks.single_column.cvmix.CVMix.__init__"]], "forward (class in polaris.ocean.tasks.single_column.forward)": [[205, "polaris.ocean.tasks.single_column.forward.Forward"]], "__init__() (polaris.ocean.tasks.single_column.forward.forward method)": [[205, "polaris.ocean.tasks.single_column.forward.Forward.__init__"]], "idealage (class in polaris.ocean.tasks.single_column.ideal_age)": [[206, "polaris.ocean.tasks.single_column.ideal_age.IdealAge"]], "__init__() (polaris.ocean.tasks.single_column.ideal_age.idealage method)": [[206, "polaris.ocean.tasks.single_column.ideal_age.IdealAge.__init__"]], "init (class in polaris.ocean.tasks.single_column.init)": [[207, "polaris.ocean.tasks.single_column.init.Init"]], "__init__() (polaris.ocean.tasks.single_column.init.init method)": [[207, "polaris.ocean.tasks.single_column.init.Init.__init__"]], "run() (polaris.ocean.tasks.single_column.init.init method)": [[208, "polaris.ocean.tasks.single_column.init.Init.run"]], "viz (class in polaris.ocean.tasks.single_column.viz)": [[209, "polaris.ocean.tasks.single_column.viz.Viz"]], "__init__() (polaris.ocean.tasks.single_column.viz.viz method)": [[209, "polaris.ocean.tasks.single_column.viz.Viz.__init__"]], "run() (polaris.ocean.tasks.single_column.viz.viz method)": [[210, "polaris.ocean.tasks.single_column.viz.Viz.run"]], "generate_1d_grid() (in module polaris.ocean.vertical.grid_1d)": [[211, "polaris.ocean.vertical.grid_1d.generate_1d_grid"]], "write_1d_grid() (in module polaris.ocean.vertical.grid_1d)": [[212, "polaris.ocean.vertical.grid_1d.write_1d_grid"]], "init_vertical_coord() (in module polaris.ocean.vertical)": [[213, "polaris.ocean.vertical.init_vertical_coord"]], "alter_bottom_depth() (in module polaris.ocean.vertical.partial_cells)": [[214, "polaris.ocean.vertical.partial_cells.alter_bottom_depth"]], "alter_ssh() (in module polaris.ocean.vertical.partial_cells)": [[215, "polaris.ocean.vertical.partial_cells.alter_ssh"]], "compute_min_max_level_cell() (in module polaris.ocean.vertical.zlevel)": [[216, "polaris.ocean.vertical.zlevel.compute_min_max_level_cell"]], "compute_z_level_layer_thickness() (in module polaris.ocean.vertical.zlevel)": [[217, "polaris.ocean.vertical.zlevel.compute_z_level_layer_thickness"]], "compute_z_level_resting_thickness() (in module polaris.ocean.vertical.zlevel)": [[218, "polaris.ocean.vertical.zlevel.compute_z_level_resting_thickness"]], "init_z_level_vertical_coord() (in module polaris.ocean.vertical.zlevel)": [[219, "polaris.ocean.vertical.zlevel.init_z_level_vertical_coord"]], "init_z_star_vertical_coord() (in module polaris.ocean.vertical.zstar)": [[220, "polaris.ocean.vertical.zstar.init_z_star_vertical_coord"]], "seaice (class in polaris.seaice)": [[241, "polaris.seaice.SeaIce"]], "__init__() (polaris.seaice.seaice method)": [[241, "polaris.seaice.SeaIce.__init__"]], "add_single_column_tasks() (in module polaris.seaice.tasks.single_column)": [[242, "polaris.seaice.tasks.single_column.add_single_column_tasks"]], "exactrestart (class in polaris.seaice.tasks.single_column.exact_restart)": [[243, "polaris.seaice.tasks.single_column.exact_restart.ExactRestart"]], "__init__() (polaris.seaice.tasks.single_column.exact_restart.exactrestart method)": [[243, "polaris.seaice.tasks.single_column.exact_restart.ExactRestart.__init__"]], "validate (class in polaris.seaice.tasks.single_column.exact_restart.validate)": [[244, "polaris.seaice.tasks.single_column.exact_restart.validate.Validate"]], "__init__() (polaris.seaice.tasks.single_column.exact_restart.validate.validate method)": [[244, "polaris.seaice.tasks.single_column.exact_restart.validate.Validate.__init__"]], "run() (polaris.seaice.tasks.single_column.exact_restart.validate.validate method)": [[245, "polaris.seaice.tasks.single_column.exact_restart.validate.Validate.run"]], "forward (class in polaris.seaice.tasks.single_column.forward)": [[246, "polaris.seaice.tasks.single_column.forward.Forward"]], "__init__() (polaris.seaice.tasks.single_column.forward.forward method)": [[246, "polaris.seaice.tasks.single_column.forward.Forward.__init__"]], "standardphysics (class in polaris.seaice.tasks.single_column.standard_physics)": [[247, "polaris.seaice.tasks.single_column.standard_physics.StandardPhysics"]], "__init__() (polaris.seaice.tasks.single_column.standard_physics.standardphysics method)": [[247, "polaris.seaice.tasks.single_column.standard_physics.StandardPhysics.__init__"]], "viz (class in polaris.seaice.tasks.single_column.standard_physics.viz)": [[248, "polaris.seaice.tasks.single_column.standard_physics.viz.Viz"]], "__init__() (polaris.seaice.tasks.single_column.standard_physics.viz.viz method)": [[248, "polaris.seaice.tasks.single_column.standard_physics.viz.Viz.__init__"]], "run() (polaris.seaice.tasks.single_column.standard_physics.viz.viz method)": [[249, "polaris.seaice.tasks.single_column.standard_physics.viz.Viz.run"]]}})