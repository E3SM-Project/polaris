Search.setIndex({"docnames": ["design_docs/index", "design_docs/template", "developers_guide/api", "developers_guide/building_docs", "developers_guide/command_line", "developers_guide/docs", "developers_guide/framework/commands", "developers_guide/framework/config", "developers_guide/framework/index", "developers_guide/framework/io", "developers_guide/framework/logging", "developers_guide/framework/mesh", "developers_guide/framework/model", "developers_guide/framework/provenance", "developers_guide/framework/remapping", "developers_guide/framework/validation", "developers_guide/framework/visualization", "developers_guide/generated/polaris.Component", "developers_guide/generated/polaris.Component.add_test_group", "developers_guide/generated/polaris.ModelStep", "developers_guide/generated/polaris.ModelStep.add_model_config_options", "developers_guide/generated/polaris.ModelStep.add_namelist_file", "developers_guide/generated/polaris.ModelStep.add_streams_file", "developers_guide/generated/polaris.ModelStep.add_yaml_file", "developers_guide/generated/polaris.ModelStep.dynamic_model_config", "developers_guide/generated/polaris.ModelStep.map_yaml_to_namelist", "developers_guide/generated/polaris.ModelStep.partition", "developers_guide/generated/polaris.ModelStep.process_inputs_and_outputs", "developers_guide/generated/polaris.ModelStep.runtime_setup", "developers_guide/generated/polaris.ModelStep.set_model_resources", "developers_guide/generated/polaris.ModelStep.setup", "developers_guide/generated/polaris.ModelStep.update_namelist_pio", "developers_guide/generated/polaris.Step", "developers_guide/generated/polaris.Step.add_dependency", "developers_guide/generated/polaris.Step.add_input_file", "developers_guide/generated/polaris.Step.add_output_file", "developers_guide/generated/polaris.Step.constrain_resources", "developers_guide/generated/polaris.Step.run", "developers_guide/generated/polaris.Step.runtime_setup", "developers_guide/generated/polaris.Step.set_resources", "developers_guide/generated/polaris.Step.setup", "developers_guide/generated/polaris.TestCase", "developers_guide/generated/polaris.TestCase.add_step", "developers_guide/generated/polaris.TestCase.configure", "developers_guide/generated/polaris.TestCase.validate", "developers_guide/generated/polaris.TestGroup", "developers_guide/generated/polaris.TestGroup.add_test_case", "developers_guide/generated/polaris.__main__.main", "developers_guide/generated/polaris.cache.update_cache", "developers_guide/generated/polaris.components.get_components", "developers_guide/generated/polaris.config.PolarisConfigParser", "developers_guide/generated/polaris.io.download", "developers_guide/generated/polaris.io.imp_res", "developers_guide/generated/polaris.io.symlink", "developers_guide/generated/polaris.list.list_cases", "developers_guide/generated/polaris.list.list_machines", "developers_guide/generated/polaris.list.list_suites", "developers_guide/generated/polaris.logging.log_method_call", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.build_subdivisions_cell_width_lat_lon", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.get_cell_width", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.get_subdivisions", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.make_jigsaw_mesh", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.run", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.setup", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep.build_cell_width_lat_lon", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep.make_jigsaw_mesh", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep.run", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep.setup", "developers_guide/generated/polaris.mesh.spherical.SphericalBaseStep", "developers_guide/generated/polaris.mesh.spherical.SphericalBaseStep.run", "developers_guide/generated/polaris.mesh.spherical.SphericalBaseStep.save_and_plot_cell_width", "developers_guide/generated/polaris.mesh.spherical.SphericalBaseStep.setup", "developers_guide/generated/polaris.model_step.make_graph_file", "developers_guide/generated/polaris.namelist.ingest", "developers_guide/generated/polaris.namelist.parse_replacements", "developers_guide/generated/polaris.namelist.replace", "developers_guide/generated/polaris.namelist.write", "developers_guide/generated/polaris.parallel.check_parallel_system", "developers_guide/generated/polaris.parallel.get_available_cores_and_nodes", "developers_guide/generated/polaris.parallel.run_command", "developers_guide/generated/polaris.parallel.set_cores_per_node", "developers_guide/generated/polaris.provenance.write", "developers_guide/generated/polaris.remap.MappingFileStep", "developers_guide/generated/polaris.remap.MappingFileStep.dst_from_lon_lat", "developers_guide/generated/polaris.remap.MappingFileStep.dst_from_mpas", "developers_guide/generated/polaris.remap.MappingFileStep.dst_from_points", "developers_guide/generated/polaris.remap.MappingFileStep.dst_from_proj", "developers_guide/generated/polaris.remap.MappingFileStep.dst_global_lon_lat", "developers_guide/generated/polaris.remap.MappingFileStep.get_remapper", "developers_guide/generated/polaris.remap.MappingFileStep.run", "developers_guide/generated/polaris.remap.MappingFileStep.src_from_lon_lat", "developers_guide/generated/polaris.remap.MappingFileStep.src_from_mpas", "developers_guide/generated/polaris.remap.MappingFileStep.src_from_proj", "developers_guide/generated/polaris.run.serial.run_single_step", "developers_guide/generated/polaris.run.serial.run_tests", "developers_guide/generated/polaris.setup.setup_case", "developers_guide/generated/polaris.setup.setup_cases", "developers_guide/generated/polaris.streams.read", "developers_guide/generated/polaris.streams.update_defaults", "developers_guide/generated/polaris.streams.update_tree", "developers_guide/generated/polaris.streams.write", "developers_guide/generated/polaris.suite.setup_suite", "developers_guide/generated/polaris.validate.compare_timers", "developers_guide/generated/polaris.validate.compare_variables", "developers_guide/generated/polaris.viz.globe.plot_global", "developers_guide/generated/polaris.viz.plot_horiz_field", "developers_guide/generated/polaris.yaml.PolarisYaml", "developers_guide/generated/polaris.yaml.PolarisYaml.read", "developers_guide/generated/polaris.yaml.PolarisYaml.update", "developers_guide/generated/polaris.yaml.PolarisYaml.write", "developers_guide/generated/polaris.yaml.main_mpas_to_yaml", "developers_guide/generated/polaris.yaml.mpas_namelist_and_streams_to_yaml", "developers_guide/generated/polaris.yaml.yaml_to_mpas_streams", "developers_guide/machines/anvil", "developers_guide/machines/chicoma", "developers_guide/machines/chrysalis", "developers_guide/machines/compy", "developers_guide/machines/index", "developers_guide/machines/perlmutter", "developers_guide/ocean/api", "developers_guide/ocean/framework", "developers_guide/ocean/generated/polaris.ocean.Ocean", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.compute_cell_count", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.constrain_resources", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.map_yaml_to_namelist", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.setup", "developers_guide/ocean/generated/polaris.ocean.rpe.compute_rpe", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.BaroclinicChannel", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.BaroclinicChannelTestCase", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.BaroclinicChannelTestCase.configure", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.BaroclinicChannelTestCase.validate", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.decomp_test.DecompTest", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.decomp_test.DecompTest.validate", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.default.Default", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.default.Default.validate", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.forward.Forward", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.forward.Forward.compute_cell_count", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.forward.Forward.dynamic_model_config", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.initial_state.InitialState", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.initial_state.InitialState.run", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.initial_state.InitialState.setup", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.restart_test.RestartTest", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.restart_test.RestartTest.validate", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.restart_test.restart_step.RestartStep", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.restart_test.restart_step.RestartStep.dynamic_model_config", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.rpe_test.RpeTest", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.rpe_test.RpeTest.configure", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.rpe_test.RpeTest.validate", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.rpe_test.analysis.Analysis", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.rpe_test.analysis.Analysis.run", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.rpe_test.analysis.Analysis.setup", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.threads_test.ThreadsTest", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.threads_test.ThreadsTest.validate", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.viz.Viz", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.viz.Viz.run", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.GlobalConvergence", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.CosineBell", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.CosineBell.configure", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.CosineBell.validate", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.analysis.Analysis", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.analysis.Analysis.rmse", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.analysis.Analysis.run", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.forward.Forward", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.forward.Forward.compute_cell_count", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.forward.Forward.dynamic_model_config", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.init.Init", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.init.Init.run", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.viz.Viz", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.viz.Viz.run", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.viz.VizMap", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.viz.VizMap.run", "developers_guide/ocean/generated/polaris.ocean.vertical.grid_1d.generate_1d_grid", "developers_guide/ocean/generated/polaris.ocean.vertical.grid_1d.write_1d_grid", "developers_guide/ocean/generated/polaris.ocean.vertical.init_vertical_coord", "developers_guide/ocean/generated/polaris.ocean.vertical.partial_cells.alter_bottom_depth", "developers_guide/ocean/generated/polaris.ocean.vertical.partial_cells.alter_ssh", "developers_guide/ocean/generated/polaris.ocean.vertical.zlevel.compute_min_max_level_cell", "developers_guide/ocean/generated/polaris.ocean.vertical.zlevel.compute_z_level_layer_thickness", "developers_guide/ocean/generated/polaris.ocean.vertical.zlevel.compute_z_level_resting_thickness", "developers_guide/ocean/generated/polaris.ocean.vertical.zlevel.init_z_level_vertical_coord", "developers_guide/ocean/generated/polaris.ocean.vertical.zstar.init_z_star_vertical_coord", "developers_guide/ocean/index", "developers_guide/ocean/models/index", "developers_guide/ocean/models/mpas_ocean", "developers_guide/ocean/test_groups/baroclinic_channel", "developers_guide/ocean/test_groups/global_convergence", "developers_guide/ocean/test_groups/index", "developers_guide/organization/components", "developers_guide/organization/index", "developers_guide/organization/steps", "developers_guide/organization/suites", "developers_guide/organization/test_cases", "developers_guide/organization/test_groups", "developers_guide/overview", "developers_guide/quick_start", "developers_guide/troubleshooting", "glossary", "index", "users_guide/config_files", "users_guide/machines/anvil", "users_guide/machines/chicoma", "users_guide/machines/chrysalis", "users_guide/machines/compy", "users_guide/machines/index", "users_guide/machines/perlmutter", "users_guide/ocean/framework/index", "users_guide/ocean/framework/vertical", "users_guide/ocean/index", "users_guide/ocean/suites", "users_guide/ocean/test_groups/baroclinic_channel", "users_guide/ocean/test_groups/global_convergence", "users_guide/ocean/test_groups/index", "users_guide/quick_start", "users_guide/test_cases", "users_guide/test_suites"], "filenames": ["design_docs/index.md", "design_docs/template.md", "developers_guide/api.md", "developers_guide/building_docs.md", "developers_guide/command_line.md", "developers_guide/docs.md", "developers_guide/framework/commands.md", "developers_guide/framework/config.md", "developers_guide/framework/index.md", "developers_guide/framework/io.md", "developers_guide/framework/logging.md", "developers_guide/framework/mesh.md", "developers_guide/framework/model.md", "developers_guide/framework/provenance.md", "developers_guide/framework/remapping.md", "developers_guide/framework/validation.md", "developers_guide/framework/visualization.md", "developers_guide/generated/polaris.Component.rst", "developers_guide/generated/polaris.Component.add_test_group.rst", "developers_guide/generated/polaris.ModelStep.rst", "developers_guide/generated/polaris.ModelStep.add_model_config_options.rst", "developers_guide/generated/polaris.ModelStep.add_namelist_file.rst", "developers_guide/generated/polaris.ModelStep.add_streams_file.rst", "developers_guide/generated/polaris.ModelStep.add_yaml_file.rst", "developers_guide/generated/polaris.ModelStep.dynamic_model_config.rst", "developers_guide/generated/polaris.ModelStep.map_yaml_to_namelist.rst", "developers_guide/generated/polaris.ModelStep.partition.rst", "developers_guide/generated/polaris.ModelStep.process_inputs_and_outputs.rst", "developers_guide/generated/polaris.ModelStep.runtime_setup.rst", "developers_guide/generated/polaris.ModelStep.set_model_resources.rst", "developers_guide/generated/polaris.ModelStep.setup.rst", "developers_guide/generated/polaris.ModelStep.update_namelist_pio.rst", "developers_guide/generated/polaris.Step.rst", "developers_guide/generated/polaris.Step.add_dependency.rst", "developers_guide/generated/polaris.Step.add_input_file.rst", "developers_guide/generated/polaris.Step.add_output_file.rst", "developers_guide/generated/polaris.Step.constrain_resources.rst", "developers_guide/generated/polaris.Step.run.rst", "developers_guide/generated/polaris.Step.runtime_setup.rst", "developers_guide/generated/polaris.Step.set_resources.rst", "developers_guide/generated/polaris.Step.setup.rst", "developers_guide/generated/polaris.TestCase.rst", "developers_guide/generated/polaris.TestCase.add_step.rst", "developers_guide/generated/polaris.TestCase.configure.rst", "developers_guide/generated/polaris.TestCase.validate.rst", "developers_guide/generated/polaris.TestGroup.rst", "developers_guide/generated/polaris.TestGroup.add_test_case.rst", "developers_guide/generated/polaris.__main__.main.rst", "developers_guide/generated/polaris.cache.update_cache.rst", "developers_guide/generated/polaris.components.get_components.rst", "developers_guide/generated/polaris.config.PolarisConfigParser.rst", "developers_guide/generated/polaris.io.download.rst", "developers_guide/generated/polaris.io.imp_res.rst", "developers_guide/generated/polaris.io.symlink.rst", "developers_guide/generated/polaris.list.list_cases.rst", "developers_guide/generated/polaris.list.list_machines.rst", "developers_guide/generated/polaris.list.list_suites.rst", "developers_guide/generated/polaris.logging.log_method_call.rst", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.rst", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.build_subdivisions_cell_width_lat_lon.rst", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.get_cell_width.rst", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.get_subdivisions.rst", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.make_jigsaw_mesh.rst", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.run.rst", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.setup.rst", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep.rst", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep.build_cell_width_lat_lon.rst", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep.make_jigsaw_mesh.rst", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep.run.rst", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep.setup.rst", "developers_guide/generated/polaris.mesh.spherical.SphericalBaseStep.rst", "developers_guide/generated/polaris.mesh.spherical.SphericalBaseStep.run.rst", "developers_guide/generated/polaris.mesh.spherical.SphericalBaseStep.save_and_plot_cell_width.rst", "developers_guide/generated/polaris.mesh.spherical.SphericalBaseStep.setup.rst", "developers_guide/generated/polaris.model_step.make_graph_file.rst", "developers_guide/generated/polaris.namelist.ingest.rst", "developers_guide/generated/polaris.namelist.parse_replacements.rst", "developers_guide/generated/polaris.namelist.replace.rst", "developers_guide/generated/polaris.namelist.write.rst", "developers_guide/generated/polaris.parallel.check_parallel_system.rst", "developers_guide/generated/polaris.parallel.get_available_cores_and_nodes.rst", "developers_guide/generated/polaris.parallel.run_command.rst", "developers_guide/generated/polaris.parallel.set_cores_per_node.rst", "developers_guide/generated/polaris.provenance.write.rst", "developers_guide/generated/polaris.remap.MappingFileStep.rst", "developers_guide/generated/polaris.remap.MappingFileStep.dst_from_lon_lat.rst", "developers_guide/generated/polaris.remap.MappingFileStep.dst_from_mpas.rst", "developers_guide/generated/polaris.remap.MappingFileStep.dst_from_points.rst", "developers_guide/generated/polaris.remap.MappingFileStep.dst_from_proj.rst", "developers_guide/generated/polaris.remap.MappingFileStep.dst_global_lon_lat.rst", "developers_guide/generated/polaris.remap.MappingFileStep.get_remapper.rst", "developers_guide/generated/polaris.remap.MappingFileStep.run.rst", "developers_guide/generated/polaris.remap.MappingFileStep.src_from_lon_lat.rst", "developers_guide/generated/polaris.remap.MappingFileStep.src_from_mpas.rst", "developers_guide/generated/polaris.remap.MappingFileStep.src_from_proj.rst", "developers_guide/generated/polaris.run.serial.run_single_step.rst", "developers_guide/generated/polaris.run.serial.run_tests.rst", "developers_guide/generated/polaris.setup.setup_case.rst", "developers_guide/generated/polaris.setup.setup_cases.rst", "developers_guide/generated/polaris.streams.read.rst", "developers_guide/generated/polaris.streams.update_defaults.rst", "developers_guide/generated/polaris.streams.update_tree.rst", "developers_guide/generated/polaris.streams.write.rst", "developers_guide/generated/polaris.suite.setup_suite.rst", "developers_guide/generated/polaris.validate.compare_timers.rst", "developers_guide/generated/polaris.validate.compare_variables.rst", "developers_guide/generated/polaris.viz.globe.plot_global.rst", "developers_guide/generated/polaris.viz.plot_horiz_field.rst", "developers_guide/generated/polaris.yaml.PolarisYaml.rst", "developers_guide/generated/polaris.yaml.PolarisYaml.read.rst", "developers_guide/generated/polaris.yaml.PolarisYaml.update.rst", "developers_guide/generated/polaris.yaml.PolarisYaml.write.rst", "developers_guide/generated/polaris.yaml.main_mpas_to_yaml.rst", "developers_guide/generated/polaris.yaml.mpas_namelist_and_streams_to_yaml.rst", "developers_guide/generated/polaris.yaml.yaml_to_mpas_streams.rst", "developers_guide/machines/anvil.md", "developers_guide/machines/chicoma.md", "developers_guide/machines/chrysalis.md", "developers_guide/machines/compy.md", "developers_guide/machines/index.md", "developers_guide/machines/perlmutter.md", "developers_guide/ocean/api.md", "developers_guide/ocean/framework.md", "developers_guide/ocean/generated/polaris.ocean.Ocean.rst", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.rst", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.compute_cell_count.rst", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.constrain_resources.rst", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.map_yaml_to_namelist.rst", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.setup.rst", "developers_guide/ocean/generated/polaris.ocean.rpe.compute_rpe.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.BaroclinicChannel.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.BaroclinicChannelTestCase.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.BaroclinicChannelTestCase.configure.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.BaroclinicChannelTestCase.validate.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.decomp_test.DecompTest.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.decomp_test.DecompTest.validate.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.default.Default.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.default.Default.validate.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.forward.Forward.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.forward.Forward.compute_cell_count.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.forward.Forward.dynamic_model_config.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.initial_state.InitialState.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.initial_state.InitialState.run.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.initial_state.InitialState.setup.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.restart_test.RestartTest.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.restart_test.RestartTest.validate.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.restart_test.restart_step.RestartStep.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.restart_test.restart_step.RestartStep.dynamic_model_config.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.rpe_test.RpeTest.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.rpe_test.RpeTest.configure.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.rpe_test.RpeTest.validate.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.rpe_test.analysis.Analysis.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.rpe_test.analysis.Analysis.run.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.rpe_test.analysis.Analysis.setup.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.threads_test.ThreadsTest.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.threads_test.ThreadsTest.validate.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.viz.Viz.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.viz.Viz.run.rst", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.GlobalConvergence.rst", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.CosineBell.rst", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.CosineBell.configure.rst", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.CosineBell.validate.rst", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.analysis.Analysis.rst", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.analysis.Analysis.rmse.rst", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.analysis.Analysis.run.rst", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.forward.Forward.rst", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.forward.Forward.compute_cell_count.rst", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.forward.Forward.dynamic_model_config.rst", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.init.Init.rst", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.init.Init.run.rst", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.viz.Viz.rst", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.viz.Viz.run.rst", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.viz.VizMap.rst", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.viz.VizMap.run.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.grid_1d.generate_1d_grid.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.grid_1d.write_1d_grid.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.init_vertical_coord.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.partial_cells.alter_bottom_depth.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.partial_cells.alter_ssh.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.zlevel.compute_min_max_level_cell.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.zlevel.compute_z_level_layer_thickness.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.zlevel.compute_z_level_resting_thickness.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.zlevel.init_z_level_vertical_coord.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.zstar.init_z_star_vertical_coord.rst", "developers_guide/ocean/index.md", "developers_guide/ocean/models/index.md", "developers_guide/ocean/models/mpas_ocean.md", "developers_guide/ocean/test_groups/baroclinic_channel.md", "developers_guide/ocean/test_groups/global_convergence.md", "developers_guide/ocean/test_groups/index.md", "developers_guide/organization/components.md", "developers_guide/organization/index.md", "developers_guide/organization/steps.md", "developers_guide/organization/suites.md", "developers_guide/organization/test_cases.md", "developers_guide/organization/test_groups.md", "developers_guide/overview.md", "developers_guide/quick_start.md", "developers_guide/troubleshooting.md", "glossary.md", "index.md", "users_guide/config_files.md", "users_guide/machines/anvil.md", "users_guide/machines/chicoma.md", "users_guide/machines/chrysalis.md", "users_guide/machines/compy.md", "users_guide/machines/index.md", "users_guide/machines/perlmutter.md", "users_guide/ocean/framework/index.md", "users_guide/ocean/framework/vertical.md", "users_guide/ocean/index.md", "users_guide/ocean/suites.md", "users_guide/ocean/test_groups/baroclinic_channel.md", "users_guide/ocean/test_groups/global_convergence.md", "users_guide/ocean/test_groups/index.md", "users_guide/quick_start.md", "users_guide/test_cases.md", "users_guide/test_suites.md"], "titles": ["Design Documents", "Template", "API reference", "Building the Documentation", "Command-line interface", "Documentation", "Modules for polaris commands", "Config files", "Framework", "IO", "Logging", "Mesh", "Model", "Provenance", "Remapping", "Validation", "Visualization", "polaris.Component", "polaris.Component.add_test_group", "polaris.ModelStep", "polaris.ModelStep.add_model_config_options", "polaris.ModelStep.add_namelist_file", "polaris.ModelStep.add_streams_file", "polaris.ModelStep.add_yaml_file", "polaris.ModelStep.dynamic_model_config", "polaris.ModelStep.map_yaml_to_namelist", "polaris.ModelStep.partition", "polaris.ModelStep.process_inputs_and_outputs", "polaris.ModelStep.runtime_setup", "polaris.ModelStep.set_model_resources", "polaris.ModelStep.setup", "polaris.ModelStep.update_namelist_pio", "polaris.Step", "polaris.Step.add_dependency", "polaris.Step.add_input_file", "polaris.Step.add_output_file", "polaris.Step.constrain_resources", "polaris.Step.run", "polaris.Step.runtime_setup", "polaris.Step.set_resources", "polaris.Step.setup", "polaris.TestCase", "polaris.TestCase.add_step", "polaris.TestCase.configure", "polaris.TestCase.validate", "polaris.TestGroup", "polaris.TestGroup.add_test_case", "polaris.__main__.main", "polaris.cache.update_cache", "polaris.components.get_components", "polaris.config.PolarisConfigParser", "polaris.io.download", "polaris.io.imp_res", "polaris.io.symlink", "polaris.list.list_cases", "polaris.list.list_machines", "polaris.list.list_suites", "polaris.logging.log_method_call", "polaris.mesh.IcosahedralMeshStep", "polaris.mesh.IcosahedralMeshStep.build_subdivisions_cell_width_lat_lon", "polaris.mesh.IcosahedralMeshStep.get_cell_width", "polaris.mesh.IcosahedralMeshStep.get_subdivisions", "polaris.mesh.IcosahedralMeshStep.make_jigsaw_mesh", "polaris.mesh.IcosahedralMeshStep.run", "polaris.mesh.IcosahedralMeshStep.setup", "polaris.mesh.QuasiUniformSphericalMeshStep", "polaris.mesh.QuasiUniformSphericalMeshStep.build_cell_width_lat_lon", "polaris.mesh.QuasiUniformSphericalMeshStep.make_jigsaw_mesh", "polaris.mesh.QuasiUniformSphericalMeshStep.run", "polaris.mesh.QuasiUniformSphericalMeshStep.setup", "polaris.mesh.spherical.SphericalBaseStep", "polaris.mesh.spherical.SphericalBaseStep.run", "polaris.mesh.spherical.SphericalBaseStep.save_and_plot_cell_width", "polaris.mesh.spherical.SphericalBaseStep.setup", "polaris.model_step.make_graph_file", "polaris.namelist.ingest", "polaris.namelist.parse_replacements", "polaris.namelist.replace", "polaris.namelist.write", "polaris.parallel.check_parallel_system", "polaris.parallel.get_available_cores_and_nodes", "polaris.parallel.run_command", "polaris.parallel.set_cores_per_node", "polaris.provenance.write", "polaris.remap.MappingFileStep", "polaris.remap.MappingFileStep.dst_from_lon_lat", "polaris.remap.MappingFileStep.dst_from_mpas", "polaris.remap.MappingFileStep.dst_from_points", "polaris.remap.MappingFileStep.dst_from_proj", "polaris.remap.MappingFileStep.dst_global_lon_lat", "polaris.remap.MappingFileStep.get_remapper", "polaris.remap.MappingFileStep.run", "polaris.remap.MappingFileStep.src_from_lon_lat", "polaris.remap.MappingFileStep.src_from_mpas", "polaris.remap.MappingFileStep.src_from_proj", "polaris.run.serial.run_single_step", "polaris.run.serial.run_tests", "polaris.setup.setup_case", "polaris.setup.setup_cases", "polaris.streams.read", "polaris.streams.update_defaults", "polaris.streams.update_tree", "polaris.streams.write", "polaris.suite.setup_suite", "polaris.validate.compare_timers", "polaris.validate.compare_variables", "polaris.viz.globe.plot_global", "polaris.viz.plot_horiz_field", "polaris.yaml.PolarisYaml", "polaris.yaml.PolarisYaml.read", "polaris.yaml.PolarisYaml.update", "polaris.yaml.PolarisYaml.write", "polaris.yaml.main_mpas_to_yaml", "polaris.yaml.mpas_namelist_and_streams_to_yaml", "polaris.yaml.yaml_to_mpas_streams", "Anvil", "Chicoma", "Chrysalis", "CompyMcNodeFace", "Machines", "Perlmutter", "ocean", "Ocean framework", "polaris.ocean.Ocean", "polaris.ocean.model.OceanModelStep", "polaris.ocean.model.OceanModelStep.compute_cell_count", "polaris.ocean.model.OceanModelStep.constrain_resources", "polaris.ocean.model.OceanModelStep.map_yaml_to_namelist", "polaris.ocean.model.OceanModelStep.setup", "polaris.ocean.rpe.compute_rpe", "polaris.ocean.tests.baroclinic_channel.BaroclinicChannel", "polaris.ocean.tests.baroclinic_channel.BaroclinicChannelTestCase", "polaris.ocean.tests.baroclinic_channel.BaroclinicChannelTestCase.configure", "polaris.ocean.tests.baroclinic_channel.BaroclinicChannelTestCase.validate", "polaris.ocean.tests.baroclinic_channel.decomp_test.DecompTest", "polaris.ocean.tests.baroclinic_channel.decomp_test.DecompTest.validate", "polaris.ocean.tests.baroclinic_channel.default.Default", "polaris.ocean.tests.baroclinic_channel.default.Default.validate", "polaris.ocean.tests.baroclinic_channel.forward.Forward", "polaris.ocean.tests.baroclinic_channel.forward.Forward.compute_cell_count", "polaris.ocean.tests.baroclinic_channel.forward.Forward.dynamic_model_config", "polaris.ocean.tests.baroclinic_channel.initial_state.InitialState", "polaris.ocean.tests.baroclinic_channel.initial_state.InitialState.run", "polaris.ocean.tests.baroclinic_channel.initial_state.InitialState.setup", "polaris.ocean.tests.baroclinic_channel.restart_test.RestartTest", "polaris.ocean.tests.baroclinic_channel.restart_test.RestartTest.validate", "polaris.ocean.tests.baroclinic_channel.restart_test.restart_step.RestartStep", "polaris.ocean.tests.baroclinic_channel.restart_test.restart_step.RestartStep.dynamic_model_config", "polaris.ocean.tests.baroclinic_channel.rpe_test.RpeTest", "polaris.ocean.tests.baroclinic_channel.rpe_test.RpeTest.configure", "polaris.ocean.tests.baroclinic_channel.rpe_test.RpeTest.validate", "polaris.ocean.tests.baroclinic_channel.rpe_test.analysis.Analysis", "polaris.ocean.tests.baroclinic_channel.rpe_test.analysis.Analysis.run", "polaris.ocean.tests.baroclinic_channel.rpe_test.analysis.Analysis.setup", "polaris.ocean.tests.baroclinic_channel.threads_test.ThreadsTest", "polaris.ocean.tests.baroclinic_channel.threads_test.ThreadsTest.validate", "polaris.ocean.tests.baroclinic_channel.viz.Viz", "polaris.ocean.tests.baroclinic_channel.viz.Viz.run", "polaris.ocean.tests.global_convergence.GlobalConvergence", "polaris.ocean.tests.global_convergence.cosine_bell.CosineBell", "polaris.ocean.tests.global_convergence.cosine_bell.CosineBell.configure", "polaris.ocean.tests.global_convergence.cosine_bell.CosineBell.validate", "polaris.ocean.tests.global_convergence.cosine_bell.analysis.Analysis", "polaris.ocean.tests.global_convergence.cosine_bell.analysis.Analysis.rmse", "polaris.ocean.tests.global_convergence.cosine_bell.analysis.Analysis.run", "polaris.ocean.tests.global_convergence.cosine_bell.forward.Forward", "polaris.ocean.tests.global_convergence.cosine_bell.forward.Forward.compute_cell_count", "polaris.ocean.tests.global_convergence.cosine_bell.forward.Forward.dynamic_model_config", "polaris.ocean.tests.global_convergence.cosine_bell.init.Init", "polaris.ocean.tests.global_convergence.cosine_bell.init.Init.run", "polaris.ocean.tests.global_convergence.cosine_bell.viz.Viz", "polaris.ocean.tests.global_convergence.cosine_bell.viz.Viz.run", "polaris.ocean.tests.global_convergence.cosine_bell.viz.VizMap", "polaris.ocean.tests.global_convergence.cosine_bell.viz.VizMap.run", "polaris.ocean.vertical.grid_1d.generate_1d_grid", "polaris.ocean.vertical.grid_1d.write_1d_grid", "polaris.ocean.vertical.init_vertical_coord", "polaris.ocean.vertical.partial_cells.alter_bottom_depth", "polaris.ocean.vertical.partial_cells.alter_ssh", "polaris.ocean.vertical.zlevel.compute_min_max_level_cell", "polaris.ocean.vertical.zlevel.compute_z_level_layer_thickness", "polaris.ocean.vertical.zlevel.compute_z_level_resting_thickness", "polaris.ocean.vertical.zlevel.init_z_level_vertical_coord", "polaris.ocean.vertical.zstar.init_z_star_vertical_coord", "Ocean component", "Models", "MPAS-Ocean", "baroclinic_channel", "global_convergence", "Test groups", "Components", "Organization of Tests", "Steps", "Test Suites", "Test cases", "Test Groups", "Overview", "Quick Start for Developers", "Troubleshooting", "Glossary", "Polaris", "Config Files", "Anvil", "Chicoma", "Chrysalis", "CompyMcNodeFace", "Machines", "Perlmutter", "Framework", "Vertical coordinate", "Ocean component", "Test suites", "baroclinic_channel", "global_convergence", "Test groups", "Quick Start for Users", "Test Cases", "Test Suites"], "terms": {"templat": [0, 4, 22, 23, 24, 99, 109, 113, 140, 147, 200, 201], "date": [1, 4, 48, 184, 197, 201], "yyyi": 1, "mm": 1, "dd": 1, "contributor": 1, "The": [1, 4, 5, 6, 7, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 26, 32, 33, 34, 35, 36, 38, 40, 41, 42, 45, 46, 48, 50, 51, 53, 54, 57, 58, 59, 60, 61, 62, 65, 66, 70, 74, 76, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 96, 97, 98, 99, 103, 104, 105, 106, 107, 108, 109, 113, 114, 119, 122, 123, 124, 125, 131, 134, 136, 138, 139, 141, 143, 144, 146, 148, 151, 153, 154, 156, 159, 162, 163, 165, 166, 168, 170, 172, 176, 177, 178, 179, 180, 181, 182, 183, 184, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216], "purpos": [1, 45, 195, 196, 199, 216], "thi": [1, 2, 4, 5, 6, 7, 9, 10, 11, 12, 14, 15, 19, 24, 25, 29, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 48, 50, 57, 58, 59, 62, 63, 65, 66, 67, 68, 70, 71, 79, 81, 83, 84, 90, 91, 96, 104, 105, 115, 116, 117, 118, 119, 120, 122, 124, 125, 127, 130, 131, 132, 134, 136, 138, 139, 140, 141, 142, 143, 144, 146, 147, 148, 149, 151, 152, 153, 154, 156, 157, 158, 159, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 184, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 203, 206, 207, 209, 212, 213, 215, 217], "section": [1, 2, 4, 5, 7, 10, 12, 14, 19, 25, 66, 106, 110, 122, 124, 127, 174, 176, 182, 183, 184, 190, 192, 193, 195, 196, 197, 198, 201, 202, 203, 204, 205, 206, 207, 209, 213, 215], "i": [1, 4, 5, 6, 7, 9, 10, 11, 12, 14, 15, 16, 19, 24, 29, 32, 33, 34, 38, 39, 41, 48, 51, 53, 65, 66, 70, 81, 84, 88, 94, 95, 96, 97, 99, 101, 104, 105, 107, 109, 114, 115, 117, 118, 119, 122, 124, 125, 138, 139, 140, 147, 166, 167, 176, 182, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 212, 213, 216, 217], "summar": 1, "what": [1, 9, 14, 119, 196, 207, 215], "capabl": [1, 14, 119, 192, 196, 206, 215], "ad": [1, 4, 5, 7, 8, 9, 14, 15, 33, 34, 40, 43, 50, 105, 131, 143, 153, 176, 182, 183, 194, 195, 197, 200, 202, 203, 204, 205, 207, 215], "polari": [1, 3, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 115, 117, 118, 119, 122, 184, 185, 187, 188, 190, 191, 193, 194, 195, 198, 199, 201, 202, 203, 204, 205, 206, 207, 210, 211, 216, 217], "through": [1, 98, 196], "process": [1, 6, 12, 27, 81, 114, 192, 196, 197, 199, 200], "It": [1, 4, 12, 14, 32, 38, 106, 187, 192, 193, 194, 195, 196, 197, 199, 201, 206], "should": [1, 4, 5, 7, 10, 12, 15, 20, 25, 33, 34, 40, 41, 43, 51, 66, 97, 98, 105, 106, 107, 115, 116, 117, 118, 119, 120, 122, 127, 143, 153, 184, 190, 192, 193, 194, 195, 197, 198, 201, 212, 215], "clear": [1, 196], "new": [1, 4, 12, 17, 20, 32, 41, 45, 50, 53, 58, 65, 70, 84, 100, 101, 138, 146, 165, 176, 182, 183, 192, 196, 197, 198, 199, 200, 215], "code": [1, 4, 5, 7, 10, 12, 32, 122, 184, 190, 192, 193, 194, 199, 200, 201, 208, 212, 215], "do": [1, 4, 7, 9, 12, 14, 15, 109, 192, 194, 197, 198, 199, 206, 215], "current": [1, 4, 6, 9, 19, 29, 32, 39, 104, 105, 119, 124, 184, 188, 190, 192, 196, 197, 199, 200, 201, 206, 209, 212, 213, 215, 216, 217], "doe": [1, 7, 10, 12, 192, 200, 206], "primari": [1, 4, 7, 217], "challeng": 1, "respect": [1, 6, 7, 12, 16, 122, 192, 196], "softwar": [1, 74, 207, 215], "also": [1, 4, 5, 7, 11, 12, 15, 16, 27, 38, 50, 104, 105, 106, 122, 170, 176, 182, 183, 184, 190, 191, 192, 194, 195, 196, 197, 201, 206, 207, 209, 212, 213, 215, 216], "appropri": [1, 4, 12, 20, 79, 119, 184, 187, 190, 192, 195, 197, 200, 201, 202, 203, 204, 205, 206, 207, 215], "final": [1, 5, 187, 188, 191, 192, 194, 213], "statement": [1, 10, 192, 199], "contain": [1, 4, 5, 6, 7, 14, 16, 17, 21, 22, 23, 49, 52, 76, 85, 86, 87, 88, 92, 93, 94, 99, 107, 108, 122, 129, 176, 182, 183, 190, 191, 192, 196, 197, 199, 201, 206, 210, 215], "gener": [1, 2, 3, 5, 6, 10, 12, 15, 16, 20, 21, 22, 23, 27, 40, 65, 105, 122, 143, 153, 174, 184, 186, 187, 188, 190, 192, 197, 201, 206, 213, 215], "regard": 1, "success": [1, 51, 184, 190, 201], "last": [1, 193, 197, 215], "modifi": [1, 6, 7, 11, 12, 19, 31, 43, 99, 101, 124, 132, 149, 187, 192, 194, 195, 197, 200, 201, 212, 215], "add": [1, 4, 5, 7, 11, 12, 18, 20, 21, 22, 23, 24, 33, 34, 35, 42, 43, 46, 64, 69, 73, 99, 100, 101, 109, 110, 113, 114, 140, 147, 187, 190, 192, 194, 195, 196, 197, 199, 201, 207, 213], "your": [1, 3, 4, 9, 119, 184, 196, 197, 198, 201, 202, 203, 206, 207, 213, 215], "list": [1, 5, 7, 12, 15, 19, 32, 41, 42, 48, 49, 81, 96, 97, 98, 103, 104, 105, 129, 151, 156, 159, 162, 192, 193, 194, 195, 196, 197, 199, 200, 201, 203, 206, 207, 213, 215, 216, 217], "appear": [1, 119, 192], "each": [1, 4, 5, 6, 10, 11, 12, 14, 15, 38, 41, 54, 60, 61, 98, 114, 119, 122, 135, 145, 155, 176, 177, 178, 179, 180, 181, 182, 183, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 199, 201, 206, 209, 212, 213, 215, 217], "under": [1, 14, 32, 33, 104, 119, 122, 186, 192, 193, 197, 200, 209, 216], "head": [1, 186, 203], "one": [1, 4, 5, 8, 12, 14, 15, 16, 19, 31, 32, 34, 41, 48, 53, 97, 98, 103, 105, 122, 124, 133, 135, 137, 144, 145, 150, 155, 184, 187, 192, 194, 195, 196, 197, 198, 199, 200, 201, 206, 207, 209, 213, 215, 216, 217], "correspond": [1, 5, 15, 104, 105, 122, 184, 192, 197], "between": [1, 4, 6, 10, 11, 12, 14, 15, 19, 31, 34, 59, 66, 67, 72, 84, 90, 104, 105, 124, 144, 176, 182, 183, 188, 190, 192, 195, 196, 197, 206, 209, 212], "propos": 1, "discuss": [1, 122, 192, 194, 195, 196, 213], "technic": [1, 5], "issu": [1, 192, 193, 197, 213], "rather": [1, 6, 7, 9, 11, 12, 32, 34, 50, 119, 187, 192, 194, 195, 197, 198, 209], "focu": 1, "model": [1, 4, 8, 19, 20, 24, 25, 27, 32, 34, 97, 98, 103, 108, 113, 115, 116, 117, 118, 119, 120, 134, 138, 140, 144, 146, 147, 148, 154, 167, 184, 187, 190, 193, 194, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 212], "To": [1, 4, 10, 14, 15, 105, 119, 122, 184, 192, 196, 197, 202, 203, 204, 205, 206, 207, 209, 213, 215], "extent": [1, 11, 14], "possibl": [1, 6, 9, 61, 122, 186, 192, 193, 196, 209], "rel": [1, 4, 7, 14, 15, 34, 35, 48, 50, 97, 98, 103, 104, 105, 184, 190, 192, 196, 197, 199, 212, 215, 216], "independ": [1, 4, 193, 199], "other": [1, 4, 5, 6, 7, 8, 11, 16, 32, 33, 35, 50, 115, 135, 145, 155, 188, 190, 191, 194, 195, 196, 197, 198, 199, 200, 201, 202, 212, 216], "thu": [1, 5, 12], "allow": [1, 6, 14, 15, 19, 29, 32, 39, 50, 105, 122, 124, 192, 195, 199, 201, 206, 209, 212, 213, 216], "clean": [1, 192, 194, 197], "plan": [1, 11, 184, 192, 199, 216], "For": [1, 2, 4, 5, 10, 12, 14, 16, 79, 98, 115, 186, 187, 192, 196, 197, 199, 201, 202, 210, 213, 215, 216], "you": [1, 3, 4, 5, 7, 9, 10, 11, 12, 14, 15, 16, 115, 116, 117, 118, 119, 120, 184, 190, 192, 194, 196, 197, 198, 199, 201, 202, 203, 204, 205, 206, 207, 212, 213, 215, 216, 217], "can": [1, 3, 4, 5, 6, 7, 9, 10, 11, 12, 14, 15, 16, 29, 32, 33, 34, 39, 41, 44, 62, 65, 67, 85, 89, 90, 92, 97, 98, 103, 105, 115, 116, 117, 118, 119, 120, 122, 184, 187, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 211, 212, 213, 215, 216, 217], "provid": [1, 2, 4, 6, 7, 12, 14, 15, 16, 34, 88, 94, 104, 105, 109, 122, 133, 135, 137, 145, 150, 155, 184, 187, 188, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 206, 210, 213, 215], "an": [1, 2, 4, 5, 7, 9, 11, 14, 15, 16, 19, 27, 32, 33, 34, 35, 53, 58, 60, 61, 79, 86, 93, 99, 101, 104, 105, 106, 113, 119, 124, 168, 187, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 203, 206, 209, 215, 216, 217], "intend": [1, 6, 7, 193, 201, 216], "meet": 1, "includ": [1, 4, 5, 6, 7, 11, 12, 15, 16, 34, 40, 41, 51, 96, 106, 119, 122, 131, 143, 153, 187, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 208, 209, 210, 211, 212, 213, 215, 216, 217], "detail": [1, 2, 4, 5, 7, 9, 10, 11, 54, 105, 186, 188, 191, 192, 194, 196, 197, 198, 213, 215], "pde": 1, "solver": [1, 194, 197, 200, 215], "similar": [1, 4, 6, 7, 10, 11, 12, 15, 116, 119, 120, 191, 194, 195, 196, 197, 215], "well": [1, 6, 7, 10, 11, 122, 179, 187, 192, 197, 199, 201, 213, 215, 216], "perform": [1, 4, 6, 12, 14, 15, 37, 38, 40, 44, 58, 104, 105, 136, 138, 143, 148, 153, 158, 165, 184, 187, 188, 192, 193, 194, 199, 200, 201, 206, 212, 217], "In": [1, 5, 6, 7, 9, 12, 14, 15, 32, 122, 188, 191, 192, 193, 194, 195, 196, 197, 200, 201, 206, 209, 215, 216, 217], "steer": 1, "awai": 1, "from": [1, 4, 5, 6, 7, 9, 10, 11, 12, 14, 15, 17, 19, 21, 22, 25, 32, 33, 34, 41, 43, 48, 51, 53, 74, 76, 81, 85, 86, 87, 88, 89, 92, 93, 94, 96, 98, 99, 100, 101, 104, 105, 107, 109, 110, 113, 114, 119, 124, 127, 133, 138, 162, 167, 170, 180, 184, 186, 187, 188, 190, 194, 195, 196, 198, 199, 200, 201, 202, 203, 204, 205, 207, 209, 211, 212, 213, 215, 216, 217], "low": [1, 107], "level": [1, 9, 10, 11, 15, 16, 122, 176, 177, 178, 179, 180, 181, 182, 183, 187, 191, 192, 194, 195, 201, 212, 213, 217], "variabl": [1, 4, 11, 16, 17, 19, 32, 41, 44, 45, 58, 65, 70, 74, 79, 84, 85, 89, 92, 104, 105, 107, 108, 109, 114, 119, 122, 124, 131, 138, 141, 151, 156, 159, 161, 162, 165, 170, 172, 176, 182, 183, 186, 194, 196, 197, 198, 202, 203, 204, 205, 206, 207, 210, 212, 215], "declar": [1, 5], "interfac": [1, 8, 174, 175, 176, 182, 183, 192, 196, 197, 200, 209], "sequenc": [1, 4, 12, 191, 192, 196, 199, 215, 216, 217], "If": [1, 4, 5, 6, 7, 10, 12, 15, 16, 19, 29, 32, 34, 39, 42, 43, 53, 79, 81, 82, 97, 104, 105, 107, 115, 116, 117, 118, 119, 120, 124, 138, 187, 192, 194, 195, 196, 197, 198, 199, 201, 206, 207, 209, 212, 213, 215], "want": [1, 4, 9, 12, 14, 15, 43, 122, 192, 195, 197, 198, 201, 206, 207, 215, 216], "math": 1, "syntax": 1, "almost": [1, 7], "ident": [1, 4, 15, 134, 144, 154, 187, 193, 196, 212], "latex": 1, "b": [1, 4, 197, 199, 215], "2": [1, 11, 12, 15, 33, 154, 186, 187, 191, 193, 197, 201, 203, 206, 209, 212, 213, 215], "2ab": 1, "imag": [1, 5, 16, 106, 107, 195], "keep": [1, 4, 7, 12, 19, 50, 192, 194, 197], "mind": [1, 4], "quit": [1, 191, 192, 194], "small": [1, 7, 38, 192, 195, 202, 203, 208, 209, 215], "jpeg": 1, "ar": [1, 4, 5, 6, 7, 8, 9, 10, 11, 12, 15, 16, 17, 19, 28, 29, 32, 34, 38, 39, 41, 45, 50, 79, 81, 96, 98, 105, 110, 119, 122, 124, 138, 176, 179, 182, 183, 184, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 212, 213, 215, 216, 217], "prefer": [1, 192, 193, 201], "png": [1, 11, 16, 188], "okai": [1, 192], "size": [1, 11, 60, 61, 122, 126, 128, 129, 187, 195, 201, 213], "repo": [1, 4, 184, 200], "exampl": [1, 2, 4, 5, 7, 9, 10, 11, 12, 14, 15, 16, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 201, 203, 209, 215, 216, 217], "centric": 1, "pseudo": 1, "link": [1, 5, 9, 12, 34, 53, 119, 192, 195, 197, 206, 210, 215], "actual": [1, 4, 10, 192, 194, 197], "sourc": [1, 5, 14, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 192, 197, 201, 202, 203, 204, 205, 206, 207, 215], "project": [1, 4, 5, 57, 88, 94, 184, 196, 197, 201, 202, 203, 206, 215], "manag": [1, 198, 206], "item": 1, "git": [1, 13, 83, 184, 197, 201, 215], "branch": [1, 4, 119, 184, 190, 192, 197, 215], "timelin": 1, "staf": 1, "via": [1, 4, 12, 192, 206], "block": [1, 194], "like": [1, 4, 5, 6, 7, 8, 9, 12, 15, 85, 89, 92, 122, 191, 192, 195, 196, 197, 198, 200, 201, 206, 212, 213, 215, 216], "def": [1, 5, 7, 9, 10, 14, 16, 190, 192, 194, 195, 196], "example_funct": 1, "foo": [1, 196], "return": [1, 5, 25, 49, 51, 59, 60, 61, 66, 76, 80, 90, 98, 99, 101, 109, 113, 114, 122, 125, 127, 129, 139, 163, 166, 174, 177, 178, 179, 180, 181, 196, 213], "0": [1, 4, 5, 11, 12, 15, 16, 60, 85, 89, 92, 105, 115, 116, 117, 118, 119, 120, 122, 176, 181, 182, 183, 186, 188, 192, 195, 196, 198, 201, 203, 206, 209, 210, 212, 213, 215], "how": [1, 4, 10, 12, 65, 122, 191, 192, 194, 196, 201, 206, 207, 212, 213], "show": [1, 5, 11, 192, 206, 207, 212, 213], "we": [1, 4, 5, 7, 9, 11, 12, 14, 15, 16, 79, 118, 119, 122, 128, 187, 188, 191, 192, 194, 195, 196, 197, 201, 203, 205, 206, 207, 209, 213, 215, 217], "have": [1, 3, 4, 5, 7, 9, 10, 12, 14, 15, 25, 32, 33, 79, 97, 98, 103, 118, 119, 122, 127, 162, 184, 187, 191, 192, 193, 194, 195, 196, 197, 198, 199, 201, 202, 203, 204, 205, 206, 207, 209, 211, 212, 213, 215, 216, 217], "met": 1, "which": [1, 4, 5, 6, 7, 11, 12, 14, 15, 16, 22, 23, 25, 34, 45, 49, 86, 93, 97, 98, 99, 103, 105, 107, 109, 122, 127, 134, 144, 154, 184, 186, 190, 191, 192, 194, 195, 196, 197, 201, 203, 206, 209, 212, 213, 215, 216, 217], "regress": [1, 158, 187, 193, 199, 200, 212, 215, 217], "suit": [1, 5, 10, 15, 32, 41, 54, 95, 96, 98, 119, 187, 191, 192, 194, 197, 199, 200, 201, 202, 203, 204, 205, 207, 210], "would": [1, 4, 7, 12, 15, 19, 29, 32, 39, 42, 81, 84, 105, 122, 124, 138, 187, 191, 192, 194, 195, 196, 197, 198, 206, 209, 215], "thei": [1, 4, 5, 6, 10, 11, 12, 15, 16, 32, 33, 34, 43, 50, 65, 96, 110, 122, 184, 187, 190, 191, 192, 194, 195, 196, 197, 199, 200, 201, 206, 209, 212, 213, 215, 217], "need": [1, 3, 4, 5, 9, 10, 11, 12, 14, 24, 42, 50, 66, 79, 122, 140, 147, 184, 190, 192, 194, 196, 197, 198, 200, 201, 202, 206, 207, 209, 213, 215, 217], "configur": [1, 4, 5, 7, 9, 12, 14, 29, 32, 39, 41, 51, 79, 80, 81, 82, 83, 97, 98, 103, 119, 122, 174, 176, 177, 178, 182, 183, 187, 192, 195, 196, 200, 201, 203, 206, 207, 209, 215, 216], "work": [1, 4, 6, 9, 10, 12, 13, 14, 32, 34, 35, 37, 40, 41, 48, 83, 95, 97, 98, 103, 118, 119, 143, 153, 170, 172, 190, 191, 192, 193, 194, 196, 197, 198, 199, 201, 206, 213, 215, 216], "properli": [1, 115, 117, 118, 201, 215], "addit": [1, 5, 7, 32, 190, 191, 192, 194, 195, 196, 197], "modif": [1, 5, 192], "nightli": [1, 197, 215, 217], "anoth": [1, 5, 7, 8, 11, 14, 15, 32, 33, 34, 104, 105, 184, 192, 194, 195, 196, 197, 199, 201, 212, 215, 216, 217], "might": [1, 9, 12, 14, 16, 192, 195, 197, 201, 206, 215], "made": [1, 4, 14, 32, 35, 41, 105, 192, 194, 196, 199, 216], "ensur": [1, 7, 12, 50, 187, 196, 197], "continu": [1, 192], "expect": [1, 10, 14, 190, 192, 197, 213], "page": [2, 5, 202], "auto": 2, "summari": [2, 203], "more": [2, 4, 7, 9, 10, 11, 12, 14, 15, 32, 41, 48, 66, 97, 98, 122, 186, 187, 188, 191, 192, 193, 194, 196, 197, 199, 206, 210, 212, 213, 215, 216], "relev": [2, 5, 7, 122, 202, 203, 204, 205, 206, 207, 215], "main": [2, 5, 7, 12, 37, 119, 190, 195, 196, 197, 216], "part": [2, 4, 5, 10, 12, 15, 16, 32, 41, 138, 165, 187, 192, 193, 196, 197, 200, 209], "document": [2, 7, 12, 192, 196, 200, 201, 215], "ocean": [2, 4, 5, 7, 8, 9, 11, 12, 15, 16, 17, 25, 34, 45, 103, 185, 187, 188, 190, 191, 192, 194, 195, 196, 197, 199, 200, 201, 206, 208, 209, 211, 212, 213, 215, 216, 217], "As": [3, 4, 11, 15, 60, 122, 192, 193, 194, 195, 196, 197, 201, 209, 217], "long": [3, 19, 29, 32, 39, 81, 124, 138, 192, 215], "follow": [3, 4, 5, 11, 12, 16, 57, 119, 176, 182, 183, 184, 186, 187, 192, 193, 194, 197, 198, 201, 206, 207, 209, 211, 213, 215], "procedur": [3, 119, 197, 207], "conda": [3, 4, 13, 83, 115, 117, 118, 119, 184, 190, 196, 200, 201, 202, 203, 204, 205, 207], "environ": [3, 4, 79, 115, 117, 118, 119, 184, 190, 196, 200, 201, 202, 203, 204, 205, 206, 207], "spack": [3, 4, 115, 117, 118, 119, 198, 200, 202, 203, 204, 205, 206, 207], "compil": [3, 4, 12, 115, 116, 117, 118, 119, 120, 198, 200, 202, 203, 204, 205, 206, 207, 215], "system": [3, 4, 19, 29, 32, 39, 79, 81, 82, 115, 117, 118, 119, 124, 138, 192, 198, 200, 201, 202, 203, 204, 205, 206, 207, 215], "modul": [3, 4, 7, 8, 10, 12, 13, 21, 22, 23, 57, 76, 99, 115, 117, 118, 119, 122, 190, 191, 192, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 211, 215], "set": [3, 4, 5, 6, 7, 8, 9, 12, 14, 15, 20, 21, 22, 23, 24, 32, 34, 40, 66, 82, 83, 85, 86, 87, 88, 89, 92, 93, 94, 97, 98, 99, 101, 103, 104, 105, 106, 107, 115, 116, 117, 118, 119, 120, 138, 140, 143, 147, 153, 158, 160, 167, 173, 176, 182, 183, 184, 186, 187, 188, 191, 192, 194, 195, 196, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 211, 212, 213, 217], "up": [3, 4, 5, 6, 8, 9, 12, 14, 15, 20, 21, 22, 23, 32, 40, 41, 71, 83, 97, 98, 103, 104, 105, 115, 116, 117, 118, 119, 120, 122, 143, 153, 158, 173, 184, 187, 188, 191, 192, 194, 196, 198, 199, 200, 201, 202, 203, 204, 205, 207, 213, 216], "alreadi": [3, 9, 12, 43, 53, 122, 138, 194, 196, 197, 201, 206, 209, 213, 215], "packag": [3, 4, 5, 7, 8, 11, 12, 13, 21, 22, 23, 34, 43, 52, 76, 83, 99, 103, 109, 119, 190, 191, 192, 194, 195, 197, 198, 199, 200, 202, 203, 204, 205, 206, 207, 215], "avail": [3, 4, 9, 12, 15, 16, 19, 29, 32, 35, 36, 39, 49, 54, 80, 81, 124, 138, 192, 194, 196, 197, 202, 203, 204, 205, 207, 212, 213, 215, 217], "Then": [3, 5, 9, 115, 116, 117, 118, 119, 120, 122, 184, 187, 190, 192, 194, 195, 197, 206, 212, 215], "run": [3, 4, 5, 8, 10, 14, 15, 16, 19, 24, 29, 32, 33, 35, 38, 39, 41, 42, 48, 57, 80, 81, 90, 97, 98, 103, 105, 118, 119, 124, 125, 136, 138, 139, 140, 144, 147, 151, 156, 162, 165, 166, 167, 184, 187, 188, 191, 193, 194, 195, 196, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 211, 212, 213, 216, 217], "script": [3, 4, 10, 16, 47, 116, 119, 120, 196, 199, 200, 203, 206], "doc": [3, 5, 194, 207], "cd": [3, 184, 197, 203, 215], "rm": 3, "rf": 3, "developers_guid": 3, "_build": 3, "make": [3, 4, 9, 10, 14, 15, 19, 28, 34, 50, 59, 60, 62, 74, 105, 115, 116, 117, 118, 119, 120, 124, 128, 134, 144, 154, 172, 176, 182, 183, 184, 187, 192, 194, 195, 196, 197, 199, 201, 202, 203, 204, 205, 206, 207, 212, 213, 215, 217], "html": [3, 210], "view": [3, 197], "open": [3, 197], "index": [3, 15, 176, 177, 178, 179, 180, 181, 182, 183, 194, 195], "act": [4, 196, 209], "essenti": [4, 12], "4": [4, 5, 11, 12, 15, 134, 136, 187, 192, 194, 201, 206, 212, 215], "These": [4, 6, 12, 15, 17, 32, 122, 184, 186, 190, 192, 194, 196, 197, 200, 201, 206, 215, 216, 217], "user": [4, 5, 6, 7, 9, 12, 14, 15, 32, 41, 42, 50, 83, 105, 119, 122, 187, 192, 193, 194, 195, 198, 199, 203, 206, 207, 210, 212, 213], "describ": [4, 5, 12, 14, 83, 99, 101, 104, 105, 114, 119, 122, 187, 188, 191, 192, 193, 194, 196, 197, 198, 201, 202, 203, 204, 205, 206, 207, 209, 213, 215], "below": [4, 12, 19, 29, 32, 39, 81, 119, 124, 138, 184, 191, 192, 194, 195, 197, 201, 206, 209, 213, 215], "when": [4, 10, 12, 14, 15, 20, 21, 22, 23, 25, 32, 33, 38, 41, 42, 50, 51, 53, 54, 95, 104, 105, 119, 122, 127, 181, 187, 192, 194, 195, 196, 197, 200, 202, 203, 204, 205, 207, 209, 213, 215, 216], "instal": [4, 197, 206, 207, 215], "abov": [4, 5, 12, 15, 191, 192, 193, 194, 195, 196, 197, 201, 213, 215, 217], "develop": [4, 5, 6, 10, 11, 16, 119, 122, 184, 186, 190, 192, 193, 196, 198, 201, 206, 210, 215], "local": [4, 6, 9, 32, 34, 41, 184, 191, 192, 194, 197, 198, 201, 206, 207, 209], "off": [4, 197, 198], "http": [4, 5, 9, 53, 192, 196, 198, 200, 201, 207, 210, 215], "github": [4, 5, 196, 197, 200, 201, 210, 215], "com": [4, 5, 53, 196, 197, 200, 201, 215], "e3sm": [4, 5, 8, 9, 32, 108, 184, 190, 192, 193, 194, 196, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 210], "creat": [4, 6, 9, 10, 11, 12, 13, 14, 17, 19, 32, 34, 38, 41, 45, 53, 58, 59, 65, 66, 70, 84, 97, 98, 103, 108, 119, 122, 131, 134, 136, 138, 141, 144, 146, 148, 151, 154, 156, 159, 162, 165, 168, 170, 172, 176, 182, 183, 188, 190, 192, 193, 194, 195, 196, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 213, 215], "see": [4, 5, 6, 7, 10, 11, 12, 14, 15, 115, 117, 118, 187, 188, 192, 194, 197, 198, 201, 206, 210, 211, 213, 215, 216, 217], "mode": [4, 12, 190, 197, 199, 200, 215], "mean": [4, 15, 79, 163, 188, 197, 209, 212, 217], "chang": [4, 6, 12, 14, 15, 65, 184, 190, 192, 193, 194, 196, 197, 199, 201, 203, 207, 209, 212, 215, 217], "reflect": [4, 197], "call": [4, 6, 8, 9, 10, 11, 12, 14, 15, 16, 19, 27, 32, 38, 41, 42, 43, 57, 90, 95, 119, 122, 187, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 206, 207, 215], "tool": [4, 7, 10, 12, 14, 184, 190, 192, 197, 200, 201], "us": [4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 19, 24, 25, 29, 32, 33, 34, 38, 39, 41, 48, 51, 66, 74, 77, 79, 81, 84, 90, 95, 105, 106, 107, 108, 109, 114, 115, 119, 122, 124, 125, 126, 127, 128, 138, 139, 140, 147, 159, 162, 166, 170, 174, 176, 177, 178, 182, 183, 184, 186, 187, 188, 190, 191, 192, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 211, 212, 213, 215, 216, 217], "test": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 29, 32, 35, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 54, 57, 58, 63, 65, 68, 70, 80, 81, 83, 84, 91, 95, 96, 97, 98, 103, 104, 105, 119, 122, 123, 124, 174, 184, 186, 187, 188, 190, 192, 197, 198, 199, 200, 202, 203, 204, 205, 206, 207, 208, 209, 210, 212, 213], "case": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 22, 23, 29, 32, 35, 39, 40, 41, 42, 43, 44, 45, 46, 48, 54, 58, 63, 65, 68, 70, 80, 81, 83, 84, 91, 95, 96, 97, 98, 99, 103, 104, 105, 119, 122, 123, 124, 130, 131, 132, 134, 136, 138, 141, 142, 143, 144, 146, 148, 149, 151, 152, 153, 154, 156, 157, 159, 160, 162, 164, 165, 168, 170, 171, 172, 174, 184, 186, 187, 188, 190, 191, 192, 193, 195, 197, 199, 200, 202, 203, 204, 205, 206, 207, 209, 210, 211, 212, 213, 217], "support": [4, 6, 11, 14, 32, 122, 176, 182, 183, 186, 188, 192, 194, 195, 196, 200, 201, 203, 207, 209, 212, 216], "machin": [4, 6, 32, 34, 41, 83, 97, 98, 103, 184, 192, 194, 196, 200, 201, 202, 203, 204, 205, 207], "option": [4, 5, 7, 11, 14, 15, 16, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 32, 33, 34, 39, 41, 42, 43, 48, 50, 51, 53, 54, 58, 64, 65, 66, 69, 70, 74, 76, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 92, 93, 94, 95, 96, 97, 98, 99, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 119, 124, 127, 132, 138, 140, 147, 149, 160, 167, 174, 176, 177, 178, 182, 183, 184, 187, 188, 190, 192, 193, 194, 195, 196, 198, 200, 201, 209, 211, 215, 216], "h": [4, 12], "t": [4, 5, 7, 9, 10, 12, 32, 33, 114, 122, 138, 192, 194, 196, 197, 198, 201, 203, 205, 206, 211, 212, 213, 215, 216, 217], "n": [4, 59, 66, 67, 72, 192, 203, 206, 207, 215], "number": [4, 6, 11, 12, 19, 26, 29, 31, 32, 36, 38, 39, 54, 58, 59, 60, 61, 62, 80, 81, 84, 98, 122, 124, 125, 126, 128, 138, 139, 163, 166, 184, 187, 192, 193, 194, 195, 196, 199, 201, 206, 209, 211, 212, 213, 215], "v": [4, 197, 217], "By": [4, 12, 15, 33, 34, 122, 184, 190, 194, 201, 212, 213], "default": [4, 5, 7, 12, 15, 16, 19, 32, 33, 34, 41, 48, 66, 70, 75, 83, 84, 85, 89, 92, 96, 97, 98, 100, 103, 115, 117, 118, 122, 124, 138, 184, 188, 190, 192, 194, 195, 197, 200, 201, 202, 203, 204, 205, 206, 207, 209, 213, 215, 216, 217], "all": [4, 5, 6, 7, 8, 9, 10, 12, 14, 15, 17, 19, 32, 39, 41, 49, 81, 83, 97, 98, 122, 123, 124, 131, 138, 176, 182, 183, 184, 187, 190, 191, 192, 193, 194, 195, 196, 197, 199, 200, 201, 206, 209, 210, 212, 215, 216], "testcas": [4, 6, 9, 14, 15, 19, 32, 46, 58, 65, 70, 84, 97, 98, 104, 105, 124, 138, 141, 146, 151, 156, 169, 170, 172, 192, 196, 201, 212, 215], "example_compact": [4, 184, 190, 201], "1km": [4, 194, 195, 212, 215], "test1": 4, "1": [4, 5, 11, 12, 14, 15, 16, 32, 60, 115, 116, 117, 118, 119, 120, 122, 134, 138, 154, 176, 182, 183, 187, 188, 191, 192, 194, 197, 198, 201, 203, 206, 207, 209, 212, 213, 215], "test2": 4, "displai": [4, 6, 207], "path": [4, 7, 9, 12, 15, 32, 34, 35, 41, 48, 50, 51, 53, 54, 57, 83, 97, 98, 103, 104, 105, 107, 184, 190, 192, 194, 196, 197, 199, 201, 202, 203, 204, 205, 206, 207, 215, 216], "directori": [4, 6, 9, 10, 12, 13, 15, 16, 32, 34, 35, 40, 41, 48, 53, 83, 95, 97, 98, 103, 104, 105, 119, 143, 153, 170, 172, 184, 187, 190, 192, 193, 194, 196, 197, 199, 200, 201, 202, 203, 204, 205, 206, 207, 213, 215, 216], "help": [4, 11, 191, 192, 197, 200, 206, 210], "messag": [4, 6, 15, 194, 198, 207], "test_expr": [4, 54], "flag": [4, 192, 196, 198, 199, 201, 210, 212, 215], "suppli": [4, 5, 15, 114, 192, 197], "substr": 4, "regular": [4, 16, 54, 59, 66, 159, 162, 202, 205, 206, 207, 215], "express": [4, 54], "subset": 4, "think": 4, "search": [4, 54, 203], "within": [4, 5, 6, 7, 8, 9, 10, 12, 15, 29, 32, 34, 35, 39, 41, 52, 103, 104, 105, 187, 190, 191, 192, 193, 194, 195, 197, 199, 201, 203, 206, 213], "name": [4, 5, 6, 7, 11, 12, 14, 16, 17, 19, 21, 22, 23, 25, 26, 32, 33, 34, 41, 43, 45, 51, 53, 54, 58, 65, 70, 74, 76, 84, 85, 86, 87, 88, 89, 92, 93, 94, 96, 97, 98, 99, 103, 104, 105, 106, 107, 108, 109, 113, 122, 124, 127, 129, 131, 138, 146, 163, 165, 168, 170, 172, 175, 190, 192, 194, 195, 196, 197, 199, 201, 207, 212, 215, 217], "singl": [4, 6, 16, 107, 192, 194, 196, 199, 206, 213], "given": [4, 5, 6, 11, 12, 14, 15, 17, 19, 51, 60, 76, 79, 81, 96, 99, 101, 104, 105, 109, 122, 124, 148, 163, 179, 187, 188, 192, 194, 198, 200, 201, 212, 215, 217], "instead": [4, 10, 12, 19, 96, 115, 119, 192, 194, 196, 197, 202, 215, 217], "pass": [4, 6, 10, 11, 12, 15, 41, 105, 106, 190, 192, 194, 195, 196, 197, 199, 215], "similarli": [4, 6, 184, 192, 197, 206, 215], "compon": [4, 5, 6, 7, 8, 11, 19, 32, 34, 41, 45, 56, 83, 103, 108, 124, 130, 138, 158, 165, 191, 192, 193, 194, 195, 199, 200, 201, 206, 208, 211, 213, 216], "result": [4, 11, 15, 51, 61, 104, 105, 119, 122, 134, 144, 151, 154, 156, 187, 188, 192, 193, 196, 197, 199, 201, 212, 213, 217], "verbos": [4, 54, 56, 192, 217], "about": [4, 5, 6, 10, 12, 15, 32, 84, 108, 122, 192, 194, 195, 196, 197, 201, 203, 212], "its": [4, 5, 6, 10, 14, 16, 32, 43, 90, 100, 190, 191, 192, 193, 194, 195, 196, 197, 199, 201, 202, 213, 215, 216], "descript": [4, 5, 201, 210], "short": [4, 136, 192, 193, 194, 196, 212], "core": [4, 6, 12, 19, 29, 31, 32, 34, 36, 38, 39, 41, 80, 81, 103, 122, 123, 124, 134, 136, 187, 190, 191, 192, 193, 194, 195, 196, 199, 201, 202, 203, 204, 205, 206, 207, 212, 215, 217], "subdirectori": [4, 6, 11, 19, 32, 34, 41, 54, 58, 65, 70, 84, 124, 138, 170, 172, 187, 191, 192, 194, 196, 215, 216], "step": [4, 5, 6, 8, 9, 10, 11, 12, 14, 15, 16, 19, 20, 21, 22, 23, 24, 29, 41, 42, 48, 58, 63, 65, 68, 70, 71, 80, 81, 83, 84, 90, 91, 95, 96, 97, 98, 105, 122, 124, 125, 129, 131, 135, 137, 138, 139, 140, 141, 142, 143, 145, 146, 147, 150, 151, 152, 153, 155, 156, 157, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 186, 187, 188, 190, 191, 194, 195, 196, 199, 201, 207, 209, 212, 216, 217], "tempat": 4, "subdir": [4, 14, 19, 32, 41, 58, 65, 70, 84, 124, 138, 170, 172, 192, 194], "step1": 4, "step2": 4, "underli": 4, "framework": [4, 5, 7, 10, 11, 12, 15, 41, 95, 105, 184, 190, 192, 194, 195, 199, 200, 210], "must": [4, 5, 9, 12, 15, 16, 19, 22, 23, 32, 35, 37, 103, 106, 107, 122, 124, 186, 192, 194, 195, 197, 209, 216], "built": [4, 12, 97, 98, 103, 184, 190, 197, 200, 201, 206, 215], "execut": [4, 6, 12, 15, 19, 97, 98, 103, 124, 184, 190, 192, 197, 201, 202, 203, 204, 205, 206, 207, 215], "standalon": [4, 12, 118, 190, 197, 199, 200, 206], "mpa": [4, 7, 9, 10, 11, 12, 14, 15, 16, 19, 25, 32, 34, 57, 74, 86, 93, 99, 101, 103, 113, 114, 115, 116, 117, 118, 119, 120, 123, 124, 127, 158, 159, 170, 175, 184, 185, 187, 188, 190, 191, 192, 196, 197, 199, 200, 201, 202, 203, 204, 205, 206, 207, 210, 212, 215, 216, 217], "befor": [4, 6, 12, 14, 38, 192, 195, 196, 197, 198, 203, 207, 209, 213, 215], "w": [4, 197, 199, 215], "num": 4, "f": [4, 7, 9, 12, 194, 196, 197, 201, 207, 215], "file": [4, 5, 6, 8, 9, 10, 11, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 26, 27, 28, 32, 33, 34, 35, 38, 40, 41, 43, 48, 51, 53, 57, 73, 74, 75, 76, 83, 84, 85, 86, 87, 88, 89, 92, 93, 94, 97, 98, 99, 101, 102, 103, 104, 105, 106, 108, 109, 111, 113, 114, 119, 124, 128, 129, 140, 143, 147, 153, 170, 172, 175, 184, 187, 188, 190, 193, 194, 195, 196, 197, 198, 199, 200, 203, 206, 207, 209, 212, 213, 215, 216], "m": [4, 12, 59, 66, 67, 72, 187, 195, 197, 202, 203, 204, 205, 207, 209, 212, 213, 215], "mach": [4, 32, 202, 203, 204, 205, 206, 207, 215], "p": [4, 197, 201, 215], "suite_nam": [4, 6, 96, 98, 103, 215], "specifi": [4, 12, 14, 15, 16, 34, 186, 192, 197, 201, 207, 213, 215], "either": [4, 5, 6, 10, 11, 12, 14, 60, 122, 184, 192, 197, 199, 201, 209, 215], "onli": [4, 5, 6, 12, 14, 15, 41, 119, 184, 186, 188, 190, 192, 194, 196, 200, 201, 203, 206, 207, 209, 211, 212, 213, 215], "time": [4, 5, 6, 12, 15, 16, 32, 41, 107, 122, 129, 138, 148, 167, 186, 187, 188, 192, 193, 194, 195, 196, 197, 198, 199, 201, 203, 207, 212, 215, 217], "wai": [4, 5, 11, 12, 32, 62, 67, 119, 122, 192, 194, 195, 196, 197, 198, 200, 206, 209], "altern": [4, 11, 215], "ani": [4, 5, 6, 7, 11, 12, 14, 15, 16, 28, 40, 97, 98, 143, 153, 190, 191, 192, 193, 194, 195, 196, 197, 201, 206, 212, 215], "case_numb": 4, "multipl": [4, 5, 12, 15, 185, 193, 196, 206, 212, 215], "separ": [4, 5, 7, 12, 14, 15, 192, 193, 199, 213, 215], "space": [4, 5, 7, 11, 192, 197, 203, 206, 215], "requir": [4, 6, 12, 19, 29, 32, 33, 39, 84, 124, 138, 184, 190, 192, 193, 194, 195, 196, 197, 198, 200, 201, 206, 209, 210, 215, 216], "few": [4, 11, 12, 19, 29, 32, 39, 81, 119, 124, 187, 192, 196, 201, 206, 212, 213], "basic": [4, 5, 201, 203, 206, 215], "piec": [4, 190], "inform": [4, 5, 6, 32, 84, 105, 114, 192, 194, 197, 201, 203, 210, 215], "abl": [4, 115, 116, 117, 118, 120, 122, 192, 193, 195, 197, 206, 215], "place": [4, 12, 15, 106, 192, 194, 206, 213], "download": [4, 6, 8, 32, 34, 40, 143, 153, 194, 196, 197, 201, 215, 217], "some": [4, 6, 7, 8, 9, 11, 12, 15, 41, 186, 187, 191, 192, 194, 195, 196, 197, 198, 201, 202, 203, 204, 205, 206, 207, 209, 210, 215, 216, 217], "data": [4, 8, 11, 14, 15, 16, 20, 32, 33, 34, 90, 99, 101, 102, 106, 107, 108, 114, 119, 170, 176, 182, 183, 192, 197, 200, 201, 202, 203, 204, 205, 206, 215, 216, 217], "locat": [4, 12, 15, 16, 41, 97, 98, 103, 184, 192, 197, 199, 201, 203, 206, 209, 212, 213, 215], "where": [4, 5, 12, 15, 32, 34, 41, 51, 83, 97, 98, 103, 106, 122, 176, 179, 182, 183, 184, 190, 191, 192, 194, 197, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 213, 215, 217], "There": [4, 11, 176, 182, 183, 191, 192, 196, 197, 198, 201, 215], "r": [4, 207, 213], "tell": [4, 197], "re": [4, 192, 196, 197, 199, 201, 206, 207, 213], "leav": [4, 16, 188, 194, 201, 213], "unknown": [4, 119, 196, 206], "component_path": [4, 97, 98, 103, 184, 190, 201, 215], "absolut": [4, 7, 32, 34, 50, 97, 98, 103, 184, 190, 192, 197, 215], "landic": [4, 8, 10, 17, 34, 57, 103, 190, 191, 192, 194, 195, 197, 199, 200, 201, 215, 216, 217], "e3sm_submodul": [4, 184, 190, 197], "mali": [4, 119, 190, 192, 197, 199, 201, 215, 216], "dev": [4, 5, 14, 190, 191, 192, 195, 196, 197, 200, 210, 215], "albani": [4, 115, 117, 118, 119, 190, 201, 202, 203, 204, 207, 215], "depend": [4, 6, 12, 14, 16, 32, 33, 40, 143, 153, 188, 194, 197, 199, 201, 206, 207, 209, 213, 215, 216], "whether": [4, 6, 11, 15, 16, 19, 24, 32, 34, 41, 42, 48, 51, 53, 54, 79, 95, 96, 97, 98, 103, 105, 106, 107, 110, 122, 124, 125, 138, 139, 140, 147, 159, 162, 166, 167, 192, 195, 197, 198, 201, 202, 203, 204, 205, 206, 207, 209, 212, 213, 215], "omega": [4, 25, 108, 124, 127, 184, 190, 196, 197, 199, 210, 215], "config": [4, 5, 6, 8, 9, 10, 11, 14, 15, 16, 19, 20, 23, 24, 25, 32, 33, 34, 41, 43, 51, 64, 66, 69, 79, 80, 81, 82, 83, 97, 98, 103, 105, 106, 108, 109, 110, 111, 113, 114, 119, 124, 127, 140, 147, 160, 167, 174, 176, 177, 178, 182, 183, 184, 187, 188, 190, 192, 193, 194, 195, 196, 197, 198, 200, 209, 215, 216], "point": [4, 47, 53, 87, 184, 186, 190, 194, 195, 196, 197, 201, 206, 215], "much": [4, 12, 192], "config_fil": [4, 97, 98, 103], "work_dir": [4, 9, 15, 32, 41, 83, 97, 98, 103, 104, 105, 192, 194], "base": [4, 6, 11, 12, 13, 15, 17, 32, 34, 36, 41, 45, 48, 64, 69, 70, 97, 98, 103, 119, 126, 128, 176, 177, 178, 179, 180, 181, 182, 183, 184, 187, 188, 190, 191, 192, 194, 195, 196, 197, 199, 201, 202, 203, 204, 205, 206, 207, 209, 216], "": [4, 5, 6, 9, 10, 12, 14, 15, 32, 34, 35, 41, 43, 48, 71, 95, 100, 103, 105, 122, 170, 172, 184, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 201, 202, 203, 204, 205, 206, 207, 210, 212, 213, 215], "recommend": [4, 5, 9, 16, 192, 193, 196, 197, 206, 212], "itself": [4, 5, 7, 32, 190, 191, 192, 194, 195, 197, 215], "temp": 4, "scratch": [4, 197, 203, 207, 215], "avoid": [4, 192], "confus": [4, 12, 196, 197], "output": [4, 5, 6, 8, 10, 11, 12, 15, 17, 19, 32, 33, 35, 40, 41, 48, 73, 74, 81, 84, 96, 105, 122, 124, 129, 143, 153, 162, 170, 175, 187, 194, 199, 201, 207, 215, 217], "compar": [4, 8, 15, 41, 97, 98, 103, 104, 105, 133, 135, 137, 145, 150, 155, 188, 193, 196, 199, 211, 212, 215, 217], "previou": [4, 15, 192, 211, 215, 217], "same": [4, 5, 7, 12, 15, 33, 34, 41, 104, 105, 122, 191, 192, 193, 194, 195, 196, 197, 199, 201, 202, 203, 204, 205, 206, 207, 209, 211, 212, 215, 216, 217], "baseline_dir": [4, 41, 97, 98, 103], "mani": [4, 6, 7, 122, 191, 192, 194, 196, 197, 199, 200, 212, 213], "valid": [4, 5, 6, 8, 41, 176, 177, 178, 179, 180, 181, 182, 183, 187, 196, 197, 200, 209, 212], "sure": [4, 10, 14, 15, 105, 119, 134, 144, 154, 184, 187, 192, 196, 197, 199, 201, 206, 207, 212, 213], "timer": [4, 41, 44, 104, 193, 194, 196], "ha": [4, 7, 12, 15, 19, 29, 32, 33, 35, 39, 41, 43, 82, 90, 105, 115, 117, 118, 124, 138, 184, 187, 190, 191, 192, 193, 194, 196, 197, 198, 199, 201, 209, 212, 213, 215], "both": [4, 5, 6, 11, 12, 15, 24, 105, 122, 140, 147, 187, 191, 192, 195, 197, 200, 201, 211], "custom": [4, 6, 11, 14, 50, 51, 97, 98, 103, 184, 190, 201, 207, 215], "order": [4, 6, 11, 12, 122, 190, 192, 193, 197, 215], "give": [4, 12, 15, 192, 196, 197, 201, 215], "predefin": 4, "so": [4, 5, 7, 10, 11, 12, 15, 16, 19, 31, 119, 122, 124, 176, 182, 183, 184, 187, 190, 192, 194, 196, 197, 199, 201, 206, 207, 209, 212, 213, 215, 217], "after": [4, 5, 12, 14, 16, 32, 34, 35, 71, 90, 119, 177, 178, 184, 190, 192, 194, 197, 201, 203, 207, 215], "c": [4, 98, 119, 192, 197, 202, 203, 204, 205, 206, 207, 211, 215, 217], "argument": [4, 5, 7, 10, 12, 15, 16, 30, 32, 81, 106, 187, 192, 194, 196, 197, 217], "resid": [4, 34], "test_suit": [4, 192], "build": [4, 8, 11, 12, 62, 67, 115, 116, 117, 118, 119, 120, 184, 188, 190, 194, 196, 198, 200, 201, 202, 203, 204, 205, 206, 207], "mpas_model": [4, 201], "overrid": [4, 11, 12, 37, 38, 40, 43, 44, 50, 62, 65, 66, 67, 122, 143, 153, 192, 194, 196, 201, 207, 212, 215], "mai": [4, 5, 6, 10, 11, 12, 15, 33, 35, 38, 106, 119, 122, 184, 186, 192, 193, 194, 195, 197, 198, 199, 201, 207, 215, 216], "baselin": [4, 6, 8, 15, 41, 97, 98, 103, 104, 105, 133, 135, 137, 145, 150, 155, 161, 187, 193, 196, 199, 211, 215], "comparison": [4, 15, 41, 104, 105, 194, 201], "against": [4, 6, 8, 15, 105, 161, 187, 192, 211], "oppos": [4, 24, 125, 139, 140, 147, 159, 162, 166, 167], "task": [4, 6, 8, 9, 12, 14, 19, 26, 29, 31, 32, 38, 39, 81, 84, 122, 124, 126, 128, 138, 187, 192, 196, 199, 200, 202, 203, 204, 205, 206, 207, 212], "parallel": [4, 14, 19, 29, 32, 38, 39, 124, 192, 196, 197, 198, 199, 201, 202, 203, 204, 205, 206, 207, 215, 216], "been": [4, 12, 15, 32, 41, 43, 90, 97, 98, 103, 115, 117, 118, 122, 162, 184, 190, 192, 194, 196, 197, 198, 201, 202, 203, 204, 205, 206, 207, 209, 211, 212, 215], "no_step": 4, "wherea": [4, 10, 192, 211, 216], "typic": [4, 5, 7, 11, 12, 14, 15, 16, 32, 96, 122, 190, 191, 192, 195, 197, 199, 201, 206, 209, 215, 216], "clone": [4, 184, 191, 197, 215], "than": [4, 6, 7, 9, 11, 12, 32, 34, 39, 50, 119, 138, 187, 192, 193, 196, 197, 198, 209, 212, 217], "just": [4, 12, 19, 29, 32, 39, 54, 119, 124, 192, 196, 197, 199, 203, 207], "pickl": [4, 6, 192, 215], "latter": [4, 41, 119], "conveni": [4, 14, 176, 182, 183, 192, 199, 201, 215], "tab": [4, 215], "complet": [4, 6, 21, 22, 23, 215], "explicitli": [4, 5, 15, 122, 187, 192, 201, 215], "select": [4, 6, 107, 192, 197], "two": [4, 8, 144, 187, 188, 190, 192, 193, 195, 196, 197, 212, 216], "edit": [4, 5, 105, 197, 215], "steps_to_run": [4, 15, 41, 96, 105, 192, 194, 201], "test_cas": [4, 6, 7, 14, 19, 32, 45, 46, 58, 65, 70, 83, 84, 97, 98, 104, 105, 124, 138, 141, 146, 151, 156, 162, 165, 168, 170, 172, 192, 194, 201, 215], "initial_st": [4, 5, 16, 131, 186, 188, 192, 194, 196, 201, 212], "full_run": [4, 145, 212], "restart_run": [4, 145, 212], "Or": [4, 192, 201], "accomplish": [4, 192, 196], "thing": [4, 115, 116, 117, 118, 119, 120, 122, 192, 196, 200], "skip": [4, 6, 15, 105, 194, 217], "take": [4, 5, 9, 12, 15, 50, 192, 193, 195, 197, 217], "preced": [4, 50], "over": [4, 7, 12, 50, 106, 192, 196, 200, 209, 212, 215], "special": [4, 199], "databas": [4, 6, 9, 14, 17, 19, 32, 34, 124, 192, 206], "polaris_cach": [4, 6, 17, 192], "symlink": [4, 6, 12, 32, 34, 194, 196, 197], "input": [4, 6, 8, 9, 14, 27, 32, 33, 34, 35, 40, 74, 143, 153, 187], "structur": [4, 11, 25, 127, 194, 200], "without": [4, 15, 34, 192, 196, 197, 201, 205, 206, 215], "redund": [4, 176, 182, 183, 187], "stamp": 4, "revis": [4, 201], "remov": [4, 12, 15, 96, 187], "older": 4, "ones": [4, 176, 182, 183, 196], "version": [4, 13, 27, 50, 83, 104, 105, 184, 187, 190, 191, 192, 195, 196, 197, 200, 201, 206, 207, 210, 212, 215], "A": [4, 5, 6, 9, 11, 12, 14, 16, 17, 20, 22, 23, 25, 32, 33, 34, 41, 45, 49, 50, 54, 58, 59, 62, 65, 66, 67, 70, 76, 81, 83, 84, 85, 86, 87, 88, 92, 93, 94, 96, 97, 98, 99, 101, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 127, 130, 134, 138, 141, 144, 146, 151, 154, 156, 158, 159, 162, 165, 168, 170, 172, 174, 175, 176, 177, 178, 179, 180, 182, 183, 187, 188, 190, 192, 193, 194, 195, 196, 197, 199, 200, 202, 203, 204, 205, 206, 207, 212, 213, 215], "aid": 4, "updat": [4, 5, 6, 19, 21, 23, 28, 29, 38, 39, 100, 118, 126, 138, 184, 187, 192, 198, 200, 215], "cached_fil": [4, 17, 192], "json": [4, 6, 17, 48, 192, 207], "anvil": [4, 119, 192, 201, 206, 215], "chrysali": [4, 119, 192, 201, 206, 215], "sinc": [4, 12, 15, 114, 122, 187, 192, 194, 196, 197, 212, 213], "copi": [4, 6, 34, 48, 97, 98, 103, 203, 215], "onto": [4, 197], "lcrc": [4, 6, 9, 48, 192, 196, 201, 202, 204, 206, 215], "server": [4, 6, 34, 48, 192, 196, 201, 207], "whose": [4, 192], "global_ocean": [4, 7, 9, 12, 190, 192, 194, 196, 197, 201, 215, 217], "qu240": [4, 12, 192, 196, 197, 201, 215, 217], "mesh": [4, 8, 14, 19, 32, 74, 86, 93, 107, 122, 124, 125, 126, 128, 136, 139, 141, 159, 162, 163, 165, 166, 168, 170, 172, 176, 182, 183, 186, 187, 191, 192, 194, 195, 196, 197, 199, 200, 201, 209, 211, 212, 213, 215, 217], "phc": [4, 192, 209, 217], "init": [4, 12, 16, 29, 39, 184, 190, 192, 194, 196, 197, 201, 215, 217], "ocean_cached_fil": 4, "pr": [4, 215, 217], "look": [4, 5, 9, 15, 195, 196, 201], "someth": [4, 5, 85, 89, 92, 197], "culled_mesh": [4, 192], "nc": [4, 9, 10, 11, 12, 14, 15, 16, 84, 192, 194, 196], "210803": 4, "culled_graph": [4, 192], "info": [4, 10, 12, 19, 26, 74, 124, 192], "critical_passages_mask_fin": 4, "init_mode_forcing_data": [4, 192], "date_str": [4, 48], "let": [4, 192, 197, 199, 201, 207], "string": [4, 7, 12, 34, 88, 94], "choos": [4, 192, 196, 202, 203, 204, 205, 207, 216], "todai": [4, 48], "dry_run": [4, 48], "saniti": 4, "check": [4, 15, 79, 105, 197, 199, 201, 203, 207, 215, 217], "print": [4, 10, 15, 54, 105, 110, 192, 196, 217], "stdout": [4, 10, 32, 41, 192], "translat": [4, 25, 122, 127], "compass": [4, 57, 84, 184, 192, 196, 199], "convert": [4, 7, 11, 12, 122, 192], "namelist": [4, 5, 6, 8, 19, 20, 21, 24, 25, 27, 28, 31, 40, 97, 98, 103, 113, 114, 124, 127, 128, 140, 143, 147, 153, 184, 187, 188, 190, 192, 194, 195, 196, 200, 201], "stream": [4, 5, 6, 8, 19, 22, 24, 27, 40, 108, 113, 114, 128, 140, 143, 147, 153, 184, 186, 187, 190, 192, 194, 195, 196, 201], "yaml": [4, 8, 19, 20, 23, 24, 25, 124, 127, 128, 140, 147, 187, 192, 200, 203, 207], "e": [4, 5, 9, 12, 25, 32, 33, 43, 45, 57, 108, 119, 122, 127, 184, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 207, 209, 212, 213, 215, 216, 217], "g": [4, 5, 9, 12, 25, 32, 33, 43, 45, 57, 108, 119, 122, 127, 184, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 209, 212, 213, 215, 217], "forward": [4, 5, 12, 15, 32, 129, 136, 137, 146, 148, 150, 184, 190, 192, 194, 196, 201, 212, 213], "becaus": [4, 5, 9, 10, 11, 12, 15, 32, 33, 186, 192, 194, 196, 197, 203, 205, 207, 215], "don": [4, 5, 12, 122, 192, 194, 196, 197, 205, 215, 216], "format": [4, 5, 9, 11, 12, 108, 114, 192, 193, 194, 195, 197, 201, 203], "note": [4, 5, 14, 15, 207], "keyword": [4, 5, 12, 15, 16, 188, 192, 194, 213], "top": [4, 16, 176, 177, 178, 179, 180, 181, 182, 183, 186, 191, 209], "ignor": [4, 88, 94], "get": [4, 5, 7, 9, 10, 12, 14, 19, 20, 21, 22, 23, 32, 41, 42, 49, 60, 80, 90, 95, 119, 122, 124, 191, 192, 194, 195, 196, 197, 199, 201, 209, 215], "pars": [4, 7, 12, 20, 21, 22, 23, 76, 99, 101], "valu": [4, 5, 7, 12, 15, 16, 20, 25, 105, 106, 107, 110, 127, 148, 187, 190, 192, 194, 195, 196, 200, 201, 209, 212], "doesn": [4, 7, 114, 192, 194, 201, 206, 215], "matter": 4, "usabl": 4, "sphinx": 5, "written": [5, 6, 32, 41, 106, 107, 192, 194], "myst": 5, "tip": [5, 197], "easi": [5, 34, 196], "start": [5, 6, 12, 100, 186, 187, 193, 195, 196, 200, 203, 206, 207, 210], "exist": [5, 7, 25, 32, 35, 53, 99, 101, 103, 127, 187, 192, 196, 197, 198, 206, 217], "tree": [5, 99, 101, 114], "group": [5, 7, 12, 17, 18, 32, 41, 45, 46, 49, 130, 131, 134, 136, 138, 144, 148, 151, 154, 156, 158, 159, 184, 187, 188, 190, 191, 192, 194, 199, 200, 201, 202, 204, 206, 207, 208, 209, 210, 212, 213, 215, 216, 217], "pull": [5, 196, 197, 201], "request": [5, 12, 19, 26, 28, 124, 177, 178, 192, 196, 197, 198, 201, 213], "guid": [5, 122, 187, 193, 196, 203, 206, 210], "baroclinic_channel": [5, 12, 15, 184, 189, 190, 192, 194, 195, 196, 199, 210, 214, 215, 216, 217], "label": [5, 106, 206, 215], "prepend": 5, "them": [5, 6, 12, 14, 15, 19, 31, 119, 124, 188, 190, 192, 194, 195, 196, 197, 199, 205, 206, 211, 215, 216], "baroclin": [5, 45, 130, 131, 134, 136, 138, 141, 144, 148, 151, 154, 156, 187, 192, 194, 195, 212], "channel": [5, 45, 130, 131, 134, 136, 138, 141, 144, 148, 151, 154, 156, 187, 192, 194, 198, 212], "And": [5, 12, 197], "becom": [5, 192, 194], "who": [5, 197, 201, 207], "citat": 5, "defin": [5, 6, 7, 11, 12, 13, 16, 32, 41, 65, 88, 94, 97, 98, 103, 119, 184, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 199, 200, 201, 206, 209, 212, 213, 216, 217], "brief": 5, "overview": [5, 200, 203, 207], "comment": [5, 193, 201], "appli": [5, 11, 12, 54, 186, 195], "common": [5, 7, 10, 38, 41, 45, 187, 188, 192, 193, 194, 195, 196, 198, 199, 201, 206, 207, 215, 216, 217], "refer": [5, 12, 32, 129, 148, 176, 179, 182, 183, 192, 194, 196, 197, 199, 200, 209, 212, 215], "awar": [5, 119, 190, 206], "wish": [5, 12, 192, 197, 215, 217], "specif": [5, 7, 12, 43, 119, 184, 190, 191, 195, 200, 201, 203, 206, 215, 217], "share": [5, 16, 122, 131, 184, 187, 190, 191, 192, 194, 195, 197, 200, 202, 203, 204, 205, 206, 207, 208, 212, 215], "function": [5, 6, 7, 9, 10, 11, 12, 13, 15, 16, 40, 59, 66, 119, 122, 131, 143, 153, 192, 194, 195, 196, 200, 213, 216], "public": [5, 9, 192, 201], "api": [5, 10, 200], "underscor": 5, "md": 5, "eval": 5, "rst": [5, 12], "currentmodul": 5, "autosummari": 5, "toctre": 5, "baroclinicchannel": [5, 131, 134, 136, 144, 148, 154, 187, 190, 194], "baroclinicchanneltestcas": [5, 187], "compute_cell_count": [5, 122, 187], "dynamic_model_config": [5, 187], "initialst": [5, 187, 192, 194], "setup": [5, 7, 9, 12, 15, 24, 29, 32, 33, 39, 41, 122, 125, 139, 140, 147, 166, 167, 187, 194, 196, 197, 199, 200, 201, 213, 215, 216], "across": [5, 12, 16, 187, 192, 193, 194, 195, 196, 199, 208, 212], "ot": 5, "automat": [5, 7, 10, 12, 16, 122, 194, 196, 197, 201, 202, 204, 205, 206, 207, 215], "python": [5, 6, 7, 20, 38, 43, 191, 192, 194, 195, 196, 197, 199, 200, 201, 206, 207, 215], "begin": [5, 15, 187, 192, 197, 200, 206, 213], "numpydoc": 5, "text": [5, 6, 213], "restructuredtext": 5, "compute_land_ice_pressure_and_draft": 5, "ssh": [5, 122, 176, 178, 179, 180, 181, 182, 183, 184, 194, 201, 203, 207], "modifysshmask": 5, "ref_dens": 5, "comput": [5, 11, 79, 119, 122, 124, 125, 129, 139, 163, 166, 179, 180, 181, 187, 188, 192, 197, 203, 204, 206, 207, 215], "pressur": [5, 184, 201], "overli": 5, "ic": [5, 122, 184, 196, 197, 200, 201, 203, 209, 216], "shelf": [5, 122, 195, 196, 201, 209], "draft": [5, 209], "paramet": [5, 11, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 32, 33, 34, 35, 36, 39, 41, 42, 45, 46, 48, 51, 53, 54, 57, 58, 60, 61, 62, 65, 70, 72, 74, 76, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 92, 93, 94, 95, 96, 97, 98, 99, 101, 103, 104, 105, 106, 107, 109, 110, 111, 113, 114, 122, 124, 125, 127, 129, 131, 134, 136, 138, 139, 140, 141, 144, 146, 147, 148, 151, 154, 156, 159, 162, 163, 165, 166, 167, 168, 170, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 192, 194, 195, 212], "xarrai": [5, 14, 16, 107, 176, 177, 178, 179, 180, 181, 182, 183, 192], "dataarrai": [5, 177, 178, 179, 180, 181, 192], "sea": [5, 122, 178, 179, 180, 181, 184, 201, 209], "surfac": [5, 122, 178, 179, 180, 181, 184, 186, 201, 209, 212], "height": [5, 122, 178, 179, 180, 181, 184, 201, 209], "mask": [5, 176, 179, 182, 183, 192, 201, 209], "landicepressur": [5, 194], "deviat": 5, "float": [5, 7, 12, 20, 58, 60, 61, 65, 89, 105, 107, 131, 134, 136, 138, 141, 144, 148, 151, 154, 163, 192, 194], "densiti": [5, 11, 122], "seawat": 5, "displac": 5, "land": [5, 122, 184, 200, 201, 209, 216], "landicedraft": 5, "equal": [5, 196], "initi": [5, 6, 32, 129, 133, 136, 141, 158, 168, 187, 188, 192, 194, 195, 196, 198, 199, 200, 201, 209, 211, 212, 213, 216], "entri": [5, 47, 77, 97, 98], "alwai": [5, 7, 10, 15, 50, 122, 184, 190, 196, 197, 201], "own": [5, 6, 9, 10, 16, 32, 192, 194, 196, 197, 199, 201, 213, 215, 216], "line": [5, 8, 30, 32, 81, 192, 193, 196, 197, 200, 215], "type": [5, 12, 14, 16, 20, 86, 93, 114, 192, 194, 195, 196, 197, 198, 199, 201, 212, 213, 217], "side": 5, "colon": 5, "doubl": [5, 122, 192, 193], "back": [5, 203, 215], "quot": 5, "interfer": 5, "abil": 5, "find": [5, 51, 61, 82, 184, 196, 197, 198, 201, 215], "arg": [5, 10, 32, 81, 192], "indic": [5, 6, 12, 14, 15, 32, 33, 98, 105, 107, 179, 191, 192, 198, 201, 209, 212], "On": [5, 11, 197, 206], "next": [5, 195, 209, 215], "indent": [5, 192], "obviou": [5, 12], "none": [5, 12, 15, 19, 22, 23, 29, 32, 33, 34, 39, 41, 48, 51, 54, 56, 58, 65, 70, 74, 83, 84, 85, 88, 89, 92, 94, 96, 98, 99, 103, 104, 105, 106, 107, 109, 113, 124, 125, 138, 139, 166, 192, 209, 212, 213], "replac": [5, 7, 12, 20, 21, 22, 23, 24, 25, 41, 53, 76, 99, 109, 110, 127, 140, 147, 194, 196, 201, 215], "els": [5, 6, 192], "true": [5, 7, 11, 12, 15, 16, 19, 42, 51, 53, 105, 106, 107, 110, 115, 116, 117, 118, 120, 122, 124, 186, 192, 194, 195, 197, 201, 202, 203, 204, 205, 206, 207, 215, 216], "further": [5, 194, 195, 207], "necessari": [5, 11, 190], "rais": [5, 7, 15, 32, 35, 51, 53, 79, 105, 122, 192, 194, 195, 196], "list_cas": 6, "list_machin": [6, 196], "list_suit": 6, "anywher": [6, 10, 197], "setup_cas": [6, 7], "object": [6, 10, 14, 21, 22, 23, 76, 99, 104, 105, 108, 109, 113, 114, 190, 194, 195, 196], "later": [6, 15, 19, 29, 32, 39, 50, 105, 124, 192, 201], "contrast": 6, "read": [6, 17, 21, 22, 23, 32, 33, 41, 52, 75, 76, 108, 122, 186, 192, 194], "properti": [6, 12, 186, 192, 206, 213], "clean_cas": 6, "delet": [6, 196, 197, 198, 215], "constant": [6, 58, 65, 66, 122, 186, 212, 213], "setup_suit": 6, "clean_suit": 6, "write": [6, 10, 11, 13, 16, 108, 175, 192, 194, 197], "out": [6, 11, 78, 82, 107, 191, 192, 196, 197, 201, 209, 215], "proven": [6, 8, 50, 200, 201], "save": [6, 16, 51, 72, 187, 192, 194, 195, 206, 211, 212], "dictionari": [6, 7, 12, 16, 17, 20, 22, 23, 25, 32, 33, 41, 45, 50, 76, 83, 98, 99, 105, 108, 109, 110, 127, 188, 192, 194, 195, 196, 213], "target": [6, 9, 14, 19, 34, 53, 84, 119, 122, 124, 187, 192, 194], "minimum": [6, 107, 122, 124, 187, 192, 201, 209, 212, 213], "determin": [6, 11, 12, 16, 34, 38, 41, 79, 114, 122, 128, 187, 188, 192, 195, 209, 212, 213, 215], "maximum": [6, 15, 105, 107, 201, 209, 212, 213], "product": 6, "ntask": [6, 12, 14, 19, 29, 32, 36, 39, 81, 84, 122, 124, 138, 192, 194], "cpus_per_task": [6, 12, 32, 36, 39, 81, 192], "attribut": [6, 10, 11, 12, 15, 38, 88, 94, 195], "quickli": 6, "caveat": 6, "sit": 6, "idl": 6, "fraction": [6, 209, 212, 213], "runtim": [6, 24, 38, 122, 125, 139, 140, 147, 166, 167, 192, 194], "min_task": [6, 12, 14, 19, 29, 32, 39, 81, 84, 122, 124, 138, 192, 194], "min_cpus_per_task": [6, 12, 32, 39, 81, 192], "fewest": 6, "least": [6, 11, 15, 190, 197], "fail": [6, 12, 15, 19, 29, 32, 39, 41, 51, 105, 124, 138, 192, 200, 201, 212, 213], "run_test": [6, 192, 194], "run_single_step": 6, "oper": [6, 40, 143, 153, 192, 194, 217], "log": [6, 8, 15, 16, 32, 41, 81, 105, 106, 107, 192, 194, 197, 200, 215], "figur": [6, 191, 192, 195, 201], "cpu": [6, 12, 119, 192, 215], "per": [6, 12, 19, 29, 31, 32, 39, 81, 122, 124, 192, 201, 202, 203, 204, 205, 206, 207, 212, 213], "method": [6, 7, 11, 12, 14, 17, 19, 24, 25, 32, 33, 37, 38, 41, 42, 43, 44, 45, 50, 57, 58, 62, 65, 66, 67, 70, 71, 84, 90, 108, 122, 123, 124, 125, 127, 130, 131, 134, 136, 138, 139, 140, 141, 144, 146, 147, 148, 151, 154, 156, 158, 159, 162, 165, 166, 167, 168, 170, 172, 187, 188, 190, 192, 194, 196, 213], "wa": [6, 15, 51, 104, 105, 119, 133, 135, 137, 145, 150, 155, 192, 194, 196, 197, 198, 201, 209, 215], "retriev": [6, 198], "store": [6, 15, 43, 122, 192, 194, 215], "dure": [6, 9, 12, 24, 32, 41, 122, 125, 139, 140, 147, 166, 167, 192, 194, 196, 201, 215, 216, 217], "txt": [6, 103, 193, 198], "case_output": [6, 10], "individu": [6, 7, 16, 105, 194, 196, 206, 207, 215, 216], "involv": [6, 12, 15, 105, 192, 194, 199], "implement": [6, 7, 187, 188, 196, 212, 213], "termin": [6, 15, 192, 197], "window": 6, "update_cach": 6, "_cached_fil": [6, 192], "map": [6, 14, 17, 25, 65, 66, 84, 106, 107, 127, 170, 172, 188, 197, 201], "origin": [6, 48, 197, 215], "enabl": [6, 16, 192, 198, 201, 207], "consum": [6, 192, 194, 217], "faster": [6, 197], "debug": [6, 115, 116, 117, 118, 120, 202, 203, 204, 205, 207], "parser": [7, 50], "here": [7, 10, 12, 14, 15, 187, 191, 192, 194, 195, 196, 197, 201, 202, 203, 204, 205, 206, 207, 215, 217], "mpas_tool": [7, 10, 11, 187, 192], "mpasconfigpars": 7, "polarisconfigpars": [7, 32, 41, 51, 79, 80, 82, 83, 106, 174, 176, 177, 178, 182, 183], "certain": [7, 15, 50, 192, 197, 201], "add_from_packag": [7, 196], "content": [7, 12, 99, 101, 114, 191, 192, 196, 215], "found": [7, 12, 109, 196, 197, 200, 202, 203, 204, 205, 206, 207], "make_diagnostics_fil": 7, "makediagnosticsfil": 7, "self": [7, 9, 10, 12, 14, 16, 43, 72, 122, 190, 192, 194, 195, 196, 201], "cfg": [7, 43, 190, 194, 195, 196, 201, 215], "except": [7, 15, 32, 35, 51, 105, 192, 196], "first": [7, 12, 97, 98, 187, 192, 194, 195, 196, 197, 198, 202, 203, 204, 205, 206, 207, 213, 215], "second": [7, 11, 12, 138, 192, 196, 212], "know": [7, 9, 11, 122, 192, 196, 197], "behavior": [7, 12, 96, 192, 193, 194], "noth": [7, 198, 213], "being": [7, 24, 32, 41, 95, 98, 105, 125, 139, 140, 147, 166, 167, 192, 194, 195, 196, 197, 209], "test_group": [7, 17, 18, 32, 41, 131, 134, 136, 144, 148, 154, 159, 192, 194, 195], "fals": [7, 11, 12, 15, 16, 19, 32, 34, 42, 48, 54, 56, 95, 96, 98, 103, 105, 107, 122, 124, 186, 192, 194, 195, 201, 203, 205, 207, 212], "happen": [7, 10, 12, 14, 105, 192, 194, 213], "class": [7, 9, 11, 12, 14, 16, 17, 19, 27, 32, 37, 41, 45, 50, 57, 58, 65, 70, 84, 108, 122, 123, 124, 130, 131, 134, 136, 138, 141, 144, 146, 148, 151, 154, 156, 158, 159, 162, 165, 168, 170, 172, 184, 187, 188, 190, 192, 194, 195], "larg": [7, 15, 192, 194, 202], "those": [7, 12, 15, 41, 104, 105, 119, 194, 195, 196, 197, 200, 213, 217], "configpars": [7, 81, 195], "getinteg": 7, "getfloat": [7, 10, 12, 14, 192], "getboolean": [7, 192], "getlist": 7, "comma": [7, 213], "integ": [7, 11], "boolean": [7, 107, 179], "etc": [7, 12, 100, 103, 190, 192, 194, 212], "getexpress": 7, "tupl": 7, "rang": [7, 107, 213], "numpi": [7, 11, 59, 66, 67, 72, 106, 122, 129, 174, 175, 192], "linspac": [7, 16, 188, 213], "arang": 7, "arrai": [7, 59, 66, 67, 72, 106, 122, 174, 175, 177, 178, 179, 180], "One": [7, 11, 215, 217], "advantag": [7, 12, 119, 196, 206], "track": [7, 19, 192, 194, 197], "associ": [7, 11, 12, 16, 176, 182, 183, 187, 194, 195, 199], "belong": [8, 10, 12, 19, 29, 32, 39, 41, 45, 58, 65, 70, 84, 124, 130, 131, 134, 136, 138, 141, 144, 146, 148, 151, 154, 156, 158, 159, 162, 165, 168, 170, 172, 190, 192, 194, 195, 196, 217], "command": [8, 13, 30, 32, 38, 81, 83, 192, 196, 197, 199, 200, 203, 206, 207, 215], "while": [8, 14, 16, 186, 187, 192, 195, 198, 199, 212], "meant": [8, 196, 201], "simplifi": 8, "verifi": [8, 193, 201], "io": [8, 192, 194, 196, 200, 201, 210], "remap": [8, 16, 170, 188, 200, 213], "visual": [8, 11, 14, 162, 188, 192, 194, 195, 199, 200, 213], "lot": [9, 122, 192, 196], "o": [9, 10, 99, 101, 114, 196, 197, 201, 215], "relat": [9, 11, 12, 122, 184, 187, 192, 195, 196, 197, 198, 201, 202, 203, 204, 205, 206, 207, 209, 210, 212, 213, 215], "handl": [9, 10, 194, 206, 213], "intern": [9, 19, 41, 192, 197, 198], "lower": [9, 194, 212], "directli": [9, 11, 12, 14, 32, 191, 192, 196, 199, 200, 203], "aren": [9, 32, 33, 192, 196, 197, 212, 213, 217], "readm": [9, 194], "importlib": [9, 194], "resourc": [9, 12, 29, 39, 52, 81, 125, 138, 139, 166, 187, 192, 194, 212], "import": [9, 10, 11, 12, 14, 16, 190, 192, 194, 195, 196, 197, 199], "files_for_e3sm": [9, 194, 201], "str": [9, 12, 17, 19, 20, 21, 22, 23, 26, 32, 33, 34, 35, 41, 45, 48, 51, 53, 54, 58, 65, 70, 74, 76, 81, 83, 84, 85, 86, 87, 88, 89, 92, 93, 94, 96, 97, 98, 99, 103, 104, 105, 106, 107, 108, 109, 111, 113, 114, 124, 129, 131, 138, 146, 163, 165, 168, 170, 172, 175, 192, 194, 195], "did": [9, 15, 105], "add_input_fil": [9, 14, 33, 192, 194], "collect": [9, 45, 87, 123, 190, 191, 199], "though": [9, 32, 194, 196], "whenev": [9, 192], "flexibl": [9, 188, 194, 197], "care": [9, 192, 195, 197], "No": [9, 200], "step_dir": 9, "database_root": [9, 192, 201, 202, 203, 204, 205, 206, 207, 215], "download_path": 9, "join": 9, "bathymetry_databas": [9, 192, 201], "remote_filenam": 9, "bedmachineantarctica_and_gebco_2019_0": 9, "05_degre": 9, "200128": 9, "local_filenam": 9, "topographi": [9, 179, 192, 195, 209, 212, 213, 216], "url": [9, 34, 51, 192, 198, 201], "web": [9, 192, 201], "anl": [9, 192, 201], "gov": [9, 192, 198, 201, 203, 207], "mpas_standalonedata": [9, 201, 206], "dest_path": [9, 51], "remot": [9, 34, 197], "bathymetri": [9, 192, 201], "strategi": 10, "stderr": [10, 32, 41, 192], "loggingcontext": 10, "check_cal": [10, 192], "most": [10, 38, 119, 184, 190, 192, 195, 196, 197, 199, 201, 206, 207, 209, 210, 216], "won": [10, 196, 201], "logger": [10, 32, 41, 57, 81, 192, 194], "full": [10, 32, 96, 177, 178, 187, 188, 192, 194, 197, 200, 206, 209, 211, 212, 213, 215], "although": 10, "captur": 10, "insid": [10, 192, 196], "good": [10, 32, 192, 197], "idea": 10, "explicit": [10, 196], "go": [10, 192, 194, 195, 196, 197, 207], "even": [10, 11, 12, 15, 34, 50, 119, 192, 196, 197, 201, 206, 215], "subprocess": [10, 32, 81, 95, 192, 196, 198], "produc": [10, 12, 14, 16, 32, 33, 35, 48, 122, 134, 144, 154, 187, 188, 192, 196, 197, 215], "otherwis": [10, 15, 192, 194, 202, 203, 204, 205, 206, 207], "intent": 10, "desir": [10, 11, 12, 15, 16, 105, 122, 192, 193, 201, 215], "trick": [10, 192], "direct": [10, 11, 12, 187, 194, 207, 212], "snippet": 10, "dome": [10, 57, 192, 194, 195, 199, 215, 216], "setup_mesh": [10, 192], "setupmesh": [10, 192, 194], "create_landice_grid_from_generic_mpas_grid": 10, "py": [10, 12, 57, 119, 190, 195, 196, 197, 199, 201], "mpas_grid": [10, 192], "landice_grid": [10, 192], "l": [10, 105, 207], "sever": [10, 192, 194, 195, 196, 197, 199, 200, 215, 217], "global": [11, 14, 45, 88, 94, 158, 159, 188, 192, 193, 195, 196, 199, 200, 201, 207, 215, 216], "quasiuniformsphericalmeshstep": [11, 188], "icosahedralmeshstep": [11, 188], "jigsaw": [11, 58, 62, 64, 65, 67, 69, 70, 159, 162, 192], "complex": [11, 15, 66, 194, 196], "build_cell_width_lat_lon": [11, 65], "opt": [11, 70], "make_jigsaw_mesh": [11, 65], "icosahedr": [11, 58, 60, 159, 162, 213], "significantli": [11, 209], "smooth": 11, "cell": [11, 12, 16, 58, 59, 60, 61, 65, 66, 67, 72, 86, 93, 122, 124, 125, 139, 163, 166, 176, 177, 178, 179, 182, 183, 187, 192, 194, 195, 209, 212, 213], "quasi": [11, 65, 201], "hand": [11, 196], "restrict": 11, "resolut": [11, 12, 14, 58, 61, 65, 66, 85, 89, 92, 131, 134, 136, 138, 141, 144, 146, 148, 151, 154, 159, 162, 163, 165, 187, 188, 191, 192, 194, 195, 201, 212, 216], "subdivis": [11, 58, 59, 60, 61, 62], "icosahedron": [11, 59, 60, 61, 62], "tabl": [11, 197, 206, 215], "approxim": [11, 58, 60, 61, 65, 122, 125, 139, 166, 197, 212, 213], "width": [11, 58, 59, 60, 65, 66, 67, 72, 212], "km": [11, 58, 59, 60, 61, 65, 66, 67, 72, 131, 134, 136, 138, 141, 144, 146, 148, 151, 154, 165, 187, 188, 201, 212, 213, 216], "5": [11, 60, 122, 148, 187, 188, 192, 193, 194, 196, 198, 201, 212, 213, 215], "240": [11, 60, 188, 201, 213], "6": [11, 60, 192, 210, 215], "120": [11, 60, 193, 213], "7": [11, 60, 207, 213, 215], "60": [11, 12, 60, 188, 209, 213], "8": [11, 60, 187, 194, 197, 201, 212, 213, 215], "30": [11, 60, 195, 207, 212, 213], "9": [11, 16, 60, 188, 213, 215], "15": [11, 12, 60, 187, 212, 213, 215], "10": [11, 15, 60, 184, 187, 194, 195, 201, 206, 209, 212, 216], "11": [11, 60, 215], "3": [11, 60, 187, 192, 193, 195, 197, 198, 201, 206, 207, 209, 212, 213, 215], "12": [11, 60, 203], "13": [11, 60, 212], "94": [11, 60], "spherical_mesh": [11, 66], "cell_width": [11, 58, 59, 60, 61, 65, 66, 67, 72], "icosahedral_method": 11, "jigsaw_mesh_filenam": 11, "msh": 11, "jigsaw_geom_filenam": 11, "geom": 11, "jigsaw_jcfg_filenam": 11, "jig": 11, "jigsaw_hfun_filenam": 11, "spac": 11, "triangles_filenam": 11, "mesh_triangl": 11, "mpas_mesh_filenam": 11, "base_mesh": [11, 58, 65, 192], "plot": [11, 72, 106, 107, 122, 151, 156, 170, 187, 188, 213, 216], "plot_cell_width": 11, "cell_width_filenam": [11, 72], "cellwidthvslatlon": 11, "cell_width_image_filenam": 11, "cellwidthglob": 11, "cell_width_colormap": 11, "3wbgy5": 11, "add_mesh_dens": 11, "vtk": 11, "convert_to_vtk": 11, "vtk_dir": 11, "base_mesh_vtk": 11, "extract": 11, "lat": [11, 14, 59, 65, 66, 67, 72, 85, 87, 89, 92, 106, 170, 188, 201, 213], "lon": [11, 14, 59, 65, 66, 67, 72, 85, 87, 89, 92, 106, 170, 188, 201, 213], "sphere": [11, 188, 213], "vtk_lat_lon": 11, "far": [11, 176, 182, 183, 196], "But": [11, 119, 192, 195, 196, 201, 206], "hexagon": 11, "planar_hex": [11, 187, 192], "make_planar_hex_mesh": [11, 187, 192], "x": [11, 16, 59, 66, 67, 72, 88, 94, 107, 129, 192, 194, 212], "y": [11, 12, 16, 88, 94, 107, 187, 192, 194, 207, 212], "nx": [11, 192, 195, 212], "ny": [11, 192, 195, 212], "dc": [11, 192, 195, 212], "distanc": [11, 212], "adjac": [11, 209, 212], "center": [11, 16, 195, 209, 212], "admittedli": 11, "oddli": 11, "period": [11, 186, 187, 192, 212], "nonperiodic_x": [11, 192], "nonperiodic_i": [11, 192], "consider": [11, 176, 182, 183, 186], "grid": [11, 14, 59, 66, 72, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 122, 170, 173, 174, 175, 176, 177, 178, 179, 182, 183, 187, 188, 192, 201, 212, 213], "behav": 11, "stagger": 11, "strictli": [11, 196], "physic": 11, "lx": 11, "howev": [11, 192, 193, 194], "ly": 11, "np": [11, 16, 188, 213], "sqrt": 11, "domain": [11, 19, 26, 107, 122, 124, 129, 186, 195, 212, 213, 216], "extra": [11, 197], "factor": 11, "500e3": 11, "160e3": 11, "1e3": [11, 195], "max": [11, 122, 192, 213], "int": [11, 12, 19, 20, 29, 32, 36, 39, 54, 58, 59, 60, 61, 62, 80, 81, 84, 107, 124, 125, 138, 139, 159, 162, 163, 165, 166, 192], "ds_mesh": [11, 16, 107], "creation": [11, 192, 201], "build_mesh": 11, "build_planar_mesh": 11, "too": [11, 12, 19, 29, 32, 39, 81, 124, 192, 195, 196, 212, 213], "distant": 11, "futur": [11, 38, 192, 196, 199, 200, 201, 215, 216], "descend": [12, 14, 122, 190, 192, 194, 195, 196], "modelstep": [12, 122, 192, 194], "update_pio": [12, 19, 124], "librari": [12, 115, 119, 197, 202, 203, 204, 205, 206, 207, 215], "make_graph": [12, 19, 124], "mpi": [12, 14, 84, 115, 118, 119, 124, 126, 128, 187, 192, 197, 198, 200, 202, 203, 204, 205, 207, 212, 215], "construct": [12, 123, 174, 176, 177, 178, 182, 183, 186, 190, 194, 195], "non": [12, 15, 186, 192, 215], "At": [12, 32, 41, 191], "set_model_resourc": 12, "thread": [12, 19, 29, 32, 38, 39, 41, 81, 124, 138, 154, 187, 192, 193, 199, 201, 203, 207, 212], "openmp_thread": [12, 19, 29, 32, 39, 81, 124, 138, 192, 194], "definit": 12, "prefix": [12, 34, 197, 201], "end": [12, 187, 192, 194, 196, 197, 199, 203, 213], "yml": 12, "reason": [12, 14, 38, 192, 196, 217], "add_namelist_fil": [12, 19, 122, 192, 194], "add_yaml_fil": [12, 19, 192, 194], "add_model_config_opt": [12, 19, 192, 194], "add_streams_fil": [12, 19, 122, 192, 194], "themselv": [12, 196, 200], "question": [12, 192, 201], "constructor": [12, 187, 190, 195], "simpli": [12, 50, 136, 190, 192, 194, 195, 197, 209, 215, 217], "safe": [12, 15, 192, 197, 212], "never": [12, 199], "hierarch": 12, "run_mod": 12, "config_ocean_run_mod": 12, "time_manag": 12, "config_run_dur": [12, 194], "0024_00": 12, "00": [12, 15, 194, 207, 215], "ale_vertical_grid": 12, "config_vert_coord_mov": 12, "impermeable_interfac": 12, "decomposit": [12, 41, 134, 199, 212], "config_block_decomp_file_prefix": 12, "time_integr": 12, "config_time_integr": 12, "rk4": [12, 196, 217], "filename_templ": 12, "restart": [12, 41, 144, 146, 187, 193, 196, 199, 212], "output_interv": 12, "0030_00": 12, "clobber_mod": 12, "truncat": 12, "reference_tim": 12, "0001": 12, "01": 12, "01_00": 12, "tracer": [12, 16, 187, 188, 213], "xtime": 12, "normalveloc": [12, 15, 16, 135, 137, 145, 150, 155, 186, 187, 192], "layerthick": [12, 15, 122, 133, 135, 137, 145, 150, 155, 176, 180, 181, 182, 183, 187, 192, 194], "refzmid": [12, 176, 182, 183, 192], "reflayerthick": 12, "kineticenergycel": 12, "relativevorticitycel": 12, "unlik": [12, 15], "clariti": [12, 192], "guarante": [12, 184, 197], "uniqu": [12, 194], "global_converg": [12, 184, 189, 210, 211, 214], "cosine_bel": 12, "substitut": 12, "config_write_output_on_startup": 12, "0000_00": 12, "config_use_mom_del2": 12, "config_implicit_bottom_drag_coeff": 12, "0e": 12, "config_use_cvmix_background": 12, "config_cvmix_background_diffus": 12, "config_cvmix_background_viscos": 12, "worri": 12, "sometim": [12, 176, 182, 183, 192, 194, 199], "easier": [12, 192, 196, 197, 201, 215, 217], "togeth": [12, 199, 217], "seem": [12, 203, 207], "overkil": 12, "reli": [12, 192], "differ": [12, 14, 15, 50, 62, 67, 105, 119, 122, 138, 148, 184, 187, 190, 191, 192, 193, 194, 195, 196, 197, 199, 201, 203, 207, 212, 213], "along": [12, 16, 187, 192, 194, 200], "could": [12, 14, 16, 188, 192, 193, 194, 196, 197, 213], "nu": [12, 138, 151, 156, 187, 192, 194], "viscos": [12, 138, 148, 151, 156, 187, 192, 194, 196, 212], "hmix": 12, "config_mom_del2": [12, 187, 192], "bool": [12, 19, 20, 24, 32, 34, 41, 42, 48, 51, 53, 54, 95, 96, 97, 98, 103, 105, 106, 110, 124, 125, 138, 139, 140, 147, 159, 162, 166, 167], "cannot": [12, 15], "known": [12, 32, 33, 188, 192], "beforehand": 12, "particularli": [12, 198], "openmp": [12, 19, 29, 32, 39, 81, 115, 117, 118, 124, 138, 192, 202, 203, 204, 205, 207], "update_namelist_at_runtim": 12, "update_yaml_at_runtim": 12, "config_pio_num_iotask": 12, "pio_num_iotask": 12, "config_pio_strid": 12, "pio_strid": 12, "out_nam": 12, "bit": [12, 196, 199, 212, 215], "complic": [12, 195, 196, 197], "xml": [12, 99, 101, 102, 114, 199], "slightli": [12, 15], "sophist": 12, "immutable_stream": 12, "var_struct": 12, "var": [12, 100], "var_arrai": 12, "tag": [12, 200], "taken": [12, 19, 124, 188, 192, 207, 215], "past": 12, "experi": [12, 119, 196, 209], "shown": [12, 191, 194], "featur": [12, 196, 197, 199, 201, 212], "difficult": [12, 119, 206], "synchron": [12, 200], "equival": [12, 197, 202], "try": [12, 53, 196, 197, 198, 201, 203, 207, 215], "template_replac": [12, 22, 23], "treat": [12, 193, 196], "jinja2": [12, 22, 23, 99], "render": [12, 22, 23, 99], "d_": 12, "restart_interv": 12, "stream_replac": 12, "dynamic_adjust": [12, 201], "qu240dynamicadjust": 12, "seri": [12, 122, 151, 156, 188, 211], "dynam": [12, 124, 158, 184, 201], "adjust": [12, 122, 158, 184, 201], "durat": [12, 187, 193], "interv": 12, "spin": 12, "reus": [12, 192, 196, 201, 215], "qualit": [12, 15], "affect": [12, 15, 192, 197], "update_streams_at_runtim": 12, "fairli": [12, 194, 196, 197], "hour": [12, 193, 203, 207, 215], "turn": [12, 32, 49, 192, 198], "datetim": 12, "timedelta": 12, "3600": 12, "planar_converg": 12, "delta": [12, 209], "minut": [12, 187, 193, 212, 217], "dai": [12, 148, 187, 188, 194, 212, 213], "03d": 12, "_": [12, 84, 192, 194, 197], "02d": 12, "forgotten": 12, "broken": [12, 192, 196], "immedi": [12, 57, 197], "miss": [12, 15, 192, 201], "detect": [12, 16, 201, 202, 204, 205, 206, 215], "gpmeti": [12, 201], "divid": [12, 209], "partition_graph": [12, 19, 124], "circumst": [12, 15, 32, 33, 192], "wast": 12, "manual": [12, 15, 41, 42, 192, 194, 216], "update_namelist_pio": 12, "node": [12, 19, 31, 32, 39, 79, 80, 81, 119, 124, 193, 196, 197, 201, 202, 203, 204, 205, 206, 207, 215], "v1": [12, 209], "better": [12, 14, 119, 215], "v2": [12, 201, 209], "littl": [12, 196, 197, 200], "feel": [12, 192], "runtime_setup": [12, 29, 39, 194], "onc": [12, 187, 197, 201, 213, 215], "yourself": [12, 206], "fact": [12, 32], "culler": 12, "cull": [12, 187, 192], "model_step": [12, 192], "make_graph_fil": [12, 192], "field": [12, 15, 72, 74, 107, 170, 176, 182, 183, 186, 187, 212, 213], "weight": [12, 14, 74, 176, 182, 183, 209], "weight_field": [12, 74], "frequent": [14, 184], "observ": [14, 200], "dataset": [14, 107, 176, 182, 183, 192], "region": [14, 16, 200, 201], "pyremap": [14, 90], "interpol": [14, 84, 188, 201], "hood": 14, "esmf_regridweightgen": 14, "best": [14, 192, 197], "mappingfilestep": [14, 16], "woa": 14, "2023": 14, "__init__": [14, 17, 19, 32, 41, 45, 50, 57, 58, 65, 70, 84, 108, 123, 124, 130, 131, 134, 136, 138, 141, 144, 146, 148, 151, 154, 156, 158, 159, 162, 165, 168, 170, 172, 190, 192, 194, 195, 196, 199], "mytestcas": 14, "__int__": 14, "make_map": 14, "64": [14, 209], "bilinear": [14, 84, 188, 213], "filenam": [14, 34, 35, 78, 85, 86, 87, 88, 92, 93, 94, 105, 109, 111, 192, 197], "woa23_decav_0": 14, "25_extrap": 14, "20230414": 14, "initial_condition_databas": [14, 201], "destin": [14, 84, 85, 86, 87, 88, 89, 90, 173], "src_from_lon_lat": 14, "lon_var": [14, 85, 87, 92], "lat_var": [14, 85, 87, 92], "dst_from_mpa": 14, "mesh_nam": [14, 85, 86, 87, 88, 89, 92, 93, 94, 163, 165, 168, 170, 172], "qu60": 14, "subclass": [14, 62, 65, 66, 67, 71, 122], "src_": 14, "dst_": 14, "pick": 14, "vizmap": [14, 170, 188], "super": [14, 190, 192, 194, 195, 196], "128": [14, 193, 203, 204, 207], "cosine_bell_viz": [14, 16, 188, 213], "dlon": [14, 89, 188, 213], "dlat": [14, 89, 188, 213], "remap_method": [14, 188, 213], "src_from_mpa": 14, "dst_global_lon_lat": 14, "With": [14, 197], "approach": [14, 192, 195, 196, 197, 198, 209], "perhap": [14, 16, 35, 195], "cover": 14, "nearli": [14, 192, 199, 200], "situat": [14, 25, 127, 215], "workflow": [14, 192, 197], "critic": 15, "compare_vari": [15, 194], "filename1": [15, 105, 194], "filename2": [15, 105], "simpl": [15, 196, 215], "temperatur": [15, 133, 135, 137, 145, 150, 155, 186, 187, 192, 194, 212, 213], "salin": [15, 133, 135, 137, 145, 150, 155, 186, 187, 192, 194, 212, 213], "prognost": [15, 212], "4proc": [15, 135, 212], "8proc": [15, 135, 212], "alter": [15, 177, 178, 192, 194, 200, 209, 212, 213], "skip_if_step_not_run": [15, 105, 194], "forc": [15, 216], "possibli": [15, 192, 197], "failur": 15, "valueerror": [15, 79, 194, 195, 196], "quiet": [15, 96, 105, 110], "report": 15, "threshold": [15, 213], "l1": [15, 105], "00000000000000e": 15, "l2": [15, 105], "l_infin": 15, "linf": [15, 105], "home": [15, 197, 201, 203, 206, 207], "xylar": [15, 201, 206], "test_nightly_latest": 15, "10km": [15, 187, 194, 195, 212, 215, 216, 217], "threads_test": [15, 215, 217], "1thread": [15, 155, 187, 212], "2thread": [15, 155, 212], "test_20210616": 15, "further_valid": 15, "add_output_fil": [15, 33, 192, 194], "disabl": [15, 16, 186, 216], "check_output": [15, 105], "zero": [15, 177, 178, 179, 180, 181, 186, 187], "l1_norm": [15, 105], "l2_norm": [15, 105], "linf_norm": [15, 105], "nonzero": [15, 105], "easiest": [15, 197], "solut": [15, 118, 188, 193, 198], "clobber": 15, "error": [15, 32, 41, 122, 163, 188, 192, 197, 200], "judgment": 15, "enough": [15, 187, 192, 196, 212, 213], "problem": [15, 192, 197, 198], "compare_tim": 15, "integr": [15, 148, 187, 194, 196, 212, 213], "rundir1": [15, 104], "92264": 15, "82317": 15, "percent": 15, "781019682649793": 15, "speedup": 15, "1208377370409515": 15, "aspect": 16, "often": [16, 32, 192, 193, 194, 195, 196, 199, 201, 216, 217], "analysi": [16, 122, 187, 194, 196, 199, 200, 201, 213, 216], "routin": 16, "viz": 16, "plot_horiz_field": 16, "patch": [16, 107], "style": [16, 122, 200], "vertic": [16, 186, 187, 192, 201, 208, 210, 212, 213], "edg": [16, 86, 93, 107, 186], "polygon": 16, "character": 16, "accordingli": [16, 82], "d": [16, 107, 176, 182, 183, 186, 192], "final_normalveloc": 16, "t_index": [16, 107], "vmin": [16, 107, 188, 213], "max_veloc": 16, "vmax": [16, 107, 188, 213], "cmap": [16, 107], "cmo": 16, "balanc": 16, "show_patch_edg": [16, 107], "globe": [16, 188, 213], "plot_glob": 16, "plot_land": [16, 106], "contin": [16, 106], "overlain": 16, "usag": [16, 201, 203, 207], "cmocean": 16, "noqa": [16, 57, 162, 165, 168], "f401": 16, "xr": 16, "open_dataset": [16, 192], "tracer1": 16, "isel": 16, "nvertlevel": [16, 107, 176, 182, 183, 192, 209], "out_filenam": [16, 102, 106, 175], "colormap_sect": [16, 106], "titl": [16, 106, 107], "colormap": [16, 106, 107, 188, 213], "cosin": [16, 162, 165, 168, 170, 172, 188, 213], "bell": [16, 162, 165, 168, 170, 172, 188, 213], "converg": [16, 188, 191, 193, 200, 213], "colormap_nam": [16, 106, 188, 213], "viridi": [16, 188, 213], "norm": [16, 105, 106, 188, 213], "norm_typ": [16, 106, 188, 213], "linear": [16, 106, 107, 188, 212, 213], "norm_arg": [16, 106, 188, 213], "colorbar": [16, 106, 107, 188, 213], "tick": [16, 106, 188, 213], "mark": [16, 188, 197, 213], "ll": [16, 188, 196, 207, 213], "colorbar_tick": [16, 106, 188, 213], "matplotlib": 16, "standard": [16, 196, 197, 203, 215], "symlog": [16, 106], "symmetr": 16, "central": [16, 213], "logarithm": [16, 107], "color": [16, 107], "normal": [16, 186, 192, 193, 197, 206], "symlognorm": 16, "lognorm": 16, "hous": 17, "seaic": [17, 34, 192, 215], "dict": [17, 20, 22, 23, 25, 32, 41, 45, 76, 77, 83, 84, 98, 99, 106, 108, 109, 110, 127, 194], "kei": [17, 41, 45, 98, 194], "cach": [17, 19, 32, 34, 97, 98, 124, 200, 201, 206, 211, 215, 217], "testgroup": [18, 32, 41, 195, 196], "max_memori": [19, 29, 32, 39, 124], "mesh_filenam": [19, 74, 124], "graph_filenam": [19, 74, 124], "graph": [19, 26, 28, 38, 74, 124, 187, 192, 201], "make_yaml": 19, "pio": [19, 28, 31, 124, 187], "stride": [19, 31, 124], "consist": [19, 31, 124, 184, 197, 201, 212], "partit": [19, 28, 38, 74, 124, 187, 192, 201, 202, 203, 204, 205, 207, 215], "model_config_data": 19, "streams_data": 19, "ideal": [19, 29, 32, 39, 81, 84, 122, 124, 138, 192, 195, 196, 200, 201, 216], "accommod": [19, 29, 32, 39, 81, 124], "fewer": [19, 29, 32, 39, 81, 124, 138, 192, 212, 215], "amount": [19, 29, 32, 39, 124, 192, 208], "memori": [19, 29, 32, 39, 124, 192, 201], "mb": [19, 29, 32, 39, 124, 201], "placehold": [19, 29, 32, 39, 124, 192, 215], "at_setup": [24, 122, 125, 139, 140, 147, 166, 167], "overridden": [25, 127, 192, 194], "diverg": [25, 127], "counterpart": [25, 122, 127], "nest": [25, 108, 110, 127], "graph_fil": 26, "parent": [27, 190, 192, 195], "done": [29, 39, 192, 215], "run_as_subprocess": [32, 192], "condit": [32, 133, 136, 141, 158, 168, 187, 188, 192, 193, 194, 195, 196, 199, 200, 201, 211, 212, 216], "smallest": [32, 192, 199, 209, 216], "unit": [32, 85, 89, 92, 192, 199, 212, 216], "term": [32, 199], "necessarili": [32, 34, 199], "input_data": 32, "until": [32, 33, 192, 194, 215], "finish": [32, 33, 71], "suffici": 32, "establish": [32, 33], "is_depend": 32, "combin": [32, 34, 41, 50, 83, 108, 192, 193, 194, 198, 201, 215], "machine_info": 32, "machineinfo": 32, "config_filenam": [32, 41, 192, 194], "base_work_dir": [32, 41, 192, 194], "log_filenam": [32, 41, 192], "redirect": [32, 192], "extern": [32, 184, 190, 192, 210], "access": [33, 194, 196, 197, 202, 206, 207], "database_compon": [34, 192], "work_dir_target": [34, 192], "come": [34, 192, 197, 202, 203, 204, 205, 206, 207, 210], "root": [34, 163, 184, 188, 190, 192, 196, 197, 199, 201, 202, 203, 204, 205, 206, 207, 209, 215], "suffix": [34, 98, 192], "_database_root": 34, "append": 34, "available_cor": [36, 126], "constrain": [36, 125, 139, 166, 187], "total": [36, 80, 192, 193, 196, 201, 203, 215], "everi": [37, 187, 192, 194, 196, 198, 199, 212], "child": [37, 190, 192, 194, 196], "serial": [38, 192, 194, 200, 215], "subtask": 39, "stdout_logg": 41, "goe": [41, 192], "regardless": 41, "new_step_log_fil": 41, "whole": [41, 129, 194, 196, 215], "statu": 41, "run_by_default": [42, 192, 194], "assum": [43, 99, 109, 194, 207, 212], "prior": [43, 192, 194], "greenland": [45, 195, 199, 200, 216], "eismint2": 45, "step_path": 48, "variant": [48, 187, 193, 195, 196, 197, 206, 209, 212, 213], "uncach": 48, "datestamp": 48, "yymmdd": [48, 201], "dry": [48, 193], "meta": 50, "empti": [50, 192, 196, 197, 199], "link_nam": 53, "overwrit": 53, "stackoverflow": 53, "55742015": 53, "7728169": 53, "symbol": [53, 192], "fileexistserror": 53, "unless": [53, 96, 197], "isadirectoryerror": 53, "decomposition_test": [57, 195, 215], "decompositiontest": [57, 195], "e501": [57, 162, 165, 168], "turquois": [57, 203], "usr": [57, 203, 215], "climat": [57, 202, 203, 204, 206, 215], "mhoffman": 57, "latitud": [59, 66, 85, 87, 89, 92, 106, 188, 213], "longitud": [59, 66, 67, 72, 85, 87, 89, 92, 106, 188, 213], "ndarrai": [59, 66, 67, 72, 106, 129, 174, 175], "degre": [59, 66, 67, 72, 89, 201, 212], "length": [59, 66, 67, 72], "180": [59, 66, 67, 72, 213], "90": [59, 66, 67, 72, 192, 213], "static": [60, 61], "rule": 60, "thumb": 60, "achiev": [61, 193], "close": [61, 200, 213], "uniform": [65, 165, 187, 188, 195, 201, 212, 213], "jigsawpi": [70, 192], "jigsaw_jig_t": 70, "meti": 74, "defaults_filenam": 75, "state": [79, 129, 186, 187, 188, 192, 193, 213], "queu": 79, "slurm": [79, 82, 200, 201, 202, 203, 204, 205, 207, 215], "interact": [79, 203, 206, 207, 215], "batch": [79, 203], "job": [79, 119, 197, 200, 202, 203, 204, 205, 207], "slurm_job_id": 79, "substep": 81, "cpus_per_nod": 82, "map_filenam": 84, "src_grid_info": 84, "dst_grid_info": 84, "neareststod": [84, 188, 213], "conserv": [84, 188, 213], "map_": 84, "source_typ": 84, "dest_typ": 84, "1d": [85, 89, 92, 106, 122, 174, 175, 176, 177, 178, 179, 180, 182, 183], "2d": [85, 89, 92, 106], "5x0": [85, 89, 92], "5degre": [85, 89, 92], "coordin": [85, 87, 88, 92, 94, 106, 107, 176, 182, 183, 208, 210, 212, 213], "mesh_typ": [86, 93, 192, 194, 195], "vertex": [86, 93], "x_var": [88, 94], "y_var": [88, 94], "proj_attr": [88, 94], "proj_str": [88, 94], "proj": [88, 94], "remapp": 90, "remap_fil": 90, "step_is_subprocess": 95, "is_test_cas": 96, "steps_not_to_run": 96, "progress": 96, "cached_step": 97, "copy_execut": [97, 98, 103, 215], "serv": [97, 98, 103, 195], "_all": [97, 98], "streams_filenam": 99, "lxml": [99, 101, 114], "etre": [99, 101, 114], "new_child": 100, "children": 100, "sub": 100, "new_tre": 101, "rundir2": 104, "infin": 105, "toler": 105, "exclud": [105, 215], "data_arrai": 106, "colorbar_label": 106, "subtitl": 106, "field_nam": 107, "out_file_nam": 107, "z_index": 107, "cmap_set_und": 107, "cmap_scal": 107, "horizont": [107, 122, 186, 187, 212], "planar": [107, 122, 186], "depth": [107, 122, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 201, 209, 212, 213], "slice": 107, "fieldnam": 107, "present": [107, 197], "visibl": 107, "ax": 107, "classmethod": 109, "jinja": 109, "namelist_templ": 113, "polarisyaml": [113, 114], "processed_registry_filenam": 114, "registri": [114, 186], "steam": 114, "load_dev_polaris_0": [115, 116, 117, 118, 119, 120], "alpha": [115, 116, 117, 118, 119, 120], "1_anvil_intel_impi": [115, 119], "sh": [115, 116, 117, 118, 119, 120, 197, 198, 202, 203, 204, 205, 207, 215], "openmpi": [115, 119, 197, 200, 202, 204, 205, 215], "mvapich": [115, 119, 202], "impi": [115, 119, 202, 205], "ifort": [115, 117, 119, 202, 204], "ve": [115, 116, 117, 118, 120, 192, 197], "1_anvil_gnu_openmpi": 115, "gfortran": [115, 117, 118, 119, 197, 202, 204], "load": [116, 119, 120, 197, 200, 201, 202, 203, 204, 205, 206, 207], "1_chicoma": 116, "cpu_gnu_mpich": [116, 120], "crai": [116, 119, 120, 203, 207], "1_chrysalis_intel_openmpi": 117, "1_chrysalis_gnu_openmpi": 117, "yet": [118, 122, 192, 196], "again": [118, 184, 192, 197, 198, 215], "soon": [118, 215], "1_compy_intel_impi": 118, "1_compy_gnu_openmpi": 118, "attempt": [119, 200, 206], "particular": [119, 195, 197, 200, 203, 206, 215], "activ": [119, 206, 207, 215], "load_polaris_env": [119, 197, 215], "were": [119, 138, 192, 196, 199, 201, 205, 209], "right": [119, 122, 194, 197, 201, 209, 213, 215], "therefor": [119, 192, 199, 213], "gnu": [119, 197, 205, 206, 215], "lib": 119, "intel": [119, 206], "chicoma": [119, 206, 215], "mpich": [119, 197, 200, 203, 207, 215], "compi": [119, 205, 215], "pm": [119, 207, 215], "compymcnodefac": [119, 206], "perlmutt": [119, 203, 206, 215], "pretti": [119, 192, 196, 201], "forg": [119, 200, 215], "linux": [119, 197, 206], "configure_polaris_env": [119, 197, 198], "conda_path": [119, 197], "osx": [119, 206], "clang": [119, 197], "had": 119, "1_": 119, "1_pm": 120, "ever": [122, 196], "expand": [122, 209], "oceanmodelstep": 122, "decid": 122, "veri": [122, 190, 192, 196, 197], "earli": [122, 210, 215], "stage": [122, 186, 192, 194, 197, 210, 215], "map_yaml_to_namelist": 122, "count": [122, 193], "heurist": 122, "exact": [122, 188, 196], "algorithm": [122, 138, 187, 192], "200": [122, 194, 212, 213], "round": [122, 213], "cell_count": [122, 125, 139, 166], "goal_cells_per_cor": [122, 212, 213], "pinch": 122, "2000": [122, 195, 212, 213], "max_cells_per_cor": [122, 212, 213], "seciton": 122, "control": [122, 188, 192, 201, 212, 213, 215], "scale": [122, 215], "tri": [122, 196], "apport": 122, "precis": [122, 192], "caviti": [122, 196, 201, 209], "frazil": 122, "flux": [122, 186], "grid_1d": 122, "generate_1d_grid": 122, "vertical_grid": [122, 174, 176, 182, 183, 195, 201, 209, 212, 213], "z": [122, 177, 178, 179, 180, 181, 182, 183, 212, 213, 217], "star": [122, 181, 183, 212, 213, 217], "init_vertical_coord": 122, "minlevelcel": [122, 176, 178, 179, 180, 181, 182, 183], "maxlevelcel": [122, 176, 177, 178, 179, 180, 181, 182, 183, 192], "cellmask": [122, 176, 179, 182, 183], "zmid": [122, 176, 182, 183], "restingthick": [122, 176, 181, 182, 183, 192], "bottomdepth": [122, 176, 177, 179, 180, 181, 182, 183, 192], "entir": [122, 212, 217], "petersen": [122, 197, 212], "et": [122, 209, 212, 213], "al": [122, 209, 212, 213], "2015": [122, 212], "int_": 122, "rho": 122, "left": [122, 209, 213], "dv": 122, "sort": [122, 191, 196, 197], "increas": [122, 196], "compute_rp": 122, "csv": 122, "dynamic_ntask": 124, "estim": [126, 128], "initial_state_file_nam": 129, "output_fil": [129, 192], "rest": [129, 181, 209, 213], "potenti": [129, 148, 192, 194, 212], "energi": [129, 148, 194, 200, 212], "netcdf": [129, 201, 202, 203, 204, 205, 206, 207], "len": [129, 192], "superclass": [131, 187, 192], "run_time_step": 138, "resources_fix": 138, "shouldn": 138, "dt": [138, 212, 213], "btr_dt": [138, 212], "barotrop": [138, 212], "longer": [144, 187, 193, 212, 213, 217], "shorter": [144, 193], "rpe": [148, 151, 156, 194, 212], "20": [148, 187, 193, 194, 212], "less": [159, 162, 192, 209], "globalocean": [159, 190], "cosinebel": [162, 165, 168, 188], "rmsevalu": 163, "squar": [163, 188], "ncell": [163, 192], "viz_map": 170, "posit": [174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 209], "layer": [174, 175, 176, 180, 181, 182, 183, 186, 187, 201, 209, 212, 213], "meter": [174, 175], "bottom": [176, 177, 178, 179, 180, 181, 182, 183, 186, 201, 209, 212, 213], "thick": [176, 180, 181, 182, 183, 187, 201, 209, 212], "stretch": [176, 182, 183, 209], "elev": [176, 182, 183, 209], "midpoint": [176, 182, 183], "reftopdepth": [176, 179, 180, 182, 183], "down": [176, 177, 178, 179, 180, 181, 182, 183, 209], "ref": [176, 182, 183], "middl": [176, 182, 183], "refbottomdepth": [176, 177, 178, 179, 180, 182, 183, 192], "refinterfac": [176, 182, 183], "element": [176, 182, 183], "vertcoordmovementweight": [176, 182, 183, 192], "movement": [176, 182, 183], "partial": [177, 178, 209, 212, 213], "seafloor": [177, 179, 180, 181, 209], "unstretch": 181, "shelv": [184, 201, 209], "ssh_adjust": [184, 192, 194, 201], "iter": [184, 201], "compass_branch": 184, "default_input": [184, 190, 201], "ocean_model": [184, 197, 201], "submodul": [184, 190, 197, 215], "latest": [184, 197, 200, 210, 215], "master": 184, "compat": [184, 197, 198, 200], "verison": 184, "maintain": [184, 215], "recurs": [184, 196, 197, 215], "whichev": [184, 209], "design": [185, 192, 194, 196, 200, 206], "minim": 186, "fcell": [186, 192], "fedg": [186, 192], "fvertex": [186, 192], "free": [186, 201], "slip": 186, "solid": [186, 212, 213], "tangenti": 186, "enforc": [186, 197], "nonperiod": 186, "drag": 186, "mass": 186, "momentum": [186, 187], "scalar": 186, "rigid": 186, "veloc": [186, 187, 194, 197, 213, 215], "solv": [186, 198, 209], "mid": 186, "vari": [186, 188, 192, 198, 206, 209, 213], "consult": 186, "tidal_forc": 186, "eddi": [187, 212], "addition": [187, 202, 203, 204, 205, 207], "diffus": 187, "50": [187, 195, 212], "prescrib": 187, "runtime_steup": 187, "decomptest": 187, "restarttest": [187, 195], "frequenc": 187, "threadstest": 187, "thread_test": 187, "rpetest": [187, 194], "intens": 187, "globalconverg": [188, 196], "studi": [188, 213], "advect": [188, 213], "qu": [188, 201, 211, 213], "ico": [188, 211, 213], "fix": [188, 195], "spheric": [188, 213], "24": [188, 213], "shape": [188, 213], "blob": 188, "around": [188, 201, 212, 213], "rate": [188, 213], "distribut": 188, "dt_per_km": [188, 212, 213], "rmse": 188, "encompass": 190, "perspect": 190, "four": 190, "major": [190, 192], "add_test_group": [190, 196], "variou": [190, 192, 197], "univers": 190, "mix": [190, 195], "ice_shelf_2d": [190, 217], "iceshelf2d": 190, "ziso": [190, 209, 216, 217], "landice_model": [190, 197], "green": 191, "blue": [191, 202, 215], "orang": 191, "red": 191, "repositori": [191, 200, 215], "laid": 191, "fig": 191, "among": [191, 195, 197], "organiz": 191, "concept": [191, 196, 199, 216], "simul": [192, 199, 211, 212, 215], "multiprocess": [192, 196, 201], "outsid": 192, "emploi": 192, "prevent": 192, "unwant": 192, "outer": 192, "inner": 192, "variable_resolut": [192, 195, 215], "dome_varres_grid": 192, "calcul": [192, 194], "signific": [192, 193, 194], "neglig": 192, "meshstep": 192, "getint": 192, "mesh_cpus_per_task": 192, "mesh_min_cpus_per_task": 192, "previous": 192, "processor": [192, 212, 213], "readi": [192, 207], "write_netcdf": 192, "convers": 192, "generate_grid": 192, "dsmesh": 192, "graphinfofilenam": 192, "use_dist": [192, 212], "gradient_width_dist": [192, 212], "gradient_width_frac": [192, 212], "bottom_temperatur": [192, 212], "surface_temperatur": [192, 212], "temperature_differ": [192, 212], "coriolis_paramet": [192, 212], "bottom_depth": [192, 201, 209, 212, 213], "vert_level": [192, 201, 209, 212, 213], "ones_lik": 192, "xcell": 192, "ycell": 192, "xmin": 192, "min": [192, 212], "xmax": 192, "ymin": 192, "ymax": 192, "ymid": 192, "xperturbmin": 192, "xperturbmax": 192, "perturbationwidth": 192, "yoffset": 192, "sin": [192, 212], "pi": [192, 209, 213], "temp_vert": 192, "frac": [192, 209], "logical_and": 192, "transpos": 192, "3rd": 192, "crest": 192, "wave": [192, 212], "expand_dim": 192, "dim": 192, "axi": 192, "broadcast": 192, "zeros_lik": 192, "xedg": 192, "nedg": 192, "dtype": 192, "xvertex": 192, "commandlin": 192, "explor": [192, 195, 209], "harm": 192, "likewis": 192, "subsequ": [192, 199, 217], "arisen": 192, "now": [192, 197, 201, 206], "omit": [192, 215], "problemat": 192, "usual": [192, 194, 197, 215], "isn": [192, 196, 212], "forwardstep": 192, "mesh_path": 192, "mesh_step": 192, "with_ice_shelf_cav": [192, 194], "initial_state_target": 192, "adjusted_init": [192, 194], "forcing_data": 192, "entha_analy_result": 192, "mat": 192, "enthalpy_benchmark": 192, "ourselv": 192, "reduc": 192, "firewal": 192, "bedmachineantarctica_v2_and_gebco_2022_0": 192, "05_degree_20220729": 192, "slate": 192, "icepresent_qu60km_polar": 192, "practic": [192, 196, 197], "u": [192, 206, 207], "straightforward": 192, "commonli": [192, 199], "expens": [192, 193], "mechan": 192, "notat": 192, "That": [192, 196, 199, 215], "word": 192, "ff": 192, "quwisc240": [192, 196, 215, 217], "90c": 192, "91c": 192, "92": [192, 209], "91": 192, "sowisc12to60": [192, 215, 217], "performance_test": [192, 217], "effici": 192, "transfer": 192, "feasibl": 192, "nor": 192, "add_depend": 192, "unpickl": 192, "overhead": 192, "organ": [193, 195, 200], "philosophi": [193, 196], "context": 193, "namesak": 193, "256": [193, 203, 207], "quicker": 193, "32": [193, 215], "exce": 193, "limit": [193, 197], "offer": 193, "benefit": [193, 200], "catch": 193, "bug": 193, "covereag": 193, "timestep": 193, "exhaust": 193, "recent": [193, 210], "merg": 193, "reach": 193, "steadi": 193, "encount": [193, 198], "wet": 193, "fundament": 194, "incorpor": 194, "deprec": 194, "constrain_resourc": 194, "smoke_test": [194, 195], "smoketest": [194, 195], "velo_solv": 194, "sia": [194, 197], "fo": 194, "add_step": 194, "runmodel": 194, "run_step": 194, "0200": 194, "00_00": 194, "fine": 194, "recip": 194, "rpe_test": [194, 196, 215], "res_param": [194, 195], "144": 194, "36": [194, 202, 206, 215], "4km": [194, 195, 212, 215], "unsupport": [194, 195], "param": [194, 195], "enumer": 194, "rpe_test_": 194, "_nu_": 194, "deliber": 194, "chosen": 194, "demonstr": 194, "clumsi": [194, 196], "rpe_test_1_nu_1": [194, 212], "rpe_test_2_nu_5": [194, 212], "filesfore3sm": 194, "configure_global_ocean": 194, "with_bgc": 194, "po4": 194, "no3": 194, "sio3": 194, "nh4": 194, "fe": [194, 203], "o2": 194, "dic": 194, "dic_alt_co2": 194, "alk": 194, "dofe": 194, "dop": 194, "dopr": 194, "donr": 194, "zooc": 194, "spchl": 194, "spc": 194, "spfe": 194, "spcaco3": 194, "diatchl": 194, "diatc": 194, "diatf": 194, "diatsi": 194, "diazchl": 194, "diazc": 194, "diazf": 194, "phaeochl": 194, "phaeoc": 194, "phaeof": 194, "dm": 194, "dmsp": 194, "prot": 194, "poli": 194, "lip": 194, "conceptu": [195, 196], "realist": [195, 200, 216], "2000m": [195, 215], "34": [195, 215], "halfar": 195, "cism": 195, "dome_typ": 195, "closest": 195, "put_origin_on_a_cel": 195, "hydrologi": 195, "hydro": [195, 216], "dome_viz": 195, "time_slic": 195, "save_imag": 195, "hide": 195, "hide_fig": 195, "add_test_cas": 195, "restart_test": [195, 215, 217], "talk": 195, "16": [195, 201, 215], "10e3": 195, "40": [195, 205], "126": 195, "4e3": 195, "160": 195, "500": [195, 201, 209], "held": 195, "initial_condit": 196, "dig": [196, 201], "infrastructur": 196, "background": 196, "behind": 196, "adher": 196, "pep8": [196, 197], "bot": [196, 209], "violat": 196, "pleas": [196, 197, 215], "consid": 196, "editor": 196, "pycharm": [196, 197], "spyder": 196, "linter": 196, "flake8": [196, 197], "discourag": 196, "reformat": 196, "autopep8": 196, "undesir": 196, "util": 196, "lint": 196, "wildcard": 196, "vim": 196, "plugin": 196, "id": [196, 197], "commit": [196, 197], "why": 196, "sound": 196, "subpackag": 196, "understand": [196, 201], "releas": [196, 200, 206, 210, 215], "our": [196, 215], "downstream": 196, "tutori": [196, 197], "clu": 196, "intro": 196, "docstr": [196, 200], "strip": 196, "mpas_ocean": 196, "hidden": 196, "shortcut": [196, 215], "referenc": 196, "mention": 196, "dot": 196, "charact": 196, "unix": [196, 200], "distinct": 196, "mayb": 196, "machine_config": 196, "endswith": 196, "splitext": 196, "exactli": [196, 197, 209], "move": 196, "renam": 196, "visa": 196, "versa": 196, "comfort": 196, "inherit": 196, "orient": 196, "program": [196, 201], "led": 196, "felt": 196, "contribut": 196, "hesit": 196, "predecessor": [196, 199, 200], "harder": 196, "outcom": 196, "augment": 196, "explain": 196, "hope": 196, "dens": 196, "learn": 196, "curv": 196, "worth": 196, "skill": 196, "broadli": 196, "applic": [196, 197], "endeavor": 196, "readabl": 196, "manipul": 196, "get_available_cores_and_nod": 196, "theoret": 196, "dozen": 196, "split": 196, "theori": 196, "biogeochemistri": 196, "bash": [197, 198, 215], "ksh": 197, "mac": [197, 200], "csh": 197, "tcsh": 197, "temporarili": 197, "switch": [197, 201], "bin": [197, 207, 215], "obtain": [197, 203], "recogn": [197, 201, 215], "mambaforg": [197, 206, 215], "permiss": 197, "miniconda3": 197, "unifi": [197, 207], "anyon": 197, "caus": [197, 203, 207, 209], "person": [197, 198], "base_path_to_install_or_update_conda": 197, "with_albani": 197, "with_netlib_lapack": 197, "with_petsc": 197, "flavor": 197, "login": [197, 203, 207], "troubl": 197, "recognit": 197, "trilino": 197, "downsid": 197, "unneed": 197, "laptop": [197, 201], "workstat": 197, "deploy": 197, "shallow": 197, "hpc": [197, 203, 206], "touch": 197, "update_spack": 197, "reinstal": 197, "scorpio": [197, 206, 215], "esmf": [197, 215], "caution": 197, "deploi": [197, 202, 203, 204, 205, 206, 207], "load_": 197, "encod": 197, "load_dev_polaris_": 197, "env_nam": 197, "dev_polaris_": [197, 198], "safest": 197, "rerun": 197, "load_dev_polari": 197, "echo": 197, "rememb": 197, "recreat": [197, 198], "incorrect": 197, "unus": 197, "session": 197, "pip": 197, "substanti": 197, "risk": 197, "rare": 197, "correct": 197, "wih": 197, "env_onli": 197, "mpas_make_target": [197, 215], "scientif": [197, 215], "_albani": 197, "column": [197, 215], "instruct": 197, "proce": 197, "workdir": [197, 215], "es3m": 197, "compli": 197, "convent": 197, "memor": 197, "guidelin": 197, "stai": 197, "complianc": 197, "checker": 197, "pre": 197, "isort": 197, "mypi": 197, "77": 197, "e302": 197, "blank": 197, "resolv": 197, "simpler": 197, "mkdir": 197, "fetch": 197, "new_branch_nam": 197, "put": 197, "elsewher": 197, "disk": [197, 201, 203, 207], "respons": 197, "simplest": 197, "your_new_branch": 197, "checkout": 197, "suggest": 198, "geo": 198, "cartopi": 198, "14": 198, "np110py27_4": 198, "calledprocesserror": 198, "deploy_tmp": 198, "spec": [198, 207], "vpn": 198, "occur": 198, "site": 198, "shell": [198, 200], "honor": 198, "wide": 198, "coupl": [198, 200], "profil": 198, "spawn": 198, "usernam": [198, 203, 207], "proxy_en": 198, "export": 198, "all_proxi": 198, "proxyout": 198, "8080": 198, "no_proxi": 198, "localhost": [198, 201, 206, 207, 215], "127": 198, "proxy_dis": 198, "unset": 198, "anytim": 198, "fatal": 198, "mpi_init": 198, "stack": 198, "mpir_init_thread": 198, "159": 198, "mpid_init": 198, "164": 198, "mpidi_ch3_init": 198, "95": 198, "mpid_nem_init": 198, "314": 198, "mpid_nem_tcp_init": 198, "173": 198, "mpid_nem_tcp_get_business_card": 198, "395": 198, "getsockinterfaceaddr": 198, "369": 198, "pn2034311": 198, "errno": 198, "host": [198, 201, 206, 215], "mpirun": [198, 201, 202, 203, 204, 205, 206, 207, 215], "srun": [198, 201, 202, 203, 204, 205, 206, 207, 215], "parallel_execut": [198, 201, 202, 203, 204, 205, 206, 207, 215], "unexpect": 199, "plu": 199, "autom": 200, "exascal": 200, "earth": 200, "kept": 200, "sens": 200, "boundari": [200, 212, 216], "expert": 200, "team": 200, "launch": 200, "uncoupl": 200, "evolv": [200, 209], "quick": [200, 210, 217], "queue": 200, "beginn": 200, "worktre": 200, "advanc": 200, "mpas_to_yaml": 200, "troubleshoot": 200, "proxi": 200, "lanl": [200, 201, 203], "gethostbynam": 200, "extens": 201, "single_nod": [201, 202, 203, 204, 205, 206, 207, 215], "multinod": [201, 215], "cores_per_nod": [201, 202, 203, 204, 205, 206, 207, 215], "hopefulli": 201, "explanatori": 201, "my_machin": 201, "fit": 201, "extend": 201, "gitconfig": 201, "enter": 201, "author": 201, "asai": 201, "davi": 201, "email": 201, "pull_request": 201, "28": 201, "address": 201, "metadata": 201, "customize_config_pars": 201, "server_base_url": 201, "inej": 201, "check_siz": 201, "ssl": 201, "certif": 201, "core_path": 201, "partition_execut": 201, "dask": 201, "netcdf4": 201, "netcdf4_class": 201, "netcdf3_64bit": 201, "netcdf3_class": 201, "engin": 201, "scipi": 201, "mesh_databas": 201, "ocean_database_root": 201, "landice_database_root": 201, "mesh_cor": 201, "18": [201, 203], "mesh_min_cor": 201, "mesh_max_memori": 201, "1000": [201, 209, 212], "mesh_max_disk": 201, "init_cor": 201, "init_min_cor": 201, "init_max_memori": 201, "init_max_disk": 201, "init_thread": 201, "forward_cor": 201, "forward_min_cor": 201, "forward_thread": 201, "forward_max_memori": 201, "forward_max_disk": 201, "add_metadata": 201, "ec": 201, "wc": 201, "mesh_descript": 201, "autodetect": 201, "bathy_descript": 201, "gebco": 201, "2022": 201, "bedmachin": 201, "antarctica": 201, "init_descript": 201, "e3sm_vers": 201, "increment": 201, "mesh_revis": 201, "finest": [201, 213], "min_r": 201, "coarsest": 201, "max_r": 201, "max_depth": 201, "creation_d": 201, "peopl": 201, "contact": 201, "temperaturemax": 201, "statist": 201, "temperature_max": 201, "33": [201, 215], "diagnost": [201, 202, 203, 205, 206, 207, 215], "enable_ocean_initial_condit": 201, "enable_ocean_graph_partit": 201, "enable_seaice_initial_condit": 201, "scrip": 201, "enable_scrip": 201, "transect": 201, "onlin": 201, "member": 201, "offlin": 201, "enable_diagnostics_fil": 201, "coarser": [201, 213], "finer": 201, "comparisonlatresolut": 201, "comparisonlonresolut": 201, "antarct": 201, "polar": [201, 202, 204, 209], "stereograph": 201, "comparisonantarcticstereowidth": 201, "6000": [201, 209], "comparisonantarcticstereoresolut": 201, "arctic": 201, "comparisonarcticstereowidth": 201, "comparisonarcticstereoresolut": 201, "grid_typ": [201, 209, 212, 213], "tanh_dz": 201, "3000": 201, "min_layer_thick": [201, 209], "max_layer_thick": [201, 209], "retain": 201, "ecosystem": 202, "gain": 202, "confluenc": 202, "public_html": [202, 204, 206], "polaris_env": [202, 203, 204, 205, 206, 207], "soft": [202, 204, 206, 215], "mpi_intel": [202, 204, 205, 206], "mpi_gnu": [202, 203, 204, 205, 206, 207], "hdf5": [202, 203, 204, 205, 206, 207], "fortran": [202, 203, 204, 205, 206, 207], "pnetcdf": [202, 203, 204, 205, 206, 207], "use_e3sm_hdf5_netcdf": [202, 203, 204, 205, 206, 207], "cobalt": [202, 203, 204, 205, 206, 207], "account": [202, 203, 205, 206, 207, 215], "condo": [202, 215], "acm": [202, 215], "medium": 202, "qualiti": [202, 203, 205, 206, 207, 215], "servic": [202, 203, 205, 206, 207, 215], "qo": [202, 203, 205, 206, 207, 215], "acme_high": 202, "load_latest_polaris_intel_impi": [202, 205], "load_latest_polaris_gnu_openmpi": [202, 204, 215], "dst": 203, "calendar": 203, "network": 203, "introduct": 203, "platform": 203, "wtrw": 203, "ch": 203, "lustr": 203, "scratch4": 203, "scratch5": 203, "sacctmgr": 203, "assoc": 203, "cluster": 203, "45": 203, "my": 203, "sshare": 203, "grep": [203, 215], "sreport": 203, "accountutilizationbyus": 203, "2019": 203, "02": 203, "prioriti": 203, "yellow": 203, "chkhome": 203, "petabyt": 203, "df": 203, "bp": 203, "archiv": [203, 207], "hpss": [203, 207], "front": 203, "tn": 203, "storag": 203, "project_nam": 203, "salloc": [203, 206, 207], "account_nam": 203, "gpu": [203, 207], "hyperthread": [203, 207], "hang": [203, 207], "threads_per_cor": [203, 207], "modules_befor": [203, 207], "modules_aft": [203, 207], "shared_clim": [203, 215], "load_latest_polaris_gnu_mpich": [203, 207], "high": [204, 206], "load_latest_polaris_intel_openmpi": 204, "compyf": 205, "app": [205, 215], "pmi2": 205, "conda_env": [205, 215], "sai": 206, "submit": 206, "workload": 206, "sbatch": [206, 215], "squeue": 206, "my_usernam": [206, 207], "scancel": 206, "jobid": 206, "cancel": 206, "emtpi": 206, "probabl": 206, "three": 206, "mpi_mpich": [206, 215], "mpi_openmpi": [206, 215], "nompi": [206, 215], "p1": 207, "nersc": 207, "iri": 207, "filesystem": 207, "myquota": 207, "prjquota": 207, "projectid": 207, "m1795": 207, "hsi": 207, "htar": 207, "zstash": 207, "cf": [207, 215], "cdir": [207, 215], "constraint": [207, 215], "premium": 207, "cray_compil": 207, "8844": 207, "monik": 207, "browser": 207, "port": 207, "realli": 207, "nice": 207, "grab": 207, "logon": 207, "kernel": 207, "connect": 207, "myenv": 207, "ipykernel": 207, "kernelspec": 207, "u1": 207, "Be": 207, "interpret": 207, "argv": 207, "env": 207, "ipykernel_launch": 207, "connection_fil": 207, "display_nam": 207, "languag": 207, "100": 209, "2500": 209, "coord_typ": [209, 212, 213], "partial_cell_typ": [209, 212, 213], "min_pc_fract": [209, 212, 213], "deepest": 209, "stewart": 209, "2017": 209, "z_2": 209, "z_1": 209, "mathrm": 209, "tanh": 209, "rightarrow": 209, "infti": 209, "z_k": 209, "z_0": 209, "z_": 209, "k": 209, "finder": 209, "n_z": 209, "h_": 209, "210": [209, 213], "scienc": 209, "hydrograph": 209, "climatologi": 209, "250": 209, "5500": 209, "renorm": 209, "51": 209, "221": 209, "63": 209, "floor": 209, "flat": 209, "collaps": 209, "adcroft": 209, "campin": 209, "2004": 209, "absenc": 209, "squash": 209, "proport": [209, 212, 213], "watercolumn": 209, "press": 209, "depress": 209, "batymetri": 209, "repres": [209, 213], "stair": 209, "still": [210, 215], "month": 210, "year": 210, "websit": 210, "release_6": 210, "ilicak": 212, "2012": 212, "zonal": 212, "northern": 212, "southern": 212, "throughout": 212, "35": [212, 213, 215], "psu": 212, "cooler": 212, "half": 212, "north": 212, "gradient": 212, "halv": 212, "sinusoid": 212, "perturb": [212, 213], "meridion": 212, "warmer": 212, "distinguish": 212, "aim": [212, 213], "btr_dt_per_km": 212, "logic": 212, "08": 212, "500km": 212, "40e3": 212, "water": 212, "corioli": 212, "2e": 212, "hard": 212, "decompos": 212, "goal": 212, "break": 212, "mk": 212, "celsiu": 212, "spuriou": 212, "dissip": 212, "pop": 212, "mom": 212, "mitgcm": 212, "williamson": 213, "1992": 213, "sec": 213, "3a": 213, "skamarock": 213, "gassmann": 213, "flow": 213, "bodi": 213, "rotat": 213, "transport": 213, "psi": 213, "psi_0": 213, "co": 213, "ge": 213, "radiu": 213, "equatori": 213, "u_0": 213, "300": 213, "rad": 213, "lat_cent": 213, "lon_cent": 213, "14159265": 213, "2123666": 213, "6667": 213, "hill": 213, "psi0": 213, "transit": 213, "equat": 213, "vel_pd": 213, "qu_conv_thresh": 213, "warn": 213, "qu_conv_max": 213, "icos_conv_thresh": 213, "icos_conv_max": 213, "480": 213, "150": 213, "nearest": 213, "multipli": 213, "roughli": 213, "alloc": 213, "load_latest_polari": 215, "minu": 215, "create_polaris_load_script": 215, "load_polaris_1": 215, "0_mpich": 215, "wiki": 215, "circular_shelf": 215, "sia_smoke_test": 215, "sia_decomposition_test": 215, "sia_restart_test": 215, "fo_smoke_test": 215, "fo_decomposition_test": 215, "fo_restart_test": 215, "decomp_test": [215, 217], "37": 215, "38": 215, "17": 215, "210131_test_new_branch": 215, "fall": 215, "my_config": 215, "smaller": 215, "previous_workdir": 215, "paper": 215, "recompil": 215, "live": 215, "safer": 215, "preserv": 215, "test_subdir": 215, "whatev": 215, "job_script": 215, "wall": 215, "clock": 215, "accord": 215, "j": 215, "exclus": 215, "job_nam": 215, "wall_tim": 215, "fo_integr": [215, 217], "full_integr": [215, 217], "sia_integr": [215, 217], "cosine_bell_cached_init": [215, 217], "ec30to60": [215, 217], "ecwisc30to60": [215, 217], "qu240_for_e3sm": [215, 217], "quwisc240_for_e3sm": [215, 217], "wc14": [215, 217], "suitenam": 215, "radial": 216, "analyt": 216, "form": 216, "identifi": 216, "analysis_test": 217, "5km": 217, "20km": 217, "with_frazil": 217, "prohibit": 217}, "objects": {"polaris": [[17, 0, 1, "", "Component"], [19, 0, 1, "", "ModelStep"], [32, 0, 1, "", "Step"], [41, 0, 1, "", "TestCase"], [45, 0, 1, "", "TestGroup"]], "polaris.Component": [[17, 1, 1, "", "__init__"], [18, 1, 1, "", "add_test_group"]], "polaris.ModelStep": [[19, 1, 1, "", "__init__"], [20, 1, 1, "", "add_model_config_options"], [21, 1, 1, "", "add_namelist_file"], [22, 1, 1, "", "add_streams_file"], [23, 1, 1, "", "add_yaml_file"], [24, 1, 1, "", "dynamic_model_config"], [25, 1, 1, "", "map_yaml_to_namelist"], [26, 1, 1, "", "partition"], [27, 1, 1, "", "process_inputs_and_outputs"], [28, 1, 1, "", "runtime_setup"], [29, 1, 1, "", "set_model_resources"], [30, 1, 1, "", "setup"], [31, 1, 1, "", "update_namelist_pio"]], "polaris.Step": [[32, 1, 1, "", "__init__"], [33, 1, 1, "", "add_dependency"], [34, 1, 1, "", "add_input_file"], [35, 1, 1, "", "add_output_file"], [36, 1, 1, "", "constrain_resources"], [37, 1, 1, "", "run"], [38, 1, 1, "", "runtime_setup"], [39, 1, 1, "", "set_resources"], [40, 1, 1, "", "setup"]], "polaris.TestCase": [[41, 1, 1, "", "__init__"], [42, 1, 1, "", "add_step"], [43, 1, 1, "", "configure"], [44, 1, 1, "", "validate"]], "polaris.TestGroup": [[45, 1, 1, "", "__init__"], [46, 1, 1, "", "add_test_case"]], "polaris.__main__": [[47, 2, 1, "", "main"]], "polaris.cache": [[48, 2, 1, "", "update_cache"]], "polaris.components": [[49, 2, 1, "", "get_components"]], "polaris.config": [[50, 0, 1, "", "PolarisConfigParser"]], "polaris.config.PolarisConfigParser": [[50, 1, 1, "", "__init__"]], "polaris.io": [[51, 2, 1, "", "download"], [52, 3, 0, "-", "imp_res"], [53, 2, 1, "", "symlink"]], "polaris.list": [[54, 2, 1, "", "list_cases"], [55, 2, 1, "", "list_machines"], [56, 2, 1, "", "list_suites"]], "polaris.logging": [[57, 2, 1, "", "log_method_call"]], "polaris.mesh": [[58, 0, 1, "", "IcosahedralMeshStep"], [65, 0, 1, "", "QuasiUniformSphericalMeshStep"]], "polaris.mesh.IcosahedralMeshStep": [[58, 1, 1, "", "__init__"], [59, 1, 1, "", "build_subdivisions_cell_width_lat_lon"], [60, 1, 1, "", "get_cell_width"], [61, 1, 1, "", "get_subdivisions"], [62, 1, 1, "", "make_jigsaw_mesh"], [63, 1, 1, "", "run"], [64, 1, 1, "", "setup"]], "polaris.mesh.QuasiUniformSphericalMeshStep": [[65, 1, 1, "", "__init__"], [66, 1, 1, "", "build_cell_width_lat_lon"], [67, 1, 1, "", "make_jigsaw_mesh"], [68, 1, 1, "", "run"], [69, 1, 1, "", "setup"]], "polaris.mesh.spherical": [[70, 0, 1, "", "SphericalBaseStep"]], "polaris.mesh.spherical.SphericalBaseStep": [[70, 1, 1, "", "__init__"], [71, 1, 1, "", "run"], [72, 1, 1, "", "save_and_plot_cell_width"], [73, 1, 1, "", "setup"]], "polaris.model_step": [[74, 2, 1, "", "make_graph_file"]], "polaris.namelist": [[75, 2, 1, "", "ingest"], [76, 2, 1, "", "parse_replacements"], [77, 2, 1, "", "replace"], [78, 2, 1, "", "write"]], "polaris.ocean": [[123, 0, 1, "", "Ocean"]], "polaris.ocean.Ocean": [[123, 1, 1, "", "__init__"]], "polaris.ocean.model": [[124, 0, 1, "", "OceanModelStep"]], "polaris.ocean.model.OceanModelStep": [[124, 1, 1, "", "__init__"], [125, 1, 1, "", "compute_cell_count"], [126, 1, 1, "", "constrain_resources"], [127, 1, 1, "", "map_yaml_to_namelist"], [128, 1, 1, "", "setup"]], "polaris.ocean.rpe": [[129, 2, 1, "", "compute_rpe"]], "polaris.ocean.tests.baroclinic_channel": [[130, 0, 1, "", "BaroclinicChannel"], [131, 0, 1, "", "BaroclinicChannelTestCase"]], "polaris.ocean.tests.baroclinic_channel.BaroclinicChannel": [[130, 1, 1, "", "__init__"]], "polaris.ocean.tests.baroclinic_channel.BaroclinicChannelTestCase": [[131, 1, 1, "", "__init__"], [132, 1, 1, "", "configure"], [133, 1, 1, "", "validate"]], "polaris.ocean.tests.baroclinic_channel.decomp_test": [[134, 0, 1, "", "DecompTest"]], "polaris.ocean.tests.baroclinic_channel.decomp_test.DecompTest": [[134, 1, 1, "", "__init__"], [135, 1, 1, "", "validate"]], "polaris.ocean.tests.baroclinic_channel.default": [[136, 0, 1, "", "Default"]], "polaris.ocean.tests.baroclinic_channel.default.Default": [[136, 1, 1, "", "__init__"], [137, 1, 1, "", "validate"]], "polaris.ocean.tests.baroclinic_channel.forward": [[138, 0, 1, "", "Forward"]], "polaris.ocean.tests.baroclinic_channel.forward.Forward": [[138, 1, 1, "", "__init__"], [139, 1, 1, "", "compute_cell_count"], [140, 1, 1, "", "dynamic_model_config"]], "polaris.ocean.tests.baroclinic_channel.initial_state": [[141, 0, 1, "", "InitialState"]], "polaris.ocean.tests.baroclinic_channel.initial_state.InitialState": [[141, 1, 1, "", "__init__"], [142, 1, 1, "", "run"], [143, 1, 1, "", "setup"]], "polaris.ocean.tests.baroclinic_channel.restart_test": [[144, 0, 1, "", "RestartTest"]], "polaris.ocean.tests.baroclinic_channel.restart_test.RestartTest": [[144, 1, 1, "", "__init__"], [145, 1, 1, "", "validate"]], "polaris.ocean.tests.baroclinic_channel.restart_test.restart_step": [[146, 0, 1, "", "RestartStep"]], "polaris.ocean.tests.baroclinic_channel.restart_test.restart_step.RestartStep": [[146, 1, 1, "", "__init__"], [147, 1, 1, "", "dynamic_model_config"]], "polaris.ocean.tests.baroclinic_channel.rpe_test": [[148, 0, 1, "", "RpeTest"]], "polaris.ocean.tests.baroclinic_channel.rpe_test.RpeTest": [[148, 1, 1, "", "__init__"], [149, 1, 1, "", "configure"], [150, 1, 1, "", "validate"]], "polaris.ocean.tests.baroclinic_channel.rpe_test.analysis": [[151, 0, 1, "", "Analysis"]], "polaris.ocean.tests.baroclinic_channel.rpe_test.analysis.Analysis": [[151, 1, 1, "", "__init__"], [152, 1, 1, "", "run"], [153, 1, 1, "", "setup"]], "polaris.ocean.tests.baroclinic_channel.threads_test": [[154, 0, 1, "", "ThreadsTest"]], "polaris.ocean.tests.baroclinic_channel.threads_test.ThreadsTest": [[154, 1, 1, "", "__init__"], [155, 1, 1, "", "validate"]], "polaris.ocean.tests.baroclinic_channel.viz": [[156, 0, 1, "", "Viz"]], "polaris.ocean.tests.baroclinic_channel.viz.Viz": [[156, 1, 1, "", "__init__"], [157, 1, 1, "", "run"]], "polaris.ocean.tests.global_convergence": [[158, 0, 1, "", "GlobalConvergence"]], "polaris.ocean.tests.global_convergence.GlobalConvergence": [[158, 1, 1, "", "__init__"]], "polaris.ocean.tests.global_convergence.cosine_bell": [[159, 0, 1, "", "CosineBell"]], "polaris.ocean.tests.global_convergence.cosine_bell.CosineBell": [[159, 1, 1, "", "__init__"], [160, 1, 1, "", "configure"], [161, 1, 1, "", "validate"]], "polaris.ocean.tests.global_convergence.cosine_bell.analysis": [[162, 0, 1, "", "Analysis"]], "polaris.ocean.tests.global_convergence.cosine_bell.analysis.Analysis": [[162, 1, 1, "", "__init__"], [163, 1, 1, "", "rmse"], [164, 1, 1, "", "run"]], "polaris.ocean.tests.global_convergence.cosine_bell.forward": [[165, 0, 1, "", "Forward"]], "polaris.ocean.tests.global_convergence.cosine_bell.forward.Forward": [[165, 1, 1, "", "__init__"], [166, 1, 1, "", "compute_cell_count"], [167, 1, 1, "", "dynamic_model_config"]], "polaris.ocean.tests.global_convergence.cosine_bell.init": [[168, 0, 1, "", "Init"]], "polaris.ocean.tests.global_convergence.cosine_bell.init.Init": [[168, 1, 1, "", "__init__"], [169, 1, 1, "", "run"]], "polaris.ocean.tests.global_convergence.cosine_bell.viz": [[170, 0, 1, "", "Viz"], [172, 0, 1, "", "VizMap"]], "polaris.ocean.tests.global_convergence.cosine_bell.viz.Viz": [[170, 1, 1, "", "__init__"], [171, 1, 1, "", "run"]], "polaris.ocean.tests.global_convergence.cosine_bell.viz.VizMap": [[172, 1, 1, "", "__init__"], [173, 1, 1, "", "run"]], "polaris.ocean.vertical.grid_1d": [[174, 2, 1, "", "generate_1d_grid"], [175, 2, 1, "", "write_1d_grid"]], "polaris.ocean.vertical": [[176, 2, 1, "", "init_vertical_coord"]], "polaris.ocean.vertical.partial_cells": [[177, 2, 1, "", "alter_bottom_depth"], [178, 2, 1, "", "alter_ssh"]], "polaris.ocean.vertical.zlevel": [[179, 2, 1, "", "compute_min_max_level_cell"], [180, 2, 1, "", "compute_z_level_layer_thickness"], [181, 2, 1, "", "compute_z_level_resting_thickness"], [182, 2, 1, "", "init_z_level_vertical_coord"]], "polaris.ocean.vertical.zstar": [[183, 2, 1, "", "init_z_star_vertical_coord"]], "polaris.parallel": [[79, 2, 1, "", "check_parallel_system"], [80, 2, 1, "", "get_available_cores_and_nodes"], [81, 2, 1, "", "run_command"], [82, 2, 1, "", "set_cores_per_node"]], "polaris.provenance": [[83, 2, 1, "", "write"]], "polaris.remap": [[84, 0, 1, "", "MappingFileStep"]], "polaris.remap.MappingFileStep": [[84, 1, 1, "", "__init__"], [85, 1, 1, "", "dst_from_lon_lat"], [86, 1, 1, "", "dst_from_mpas"], [87, 1, 1, "", "dst_from_points"], [88, 1, 1, "", "dst_from_proj"], [89, 1, 1, "", "dst_global_lon_lat"], [90, 1, 1, "", "get_remapper"], [91, 1, 1, "", "run"], [92, 1, 1, "", "src_from_lon_lat"], [93, 1, 1, "", "src_from_mpas"], [94, 1, 1, "", "src_from_proj"]], "polaris.run.serial": [[95, 2, 1, "", "run_single_step"], [96, 2, 1, "", "run_tests"]], "polaris.setup": [[97, 2, 1, "", "setup_case"], [98, 2, 1, "", "setup_cases"]], "polaris.streams": [[99, 2, 1, "", "read"], [100, 2, 1, "", "update_defaults"], [101, 2, 1, "", "update_tree"], [102, 2, 1, "", "write"]], "polaris.suite": [[103, 2, 1, "", "setup_suite"]], "polaris.validate": [[104, 2, 1, "", "compare_timers"], [105, 2, 1, "", "compare_variables"]], "polaris.viz.globe": [[106, 2, 1, "", "plot_global"]], "polaris.viz": [[107, 2, 1, "", "plot_horiz_field"]], "polaris.yaml": [[108, 0, 1, "", "PolarisYaml"], [112, 2, 1, "", "main_mpas_to_yaml"], [113, 2, 1, "", "mpas_namelist_and_streams_to_yaml"], [114, 2, 1, "", "yaml_to_mpas_streams"]], "polaris.yaml.PolarisYaml": [[108, 1, 1, "", "__init__"], [109, 1, 1, "", "read"], [110, 1, 1, "", "update"], [111, 1, 1, "", "write"]]}, "objtypes": {"0": "py:class", "1": "py:method", "2": "py:function", "3": "py:module"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"], "2": ["py", "function", "Python function"], "3": ["py", "module", "Python module"]}, "titleterms": {"design": [0, 1], "document": [0, 3, 5], "templat": [1, 12], "summari": 1, "requir": 1, "name": 1, "topic": 1, "here": 1, "algorithm": 1, "option": [1, 12, 122, 197, 202, 203, 204, 205, 206, 207, 212, 213], "same": 1, "implement": 1, "test": [1, 121, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 189, 191, 193, 194, 195, 196, 201, 211, 214, 215, 216, 217], "valid": [1, 2, 15, 44, 104, 105, 133, 135, 137, 145, 150, 155, 161, 194, 215], "api": 2, "refer": [2, 121, 122], "compon": [2, 12, 17, 18, 49, 122, 184, 190, 196, 197, 210, 215], "polari": [2, 4, 6, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 192, 196, 197, 200, 215], "framework": [2, 8, 121, 122, 187, 196, 208], "command": [2, 4, 6], "line": [2, 4], "interfac": [2, 4], "list": [2, 4, 6, 54, 55, 56], "setup": [2, 4, 6, 30, 40, 64, 69, 73, 97, 98, 128, 143, 153, 192], "suit": [2, 4, 6, 103, 193, 211, 215, 217], "run": [2, 6, 12, 37, 63, 68, 71, 91, 95, 96, 122, 142, 152, 157, 164, 169, 171, 173, 192, 197, 215], "cach": [2, 4, 6, 48, 192], "mpas_to_yaml": [2, 4], "base": 2, "class": [2, 196], "testgroup": [2, 45, 46], "testcas": [2, 41, 42, 43, 44, 194], "step": [2, 32, 33, 34, 35, 36, 37, 38, 39, 40, 192, 213], "modelstep": [2, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31], "config": [2, 7, 12, 50, 122, 201, 202, 203, 204, 205, 206, 207, 212, 213], "io": [2, 9, 51, 52, 53], "log": [2, 10, 57], "mesh": [2, 11, 12, 16, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 188], "model_step": [2, 74], "namelist": [2, 12, 75, 76, 77, 78, 122], "parallel": [2, 79, 80, 81, 82], "proven": [2, 13, 83], "remap": [2, 14, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94], "stream": [2, 12, 99, 100, 101, 102, 122], "viz": [2, 106, 107, 156, 157, 170, 171, 172, 173, 188], "yaml": [2, 12, 108, 109, 110, 111, 112, 113, 114, 122], "build": [3, 197, 215], "serial": [4, 6, 95, 96], "docstr": 5, "modul": [6, 196, 197], "clean": 6, "file": [7, 12, 122, 192, 201], "comment": 7, "symlink": [9, 53, 192], "download": [9, 51, 192], "spheric": [11, 16, 70, 71, 72, 73], "planar": [11, 16], "uniform": [11, 209], "gener": 11, "model": [12, 122, 124, 125, 126, 127, 128, 185, 215], "an": [12, 122], "e3sm": [12, 122, 197, 215], "ad": [12, 192], "updat": [12, 110, 197], "runtim": 12, "input": [12, 192], "partit": [12, 26], "pio": 12, "make": 12, "graph": 12, "variabl": 15, "norm": 15, "timer": 15, "visual": 16, "horizont": 16, "field": 16, "from": [16, 122, 192, 197, 206], "global": 16, "lat": 16, "lon": 16, "plot": 16, "add_test_group": 18, "add_model_config_opt": 20, "add_namelist_fil": 21, "add_streams_fil": 22, "add_yaml_fil": 23, "dynamic_model_config": [24, 140, 147, 167], "map_yaml_to_namelist": [25, 127], "process_inputs_and_output": 27, "runtime_setup": [28, 38, 192], "set_model_resourc": 29, "update_namelist_pio": 31, "add_depend": 33, "add_input_fil": 34, "add_output_fil": 35, "constrain_resourc": [36, 126, 192], "set_resourc": 39, "add_step": 42, "configur": [43, 132, 149, 160, 194, 198], "add_test_cas": 46, "__main__": 47, "main": 47, "update_cach": 48, "get_compon": 49, "polarisconfigpars": 50, "imp_r": 52, "list_cas": 54, "list_machin": 55, "list_suit": 56, "log_method_cal": 57, "icosahedralmeshstep": [58, 59, 60, 61, 62, 63, 64], "build_subdivisions_cell_width_lat_lon": 59, "get_cell_width": 60, "get_subdivis": 61, "make_jigsaw_mesh": [62, 67], "quasiuniformsphericalmeshstep": [65, 66, 67, 68, 69], "build_cell_width_lat_lon": 66, "sphericalbasestep": [70, 71, 72, 73], "save_and_plot_cell_width": 72, "make_graph_fil": 74, "ingest": 75, "parse_replac": 76, "replac": 77, "write": [78, 83, 102, 111], "check_parallel_system": 79, "get_available_cores_and_nod": 80, "run_command": 81, "set_cores_per_nod": 82, "mappingfilestep": [84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94], "dst_from_lon_lat": 85, "dst_from_mpa": 86, "dst_from_point": 87, "dst_from_proj": 88, "dst_global_lon_lat": 89, "get_remapp": 90, "src_from_lon_lat": 92, "src_from_mpa": 93, "src_from_proj": 94, "run_single_step": 95, "run_test": 96, "setup_cas": [97, 98], "read": [99, 109], "update_default": 100, "update_tre": 101, "setup_suit": 103, "compare_tim": 104, "compare_vari": 105, "globe": 106, "plot_glob": 106, "plot_horiz_field": 107, "polarisyaml": [108, 109, 110, 111], "main_mpas_to_yaml": 112, "mpas_namelist_and_streams_to_yaml": 113, "yaml_to_mpas_stream": 114, "anvil": [115, 202], "intel": [115, 117, 118, 202, 204, 205], "gnu": [115, 116, 117, 118, 120, 202, 203, 204, 207], "chicoma": [116, 203], "cpu": [116, 120, 203, 207], "chrysali": [117, 204], "compymcnodefac": [118, 205], "machin": [119, 197, 206, 215], "support": [119, 185, 197, 206, 215], "other": [119, 192, 206, 215], "perlmutt": [120, 207], "pm": 120, "ocean": [121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 186, 210], "group": [121, 189, 195, 196, 214], "baroclinic_channel": [121, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 187, 212], "global_converg": [121, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 188, 213], "cosine_bel": [121, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 188, 211, 213], "oceanmodelstep": [121, 124, 125, 126, 127, 128], "potenti": [121, 122], "energi": [121, 122], "rpe": [121, 122, 129], "vertic": [121, 122, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 209], "coordin": [121, 122, 209], "v": 122, "map": 122, "omega": 122, "mpa": [122, 186], "set": [122, 197, 215], "mpi": [122, 206], "resourc": 122, "rest": 122, "compute_cell_count": [125, 139, 166], "compute_rp": 129, "baroclinicchannel": 130, "baroclinicchanneltestcas": [131, 132, 133], "decomp_test": [134, 135, 187, 212], "decomptest": [134, 135], "default": [136, 137, 187, 212], "forward": [138, 139, 140, 165, 166, 167, 187, 188], "initial_st": [141, 142, 143, 187], "initialst": [141, 142, 143], "restart_test": [144, 145, 146, 147, 187, 212], "restarttest": [144, 145], "restart_step": [146, 147], "restartstep": [146, 147], "rpe_test": [148, 149, 150, 151, 152, 153, 187, 212], "rpetest": [148, 149, 150], "analysi": [151, 152, 153, 162, 163, 164, 188], "threads_test": [154, 155, 187], "threadstest": [154, 155], "globalconverg": 158, "cosinebel": [159, 160, 161], "rmse": 163, "init": [168, 169, 188], "vizmap": [172, 173], "grid_1d": [174, 175], "generate_1d_grid": 174, "write_1d_grid": 175, "init_vertical_coord": 176, "partial_cel": [177, 178], "alter_bottom_depth": 177, "alter_ssh": 178, "zlevel": [179, 180, 181, 182], "compute_min_max_level_cel": 179, "compute_z_level_layer_thick": 180, "compute_z_level_resting_thick": 181, "init_z_level_vertical_coord": 182, "zstar": 183, "init_z_star_vertical_coord": 183, "initi": 186, "condit": 186, "boundari": 186, "forc": 186, "baroclinic_channel_test_cas": 187, "type": [188, 209], "organ": 191, "directori": 191, "structur": 191, "attribut": [192, 194], "constructor": [192, 194], "output": 192, "copi": 192, "depend": 192, "pull": 193, "request": 193, "pr": 193, "nightli": 193, "case": [194, 196, 201, 215, 216], "overview": 196, "code": [196, 197], "style": [196, 197], "packag": 196, "share": 196, "within": 196, "quick": [197, 215], "start": [197, 215], "develop": [197, 200], "unix": 197, "shell": 197, "up": [197, 215], "repositori": 197, "beginn": 197, "conda": [197, 198, 206, 215], "environ": [197, 198, 215], "spack": [197, 215], "compil": 197, "system": 197, "albani": 197, "petsc": 197, "netlib": 197, "lapack": 197, "unknown": 197, "what": 197, "script": [197, 215], "doe": 197, "flag": 197, "activ": 197, "troubleshoot": [197, 198], "creat": 197, "onli": 197, "repo": 197, "worktre": 197, "advanc": 197, "user": [197, 200, 201, 215], "solver": 198, "error": 198, "when": 198, "proxi": 198, "lanl": 198, "mac": 198, "gethostbynam": 198, "fail": 198, "glossari": [199, 200], "": 200, "guid": 200, "compass": 200, "A": 201, "slurm": 206, "job": [206, 215], "queue": 206, "mpich": 206, "openmpi": 206, "No": 206, "forg": 206, "jupyt": 207, "notebook": 207, "remot": 207, "data": 207, "1d": 209, "grid": 209, "tanh_dz": 209, "60layerphc": 209, "100layere3smv1": 209, "3d": 209, "z": 209, "star": 209, "level": 209, "cosine_bell_cached_init": 211, "thread_test": 212, "resolut": 213, "time": 213, "core": 213, "i": 215, "yet": 215, "load": 215, "standalon": 215}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.viewcode": 1, "sphinx": 57}, "alltitles": {"Design Documents": [[0, "design-documents"]], "Template": [[1, "template"]], "Summary": [[1, "summary"]], "Requirements": [[1, "requirements"]], "Requirement: name-of-topic-here": [[1, "requirement-name-of-topic-here"]], "Algorithm Design (optional)": [[1, "algorithm-design-optional"]], "Algorithm Design: name-of-topic-here (same as Requirement)": [[1, "algorithm-design-name-of-topic-here-same-as-requirement"]], "Implementation": [[1, "implementation"]], "Implementation: name-of-topic-here (same as Requirement)": [[1, "implementation-name-of-topic-here-same-as-requirement"]], "Testing": [[1, "testing"]], "Testing and Validation: name-of-topic-here (same as Requirement)": [[1, "testing-and-validation-name-of-topic-here-same-as-requirement"]], "API reference": [[2, "api-reference"]], "Components": [[2, "components"], [190, "components"]], "polaris framework": [[2, "polaris-framework"]], "Command-line interface": [[2, "command-line-interface"], [4, "command-line-interface"]], "list": [[2, "list"]], "setup": [[2, "setup"]], "suite": [[2, "suite"]], "run": [[2, "run"]], "cache": [[2, "cache"]], "mpas_to_yaml": [[2, "mpas-to-yaml"], [4, "mpas-to-yaml"]], "Base Classes": [[2, "base-classes"]], "Component": [[2, "component"]], "TestGroup": [[2, "testgroup"]], "TestCase": [[2, "testcase"]], "Step": [[2, "step"]], "ModelStep": [[2, "modelstep"]], "components": [[2, "id1"]], "config": [[2, "config"]], "io": [[2, "io"]], "logging": [[2, "logging"]], "mesh": [[2, "mesh"], [188, "mesh"]], "model_step": [[2, "model-step"]], "namelist": [[2, "namelist"]], "parallel": [[2, "parallel"]], "provenance": [[2, "provenance"]], "remap": [[2, "remap"]], "streams": [[2, "streams"]], "validate": [[2, "validate"]], "viz": [[2, "viz"], [188, "viz"]], "yaml": [[2, "yaml"]], "Building the Documentation": [[3, "building-the-documentation"]], "polaris list": [[4, "polaris-list"]], "polaris setup": [[4, "polaris-setup"]], "polaris suite": [[4, "polaris-suite"]], "polaris serial": [[4, "polaris-serial"]], "polaris cache": [[4, "polaris-cache"]], "Documentation": [[5, "documentation"]], "Docstrings": [[5, "docstrings"]], "Modules for polaris commands": [[6, "modules-for-polaris-commands"]], "list module": [[6, "list-module"]], "setup module": [[6, "setup-module"]], "clean module": [[6, "clean-module"]], "suite module": [[6, "suite-module"]], "run.serial module": [[6, "run-serial-module"]], "cache module": [[6, "cache-module"]], "Config files": [[7, "config-files"]], "Comments in config files": [[7, "comments-in-config-files"]], "Framework": [[8, "framework"], [208, "framework"]], "IO": [[9, "io"]], "Symlinks": [[9, "symlinks"]], "Download": [[9, "download"]], "Logging": [[10, "logging"]], "Mesh": [[11, "mesh"]], "Spherical Meshes": [[11, "spherical-meshes"]], "Planar Meshes": [[11, "planar-meshes"]], "Uniform planar meshes": [[11, "uniform-planar-meshes"]], "General planar meshes": [[11, "general-planar-meshes"]], "Model": [[12, "model"], [122, "model"]], "Running an E3SM component": [[12, "running-an-e3sm-component"], [122, "running-an-e3sm-component"]], "Adding yaml, namelist and streams files": [[12, "adding-yaml-namelist-and-streams-files"]], "Adding a yaml file": [[12, "adding-a-yaml-file"]], "Adding a namelist file": [[12, "adding-a-namelist-file"]], "Adding model config options": [[12, "adding-model-config-options"]], "Updating namelist or yaml options at runtime": [[12, "updating-namelist-or-yaml-options-at-runtime"]], "Adding a streams file": [[12, "adding-a-streams-file"]], "Adding a template streams file": [[12, "adding-a-template-streams-file"]], "Updating a streams file at runtime": [[12, "updating-a-streams-file-at-runtime"]], "Adding E3SM component as an input": [[12, "adding-e3sm-component-as-an-input"]], "Partitioning the mesh": [[12, "partitioning-the-mesh"]], "Updating PIO namelist options": [[12, "updating-pio-namelist-options"]], "Making a graph file": [[12, "making-a-graph-file"]], "Provenance": [[13, "provenance"]], "Remapping": [[14, "remapping"]], "Validation": [[15, "validation"]], "Validating variables": [[15, "validating-variables"]], "Norms": [[15, "norms"]], "Validating timers": [[15, "validating-timers"]], "Visualization": [[16, "visualization"]], "horizontal fields from planar meshes": [[16, "horizontal-fields-from-planar-meshes"]], "global lat/lon plots from spherical meshes": [[16, "global-lat-lon-plots-from-spherical-meshes"]], "polaris.Component": [[17, "polaris-component"]], "polaris.Component.add_test_group": [[18, "polaris-component-add-test-group"]], "polaris.ModelStep": [[19, "polaris-modelstep"]], "polaris.ModelStep.add_model_config_options": [[20, "polaris-modelstep-add-model-config-options"]], "polaris.ModelStep.add_namelist_file": [[21, "polaris-modelstep-add-namelist-file"]], "polaris.ModelStep.add_streams_file": [[22, "polaris-modelstep-add-streams-file"]], "polaris.ModelStep.add_yaml_file": [[23, "polaris-modelstep-add-yaml-file"]], "polaris.ModelStep.dynamic_model_config": [[24, "polaris-modelstep-dynamic-model-config"]], "polaris.ModelStep.map_yaml_to_namelist": [[25, "polaris-modelstep-map-yaml-to-namelist"]], "polaris.ModelStep.partition": [[26, "polaris-modelstep-partition"]], "polaris.ModelStep.process_inputs_and_outputs": [[27, "polaris-modelstep-process-inputs-and-outputs"]], "polaris.ModelStep.runtime_setup": [[28, "polaris-modelstep-runtime-setup"]], "polaris.ModelStep.set_model_resources": [[29, "polaris-modelstep-set-model-resources"]], "polaris.ModelStep.setup": [[30, "polaris-modelstep-setup"]], "polaris.ModelStep.update_namelist_pio": [[31, "polaris-modelstep-update-namelist-pio"]], "polaris.Step": [[32, "polaris-step"]], "polaris.Step.add_dependency": [[33, "polaris-step-add-dependency"]], "polaris.Step.add_input_file": [[34, "polaris-step-add-input-file"]], "polaris.Step.add_output_file": [[35, "polaris-step-add-output-file"]], "polaris.Step.constrain_resources": [[36, "polaris-step-constrain-resources"]], "polaris.Step.run": [[37, "polaris-step-run"]], "polaris.Step.runtime_setup": [[38, "polaris-step-runtime-setup"]], "polaris.Step.set_resources": [[39, "polaris-step-set-resources"]], "polaris.Step.setup": [[40, "polaris-step-setup"]], "polaris.TestCase": [[41, "polaris-testcase"]], "polaris.TestCase.add_step": [[42, "polaris-testcase-add-step"]], "polaris.TestCase.configure": [[43, "polaris-testcase-configure"]], "polaris.TestCase.validate": [[44, "polaris-testcase-validate"]], "polaris.TestGroup": [[45, "polaris-testgroup"]], "polaris.TestGroup.add_test_case": [[46, "polaris-testgroup-add-test-case"]], "polaris.__main__.main": [[47, "polaris-main-main"]], "polaris.cache.update_cache": [[48, "polaris-cache-update-cache"]], "polaris.components.get_components": [[49, "polaris-components-get-components"]], "polaris.config.PolarisConfigParser": [[50, "polaris-config-polarisconfigparser"]], "polaris.io.download": [[51, "polaris-io-download"]], "polaris.io.imp_res": [[52, "module-polaris.io.imp_res"]], "polaris.io.symlink": [[53, "polaris-io-symlink"]], "polaris.list.list_cases": [[54, "polaris-list-list-cases"]], "polaris.list.list_machines": [[55, "polaris-list-list-machines"]], "polaris.list.list_suites": [[56, "polaris-list-list-suites"]], "polaris.logging.log_method_call": [[57, "polaris-logging-log-method-call"]], "polaris.mesh.IcosahedralMeshStep": [[58, "polaris-mesh-icosahedralmeshstep"]], "polaris.mesh.IcosahedralMeshStep.build_subdivisions_cell_width_lat_lon": [[59, "polaris-mesh-icosahedralmeshstep-build-subdivisions-cell-width-lat-lon"]], "polaris.mesh.IcosahedralMeshStep.get_cell_width": [[60, "polaris-mesh-icosahedralmeshstep-get-cell-width"]], "polaris.mesh.IcosahedralMeshStep.get_subdivisions": [[61, "polaris-mesh-icosahedralmeshstep-get-subdivisions"]], "polaris.mesh.IcosahedralMeshStep.make_jigsaw_mesh": [[62, "polaris-mesh-icosahedralmeshstep-make-jigsaw-mesh"]], "polaris.mesh.IcosahedralMeshStep.run": [[63, "polaris-mesh-icosahedralmeshstep-run"]], "polaris.mesh.IcosahedralMeshStep.setup": [[64, "polaris-mesh-icosahedralmeshstep-setup"]], "polaris.mesh.QuasiUniformSphericalMeshStep": [[65, "polaris-mesh-quasiuniformsphericalmeshstep"]], "polaris.mesh.QuasiUniformSphericalMeshStep.build_cell_width_lat_lon": [[66, "polaris-mesh-quasiuniformsphericalmeshstep-build-cell-width-lat-lon"]], "polaris.mesh.QuasiUniformSphericalMeshStep.make_jigsaw_mesh": [[67, "polaris-mesh-quasiuniformsphericalmeshstep-make-jigsaw-mesh"]], "polaris.mesh.QuasiUniformSphericalMeshStep.run": [[68, "polaris-mesh-quasiuniformsphericalmeshstep-run"]], "polaris.mesh.QuasiUniformSphericalMeshStep.setup": [[69, "polaris-mesh-quasiuniformsphericalmeshstep-setup"]], "polaris.mesh.spherical.SphericalBaseStep": [[70, "polaris-mesh-spherical-sphericalbasestep"]], "polaris.mesh.spherical.SphericalBaseStep.run": [[71, "polaris-mesh-spherical-sphericalbasestep-run"]], "polaris.mesh.spherical.SphericalBaseStep.save_and_plot_cell_width": [[72, "polaris-mesh-spherical-sphericalbasestep-save-and-plot-cell-width"]], "polaris.mesh.spherical.SphericalBaseStep.setup": [[73, "polaris-mesh-spherical-sphericalbasestep-setup"]], "polaris.model_step.make_graph_file": [[74, "polaris-model-step-make-graph-file"]], "polaris.namelist.ingest": [[75, "polaris-namelist-ingest"]], "polaris.namelist.parse_replacements": [[76, "polaris-namelist-parse-replacements"]], "polaris.namelist.replace": [[77, "polaris-namelist-replace"]], "polaris.namelist.write": [[78, "polaris-namelist-write"]], "polaris.parallel.check_parallel_system": [[79, "polaris-parallel-check-parallel-system"]], "polaris.parallel.get_available_cores_and_nodes": [[80, "polaris-parallel-get-available-cores-and-nodes"]], "polaris.parallel.run_command": [[81, "polaris-parallel-run-command"]], "polaris.parallel.set_cores_per_node": [[82, "polaris-parallel-set-cores-per-node"]], "polaris.provenance.write": [[83, "polaris-provenance-write"]], "polaris.remap.MappingFileStep": [[84, "polaris-remap-mappingfilestep"]], "polaris.remap.MappingFileStep.dst_from_lon_lat": [[85, "polaris-remap-mappingfilestep-dst-from-lon-lat"]], "polaris.remap.MappingFileStep.dst_from_mpas": [[86, "polaris-remap-mappingfilestep-dst-from-mpas"]], "polaris.remap.MappingFileStep.dst_from_points": [[87, "polaris-remap-mappingfilestep-dst-from-points"]], "polaris.remap.MappingFileStep.dst_from_proj": [[88, "polaris-remap-mappingfilestep-dst-from-proj"]], "polaris.remap.MappingFileStep.dst_global_lon_lat": [[89, "polaris-remap-mappingfilestep-dst-global-lon-lat"]], "polaris.remap.MappingFileStep.get_remapper": [[90, "polaris-remap-mappingfilestep-get-remapper"]], "polaris.remap.MappingFileStep.run": [[91, "polaris-remap-mappingfilestep-run"]], "polaris.remap.MappingFileStep.src_from_lon_lat": [[92, "polaris-remap-mappingfilestep-src-from-lon-lat"]], "polaris.remap.MappingFileStep.src_from_mpas": [[93, "polaris-remap-mappingfilestep-src-from-mpas"]], "polaris.remap.MappingFileStep.src_from_proj": [[94, "polaris-remap-mappingfilestep-src-from-proj"]], "polaris.run.serial.run_single_step": [[95, "polaris-run-serial-run-single-step"]], "polaris.run.serial.run_tests": [[96, "polaris-run-serial-run-tests"]], "polaris.setup.setup_case": [[97, "polaris-setup-setup-case"]], "polaris.setup.setup_cases": [[98, "polaris-setup-setup-cases"]], "polaris.streams.read": [[99, "polaris-streams-read"]], "polaris.streams.update_defaults": [[100, "polaris-streams-update-defaults"]], "polaris.streams.update_tree": [[101, "polaris-streams-update-tree"]], "polaris.streams.write": [[102, "polaris-streams-write"]], "polaris.suite.setup_suite": [[103, "polaris-suite-setup-suite"]], "polaris.validate.compare_timers": [[104, "polaris-validate-compare-timers"]], "polaris.validate.compare_variables": [[105, "polaris-validate-compare-variables"]], "polaris.viz.globe.plot_global": [[106, "polaris-viz-globe-plot-global"]], "polaris.viz.plot_horiz_field": [[107, "polaris-viz-plot-horiz-field"]], "polaris.yaml.PolarisYaml": [[108, "polaris-yaml-polarisyaml"]], "polaris.yaml.PolarisYaml.read": [[109, "polaris-yaml-polarisyaml-read"]], "polaris.yaml.PolarisYaml.update": [[110, "polaris-yaml-polarisyaml-update"]], "polaris.yaml.PolarisYaml.write": [[111, "polaris-yaml-polarisyaml-write"]], "polaris.yaml.main_mpas_to_yaml": [[112, "polaris-yaml-main-mpas-to-yaml"]], "polaris.yaml.mpas_namelist_and_streams_to_yaml": [[113, "polaris-yaml-mpas-namelist-and-streams-to-yaml"]], "polaris.yaml.yaml_to_mpas_streams": [[114, "polaris-yaml-yaml-to-mpas-streams"]], "Anvil": [[115, "anvil"], [202, "anvil"]], "intel": [[115, "intel"], [117, "intel"], [118, "intel"]], "gnu": [[115, "gnu"], [117, "gnu"], [118, "gnu"]], "Chicoma": [[116, "chicoma"], [203, "chicoma"]], "chicoma-cpu, gnu": [[116, "chicoma-cpu-gnu"]], "Chrysalis": [[117, "chrysalis"], [204, "chrysalis"]], "CompyMcNodeFace": [[118, "compymcnodeface"], [205, "compymcnodeface"]], "Machines": [[119, "machines"], [206, "machines"]], "Supported Machines": [[119, "supported-machines"], [206, "supported-machines"]], "Other Machines": [[119, "other-machines"], [206, "other-machines"]], "Perlmutter": [[120, "perlmutter"], [207, "perlmutter"]], "pm-cpu, gnu": [[120, "pm-cpu-gnu"]], "ocean": [[121, "ocean"]], "Test Groups": [[121, "test-groups"], [195, "test-groups"]], "baroclinic_channel": [[121, "baroclinic-channel"], [187, "baroclinic-channel"], [212, "baroclinic-channel"]], "global_convergence": [[121, "global-convergence"], [188, "global-convergence"], [213, "global-convergence"]], "cosine_bell": [[121, "cosine-bell"], [188, "cosine-bell"], [213, "cosine-bell"]], "Ocean Framework": [[121, "ocean-framework"]], "OceanModelStep": [[121, "oceanmodelstep"]], "Reference Potential Energy (RPE)": [[121, "reference-potential-energy-rpe"]], "Vertical coordinates": [[121, "vertical-coordinates"]], "Ocean framework": [[122, "ocean-framework"]], "YAML files vs. namelists and streams": [[122, "yaml-files-vs-namelists-and-streams"]], "Mapping from Omega to MPAS-Ocean config options": [[122, "mapping-from-omega-to-mpas-ocean-config-options"]], "Setting MPI resources": [[122, "setting-mpi-resources"]], "Model config options and streams": [[122, "model-config-options-and-streams"]], "Vertical coordinate": [[122, "vertical-coordinate"], [209, "vertical-coordinate"]], "reference (resting) potential energy (RPE)": [[122, "reference-resting-potential-energy-rpe"]], "polaris.ocean.Ocean": [[123, "polaris-ocean-ocean"]], "polaris.ocean.model.OceanModelStep": [[124, "polaris-ocean-model-oceanmodelstep"]], "polaris.ocean.model.OceanModelStep.compute_cell_count": [[125, "polaris-ocean-model-oceanmodelstep-compute-cell-count"]], "polaris.ocean.model.OceanModelStep.constrain_resources": [[126, "polaris-ocean-model-oceanmodelstep-constrain-resources"]], "polaris.ocean.model.OceanModelStep.map_yaml_to_namelist": [[127, "polaris-ocean-model-oceanmodelstep-map-yaml-to-namelist"]], "polaris.ocean.model.OceanModelStep.setup": [[128, "polaris-ocean-model-oceanmodelstep-setup"]], "polaris.ocean.rpe.compute_rpe": [[129, "polaris-ocean-rpe-compute-rpe"]], "polaris.ocean.tests.baroclinic_channel.BaroclinicChannel": [[130, "polaris-ocean-tests-baroclinic-channel-baroclinicchannel"]], "polaris.ocean.tests.baroclinic_channel.BaroclinicChannelTestCase": [[131, "polaris-ocean-tests-baroclinic-channel-baroclinicchanneltestcase"]], "polaris.ocean.tests.baroclinic_channel.BaroclinicChannelTestCase.configure": [[132, "polaris-ocean-tests-baroclinic-channel-baroclinicchanneltestcase-configure"]], "polaris.ocean.tests.baroclinic_channel.BaroclinicChannelTestCase.validate": [[133, "polaris-ocean-tests-baroclinic-channel-baroclinicchanneltestcase-validate"]], "polaris.ocean.tests.baroclinic_channel.decomp_test.DecompTest": [[134, "polaris-ocean-tests-baroclinic-channel-decomp-test-decomptest"]], "polaris.ocean.tests.baroclinic_channel.decomp_test.DecompTest.validate": [[135, "polaris-ocean-tests-baroclinic-channel-decomp-test-decomptest-validate"]], "polaris.ocean.tests.baroclinic_channel.default.Default": [[136, "polaris-ocean-tests-baroclinic-channel-default-default"]], "polaris.ocean.tests.baroclinic_channel.default.Default.validate": [[137, "polaris-ocean-tests-baroclinic-channel-default-default-validate"]], "polaris.ocean.tests.baroclinic_channel.forward.Forward": [[138, "polaris-ocean-tests-baroclinic-channel-forward-forward"]], "polaris.ocean.tests.baroclinic_channel.forward.Forward.compute_cell_count": [[139, "polaris-ocean-tests-baroclinic-channel-forward-forward-compute-cell-count"]], "polaris.ocean.tests.baroclinic_channel.forward.Forward.dynamic_model_config": [[140, "polaris-ocean-tests-baroclinic-channel-forward-forward-dynamic-model-config"]], "polaris.ocean.tests.baroclinic_channel.initial_state.InitialState": [[141, "polaris-ocean-tests-baroclinic-channel-initial-state-initialstate"]], "polaris.ocean.tests.baroclinic_channel.initial_state.InitialState.run": [[142, "polaris-ocean-tests-baroclinic-channel-initial-state-initialstate-run"]], "polaris.ocean.tests.baroclinic_channel.initial_state.InitialState.setup": [[143, "polaris-ocean-tests-baroclinic-channel-initial-state-initialstate-setup"]], "polaris.ocean.tests.baroclinic_channel.restart_test.RestartTest": [[144, "polaris-ocean-tests-baroclinic-channel-restart-test-restarttest"]], "polaris.ocean.tests.baroclinic_channel.restart_test.RestartTest.validate": [[145, "polaris-ocean-tests-baroclinic-channel-restart-test-restarttest-validate"]], "polaris.ocean.tests.baroclinic_channel.restart_test.restart_step.RestartStep": [[146, "polaris-ocean-tests-baroclinic-channel-restart-test-restart-step-restartstep"]], "polaris.ocean.tests.baroclinic_channel.restart_test.restart_step.RestartStep.dynamic_model_config": [[147, "polaris-ocean-tests-baroclinic-channel-restart-test-restart-step-restartstep-dynamic-model-config"]], "polaris.ocean.tests.baroclinic_channel.rpe_test.RpeTest": [[148, "polaris-ocean-tests-baroclinic-channel-rpe-test-rpetest"]], "polaris.ocean.tests.baroclinic_channel.rpe_test.RpeTest.configure": [[149, "polaris-ocean-tests-baroclinic-channel-rpe-test-rpetest-configure"]], "polaris.ocean.tests.baroclinic_channel.rpe_test.RpeTest.validate": [[150, "polaris-ocean-tests-baroclinic-channel-rpe-test-rpetest-validate"]], "polaris.ocean.tests.baroclinic_channel.rpe_test.analysis.Analysis": [[151, "polaris-ocean-tests-baroclinic-channel-rpe-test-analysis-analysis"]], "polaris.ocean.tests.baroclinic_channel.rpe_test.analysis.Analysis.run": [[152, "polaris-ocean-tests-baroclinic-channel-rpe-test-analysis-analysis-run"]], "polaris.ocean.tests.baroclinic_channel.rpe_test.analysis.Analysis.setup": [[153, "polaris-ocean-tests-baroclinic-channel-rpe-test-analysis-analysis-setup"]], "polaris.ocean.tests.baroclinic_channel.threads_test.ThreadsTest": [[154, "polaris-ocean-tests-baroclinic-channel-threads-test-threadstest"]], "polaris.ocean.tests.baroclinic_channel.threads_test.ThreadsTest.validate": [[155, "polaris-ocean-tests-baroclinic-channel-threads-test-threadstest-validate"]], "polaris.ocean.tests.baroclinic_channel.viz.Viz": [[156, "polaris-ocean-tests-baroclinic-channel-viz-viz"]], "polaris.ocean.tests.baroclinic_channel.viz.Viz.run": [[157, "polaris-ocean-tests-baroclinic-channel-viz-viz-run"]], "polaris.ocean.tests.global_convergence.GlobalConvergence": [[158, "polaris-ocean-tests-global-convergence-globalconvergence"]], "polaris.ocean.tests.global_convergence.cosine_bell.CosineBell": [[159, "polaris-ocean-tests-global-convergence-cosine-bell-cosinebell"]], "polaris.ocean.tests.global_convergence.cosine_bell.CosineBell.configure": [[160, "polaris-ocean-tests-global-convergence-cosine-bell-cosinebell-configure"]], "polaris.ocean.tests.global_convergence.cosine_bell.CosineBell.validate": [[161, "polaris-ocean-tests-global-convergence-cosine-bell-cosinebell-validate"]], "polaris.ocean.tests.global_convergence.cosine_bell.analysis.Analysis": [[162, "polaris-ocean-tests-global-convergence-cosine-bell-analysis-analysis"]], "polaris.ocean.tests.global_convergence.cosine_bell.analysis.Analysis.rmse": [[163, "polaris-ocean-tests-global-convergence-cosine-bell-analysis-analysis-rmse"]], "polaris.ocean.tests.global_convergence.cosine_bell.analysis.Analysis.run": [[164, "polaris-ocean-tests-global-convergence-cosine-bell-analysis-analysis-run"]], "polaris.ocean.tests.global_convergence.cosine_bell.forward.Forward": [[165, "polaris-ocean-tests-global-convergence-cosine-bell-forward-forward"]], "polaris.ocean.tests.global_convergence.cosine_bell.forward.Forward.compute_cell_count": [[166, "polaris-ocean-tests-global-convergence-cosine-bell-forward-forward-compute-cell-count"]], "polaris.ocean.tests.global_convergence.cosine_bell.forward.Forward.dynamic_model_config": [[167, "polaris-ocean-tests-global-convergence-cosine-bell-forward-forward-dynamic-model-config"]], "polaris.ocean.tests.global_convergence.cosine_bell.init.Init": [[168, "polaris-ocean-tests-global-convergence-cosine-bell-init-init"]], "polaris.ocean.tests.global_convergence.cosine_bell.init.Init.run": [[169, "polaris-ocean-tests-global-convergence-cosine-bell-init-init-run"]], "polaris.ocean.tests.global_convergence.cosine_bell.viz.Viz": [[170, "polaris-ocean-tests-global-convergence-cosine-bell-viz-viz"]], "polaris.ocean.tests.global_convergence.cosine_bell.viz.Viz.run": [[171, "polaris-ocean-tests-global-convergence-cosine-bell-viz-viz-run"]], "polaris.ocean.tests.global_convergence.cosine_bell.viz.VizMap": [[172, "polaris-ocean-tests-global-convergence-cosine-bell-viz-vizmap"]], "polaris.ocean.tests.global_convergence.cosine_bell.viz.VizMap.run": [[173, "polaris-ocean-tests-global-convergence-cosine-bell-viz-vizmap-run"]], "polaris.ocean.vertical.grid_1d.generate_1d_grid": [[174, "polaris-ocean-vertical-grid-1d-generate-1d-grid"]], "polaris.ocean.vertical.grid_1d.write_1d_grid": [[175, "polaris-ocean-vertical-grid-1d-write-1d-grid"]], "polaris.ocean.vertical.init_vertical_coord": [[176, "polaris-ocean-vertical-init-vertical-coord"]], "polaris.ocean.vertical.partial_cells.alter_bottom_depth": [[177, "polaris-ocean-vertical-partial-cells-alter-bottom-depth"]], "polaris.ocean.vertical.partial_cells.alter_ssh": [[178, "polaris-ocean-vertical-partial-cells-alter-ssh"]], "polaris.ocean.vertical.zlevel.compute_min_max_level_cell": [[179, "polaris-ocean-vertical-zlevel-compute-min-max-level-cell"]], "polaris.ocean.vertical.zlevel.compute_z_level_layer_thickness": [[180, "polaris-ocean-vertical-zlevel-compute-z-level-layer-thickness"]], "polaris.ocean.vertical.zlevel.compute_z_level_resting_thickness": [[181, "polaris-ocean-vertical-zlevel-compute-z-level-resting-thickness"]], "polaris.ocean.vertical.zlevel.init_z_level_vertical_coord": [[182, "polaris-ocean-vertical-zlevel-init-z-level-vertical-coord"]], "polaris.ocean.vertical.zstar.init_z_star_vertical_coord": [[183, "polaris-ocean-vertical-zstar-init-z-star-vertical-coord"]], "Ocean component": [[184, "ocean-component"], [210, "ocean-component"]], "Models": [[185, "models"]], "Supported Models": [[185, "supported-models"]], "MPAS-Ocean": [[186, "mpas-ocean"]], "Initial conditions": [[186, "initial-conditions"]], "Boundary conditions": [[186, "boundary-conditions"]], "Forcing": [[186, "forcing"]], "framework": [[187, "framework"]], "baroclinic_channel_test_case": [[187, "baroclinic-channel-test-case"]], "initial_state": [[187, "initial-state"]], "forward": [[187, "forward"], [188, "forward"]], "default": [[187, "default"], [212, "default"]], "decomp_test": [[187, "decomp-test"], [212, "decomp-test"]], "restart_test": [[187, "restart-test"], [212, "restart-test"]], "threads_test": [[187, "threads-test"]], "rpe_test": [[187, "rpe-test"], [212, "rpe-test"]], "mesh types": [[188, "mesh-types"]], "init": [[188, "init"]], "analysis": [[188, "analysis"]], "Test groups": [[189, "test-groups"], [214, "test-groups"]], "Organization of Tests": [[191, "organization-of-tests"]], "Directory structure": [[191, "directory-structure"]], "Steps": [[192, "steps"]], "Step attributes": [[192, "step-attributes"]], "constructor": [[192, "constructor"], [194, "constructor"]], "constrain_resources()": [[192, "constrain-resources"]], "setup()": [[192, "setup"]], "runtime_setup()": [[192, "runtime-setup"]], "run()": [[192, "run"]], "inputs and outputs": [[192, "inputs-and-outputs"]], "Input files": [[192, "input-files"]], "Symlinks to input files": [[192, "symlinks-to-input-files"]], "Symlink to input files from polaris": [[192, "symlink-to-input-files-from-polaris"]], "Downloading and symlinking input files": [[192, "downloading-and-symlinking-input-files"]], "Copying input files": [[192, "copying-input-files"]], "Output files": [[192, "output-files"]], "Cached output files": [[192, "cached-output-files"]], "Adding other steps as dependencies": [[192, "adding-other-steps-as-dependencies"]], "Test Suites": [[193, "test-suites"], [215, "test-suites"], [217, "test-suites"]], "Pull-Request (PR) suite": [[193, "pull-request-pr-suite"]], "Nightly suite": [[193, "nightly-suite"]], "Test cases": [[194, "test-cases"]], "TestCase attributes": [[194, "testcase-attributes"]], "configure()": [[194, "configure"]], "validate()": [[194, "validate"]], "Overview": [[196, "overview"]], "Code Style": [[196, "code-style"]], "Packages and Modules": [[196, "packages-and-modules"]], "Packages": [[196, "packages"]], "Modules": [[196, "modules"]], "Classes": [[196, "classes"]], "Code sharing": [[196, "code-sharing"]], "\u2026in the polaris framework": [[196, "in-the-polaris-framework"]], "\u2026within a component": [[196, "within-a-component"]], "\u2026within a test group": [[196, "within-a-test-group"]], "\u2026within a test case": [[196, "within-a-test-case"]], "Quick Start for Developers": [[197, "quick-start-for-developers"]], "Unix Shell": [[197, "unix-shell"]], "Set up a polaris repository: for beginners": [[197, "set-up-a-polaris-repository-for-beginners"]], "polaris conda environment, spack environment, compilers and system modules": [[197, "polaris-conda-environment-spack-environment-compilers-and-system-modules"]], "Supported machines": [[197, "supported-machines"]], "Environments with Albany": [[197, "environments-with-albany"]], "Environments with PETSc and Netlib-LAPACK": [[197, "environments-with-petsc-and-netlib-lapack"]], "Unknown machines": [[197, "unknown-machines"]], "What the script does": [[197, "what-the-script-does"]], "Optional flags": [[197, "optional-flags"]], "Activating the environment": [[197, "activating-the-environment"]], "Troubleshooting": [[197, "troubleshooting"], [198, "troubleshooting"]], "Creating/updating only the polaris environment": [[197, "creating-updating-only-the-polaris-environment"]], "Building E3SM components": [[197, "building-e3sm-components"]], "Running polaris from the repo": [[197, "running-polaris-from-the-repo"]], "Code style for polaris": [[197, "code-style-for-polaris"]], "Set up a polaris repository with worktrees: for advanced users": [[197, "set-up-a-polaris-repository-with-worktrees-for-advanced-users"]], "Solver errors when configuring conda environment": [[198, "solver-errors-when-configuring-conda-environment"]], "Proxy on LANL Macs": [[198, "proxy-on-lanl-macs"]], "gethostbyname failed": [[198, "gethostbyname-failed"]], "Glossary": [[199, "glossary"], [200, null]], "Polaris": [[200, "polaris"]], "User's guide": [[200, null]], "Developer's guide": [[200, null]], "Compass": [[200, "compass"]], "Config Files": [[201, "config-files"]], "A \u201cuser\u201d config file": [[201, "a-user-config-file"]], "Test-case config files": [[201, "test-case-config-files"]], "config options": [[202, "config-options"], [203, "config-options"], [204, "config-options"], [205, "config-options"], [206, "config-options"], [207, "config-options"], [212, "config-options"], [213, "config-options"]], "Intel on Anvil": [[202, "intel-on-anvil"]], "Gnu on Anvil": [[202, "gnu-on-anvil"]], "Chicoma-CPU": [[203, "chicoma-cpu"]], "Gnu on Chicoma-CPU": [[203, "gnu-on-chicoma-cpu"]], "Intel on Chrysalis": [[204, "intel-on-chrysalis"]], "Gnu on Chrysalis": [[204, "gnu-on-chrysalis"]], "Intel on CompyMcNodeFace": [[205, "intel-on-compymcnodeface"]], "Slurm job queueing": [[206, "slurm-job-queueing"]], "MPICH": [[206, "mpich"]], "OpenMPI": [[206, "openmpi"]], "No MPI from conda-forge": [[206, "no-mpi-from-conda-forge"]], "Perlmutter-CPU": [[207, "perlmutter-cpu"]], "Gnu on Perlmutter-CPU": [[207, "gnu-on-perlmutter-cpu"]], "Jupyter notebook on remote data": [[207, "jupyter-notebook-on-remote-data"]], "1D Grid type": [[209, "d-grid-type"]], "uniform": [[209, "uniform"]], "tanh_dz": [[209, "tanh-dz"]], "60layerPHC": [[209, "layerphc"]], "100layerE3SMv1": [[209, "layere3smv1"]], "3D vertical coordinates": [[209, "d-vertical-coordinates"]], "z-star": [[209, "z-star"]], "z-level": [[209, "z-level"]], "Test suites": [[211, "test-suites"]], "cosine_bell and cosine_bell_cached_init test suite": [[211, "cosine-bell-and-cosine-bell-cached-init-test-suite"]], "thread_test": [[212, "thread-test"]], "resolutions": [[213, "resolutions"]], "time step": [[213, "time-step"]], "cores": [[213, "cores"]], "Quick Start for Users": [[215, "quick-start-for-users"]], "Quick Start for Users is not yet valid": [[215, null]], "Loading polaris conda and spack environments": [[215, "loading-polaris-conda-and-spack-environments"]], "E3SM supported machines": [[215, "e3sm-supported-machines"]], "Other machines": [[215, "other-machines"]], "Building supported E3SM components as standalone models": [[215, "building-supported-e3sm-components-as-standalone-models"]], "Setting up test cases": [[215, "setting-up-test-cases"]], "Running a test case": [[215, "running-a-test-case"]], "Running with a job script": [[215, "running-with-a-job-script"]], "Test Cases": [[216, "test-cases"]]}, "indexentries": {"component (class in polaris)": [[17, "polaris.Component"]], "__init__() (polaris.component method)": [[17, "polaris.Component.__init__"]], "add_test_group() (polaris.component method)": [[18, "polaris.Component.add_test_group"]], "modelstep (class in polaris)": [[19, "polaris.ModelStep"]], "__init__() (polaris.modelstep method)": [[19, "polaris.ModelStep.__init__"]], "add_model_config_options() (polaris.modelstep method)": [[20, "polaris.ModelStep.add_model_config_options"]], "add_namelist_file() (polaris.modelstep method)": [[21, "polaris.ModelStep.add_namelist_file"]], "add_streams_file() (polaris.modelstep method)": [[22, "polaris.ModelStep.add_streams_file"]], "add_yaml_file() (polaris.modelstep method)": [[23, "polaris.ModelStep.add_yaml_file"]], "dynamic_model_config() (polaris.modelstep method)": [[24, "polaris.ModelStep.dynamic_model_config"]], "map_yaml_to_namelist() (polaris.modelstep method)": [[25, "polaris.ModelStep.map_yaml_to_namelist"]], "partition() (polaris.modelstep method)": [[26, "polaris.ModelStep.partition"]], "process_inputs_and_outputs() (polaris.modelstep method)": [[27, "polaris.ModelStep.process_inputs_and_outputs"]], "runtime_setup() (polaris.modelstep method)": [[28, "polaris.ModelStep.runtime_setup"]], "set_model_resources() (polaris.modelstep method)": [[29, "polaris.ModelStep.set_model_resources"]], "setup() (polaris.modelstep method)": [[30, "polaris.ModelStep.setup"]], "update_namelist_pio() (polaris.modelstep method)": [[31, "polaris.ModelStep.update_namelist_pio"]], "step (class in polaris)": [[32, "polaris.Step"]], "__init__() (polaris.step method)": [[32, "polaris.Step.__init__"]], "add_dependency() (polaris.step method)": [[33, "polaris.Step.add_dependency"]], "add_input_file() (polaris.step method)": [[34, "polaris.Step.add_input_file"]], "add_output_file() (polaris.step method)": [[35, "polaris.Step.add_output_file"]], "constrain_resources() (polaris.step method)": [[36, "polaris.Step.constrain_resources"]], "run() (polaris.step method)": [[37, "polaris.Step.run"]], "runtime_setup() (polaris.step method)": [[38, "polaris.Step.runtime_setup"]], "set_resources() (polaris.step method)": [[39, "polaris.Step.set_resources"]], "setup() (polaris.step method)": [[40, "polaris.Step.setup"]], "testcase (class in polaris)": [[41, "polaris.TestCase"]], "__init__() (polaris.testcase method)": [[41, "polaris.TestCase.__init__"]], "add_step() (polaris.testcase method)": [[42, "polaris.TestCase.add_step"]], "configure() (polaris.testcase method)": [[43, "polaris.TestCase.configure"]], "validate() (polaris.testcase method)": [[44, "polaris.TestCase.validate"]], "testgroup (class in polaris)": [[45, "polaris.TestGroup"]], "__init__() (polaris.testgroup method)": [[45, "polaris.TestGroup.__init__"]], "add_test_case() (polaris.testgroup method)": [[46, "polaris.TestGroup.add_test_case"]], "main() (in module polaris.__main__)": [[47, "polaris.__main__.main"]], "update_cache() (in module polaris.cache)": [[48, "polaris.cache.update_cache"]], "get_components() (in module polaris.components)": [[49, "polaris.components.get_components"]], "polarisconfigparser (class in polaris.config)": [[50, "polaris.config.PolarisConfigParser"]], "__init__() (polaris.config.polarisconfigparser method)": [[50, "polaris.config.PolarisConfigParser.__init__"]], "download() (in module polaris.io)": [[51, "polaris.io.download"]], "module": [[52, "module-polaris.io.imp_res"]], "polaris.io.imp_res": [[52, "module-polaris.io.imp_res"]], "symlink() (in module polaris.io)": [[53, "polaris.io.symlink"]], "list_cases() (in module polaris.list)": [[54, "polaris.list.list_cases"]], "list_machines() (in module polaris.list)": [[55, "polaris.list.list_machines"]], "list_suites() (in module polaris.list)": [[56, "polaris.list.list_suites"]], "log_method_call() (in module polaris.logging)": [[57, "polaris.logging.log_method_call"]], "icosahedralmeshstep (class in polaris.mesh)": [[58, "polaris.mesh.IcosahedralMeshStep"]], "__init__() (polaris.mesh.icosahedralmeshstep method)": [[58, "polaris.mesh.IcosahedralMeshStep.__init__"]], "build_subdivisions_cell_width_lat_lon() (polaris.mesh.icosahedralmeshstep method)": [[59, "polaris.mesh.IcosahedralMeshStep.build_subdivisions_cell_width_lat_lon"]], "get_cell_width() (polaris.mesh.icosahedralmeshstep static method)": [[60, "polaris.mesh.IcosahedralMeshStep.get_cell_width"]], "get_subdivisions() (polaris.mesh.icosahedralmeshstep static method)": [[61, "polaris.mesh.IcosahedralMeshStep.get_subdivisions"]], "make_jigsaw_mesh() (polaris.mesh.icosahedralmeshstep method)": [[62, "polaris.mesh.IcosahedralMeshStep.make_jigsaw_mesh"]], "run() (polaris.mesh.icosahedralmeshstep method)": [[63, "polaris.mesh.IcosahedralMeshStep.run"]], "setup() (polaris.mesh.icosahedralmeshstep method)": [[64, "polaris.mesh.IcosahedralMeshStep.setup"]], "quasiuniformsphericalmeshstep (class in polaris.mesh)": [[65, "polaris.mesh.QuasiUniformSphericalMeshStep"]], "__init__() (polaris.mesh.quasiuniformsphericalmeshstep method)": [[65, "polaris.mesh.QuasiUniformSphericalMeshStep.__init__"]], "build_cell_width_lat_lon() (polaris.mesh.quasiuniformsphericalmeshstep method)": [[66, "polaris.mesh.QuasiUniformSphericalMeshStep.build_cell_width_lat_lon"]], "make_jigsaw_mesh() (polaris.mesh.quasiuniformsphericalmeshstep method)": [[67, "polaris.mesh.QuasiUniformSphericalMeshStep.make_jigsaw_mesh"]], "run() (polaris.mesh.quasiuniformsphericalmeshstep method)": [[68, "polaris.mesh.QuasiUniformSphericalMeshStep.run"]], "setup() (polaris.mesh.quasiuniformsphericalmeshstep method)": [[69, "polaris.mesh.QuasiUniformSphericalMeshStep.setup"]], "sphericalbasestep (class in polaris.mesh.spherical)": [[70, "polaris.mesh.spherical.SphericalBaseStep"]], "__init__() (polaris.mesh.spherical.sphericalbasestep method)": [[70, "polaris.mesh.spherical.SphericalBaseStep.__init__"]], "run() (polaris.mesh.spherical.sphericalbasestep method)": [[71, "polaris.mesh.spherical.SphericalBaseStep.run"]], "save_and_plot_cell_width() (polaris.mesh.spherical.sphericalbasestep method)": [[72, "polaris.mesh.spherical.SphericalBaseStep.save_and_plot_cell_width"]], "setup() (polaris.mesh.spherical.sphericalbasestep method)": [[73, "polaris.mesh.spherical.SphericalBaseStep.setup"]], "make_graph_file() (in module polaris.model_step)": [[74, "polaris.model_step.make_graph_file"]], "ingest() (in module polaris.namelist)": [[75, "polaris.namelist.ingest"]], "parse_replacements() (in module polaris.namelist)": [[76, "polaris.namelist.parse_replacements"]], "replace() (in module polaris.namelist)": [[77, "polaris.namelist.replace"]], "write() (in module polaris.namelist)": [[78, "polaris.namelist.write"]], "check_parallel_system() (in module polaris.parallel)": [[79, "polaris.parallel.check_parallel_system"]], "get_available_cores_and_nodes() (in module polaris.parallel)": [[80, "polaris.parallel.get_available_cores_and_nodes"]], "run_command() (in module polaris.parallel)": [[81, "polaris.parallel.run_command"]], "set_cores_per_node() (in module polaris.parallel)": [[82, "polaris.parallel.set_cores_per_node"]], "write() (in module polaris.provenance)": [[83, "polaris.provenance.write"]], "mappingfilestep (class in polaris.remap)": [[84, "polaris.remap.MappingFileStep"]], "__init__() (polaris.remap.mappingfilestep method)": [[84, "polaris.remap.MappingFileStep.__init__"]], "dst_from_lon_lat() (polaris.remap.mappingfilestep method)": [[85, "polaris.remap.MappingFileStep.dst_from_lon_lat"]], "dst_from_mpas() (polaris.remap.mappingfilestep method)": [[86, "polaris.remap.MappingFileStep.dst_from_mpas"]], "dst_from_points() (polaris.remap.mappingfilestep method)": [[87, "polaris.remap.MappingFileStep.dst_from_points"]], "dst_from_proj() (polaris.remap.mappingfilestep method)": [[88, "polaris.remap.MappingFileStep.dst_from_proj"]], "dst_global_lon_lat() (polaris.remap.mappingfilestep method)": [[89, "polaris.remap.MappingFileStep.dst_global_lon_lat"]], "get_remapper() (polaris.remap.mappingfilestep method)": [[90, "polaris.remap.MappingFileStep.get_remapper"]], "run() (polaris.remap.mappingfilestep method)": [[91, "polaris.remap.MappingFileStep.run"]], "src_from_lon_lat() (polaris.remap.mappingfilestep method)": [[92, "polaris.remap.MappingFileStep.src_from_lon_lat"]], "src_from_mpas() (polaris.remap.mappingfilestep method)": [[93, "polaris.remap.MappingFileStep.src_from_mpas"]], "src_from_proj() (polaris.remap.mappingfilestep method)": [[94, "polaris.remap.MappingFileStep.src_from_proj"]], "run_single_step() (in module polaris.run.serial)": [[95, "polaris.run.serial.run_single_step"]], "run_tests() (in module polaris.run.serial)": [[96, "polaris.run.serial.run_tests"]], "setup_case() (in module polaris.setup)": [[97, "polaris.setup.setup_case"]], "setup_cases() (in module polaris.setup)": [[98, "polaris.setup.setup_cases"]], "read() (in module polaris.streams)": [[99, "polaris.streams.read"]], "update_defaults() (in module polaris.streams)": [[100, "polaris.streams.update_defaults"]], "update_tree() (in module polaris.streams)": [[101, "polaris.streams.update_tree"]], "write() (in module polaris.streams)": [[102, "polaris.streams.write"]], "setup_suite() (in module polaris.suite)": [[103, "polaris.suite.setup_suite"]], "compare_timers() (in module polaris.validate)": [[104, "polaris.validate.compare_timers"]], "compare_variables() (in module polaris.validate)": [[105, "polaris.validate.compare_variables"]], "plot_global() (in module polaris.viz.globe)": [[106, "polaris.viz.globe.plot_global"]], "plot_horiz_field() (in module polaris.viz)": [[107, "polaris.viz.plot_horiz_field"]], "polarisyaml (class in polaris.yaml)": [[108, "polaris.yaml.PolarisYaml"]], "__init__() (polaris.yaml.polarisyaml method)": [[108, "polaris.yaml.PolarisYaml.__init__"]], "read() (polaris.yaml.polarisyaml class method)": [[109, "polaris.yaml.PolarisYaml.read"]], "update() (polaris.yaml.polarisyaml method)": [[110, "polaris.yaml.PolarisYaml.update"]], "write() (polaris.yaml.polarisyaml method)": [[111, "polaris.yaml.PolarisYaml.write"]], "main_mpas_to_yaml() (in module polaris.yaml)": [[112, "polaris.yaml.main_mpas_to_yaml"]], "mpas_namelist_and_streams_to_yaml() (in module polaris.yaml)": [[113, "polaris.yaml.mpas_namelist_and_streams_to_yaml"]], "yaml_to_mpas_streams() (in module polaris.yaml)": [[114, "polaris.yaml.yaml_to_mpas_streams"]], "ocean (class in polaris.ocean)": [[123, "polaris.ocean.Ocean"]], "__init__() (polaris.ocean.ocean method)": [[123, "polaris.ocean.Ocean.__init__"]], "oceanmodelstep (class in polaris.ocean.model)": [[124, "polaris.ocean.model.OceanModelStep"]], "__init__() (polaris.ocean.model.oceanmodelstep method)": [[124, "polaris.ocean.model.OceanModelStep.__init__"]], "compute_cell_count() (polaris.ocean.model.oceanmodelstep method)": [[125, "polaris.ocean.model.OceanModelStep.compute_cell_count"]], "constrain_resources() (polaris.ocean.model.oceanmodelstep method)": [[126, "polaris.ocean.model.OceanModelStep.constrain_resources"]], "map_yaml_to_namelist() (polaris.ocean.model.oceanmodelstep method)": [[127, "polaris.ocean.model.OceanModelStep.map_yaml_to_namelist"]], "setup() (polaris.ocean.model.oceanmodelstep method)": [[128, "polaris.ocean.model.OceanModelStep.setup"]], "compute_rpe() (in module polaris.ocean.rpe)": [[129, "polaris.ocean.rpe.compute_rpe"]], "baroclinicchannel (class in polaris.ocean.tests.baroclinic_channel)": [[130, "polaris.ocean.tests.baroclinic_channel.BaroclinicChannel"]], "__init__() (polaris.ocean.tests.baroclinic_channel.baroclinicchannel method)": [[130, "polaris.ocean.tests.baroclinic_channel.BaroclinicChannel.__init__"]], "baroclinicchanneltestcase (class in polaris.ocean.tests.baroclinic_channel)": [[131, "polaris.ocean.tests.baroclinic_channel.BaroclinicChannelTestCase"]], "__init__() (polaris.ocean.tests.baroclinic_channel.baroclinicchanneltestcase method)": [[131, "polaris.ocean.tests.baroclinic_channel.BaroclinicChannelTestCase.__init__"]], "configure() (polaris.ocean.tests.baroclinic_channel.baroclinicchanneltestcase method)": [[132, "polaris.ocean.tests.baroclinic_channel.BaroclinicChannelTestCase.configure"]], "validate() (polaris.ocean.tests.baroclinic_channel.baroclinicchanneltestcase method)": [[133, "polaris.ocean.tests.baroclinic_channel.BaroclinicChannelTestCase.validate"]], "decomptest (class in polaris.ocean.tests.baroclinic_channel.decomp_test)": [[134, "polaris.ocean.tests.baroclinic_channel.decomp_test.DecompTest"]], "__init__() (polaris.ocean.tests.baroclinic_channel.decomp_test.decomptest method)": [[134, "polaris.ocean.tests.baroclinic_channel.decomp_test.DecompTest.__init__"]], "validate() (polaris.ocean.tests.baroclinic_channel.decomp_test.decomptest method)": [[135, "polaris.ocean.tests.baroclinic_channel.decomp_test.DecompTest.validate"]], "default (class in polaris.ocean.tests.baroclinic_channel.default)": [[136, "polaris.ocean.tests.baroclinic_channel.default.Default"]], "__init__() (polaris.ocean.tests.baroclinic_channel.default.default method)": [[136, "polaris.ocean.tests.baroclinic_channel.default.Default.__init__"]], "validate() (polaris.ocean.tests.baroclinic_channel.default.default method)": [[137, "polaris.ocean.tests.baroclinic_channel.default.Default.validate"]], "forward (class in polaris.ocean.tests.baroclinic_channel.forward)": [[138, "polaris.ocean.tests.baroclinic_channel.forward.Forward"]], "__init__() (polaris.ocean.tests.baroclinic_channel.forward.forward method)": [[138, "polaris.ocean.tests.baroclinic_channel.forward.Forward.__init__"]], "compute_cell_count() (polaris.ocean.tests.baroclinic_channel.forward.forward method)": [[139, "polaris.ocean.tests.baroclinic_channel.forward.Forward.compute_cell_count"]], "dynamic_model_config() (polaris.ocean.tests.baroclinic_channel.forward.forward method)": [[140, "polaris.ocean.tests.baroclinic_channel.forward.Forward.dynamic_model_config"]], "initialstate (class in polaris.ocean.tests.baroclinic_channel.initial_state)": [[141, "polaris.ocean.tests.baroclinic_channel.initial_state.InitialState"]], "__init__() (polaris.ocean.tests.baroclinic_channel.initial_state.initialstate method)": [[141, "polaris.ocean.tests.baroclinic_channel.initial_state.InitialState.__init__"]], "run() (polaris.ocean.tests.baroclinic_channel.initial_state.initialstate method)": [[142, "polaris.ocean.tests.baroclinic_channel.initial_state.InitialState.run"]], "setup() (polaris.ocean.tests.baroclinic_channel.initial_state.initialstate method)": [[143, "polaris.ocean.tests.baroclinic_channel.initial_state.InitialState.setup"]], "restarttest (class in polaris.ocean.tests.baroclinic_channel.restart_test)": [[144, "polaris.ocean.tests.baroclinic_channel.restart_test.RestartTest"]], "__init__() (polaris.ocean.tests.baroclinic_channel.restart_test.restarttest method)": [[144, "polaris.ocean.tests.baroclinic_channel.restart_test.RestartTest.__init__"]], "validate() (polaris.ocean.tests.baroclinic_channel.restart_test.restarttest method)": [[145, "polaris.ocean.tests.baroclinic_channel.restart_test.RestartTest.validate"]], "restartstep (class in polaris.ocean.tests.baroclinic_channel.restart_test.restart_step)": [[146, "polaris.ocean.tests.baroclinic_channel.restart_test.restart_step.RestartStep"]], "__init__() (polaris.ocean.tests.baroclinic_channel.restart_test.restart_step.restartstep method)": [[146, "polaris.ocean.tests.baroclinic_channel.restart_test.restart_step.RestartStep.__init__"]], "dynamic_model_config() (polaris.ocean.tests.baroclinic_channel.restart_test.restart_step.restartstep method)": [[147, "polaris.ocean.tests.baroclinic_channel.restart_test.restart_step.RestartStep.dynamic_model_config"]], "rpetest (class in polaris.ocean.tests.baroclinic_channel.rpe_test)": [[148, "polaris.ocean.tests.baroclinic_channel.rpe_test.RpeTest"]], "__init__() (polaris.ocean.tests.baroclinic_channel.rpe_test.rpetest method)": [[148, "polaris.ocean.tests.baroclinic_channel.rpe_test.RpeTest.__init__"]], "configure() (polaris.ocean.tests.baroclinic_channel.rpe_test.rpetest method)": [[149, "polaris.ocean.tests.baroclinic_channel.rpe_test.RpeTest.configure"]], "validate() (polaris.ocean.tests.baroclinic_channel.rpe_test.rpetest method)": [[150, "polaris.ocean.tests.baroclinic_channel.rpe_test.RpeTest.validate"]], "analysis (class in polaris.ocean.tests.baroclinic_channel.rpe_test.analysis)": [[151, "polaris.ocean.tests.baroclinic_channel.rpe_test.analysis.Analysis"]], "__init__() (polaris.ocean.tests.baroclinic_channel.rpe_test.analysis.analysis method)": [[151, "polaris.ocean.tests.baroclinic_channel.rpe_test.analysis.Analysis.__init__"]], "run() (polaris.ocean.tests.baroclinic_channel.rpe_test.analysis.analysis method)": [[152, "polaris.ocean.tests.baroclinic_channel.rpe_test.analysis.Analysis.run"]], "setup() (polaris.ocean.tests.baroclinic_channel.rpe_test.analysis.analysis method)": [[153, "polaris.ocean.tests.baroclinic_channel.rpe_test.analysis.Analysis.setup"]], "threadstest (class in polaris.ocean.tests.baroclinic_channel.threads_test)": [[154, "polaris.ocean.tests.baroclinic_channel.threads_test.ThreadsTest"]], "__init__() (polaris.ocean.tests.baroclinic_channel.threads_test.threadstest method)": [[154, "polaris.ocean.tests.baroclinic_channel.threads_test.ThreadsTest.__init__"]], "validate() (polaris.ocean.tests.baroclinic_channel.threads_test.threadstest method)": [[155, "polaris.ocean.tests.baroclinic_channel.threads_test.ThreadsTest.validate"]], "viz (class in polaris.ocean.tests.baroclinic_channel.viz)": [[156, "polaris.ocean.tests.baroclinic_channel.viz.Viz"]], "__init__() (polaris.ocean.tests.baroclinic_channel.viz.viz method)": [[156, "polaris.ocean.tests.baroclinic_channel.viz.Viz.__init__"]], "run() (polaris.ocean.tests.baroclinic_channel.viz.viz method)": [[157, "polaris.ocean.tests.baroclinic_channel.viz.Viz.run"]], "globalconvergence (class in polaris.ocean.tests.global_convergence)": [[158, "polaris.ocean.tests.global_convergence.GlobalConvergence"]], "__init__() (polaris.ocean.tests.global_convergence.globalconvergence method)": [[158, "polaris.ocean.tests.global_convergence.GlobalConvergence.__init__"]], "cosinebell (class in polaris.ocean.tests.global_convergence.cosine_bell)": [[159, "polaris.ocean.tests.global_convergence.cosine_bell.CosineBell"]], "__init__() (polaris.ocean.tests.global_convergence.cosine_bell.cosinebell method)": [[159, "polaris.ocean.tests.global_convergence.cosine_bell.CosineBell.__init__"]], "configure() (polaris.ocean.tests.global_convergence.cosine_bell.cosinebell method)": [[160, "polaris.ocean.tests.global_convergence.cosine_bell.CosineBell.configure"]], "validate() (polaris.ocean.tests.global_convergence.cosine_bell.cosinebell method)": [[161, "polaris.ocean.tests.global_convergence.cosine_bell.CosineBell.validate"]], "analysis (class in polaris.ocean.tests.global_convergence.cosine_bell.analysis)": [[162, "polaris.ocean.tests.global_convergence.cosine_bell.analysis.Analysis"]], "__init__() (polaris.ocean.tests.global_convergence.cosine_bell.analysis.analysis method)": [[162, "polaris.ocean.tests.global_convergence.cosine_bell.analysis.Analysis.__init__"]], "rmse() (polaris.ocean.tests.global_convergence.cosine_bell.analysis.analysis method)": [[163, "polaris.ocean.tests.global_convergence.cosine_bell.analysis.Analysis.rmse"]], "run() (polaris.ocean.tests.global_convergence.cosine_bell.analysis.analysis method)": [[164, "polaris.ocean.tests.global_convergence.cosine_bell.analysis.Analysis.run"]], "forward (class in polaris.ocean.tests.global_convergence.cosine_bell.forward)": [[165, "polaris.ocean.tests.global_convergence.cosine_bell.forward.Forward"]], "__init__() (polaris.ocean.tests.global_convergence.cosine_bell.forward.forward method)": [[165, "polaris.ocean.tests.global_convergence.cosine_bell.forward.Forward.__init__"]], "compute_cell_count() (polaris.ocean.tests.global_convergence.cosine_bell.forward.forward method)": [[166, "polaris.ocean.tests.global_convergence.cosine_bell.forward.Forward.compute_cell_count"]], "dynamic_model_config() (polaris.ocean.tests.global_convergence.cosine_bell.forward.forward method)": [[167, "polaris.ocean.tests.global_convergence.cosine_bell.forward.Forward.dynamic_model_config"]], "init (class in polaris.ocean.tests.global_convergence.cosine_bell.init)": [[168, "polaris.ocean.tests.global_convergence.cosine_bell.init.Init"]], "__init__() (polaris.ocean.tests.global_convergence.cosine_bell.init.init method)": [[168, "polaris.ocean.tests.global_convergence.cosine_bell.init.Init.__init__"]], "run() (polaris.ocean.tests.global_convergence.cosine_bell.init.init method)": [[169, "polaris.ocean.tests.global_convergence.cosine_bell.init.Init.run"]], "viz (class in polaris.ocean.tests.global_convergence.cosine_bell.viz)": [[170, "polaris.ocean.tests.global_convergence.cosine_bell.viz.Viz"]], "__init__() (polaris.ocean.tests.global_convergence.cosine_bell.viz.viz method)": [[170, "polaris.ocean.tests.global_convergence.cosine_bell.viz.Viz.__init__"]], "run() (polaris.ocean.tests.global_convergence.cosine_bell.viz.viz method)": [[171, "polaris.ocean.tests.global_convergence.cosine_bell.viz.Viz.run"]], "vizmap (class in polaris.ocean.tests.global_convergence.cosine_bell.viz)": [[172, "polaris.ocean.tests.global_convergence.cosine_bell.viz.VizMap"]], "__init__() (polaris.ocean.tests.global_convergence.cosine_bell.viz.vizmap method)": [[172, "polaris.ocean.tests.global_convergence.cosine_bell.viz.VizMap.__init__"]], "run() (polaris.ocean.tests.global_convergence.cosine_bell.viz.vizmap method)": [[173, "polaris.ocean.tests.global_convergence.cosine_bell.viz.VizMap.run"]], "generate_1d_grid() (in module polaris.ocean.vertical.grid_1d)": [[174, "polaris.ocean.vertical.grid_1d.generate_1d_grid"]], "write_1d_grid() (in module polaris.ocean.vertical.grid_1d)": [[175, "polaris.ocean.vertical.grid_1d.write_1d_grid"]], "init_vertical_coord() (in module polaris.ocean.vertical)": [[176, "polaris.ocean.vertical.init_vertical_coord"]], "alter_bottom_depth() (in module polaris.ocean.vertical.partial_cells)": [[177, "polaris.ocean.vertical.partial_cells.alter_bottom_depth"]], "alter_ssh() (in module polaris.ocean.vertical.partial_cells)": [[178, "polaris.ocean.vertical.partial_cells.alter_ssh"]], "compute_min_max_level_cell() (in module polaris.ocean.vertical.zlevel)": [[179, "polaris.ocean.vertical.zlevel.compute_min_max_level_cell"]], "compute_z_level_layer_thickness() (in module polaris.ocean.vertical.zlevel)": [[180, "polaris.ocean.vertical.zlevel.compute_z_level_layer_thickness"]], "compute_z_level_resting_thickness() (in module polaris.ocean.vertical.zlevel)": [[181, "polaris.ocean.vertical.zlevel.compute_z_level_resting_thickness"]], "init_z_level_vertical_coord() (in module polaris.ocean.vertical.zlevel)": [[182, "polaris.ocean.vertical.zlevel.init_z_level_vertical_coord"]], "init_z_star_vertical_coord() (in module polaris.ocean.vertical.zstar)": [[183, "polaris.ocean.vertical.zstar.init_z_star_vertical_coord"]]}})