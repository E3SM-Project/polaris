Search.setIndex({"alltitles": {"100layerE3SMv1": [[399, "id1"]], "1D Grid type": [[399, "d-grid-type"]], "3D vertical coordinates": [[399, "d-vertical-coordinates"]], "60layerPHC": [[399, "layerphc"]], "80layerE3SMv1": [[399, "layere3smv1"]], "<Category of task>": [[416, null], [421, null]], "A \u201cuser\u201d config file": [[389, "a-user-config-file"]], "API reference": [[3, null]], "Activating the environment": [[369, "activating-the-environment"]], "Adding E3SM component as an input": [[14, "adding-e3sm-component-as-an-input"]], "Adding a Machine Config File": [[142, "adding-a-machine-config-file"]], "Adding a New Supported Machine": [[142, "adding-a-new-supported-machine"]], "Adding a config file": [[388, "adding-a-config-file"]], "Adding a namelist file": [[14, "adding-a-namelist-file"]], "Adding a parameter study": [[388, "adding-a-parameter-study"]], "Adding a second task": [[388, "adding-a-second-task"]], "Adding a shared \u201csuperclass\u201d for tasks": [[388, "adding-a-shared-superclass-for-tasks"]], "Adding a streams file": [[14, "adding-a-streams-file"]], "Adding a template streams file": [[14, "adding-a-template-streams-file"]], "Adding a visualization step": [[388, "adding-a-visualization-step"]], "Adding a yaml file": [[14, "adding-a-yaml-file"]], "Adding a \u201cdefault\u201d task": [[388, "adding-a-default-task"]], "Adding dynamic model config options": [[388, "adding-dynamic-model-config-options"]], "Adding model config options": [[14, "adding-model-config-options"]], "Adding model config options in code": [[388, "adding-model-config-options-in-code"]], "Adding more validation": [[388, "adding-more-validation"]], "Adding other steps as dependencies": [[365, "adding-other-steps-as-dependencies"]], "Adding plots": [[388, "adding-plots"]], "Adding step outputs": [[388, "adding-step-outputs"]], "Adding the analysis step": [[388, "adding-the-analysis-step"]], "Adding the forward step": [[388, "adding-the-forward-step"]], "Adding the forward step to the task": [[388, "adding-the-forward-step-to-the-task"]], "Adding the init step": [[388, "adding-the-init-step"]], "Adding the step to the task": [[388, "adding-the-step-to-the-task"]], "Adding the steps to the task": [[388, "adding-the-steps-to-the-task"]], "Adding the viz step to the task": [[388, "adding-the-viz-step-to-the-task"]], "Adding validation": [[388, "adding-validation"], [388, "id1"]], "Adding yaml, namelist and streams files": [[14, "adding-yaml-namelist-and-streams-files"]], "Algorithm Design (optional)": [[2, "algorithm-design-optional"]], "Algorithm Design: name-of-topic-here (same as Requirement)": [[2, "algorithm-design-name-of-topic-here-same-as-requirement"]], "Anvil": [[137, null], [390, null]], "Area": [[15, "area"]], "Base Classes": [[3, "base-classes"]], "Boundary conditions": [[346, "boundary-conditions"]], "Building E3SM components": [[369, "building-e3sm-components"]], "Building supported E3SM components as standalone models": [[417, "building-supported-e3sm-components-as-standalone-models"]], "Building the Documentation": [[4, null]], "Building the Spack Environment": [[142, "building-the-spack-environment"]], "Cached output files": [[365, "cached-output-files"]], "Categories of tasks": [[361, null]], "Chicoma": [[138, null], [391, null]], "Chicoma-CPU": [[391, "chicoma-cpu"]], "Chrysalis": [[139, null], [392, null]], "Classes": [[368, "classes"]], "Code Style": [[368, "code-style"]], "Code sharing": [[368, "code-sharing"]], "Code style for polaris": [[369, "code-style-for-polaris"]], "Command-line interface": [[3, "command-line-interface"], [5, null]], "Comments in config files": [[9, "comments-in-config-files"]], "Compass": [[387, "compass"]], "Component": [[3, "component"]], "Components": [[3, "components"], [362, null]], "Computing the cell count": [[388, "computing-the-cell-count"]], "CompyMcNodeFace": [[140, null], [393, null]], "Conda": [[6, "conda"]], "Config Files": [[389, null]], "Config file": [[362, "config-file"]], "Config files": [[9, null]], "Config options describing E3SM machines": [[6, "config-options-describing-e3sm-machines"]], "Constructor": [[362, "constructor"]], "Convergence Tests": [[144, "convergence-tests"], [145, "convergence-tests"]], "Copying input files": [[365, "copying-input-files"]], "Creating a horizontal mesh": [[388, "creating-a-horizontal-mesh"]], "Creating a vertical coordinate": [[388, "creating-a-vertical-coordinate"]], "Creating an initial condition": [[388, "creating-an-initial-condition"]], "Creating spack environments": [[6, "creating-spack-environments"]], "Creating/updating only the polaris environment": [[369, "creating-updating-only-the-polaris-environment"]], "Datasets": [[18, "datasets"]], "Defining model config options and streams": [[388, "defining-model-config-options-and-streams"]], "Deploy spack for polaris without Albany or PETSc": [[6, "deploy-spack-for-polaris-without-albany-or-petsc"]], "Deploying a new spack environment": [[6, null]], "Deploying shared spack environments": [[6, "deploying-shared-spack-environments"]], "Deploying spack with Albany": [[6, "deploying-spack-with-albany"]], "Deploying spack with PETSc (and Netlib LAPACK)": [[6, "deploying-spack-with-petsc-and-netlib-lapack"]], "Describing a Spack Environment": [[142, "describing-a-spack-environment"]], "Design Documents": [[0, null]], "Developer Tutorial: Adding a new test group": [[388, null]], "Developer's guide": [[387, null]], "Directory structure": [[363, null]], "Docstrings": [[7, "docstrings"]], "Documentation": [[7, null], [388, "documentation"]], "Download": [[11, "download"]], "Downloading and symlinking input files": [[365, "downloading-and-symlinking-input-files"]], "Dynamic model config options": [[14, "dynamic-model-config-options"]], "E3SM supported machines": [[417, "e3sm-supported-machines"]], "Enhancements": [[388, "enhancements"]], "Environments with Albany": [[369, "environments-with-albany"]], "Environments with PETSc and Netlib-LAPACK": [[369, "environments-with-petsc-and-netlib-lapack"]], "Forcing": [[346, "forcing"], [382, "forcing"]], "Framework": [[10, null], [398, null]], "Frontier": [[141, null], [394, null]], "General planar meshes": [[13, "general-planar-meshes"]], "Getting started": [[388, "getting-started"]], "Glossary": [[386, null], [387, null]], "How to (and how not to) pass data between steps": [[388, "how-to-and-how-not-to-pass-data-between-steps"]], "IO": [[11, null]], "Ice Shelf": [[144, "ice-shelf"]], "Ice Shelf Tasks": [[145, "ice-shelf-tasks"]], "Ice shelf": [[397, null]], "Identifying E3SM machines": [[6, "identifying-e3sm-machines"]], "Implementation": [[1, "implementation"], [2, "implementation"]], "Implementation: Shared steps are not daughters of a task": [[1, "implementation-shared-steps-are-not-daughters-of-a-task"]], "Implementation: Shared steps are run before steps that depend on their output.": [[1, "implementation-shared-steps-are-run-before-steps-that-depend-on-their-output"]], "Implementation: Shared steps are set up once.": [[1, "implementation-shared-steps-are-set-up-once"]], "Implementation: The output of shared steps may be used by multiple tasks.": [[1, "implementation-the-output-of-shared-steps-may-be-used-by-multiple-tasks"]], "Implementation: Working directory step paths are easily discoverable by users.": [[1, "implementation-working-directory-step-paths-are-easily-discoverable-by-users"]], "Implementation: Working directory structure is intuitive.": [[1, "implementation-working-directory-structure-is-intuitive"]], "Implementation: name-of-topic-here (same as Requirement)": [[2, "implementation-name-of-topic-here-same-as-requirement"]], "Implementation: tasks do not rely on outputs from steps in other tasks": [[1, "implementation-tasks-do-not-rely-on-outputs-from-steps-in-other-tasks"]], "Initial conditions": [[346, "initial-conditions"], [382, "initial-conditions"]], "Input and output from an E3SM component": [[145, "input-and-output-from-an-e3sm-component"]], "Input files": [[365, "input-files"]], "Jupyter notebook on remote data": [[396, "jupyter-notebook-on-remote-data"]], "Loading and running Polaris on Anvil": [[390, "loading-and-running-polaris-on-anvil"]], "Loading and running Polaris on Chicoma": [[391, "loading-and-running-polaris-on-chicoma"]], "Loading and running Polaris on Chrysalis": [[392, "loading-and-running-polaris-on-chrysalis"]], "Loading and running Polaris on CompyMcNodeFace": [[393, "loading-and-running-polaris-on-compymcnodeface"]], "Loading and running Polaris on Frontier": [[394, "loading-and-running-polaris-on-frontier"]], "Loading and running Polaris on Perlmutter": [[396, "loading-and-running-polaris-on-perlmutter"]], "Loading polaris conda and spack environments": [[417, "loading-polaris-conda-and-spack-environments"]], "Logging": [[12, null]], "MPAS": [[15, null]], "MPAS-Ocean": [[346, null]], "MPAS-Ocean and -Seaice Supported Machines": [[142, "mpas-ocean-and-seaice-supported-machines"]], "MPAS-Ocean or MPAS-Seaice": [[369, "mpas-ocean-or-mpas-seaice"]], "MPICH": [[395, "mpich"]], "Mache": [[6, "mache"], [6, "id1"]], "Machines": [[142, null], [395, null]], "Making a graph file": [[14, "making-a-graph-file"]], "Making a new test group": [[388, "making-a-new-test-group"]], "Mapping from MPAS-Ocean to Omega config options": [[145, "mapping-from-mpas-ocean-to-omega-config-options"]], "Mesh": [[13, null]], "Model": [[14, null], [145, "model"]], "Model config options and streams": [[145, "model-config-options-and-streams"]], "ModelStep": [[3, "modelstep"]], "Models": [[345, null]], "Modules": [[368, "modules"]], "Modules for polaris commands": [[8, null]], "Modules, env. variables, etc. for  E3SM machines": [[6, "modules-env-variables-etc-for-e3sm-machines"]], "Nightly suite": [[366, "nightly-suite"]], "No MPI from conda-forge": [[395, "no-mpi-from-conda-forge"]], "Norms": [[18, "norms"]], "Ocean Framework": [[144, "ocean-framework"]], "Ocean Model": [[144, "ocean-model"]], "Ocean component": [[344, null], [400, null]], "Ocean framework": [[145, null]], "Omega": [[369, "omega"]], "Omega Supported Machines": [[142, "omega-supported-machines"]], "OpenMPI": [[395, "openmpi"]], "Optional flags": [[369, "optional-flags"]], "Organization of Tasks": [[364, null]], "Other Machines": [[142, "other-machines"], [395, "other-machines"]], "Other machines": [[417, "other-machines"]], "Output files": [[365, "output-files"]], "Overview": [[368, null]], "Packages": [[368, "packages"]], "Packages and Modules": [[368, "packages-and-modules"]], "Partitioning the mesh": [[14, "partitioning-the-mesh"]], "Perlmutter": [[143, null], [396, null]], "Perlmutter-CPU": [[396, "perlmutter-cpu"]], "Permissions": [[11, "permissions"]], "Planar Meshes": [[13, "planar-meshes"]], "Polaris": [[387, null]], "Provenance": [[16, null]], "Proxy on LANL Macs": [[385, "proxy-on-lanl-macs"]], "Pull-Request (PR) suite": [[366, "pull-request-pr-suite"]], "Quasi-uniform and Icosahedral Spherical Meshes": [[145, "quasi-uniform-and-icosahedral-spherical-meshes"]], "Quick Start for Developers": [[369, null]], "Quick Start for Users": [[417, null]], "Quick Start for Users is not yet valid": [[417, null]], "RPE task": [[411, "rpe-task"]], "Reference Potential Energy (RPE)": [[144, "reference-potential-energy-rpe"]], "Remapping": [[17, null]], "Requirement: Shared steps are not daughters of a task": [[1, "requirement-shared-steps-are-not-daughters-of-a-task"]], "Requirement: Shared steps are run before steps that depend on their output.": [[1, "requirement-shared-steps-are-run-before-steps-that-depend-on-their-output"]], "Requirement: Shared steps are run once.": [[1, "requirement-shared-steps-are-run-once"]], "Requirement: The output of shared steps may be used by multiple tasks.": [[1, "requirement-the-output-of-shared-steps-may-be-used-by-multiple-tasks"]], "Requirement: Working directory step paths are easily discoverable by users.": [[1, "requirement-working-directory-step-paths-are-easily-discoverable-by-users"]], "Requirement: Working directory structure is intuitive.": [[1, "requirement-working-directory-structure-is-intuitive"]], "Requirement: name-of-topic-here": [[2, "requirement-name-of-topic-here"]], "Requirement: tasks do not rely on outputs from steps in other tasks": [[1, "requirement-tasks-do-not-rely-on-outputs-from-steps-in-other-tasks"]], "Requirements": [[1, "requirements"], [2, "requirements"]], "Running a task": [[417, "running-a-task"]], "Running an E3SM component": [[14, "running-an-e3sm-component"], [145, "running-an-e3sm-component"]], "Running polaris from the repo": [[369, "running-polaris-from-the-repo"]], "Running with a job script": [[417, "running-with-a-job-script"]], "SSH adjustment steps": [[397, "ssh-adjustment-steps"]], "Sea ice component": [[418, null]], "SeaIce component": [[381, null]], "SeaIce framework": [[371, null]], "Set up a polaris repository with worktrees: for advanced users": [[369, "set-up-a-polaris-repository-with-worktrees-for-advanced-users"]], "Set up a polaris repository: for beginners": [[369, "set-up-a-polaris-repository-for-beginners"]], "Setting MPI resources": [[145, "setting-mpi-resources"]], "Setting time intervals in model config options": [[145, "setting-time-intervals-in-model-config-options"]], "Setting up tasks": [[417, "setting-up-tasks"]], "Shared config files": [[9, "shared-config-files"]], "Shared steps": [[1, null]], "Slurm job queueing": [[395, "slurm-job-queueing"]], "Solver errors when configuring conda environment": [[385, "solver-errors-when-configuring-conda-environment"]], "Spack": [[6, "spack"]], "Spherical Base Mesh Step": [[144, "spherical-base-mesh-step"]], "Spherical Convergence Tests": [[144, "spherical-convergence-tests"]], "Spherical Meshes": [[13, "spherical-meshes"]], "Step": [[3, "step"]], "Step attributes": [[365, "step-attributes"]], "Steps": [[365, null]], "Suites": [[366, null], [401, null], [417, "suites"], [422, null]], "Summary": [[1, "summary"], [2, "summary"]], "Supported Machines": [[142, "supported-machines"], [395, "supported-machines"]], "Supported Model: MPAS-Seaice": [[382, null]], "Supported Models": [[345, "supported-models"]], "Supported machines": [[369, "supported-machines"]], "Switching between different polaris environments": [[369, "switching-between-different-polaris-environments"]], "Symlink to input files from polaris": [[365, "symlink-to-input-files-from-polaris"]], "Symlinks": [[11, "symlinks"]], "Symlinks to input files": [[365, "symlinks-to-input-files"]], "Task": [[3, "task"]], "Task attributes": [[367, "task-attributes"]], "Tasks": [[144, "tasks"], [354, null], [367, null], [370, "tasks"], [383, null], [409, null], [419, null], [423, null]], "Template": [[2, null]], "Test the task again!": [[388, "test-the-task-again"]], "Test the task one more time!": [[388, "test-the-task-one-more-time"]], "Test things out!": [[388, "test-things-out"]], "Test-case config files": [[389, "test-case-config-files"]], "Testing": [[1, "testing"], [2, "testing"]], "Testing And Validation: Shared steps are not daughters of a task": [[1, "testing-and-validation-shared-steps-are-not-daughters-of-a-task"]], "Testing And Validation: Shared steps are run before steps that depend on their output.": [[1, "testing-and-validation-shared-steps-are-run-before-steps-that-depend-on-their-output"]], "Testing And Validation: Shared steps are run once.": [[1, "testing-and-validation-shared-steps-are-run-once"]], "Testing And Validation: The output of shared steps may be used by multiple tasks.": [[1, "testing-and-validation-the-output-of-shared-steps-may-be-used-by-multiple-tasks"]], "Testing And Validation: Working directory step paths are easily discoverable by users.": [[1, "testing-and-validation-working-directory-step-paths-are-easily-discoverable-by-users"]], "Testing And Validation: Working directory structure is intuitive.": [[1, "testing-and-validation-working-directory-structure-is-intuitive"]], "Testing And Validation: tasks do not rely on outputs from steps in other tasks": [[1, "testing-and-validation-tasks-do-not-rely-on-outputs-from-steps-in-other-tasks"]], "Testing MALI with Albany": [[6, "testing-mali-with-albany"]], "Testing MPAS-Ocean with PETSc": [[6, "testing-mpas-ocean-with-petsc"]], "Testing MPAS-Ocean without PETSc": [[6, "testing-mpas-ocean-without-petsc"]], "Testing and Validation: name-of-topic-here (same as Requirement)": [[2, "testing-and-validation-name-of-topic-here-same-as-requirement"]], "Testing polaris": [[6, "testing-polaris"]], "Testing spack with Albany": [[6, "testing-spack-with-albany"]], "Testing spack with PETSc (and Netlib LAPACK)": [[6, "testing-spack-with-petsc-and-netlib-lapack"]], "Time": [[15, "time"]], "Troubleshooting": [[369, "troubleshooting"], [385, null]], "Troubleshooting spack": [[6, "troubleshooting-spack"]], "Tutorials": [[387, null]], "Uniform planar meshes": [[13, "uniform-planar-meshes"]], "Unix Shell": [[369, "unix-shell"]], "Unknown machines": [[369, "unknown-machines"]], "Updating PIO namelist options": [[14, "updating-pio-namelist-options"]], "Updating spack from polaris with mache from a remote branch": [[6, "updating-spack-from-polaris-with-mache-from-a-remote-branch"]], "User's guide": [[387, null]], "Validating variables": [[18, "validating-variables"]], "Validating variables against a baseline": [[18, "validating-variables-against-a-baseline"]], "Validation": [[18, null]], "Varying resolution and other parameters": [[388, "varying-resolution-and-other-parameters"]], "Vertical coordinate": [[145, "vertical-coordinate"], [399, null]], "Vertical coordinates": [[144, "vertical-coordinates"]], "Visualization": [[19, null], [144, "visualization"], [145, "visualization"]], "What the script does": [[369, "what-the-script-does"]], "Where do we update polaris dependencies?": [[6, "where-do-we-update-polaris-dependencies"]], "YAML files vs. namelists and streams": [[145, "yaml-files-vs-namelists-and-streams"]], "analysis": [[348, "analysis"], [349, "analysis"], [350, "analysis"], [351, "analysis"], [352, "analysis"], [355, "analysis"], [357, "analysis"], [358, "analysis"], [359, "analysis"], [407, "analysis"]], "baroclinic channel": [[402, null]], "baroclinic_channel": [[144, "baroclinic-channel"], [347, null]], "barotropic gyre": [[403, null]], "barotropic_gyre": [[144, "barotropic-gyre"], [348, null]], "base_mesh": [[349, "base-mesh"], [350, "base-mesh"], [351, "base-mesh"], [352, "base-mesh"], [358, "base-mesh"], [359, "base-mesh"]], "cache": [[3, "cache"]], "cache module": [[8, "cache-module"]], "chicoma-cpu, gnu": [[138, "chicoma-cpu-gnu"]], "common matplotlib style": [[19, "common-matplotlib-style"]], "components": [[3, "id1"]], "config": [[3, "config"]], "config options": [[390, "config-options"], [391, "config-options"], [392, "config-options"], [393, "config-options"], [394, "config-options"], [395, "config-options"], [396, "config-options"], [397, "config-options"], [402, "config-options"], [402, "id7"], [402, "id14"], [402, "id22"], [402, "id30"], [402, "id37"], [403, "config-options"], [404, "config-options"], [405, "config-options"], [406, "config-options"], [407, "config-options"], [408, "config-options"], [408, "id7"], [408, "id14"], [408, "id22"], [410, "config-options"], [411, "config-options"], [411, "id7"], [412, "config-options"], [413, "config-options"], [414, "config-options"], [415, "config-options"], [415, "id1"], [415, "id6"], [415, "id13"], [416, "config-options"], [420, "config-options"], [420, "id5"], [420, "id10"], [421, "config-options"]], "configure()": [[367, "configure"]], "constrain_resources()": [[365, "constrain-resources"]], "constructor": [[365, "constructor"], [367, "constructor"]], "cores": [[402, "cores"], [402, "id15"], [402, "id23"], [402, "id31"], [402, "id38"], [403, "cores"], [404, "cores"], [405, "cores"], [406, "cores"], [407, "cores"], [408, "cores"], [408, "id15"], [408, "id23"], [410, "cores"], [411, "cores"], [412, "cores"], [413, "cores"], [414, "cores"], [415, "cores"], [415, "id14"], [416, "cores"], [420, "cores"], [420, "id4"], [420, "id9"], [421, "cores"]], "correlated tracers 2-d": [[404, null]], "correlated_tracers_2d": [[349, null]], "cosine bell": [[405, null]], "cosine_bell": [[144, "cosine-bell"], [350, null]], "cosine_bell suite": [[401, "cosine-bell-suite"]], "cvmix": [[360, "cvmix"], [415, "cvmix"]], "decomp": [[347, "decomp"], [350, "decomp"], [402, "decomp"]], "default": [[347, "default"], [348, "default"], [353, "default"], [356, "default"], [402, "default"], [403, "default"], [408, "default"], [412, "default"]], "default task": [[411, "default-task"]], "default_tidal_forcing": [[408, "default-tidal-forcing"]], "default_with_restart": [[408, "default-with-restart"]], "del2": [[412, "del2"]], "del4": [[412, "del4"]], "description": [[402, "description"], [402, "id1"], [402, "id8"], [402, "id16"], [402, "id24"], [403, "description"], [404, "description"], [405, "description"], [406, "description"], [407, "description"], [408, "description"], [408, "id1"], [408, "id8"], [408, "id16"], [410, "description"], [411, "description"], [411, "id1"], [412, "description"], [412, "id1"], [412, "id2"], [413, "description"], [414, "description"], [415, "description"], [415, "id2"], [415, "id7"], [416, "description"], [420, "description"], [421, "description"]], "divergent 2-d": [[406, null]], "divergent_2d": [[351, null]], "exact restart test": [[420, "exact-restart-test"]], "exact_restart_test": [[384, "exact-restart-test"]], "exact_solution": [[355, "exact-solution"], [357, "exact-solution"]], "filament_analysis": [[358, "filament-analysis"]], "forcing": [[402, "forcing"], [402, "id5"], [402, "id12"], [402, "id20"], [402, "id28"], [402, "id35"], [403, "forcing"], [404, "forcing"], [405, "forcing"], [406, "forcing"], [407, "forcing"], [408, "forcing"], [408, "id5"], [408, "id12"], [408, "id20"], [410, "forcing"], [411, "forcing"], [411, "id5"], [412, "forcing"], [413, "forcing"], [414, "forcing"], [415, "forcing"], [415, "id11"], [416, "forcing"], [420, "forcing"], [420, "id3"], [420, "id8"], [421, "forcing"]], "forward": [[347, "forward"], [348, "forward"], [349, "forward"], [350, "forward"], [351, "forward"], [352, "forward"], [353, "forward"], [355, "forward"], [356, "forward"], [357, "forward"], [358, "forward"], [359, "forward"], [360, "forward"], [384, "forward"]], "framework": [[347, "framework"], [348, "framework"], [349, "framework"], [350, "framework"], [351, "framework"], [352, "framework"], [353, "framework"], [355, "framework"], [356, "framework"], [357, "framework"], [358, "framework"], [359, "framework"], [360, "framework"], [384, "framework"]], "frontier, crayclang": [[141, "frontier-crayclang"]], "frontier, gnu": [[141, "frontier-gnu"]], "geostrophic": [[144, "geostrophic"], [352, null], [407, null]], "gethostbyname failed": [[385, "gethostbyname-failed"]], "global lat/lon plots": [[19, "global-lat-lon-plots"]], "gnu": [[137, "gnu"], [139, "gnu"], [140, "gnu"]], "horizontal fields from planar meshes": [[19, "horizontal-fields-from-planar-meshes"]], "ice shelf 2d": [[408, null]], "ice_shelf_2d": [[144, "ice-shelf-2d"], [353, null]], "ideal age": [[360, "ideal-age"], [415, "ocean-single-column-ideal-age"]], "index_tanh_dz": [[399, "index-tanh-dz"]], "inertial gravity wave": [[410, null]], "inertial_gravity_wave": [[144, "inertial-gravity-wave"], [355, null]], "init": [[347, "init"], [348, "init"], [349, "init"], [350, "init"], [351, "init"], [352, "init"], [353, "init"], [355, "init"], [356, "init"], [357, "init"], [358, "init"], [359, "init"], [360, "init"]], "initial conditions": [[402, "initial-conditions"], [402, "id4"], [402, "id11"], [402, "id19"], [402, "id27"], [402, "id34"], [403, "initial-conditions"], [404, "initial-conditions"], [405, "initial-conditions"], [406, "initial-conditions"], [407, "initial-conditions"], [408, "initial-conditions"], [408, "id4"], [408, "id11"], [408, "id19"], [410, "initial-conditions"], [411, "initial-conditions"], [411, "id4"], [412, "initial-conditions"], [413, "initial-conditions"], [414, "initial-conditions"], [415, "initial-conditions"], [415, "id5"], [415, "id10"], [416, "initial-conditions"], [420, "initial-conditions"], [420, "id2"], [420, "id7"], [421, "initial-conditions"]], "inputs and outputs": [[365, "inputs-and-outputs"]], "intel": [[137, "intel"], [139, "intel"], [140, "intel"]], "internal wave": [[411, null]], "internal_wave": [[144, "internal-wave"], [356, null]], "io": [[3, "io"]], "job": [[3, "job"]], "list": [[3, "list"]], "list module": [[8, "list-module"]], "logging": [[3, "logging"]], "manufactured solution": [[412, null]], "manufactured_solution": [[144, "manufactured-solution"], [357, null]], "mesh": [[3, "mesh"], [402, "mesh"], [402, "id2"], [402, "id9"], [402, "id17"], [402, "id25"], [402, "id32"], [403, "mesh"], [404, "mesh"], [405, "mesh"], [406, "mesh"], [407, "mesh"], [408, "mesh"], [408, "id2"], [408, "id9"], [408, "id17"], [410, "mesh"], [411, "mesh"], [411, "id2"], [412, "mesh"], [413, "mesh"], [414, "mesh"], [415, "mesh"], [415, "id3"], [415, "id8"], [416, "mesh"], [420, "mesh"], [420, "id1"], [420, "id6"], [421, "mesh"]], "mixing_analysis": [[349, "mixing-analysis"]], "model_step": [[3, "model-step"]], "mpas": [[3, "mpas"]], "mpas_to_yaml": [[3, "mpas-to-yaml"], [5, "mpas-to-yaml"]], "namelist": [[3, "namelist"]], "nondivergent 2-d": [[413, null]], "nondivergent_2d": [[358, null]], "ocean": [[144, null]], "parallel": [[3, "parallel"]], "plotting from lat/lon grids": [[19, "plotting-from-lat-lon-grids"]], "plotting from spherical MPAS meshes": [[19, "plotting-from-spherical-mpas-meshes"]], "pm-cpu, gnu": [[143, "pm-cpu-gnu"]], "pm-cpu, intel": [[143, "pm-cpu-intel"]], "polaris cache": [[5, "polaris-cache"]], "polaris conda environment, spack environment, compilers and system modules": [[369, "polaris-conda-environment-spack-environment-compilers-and-system-modules"]], "polaris framework": [[3, "polaris-framework"]], "polaris list": [[5, "polaris-list"]], "polaris serial": [[5, "polaris-serial"]], "polaris setup": [[5, "polaris-setup"]], "polaris suite": [[5, "polaris-suite"]], "polaris.Component": [[20, null]], "polaris.Component.add_config": [[21, null]], "polaris.Component.add_step": [[22, null]], "polaris.Component.add_task": [[23, null]], "polaris.Component.remove_step": [[24, null]], "polaris.ModelStep": [[25, null]], "polaris.ModelStep.add_model_config_options": [[26, null]], "polaris.ModelStep.add_namelist_file": [[27, null]], "polaris.ModelStep.add_streams_file": [[28, null]], "polaris.ModelStep.add_yaml_file": [[29, null]], "polaris.ModelStep.dynamic_model_config": [[30, null]], "polaris.ModelStep.map_yaml_configs": [[31, null]], "polaris.ModelStep.map_yaml_options": [[32, null]], "polaris.ModelStep.map_yaml_to_namelist": [[33, null]], "polaris.ModelStep.partition": [[34, null]], "polaris.ModelStep.process_inputs_and_outputs": [[35, null]], "polaris.ModelStep.runtime_setup": [[36, null]], "polaris.ModelStep.set_model_resources": [[37, null]], "polaris.ModelStep.setup": [[38, null]], "polaris.ModelStep.update_namelist_pio": [[39, null]], "polaris.Step": [[40, null]], "polaris.Step.add_dependency": [[41, null]], "polaris.Step.add_input_file": [[42, null]], "polaris.Step.add_output_file": [[43, null]], "polaris.Step.constrain_resources": [[44, null]], "polaris.Step.run": [[45, null]], "polaris.Step.runtime_setup": [[46, null]], "polaris.Step.set_resources": [[47, null]], "polaris.Step.set_shared_config": [[48, null]], "polaris.Step.setup": [[49, null]], "polaris.Step.validate_baselines": [[50, null]], "polaris.Task": [[51, null]], "polaris.Task.add_step": [[52, null]], "polaris.Task.configure": [[53, null]], "polaris.Task.remove_step": [[54, null]], "polaris.Task.set_shared_config": [[55, null]], "polaris.__main__.main": [[56, null]], "polaris.cache.update_cache": [[57, null]], "polaris.components.get_components": [[58, null]], "polaris.config.PolarisConfigParser": [[59, null]], "polaris.config.PolarisConfigParser.setup": [[60, null]], "polaris.io.download": [[61, null]], "polaris.io.symlink": [[62, null]], "polaris.io.update_permissions": [[63, null]], "polaris.job.clean_up_whitespace": [[64, null]], "polaris.job.get_slurm_options": [[65, null]], "polaris.job.write_job_script": [[66, null]], "polaris.list.list_cases": [[67, null]], "polaris.list.list_machines": [[68, null]], "polaris.list.list_suites": [[69, null]], "polaris.logging.log_method_call": [[70, null]], "polaris.mesh.IcosahedralMeshStep": [[71, null]], "polaris.mesh.IcosahedralMeshStep.build_subdivisions_cell_width_lat_lon": [[72, null]], "polaris.mesh.IcosahedralMeshStep.get_cell_width": [[73, null]], "polaris.mesh.IcosahedralMeshStep.get_subdivisions": [[74, null]], "polaris.mesh.IcosahedralMeshStep.make_jigsaw_mesh": [[75, null]], "polaris.mesh.IcosahedralMeshStep.run": [[76, null]], "polaris.mesh.IcosahedralMeshStep.setup": [[77, null]], "polaris.mesh.QuasiUniformSphericalMeshStep": [[78, null]], "polaris.mesh.QuasiUniformSphericalMeshStep.build_cell_width_lat_lon": [[79, null]], "polaris.mesh.QuasiUniformSphericalMeshStep.make_jigsaw_mesh": [[80, null]], "polaris.mesh.QuasiUniformSphericalMeshStep.run": [[81, null]], "polaris.mesh.QuasiUniformSphericalMeshStep.setup": [[82, null]], "polaris.mesh.planar.compute_planar_hex_nx_ny": [[83, null]], "polaris.mesh.spherical.SphericalBaseStep": [[84, null]], "polaris.mesh.spherical.SphericalBaseStep.run": [[85, null]], "polaris.mesh.spherical.SphericalBaseStep.save_and_plot_cell_width": [[86, null]], "polaris.mesh.spherical.SphericalBaseStep.setup": [[87, null]], "polaris.model_step.make_graph_file": [[88, null]], "polaris.mpas.area_for_field": [[89, null]], "polaris.mpas.cell_mask_to_edge_mask": [[90, null]], "polaris.mpas.time_index_from_xtime": [[91, null]], "polaris.namelist.ingest": [[92, null]], "polaris.namelist.parse_replacements": [[93, null]], "polaris.namelist.replace": [[94, null]], "polaris.namelist.write": [[95, null]], "polaris.ocean.Ocean": [[146, null]], "polaris.ocean.convergence.analysis.ConvergenceAnalysis": [[147, null]], "polaris.ocean.convergence.analysis.ConvergenceAnalysis.compute_error": [[148, null]], "polaris.ocean.convergence.analysis.ConvergenceAnalysis.convergence_parameters": [[149, null]], "polaris.ocean.convergence.analysis.ConvergenceAnalysis.exact_solution": [[150, null]], "polaris.ocean.convergence.analysis.ConvergenceAnalysis.get_output_field": [[151, null]], "polaris.ocean.convergence.analysis.ConvergenceAnalysis.plot_convergence": [[152, null]], "polaris.ocean.convergence.analysis.ConvergenceAnalysis.run": [[153, null]], "polaris.ocean.convergence.analysis.ConvergenceAnalysis.setup": [[154, null]], "polaris.ocean.convergence.forward.ConvergenceForward": [[155, null]], "polaris.ocean.convergence.forward.ConvergenceForward.compute_cell_count": [[156, null]], "polaris.ocean.convergence.forward.ConvergenceForward.dynamic_model_config": [[157, null]], "polaris.ocean.convergence.get_resolution_for_task": [[158, null]], "polaris.ocean.convergence.get_timestep_for_task": [[159, null]], "polaris.ocean.convergence.spherical.SphericalConvergenceForward": [[160, null]], "polaris.ocean.convergence.spherical.SphericalConvergenceForward.compute_cell_count": [[161, null]], "polaris.ocean.ice_shelf.IceShelfTask": [[162, null]], "polaris.ocean.ice_shelf.IceShelfTask.setup_ssh_adjustment_steps": [[163, null]], "polaris.ocean.ice_shelf.SshAdjustment": [[164, null]], "polaris.ocean.ice_shelf.SshAdjustment.run": [[165, null]], "polaris.ocean.ice_shelf.SshForward": [[166, null]], "polaris.ocean.ice_shelf.SshForward.compute_cell_count": [[167, null]], "polaris.ocean.ice_shelf.SshForward.dynamic_model_config": [[168, null]], "polaris.ocean.mesh.spherical.add_spherical_base_mesh_step": [[169, null]], "polaris.ocean.model.OceanIOStep": [[170, null]], "polaris.ocean.model.OceanIOStep.map_from_native_model_vars": [[171, null]], "polaris.ocean.model.OceanIOStep.map_to_native_model_vars": [[172, null]], "polaris.ocean.model.OceanIOStep.open_model_dataset": [[173, null]], "polaris.ocean.model.OceanIOStep.setup": [[174, null]], "polaris.ocean.model.OceanIOStep.write_model_dataset": [[175, null]], "polaris.ocean.model.OceanModelStep": [[176, null]], "polaris.ocean.model.OceanModelStep.compute_cell_count": [[177, null]], "polaris.ocean.model.OceanModelStep.constrain_resources": [[178, null]], "polaris.ocean.model.OceanModelStep.map_yaml_configs": [[179, null]], "polaris.ocean.model.OceanModelStep.map_yaml_options": [[180, null]], "polaris.ocean.model.OceanModelStep.setup": [[181, null]], "polaris.ocean.model.get_time_interval_string": [[182, null]], "polaris.ocean.rpe.compute_rpe": [[183, null]], "polaris.ocean.tasks.baroclinic_channel.add_baroclinic_channel_tasks": [[184, null]], "polaris.ocean.tasks.baroclinic_channel.decomp.Decomp": [[185, null]], "polaris.ocean.tasks.baroclinic_channel.default.Default": [[186, null]], "polaris.ocean.tasks.baroclinic_channel.forward.Forward": [[187, null]], "polaris.ocean.tasks.baroclinic_channel.forward.Forward.compute_cell_count": [[188, null]], "polaris.ocean.tasks.baroclinic_channel.forward.Forward.dynamic_model_config": [[189, null]], "polaris.ocean.tasks.baroclinic_channel.init.Init": [[190, null]], "polaris.ocean.tasks.baroclinic_channel.init.Init.run": [[191, null]], "polaris.ocean.tasks.baroclinic_channel.init.Init.setup": [[192, null]], "polaris.ocean.tasks.baroclinic_channel.restart.Restart": [[193, null]], "polaris.ocean.tasks.baroclinic_channel.restart.restart_step.RestartStep": [[194, null]], "polaris.ocean.tasks.baroclinic_channel.restart.restart_step.RestartStep.dynamic_model_config": [[195, null]], "polaris.ocean.tasks.baroclinic_channel.rpe.Rpe": [[196, null]], "polaris.ocean.tasks.baroclinic_channel.rpe.Rpe.configure": [[197, null]], "polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis": [[198, null]], "polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis.run": [[199, null]], "polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis.setup": [[200, null]], "polaris.ocean.tasks.baroclinic_channel.threads.Threads": [[201, null]], "polaris.ocean.tasks.baroclinic_channel.validate.Validate": [[202, null]], "polaris.ocean.tasks.baroclinic_channel.validate.Validate.run": [[203, null]], "polaris.ocean.tasks.baroclinic_channel.viz.Viz": [[204, null]], "polaris.ocean.tasks.baroclinic_channel.viz.Viz.run": [[205, null]], "polaris.ocean.tasks.barotropic_gyre.BarotropicGyre": [[206, null]], "polaris.ocean.tasks.barotropic_gyre.add_barotropic_gyre_tasks": [[207, null]], "polaris.ocean.tasks.barotropic_gyre.analysis.Analysis": [[208, null]], "polaris.ocean.tasks.barotropic_gyre.analysis.Analysis.compute_error": [[209, null]], "polaris.ocean.tasks.barotropic_gyre.analysis.Analysis.exact_solution": [[210, null]], "polaris.ocean.tasks.barotropic_gyre.analysis.Analysis.run": [[211, null]], "polaris.ocean.tasks.barotropic_gyre.forward.Forward": [[212, null]], "polaris.ocean.tasks.barotropic_gyre.forward.Forward.compute_cell_count": [[213, null]], "polaris.ocean.tasks.barotropic_gyre.forward.Forward.dynamic_model_config": [[214, null]], "polaris.ocean.tasks.barotropic_gyre.forward.compute_max_time_step": [[215, null]], "polaris.ocean.tasks.barotropic_gyre.init.Init": [[216, null]], "polaris.ocean.tasks.barotropic_gyre.init.Init.run": [[217, null]], "polaris.ocean.tasks.barotropic_gyre.init.Init.setup": [[218, null]], "polaris.ocean.tasks.cosine_bell.CosineBell": [[219, null]], "polaris.ocean.tasks.cosine_bell.CosineBell.configure": [[220, null]], "polaris.ocean.tasks.cosine_bell.add_cosine_bell_tasks": [[221, null]], "polaris.ocean.tasks.cosine_bell.analysis.Analysis": [[222, null]], "polaris.ocean.tasks.cosine_bell.analysis.Analysis.exact_solution": [[223, null]], "polaris.ocean.tasks.cosine_bell.decomp.Decomp": [[224, null]], "polaris.ocean.tasks.cosine_bell.forward.Forward": [[225, null]], "polaris.ocean.tasks.cosine_bell.init.Init": [[226, null]], "polaris.ocean.tasks.cosine_bell.init.Init.run": [[227, null]], "polaris.ocean.tasks.cosine_bell.init.cosine_bell": [[228, null]], "polaris.ocean.tasks.cosine_bell.restart.Restart": [[229, null]], "polaris.ocean.tasks.cosine_bell.restart.RestartStep": [[230, null]], "polaris.ocean.tasks.cosine_bell.restart.RestartStep.dynamic_model_config": [[231, null]], "polaris.ocean.tasks.cosine_bell.validate.Validate": [[232, null]], "polaris.ocean.tasks.cosine_bell.validate.Validate.run": [[233, null]], "polaris.ocean.tasks.cosine_bell.viz.Viz": [[234, null]], "polaris.ocean.tasks.cosine_bell.viz.Viz.run": [[235, null]], "polaris.ocean.tasks.geostrophic.Geostrophic": [[236, null]], "polaris.ocean.tasks.geostrophic.Geostrophic.configure": [[237, null]], "polaris.ocean.tasks.geostrophic.add_geostrophic_tasks": [[238, null]], "polaris.ocean.tasks.geostrophic.analysis.Analysis": [[239, null]], "polaris.ocean.tasks.geostrophic.analysis.Analysis.exact_solution": [[240, null]], "polaris.ocean.tasks.geostrophic.analysis.Analysis.get_output_field": [[241, null]], "polaris.ocean.tasks.geostrophic.forward.Forward": [[242, null]], "polaris.ocean.tasks.geostrophic.init.Init": [[243, null]], "polaris.ocean.tasks.geostrophic.init.Init.run": [[244, null]], "polaris.ocean.tasks.geostrophic.viz.Viz": [[245, null]], "polaris.ocean.tasks.geostrophic.viz.Viz.run": [[246, null]], "polaris.ocean.tasks.ice_shelf_2d.add_ice_shelf_2d_tasks": [[247, null]], "polaris.ocean.tasks.ice_shelf_2d.default.Default": [[248, null]], "polaris.ocean.tasks.ice_shelf_2d.forward.Forward": [[249, null]], "polaris.ocean.tasks.ice_shelf_2d.forward.Forward.compute_cell_count": [[250, null]], "polaris.ocean.tasks.ice_shelf_2d.forward.Forward.dynamic_model_config": [[251, null]], "polaris.ocean.tasks.ice_shelf_2d.init.Init": [[252, null]], "polaris.ocean.tasks.ice_shelf_2d.init.Init.run": [[253, null]], "polaris.ocean.tasks.ice_shelf_2d.validate.Validate": [[254, null]], "polaris.ocean.tasks.ice_shelf_2d.validate.Validate.run": [[255, null]], "polaris.ocean.tasks.ice_shelf_2d.viz.Viz": [[256, null]], "polaris.ocean.tasks.ice_shelf_2d.viz.Viz.run": [[257, null]], "polaris.ocean.tasks.inertial_gravity_wave.InertialGravityWave": [[258, null]], "polaris.ocean.tasks.inertial_gravity_wave.add_inertial_gravity_wave_tasks": [[259, null]], "polaris.ocean.tasks.inertial_gravity_wave.analysis.Analysis": [[260, null]], "polaris.ocean.tasks.inertial_gravity_wave.analysis.Analysis.exact_solution": [[261, null]], "polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution": [[262, null]], "polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution.normal_velocity": [[263, null]], "polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution.ssh": [[264, null]], "polaris.ocean.tasks.inertial_gravity_wave.forward.Forward": [[265, null]], "polaris.ocean.tasks.inertial_gravity_wave.forward.Forward.compute_cell_count": [[266, null]], "polaris.ocean.tasks.inertial_gravity_wave.init.Init": [[267, null]], "polaris.ocean.tasks.inertial_gravity_wave.init.Init.run": [[268, null]], "polaris.ocean.tasks.inertial_gravity_wave.viz.Viz": [[269, null]], "polaris.ocean.tasks.inertial_gravity_wave.viz.Viz.run": [[270, null]], "polaris.ocean.tasks.internal_wave.add_internal_wave_tasks": [[271, null]], "polaris.ocean.tasks.internal_wave.default.Default": [[272, null]], "polaris.ocean.tasks.internal_wave.forward.Forward": [[273, null]], "polaris.ocean.tasks.internal_wave.forward.Forward.compute_cell_count": [[274, null]], "polaris.ocean.tasks.internal_wave.forward.Forward.dynamic_model_config": [[275, null]], "polaris.ocean.tasks.internal_wave.init.Init": [[276, null]], "polaris.ocean.tasks.internal_wave.init.Init.run": [[277, null]], "polaris.ocean.tasks.internal_wave.rpe.Rpe": [[278, null]], "polaris.ocean.tasks.internal_wave.rpe.Rpe.configure": [[279, null]], "polaris.ocean.tasks.internal_wave.rpe.analysis.Analysis": [[280, null]], "polaris.ocean.tasks.internal_wave.rpe.analysis.Analysis.run": [[281, null]], "polaris.ocean.tasks.internal_wave.viz.Viz": [[282, null]], "polaris.ocean.tasks.internal_wave.viz.Viz.run": [[283, null]], "polaris.ocean.tasks.manufactured_solution.ManufacturedSolution": [[284, null]], "polaris.ocean.tasks.manufactured_solution.add_manufactured_solution_tasks": [[285, null]], "polaris.ocean.tasks.manufactured_solution.analysis.Analysis": [[286, null]], "polaris.ocean.tasks.manufactured_solution.analysis.Analysis.exact_solution": [[287, null]], "polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution": [[288, null]], "polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution.normal_velocity": [[289, null]], "polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution.ssh": [[290, null]], "polaris.ocean.tasks.manufactured_solution.forward.Forward": [[291, null]], "polaris.ocean.tasks.manufactured_solution.forward.Forward.compute_cell_count": [[292, null]], "polaris.ocean.tasks.manufactured_solution.init.Init": [[293, null]], "polaris.ocean.tasks.manufactured_solution.init.Init.run": [[294, null]], "polaris.ocean.tasks.manufactured_solution.init.Init.setup": [[295, null]], "polaris.ocean.tasks.manufactured_solution.viz.Viz": [[296, null]], "polaris.ocean.tasks.manufactured_solution.viz.Viz.run": [[297, null]], "polaris.ocean.tasks.single_column.add_single_column_tasks": [[298, null]], "polaris.ocean.tasks.single_column.cvmix.CVMix": [[299, null]], "polaris.ocean.tasks.single_column.forward.Forward": [[300, null]], "polaris.ocean.tasks.single_column.ideal_age.IdealAge": [[301, null]], "polaris.ocean.tasks.single_column.init.Init": [[302, null]], "polaris.ocean.tasks.single_column.init.Init.run": [[303, null]], "polaris.ocean.tasks.single_column.viz.Viz": [[304, null]], "polaris.ocean.tasks.single_column.viz.Viz.run": [[305, null]], "polaris.ocean.tasks.sphere_transport.SphereTransport": [[306, null]], "polaris.ocean.tasks.sphere_transport.SphereTransport.configure": [[307, null]], "polaris.ocean.tasks.sphere_transport.add_sphere_transport_tasks": [[308, null]], "polaris.ocean.tasks.sphere_transport.analysis.Analysis": [[309, null]], "polaris.ocean.tasks.sphere_transport.analysis.Analysis.convergence_parameters": [[310, null]], "polaris.ocean.tasks.sphere_transport.filament_analysis.FilamentAnalysis": [[311, null]], "polaris.ocean.tasks.sphere_transport.filament_analysis.FilamentAnalysis.run": [[312, null]], "polaris.ocean.tasks.sphere_transport.forward.Forward": [[313, null]], "polaris.ocean.tasks.sphere_transport.init.Init": [[314, null]], "polaris.ocean.tasks.sphere_transport.init.Init.run": [[315, null]], "polaris.ocean.tasks.sphere_transport.mixing_analysis.MixingAnalysis": [[316, null]], "polaris.ocean.tasks.sphere_transport.mixing_analysis.MixingAnalysis.run": [[317, null]], "polaris.ocean.tasks.sphere_transport.viz.Viz": [[318, null]], "polaris.ocean.tasks.sphere_transport.viz.Viz.run": [[319, null]], "polaris.ocean.vertical.grid_1d.generate_1d_grid": [[320, null]], "polaris.ocean.vertical.grid_1d.write_1d_grid": [[321, null]], "polaris.ocean.vertical.init_vertical_coord": [[322, null]], "polaris.ocean.vertical.partial_cells.alter_bottom_depth": [[323, null]], "polaris.ocean.vertical.partial_cells.alter_ssh": [[324, null]], "polaris.ocean.vertical.sigma.init_sigma_vertical_coord": [[325, null]], "polaris.ocean.vertical.sigma.update_sigma_layer_thickness": [[326, null]], "polaris.ocean.vertical.update_layer_thickness": [[327, null]], "polaris.ocean.vertical.zlevel.compute_min_max_level_cell": [[328, null]], "polaris.ocean.vertical.zlevel.compute_z_level_layer_thickness": [[329, null]], "polaris.ocean.vertical.zlevel.compute_z_level_resting_thickness": [[330, null]], "polaris.ocean.vertical.zlevel.init_z_level_vertical_coord": [[331, null]], "polaris.ocean.vertical.zlevel.update_z_level_layer_thickness": [[332, null]], "polaris.ocean.vertical.zstar.init_z_star_vertical_coord": [[333, null]], "polaris.ocean.vertical.zstar.update_z_star_layer_thickness": [[334, null]], "polaris.ocean.viz.compute_transect": [[335, null]], "polaris.ocean.viz.plot_transect": [[336, null]], "polaris.ocean.viz.transect.horiz.find_planar_transect_cells_and_weights": [[337, null]], "polaris.ocean.viz.transect.horiz.find_spherical_transect_cells_and_weights": [[338, null]], "polaris.ocean.viz.transect.horiz.make_triangle_tree": [[339, null]], "polaris.ocean.viz.transect.horiz.mesh_to_triangles": [[340, null]], "polaris.ocean.viz.transect.vert.find_transect_levels_and_weights": [[341, null]], "polaris.ocean.viz.transect.vert.interp_mpas_to_transect_cells": [[342, null]], "polaris.ocean.viz.transect.vert.interp_mpas_to_transect_nodes": [[343, null]], "polaris.parallel.get_available_parallel_resources": [[96, null]], "polaris.parallel.get_parallel_command": [[97, null]], "polaris.parallel.run_command": [[98, null]], "polaris.parallel.set_cores_per_node": [[99, null]], "polaris.provenance.write": [[100, null]], "polaris.remap.MappingFileStep": [[101, null]], "polaris.remap.MappingFileStep.dst_from_lon_lat": [[102, null]], "polaris.remap.MappingFileStep.dst_from_mpas": [[103, null]], "polaris.remap.MappingFileStep.dst_from_points": [[104, null]], "polaris.remap.MappingFileStep.dst_from_proj": [[105, null]], "polaris.remap.MappingFileStep.dst_global_lon_lat": [[106, null]], "polaris.remap.MappingFileStep.get_remapper": [[107, null]], "polaris.remap.MappingFileStep.runtime_setup": [[108, null]], "polaris.remap.MappingFileStep.src_from_lon_lat": [[109, null]], "polaris.remap.MappingFileStep.src_from_mpas": [[110, null]], "polaris.remap.MappingFileStep.src_from_proj": [[111, null]], "polaris.run.complete_step_run": [[112, null]], "polaris.run.load_dependencies": [[113, null]], "polaris.run.serial.run_single_step": [[114, null]], "polaris.run.serial.run_tasks": [[115, null]], "polaris.run.setup_config": [[116, null]], "polaris.run.unpickle_suite": [[117, null]], "polaris.seaice.SeaIce": [[372, null]], "polaris.seaice.tasks.single_column.add_single_column_tasks": [[373, null]], "polaris.seaice.tasks.single_column.exact_restart.ExactRestart": [[374, null]], "polaris.seaice.tasks.single_column.exact_restart.validate.Validate": [[375, null]], "polaris.seaice.tasks.single_column.exact_restart.validate.Validate.run": [[376, null]], "polaris.seaice.tasks.single_column.forward.Forward": [[377, null]], "polaris.seaice.tasks.single_column.standard_physics.StandardPhysics": [[378, null]], "polaris.seaice.tasks.single_column.standard_physics.viz.Viz": [[379, null]], "polaris.seaice.tasks.single_column.standard_physics.viz.Viz.run": [[380, null]], "polaris.setup.setup_task": [[118, null]], "polaris.setup.setup_tasks": [[119, null]], "polaris.streams.read": [[120, null]], "polaris.streams.update_defaults": [[121, null]], "polaris.streams.update_tree": [[122, null]], "polaris.streams.write": [[123, null]], "polaris.suite.setup_suite": [[124, null]], "polaris.validate.compare_variables": [[125, null]], "polaris.viz.plot_global_lat_lon_field": [[126, null]], "polaris.viz.plot_global_mpas_field": [[127, null]], "polaris.viz.plot_horiz_field": [[128, null]], "polaris.viz.use_mplstyle": [[129, null]], "polaris.yaml.PolarisYaml": [[130, null]], "polaris.yaml.PolarisYaml.read": [[131, null]], "polaris.yaml.PolarisYaml.update": [[132, null]], "polaris.yaml.PolarisYaml.write": [[133, null]], "polaris.yaml.main_mpas_to_yaml": [[134, null]], "polaris.yaml.mpas_namelist_and_streams_to_yaml": [[135, null]], "polaris.yaml.yaml_to_mpas_streams": [[136, null]], "provenance": [[3, "provenance"]], "reference (resting) potential energy (RPE)": [[145, "reference-resting-potential-energy-rpe"]], "remap": [[3, "remap"]], "restart": [[347, "restart"], [350, "restart"], [402, "restart"]], "restart_step": [[350, "restart-step"]], "rotation 2-d": [[414, null]], "rotation_2d": [[359, null]], "rpe": [[347, "rpe"], [356, "rpe"], [402, "rpe"]], "run": [[3, "run"]], "run()": [[365, "run"]], "run.serial module": [[8, "run-serial-module"]], "runtime_setup()": [[365, "runtime-setup"]], "seaice": [[370, null]], "setup": [[3, "setup"]], "setup module": [[8, "setup-module"]], "setup()": [[365, "setup"]], "sigma": [[399, "sigma"]], "single column": [[415, null], [420, null]], "single_column": [[144, "single-column"], [360, null], [370, "single-column"], [384, null]], "sphere_transport": [[144, "sphere-transport"]], "standard physics test": [[420, "standard-physics-test"]], "standard_physics_test": [[384, "standard-physics-test"]], "streams": [[3, "streams"]], "suite": [[3, "suite"]], "suite module": [[8, "suite-module"]], "supported models": [[403, "supported-models"]], "suppported models": [[402, "suppported-models"], [404, "suppported-models"], [405, "suppported-models"], [406, "suppported-models"], [407, "suppported-models"], [408, "suppported-models"], [410, "suppported-models"], [411, "suppported-models"], [412, "suppported-models"], [413, "suppported-models"], [414, "suppported-models"], [415, "suppported-models"], [416, "suppported-models"]], "tanh_dz": [[399, "tanh-dz"]], "task_name": [[416, "task-name"], [421, "task-name"]], "thread": [[402, "thread"]], "threads": [[347, "threads"]], "time step and run duration": [[402, "time-step-and-run-duration"], [402, "id6"], [402, "id13"], [402, "id21"], [402, "id29"], [402, "id36"], [403, "time-step-and-run-duration"], [404, "time-step-and-run-duration"], [405, "time-step-and-run-duration"], [406, "time-step-and-run-duration"], [407, "time-step-and-run-duration"], [408, "time-step-and-run-duration"], [408, "id6"], [408, "id13"], [408, "id21"], [410, "time-step-and-run-duration"], [411, "time-step-and-run-duration"], [411, "id6"], [412, "time-step-and-run-duration"], [413, "time-step-and-run-duration"], [414, "time-step-and-run-duration"], [415, "time-step-and-run-duration"], [415, "id12"], [416, "time-step-and-run-duration"], [421, "time-step-and-run-duration"]], "timestep and run duration": [[420, "timestep-and-run-duration"], [420, "id11"]], "uniform": [[399, "uniform"]], "validate": [[3, "validate"], [347, "validate"], [350, "validate"], [353, "validate"], [356, "validate"]], "vertical grid": [[402, "vertical-grid"], [402, "id3"], [402, "id10"], [402, "id18"], [402, "id26"], [402, "id33"], [403, "vertical-grid"], [404, "vertical-grid"], [405, "vertical-grid"], [406, "vertical-grid"], [407, "vertical-grid"], [408, "vertical-grid"], [408, "id3"], [408, "id10"], [408, "id18"], [410, "vertical-grid"], [411, "vertical-grid"], [411, "id3"], [412, "vertical-grid"], [413, "vertical-grid"], [414, "vertical-grid"], [415, "vertical-grid"], [415, "id4"], [415, "id9"], [416, "vertical-grid"]], "visualization": [[420, "visualization"]], "viz": [[3, "viz"], [349, "viz"], [350, "viz"], [351, "viz"], [352, "viz"], [353, "viz"], [355, "viz"], [357, "viz"], [358, "viz"], [359, "viz"], [360, "viz"], [384, "viz"]], "yaml": [[3, "yaml"]], "z-level": [[399, "z-level"]], "z-star": [[399, "z-star"]], "\u2026in the polaris framework": [[368, "in-the-polaris-framework"]], "\u2026within a component": [[368, "within-a-component"]], "\u2026within a group of related tasks": [[368, "within-a-group-of-related-tasks"]], "\u2026within a task": [[368, "within-a-task"]]}, "docnames": ["design_docs/index", "design_docs/shared_steps", "design_docs/template", "developers_guide/api", "developers_guide/building_docs", "developers_guide/command_line", "developers_guide/deploying_spack", "developers_guide/docs", "developers_guide/framework/commands", "developers_guide/framework/config", "developers_guide/framework/index", "developers_guide/framework/io", "developers_guide/framework/logging", "developers_guide/framework/mesh", "developers_guide/framework/model", "developers_guide/framework/mpas", "developers_guide/framework/provenance", "developers_guide/framework/remapping", "developers_guide/framework/validation", "developers_guide/framework/visualization", "developers_guide/generated/polaris.Component", "developers_guide/generated/polaris.Component.add_config", "developers_guide/generated/polaris.Component.add_step", "developers_guide/generated/polaris.Component.add_task", "developers_guide/generated/polaris.Component.remove_step", "developers_guide/generated/polaris.ModelStep", "developers_guide/generated/polaris.ModelStep.add_model_config_options", "developers_guide/generated/polaris.ModelStep.add_namelist_file", "developers_guide/generated/polaris.ModelStep.add_streams_file", "developers_guide/generated/polaris.ModelStep.add_yaml_file", "developers_guide/generated/polaris.ModelStep.dynamic_model_config", "developers_guide/generated/polaris.ModelStep.map_yaml_configs", "developers_guide/generated/polaris.ModelStep.map_yaml_options", "developers_guide/generated/polaris.ModelStep.map_yaml_to_namelist", "developers_guide/generated/polaris.ModelStep.partition", "developers_guide/generated/polaris.ModelStep.process_inputs_and_outputs", "developers_guide/generated/polaris.ModelStep.runtime_setup", "developers_guide/generated/polaris.ModelStep.set_model_resources", "developers_guide/generated/polaris.ModelStep.setup", "developers_guide/generated/polaris.ModelStep.update_namelist_pio", "developers_guide/generated/polaris.Step", "developers_guide/generated/polaris.Step.add_dependency", "developers_guide/generated/polaris.Step.add_input_file", "developers_guide/generated/polaris.Step.add_output_file", "developers_guide/generated/polaris.Step.constrain_resources", "developers_guide/generated/polaris.Step.run", "developers_guide/generated/polaris.Step.runtime_setup", "developers_guide/generated/polaris.Step.set_resources", "developers_guide/generated/polaris.Step.set_shared_config", "developers_guide/generated/polaris.Step.setup", "developers_guide/generated/polaris.Step.validate_baselines", "developers_guide/generated/polaris.Task", "developers_guide/generated/polaris.Task.add_step", "developers_guide/generated/polaris.Task.configure", "developers_guide/generated/polaris.Task.remove_step", "developers_guide/generated/polaris.Task.set_shared_config", "developers_guide/generated/polaris.__main__.main", "developers_guide/generated/polaris.cache.update_cache", "developers_guide/generated/polaris.components.get_components", "developers_guide/generated/polaris.config.PolarisConfigParser", "developers_guide/generated/polaris.config.PolarisConfigParser.setup", "developers_guide/generated/polaris.io.download", "developers_guide/generated/polaris.io.symlink", "developers_guide/generated/polaris.io.update_permissions", "developers_guide/generated/polaris.job.clean_up_whitespace", "developers_guide/generated/polaris.job.get_slurm_options", "developers_guide/generated/polaris.job.write_job_script", "developers_guide/generated/polaris.list.list_cases", "developers_guide/generated/polaris.list.list_machines", "developers_guide/generated/polaris.list.list_suites", "developers_guide/generated/polaris.logging.log_method_call", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.build_subdivisions_cell_width_lat_lon", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.get_cell_width", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.get_subdivisions", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.make_jigsaw_mesh", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.run", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.setup", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep.build_cell_width_lat_lon", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep.make_jigsaw_mesh", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep.run", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep.setup", "developers_guide/generated/polaris.mesh.planar.compute_planar_hex_nx_ny", "developers_guide/generated/polaris.mesh.spherical.SphericalBaseStep", "developers_guide/generated/polaris.mesh.spherical.SphericalBaseStep.run", "developers_guide/generated/polaris.mesh.spherical.SphericalBaseStep.save_and_plot_cell_width", "developers_guide/generated/polaris.mesh.spherical.SphericalBaseStep.setup", "developers_guide/generated/polaris.model_step.make_graph_file", "developers_guide/generated/polaris.mpas.area_for_field", "developers_guide/generated/polaris.mpas.cell_mask_to_edge_mask", "developers_guide/generated/polaris.mpas.time_index_from_xtime", "developers_guide/generated/polaris.namelist.ingest", "developers_guide/generated/polaris.namelist.parse_replacements", "developers_guide/generated/polaris.namelist.replace", "developers_guide/generated/polaris.namelist.write", "developers_guide/generated/polaris.parallel.get_available_parallel_resources", "developers_guide/generated/polaris.parallel.get_parallel_command", "developers_guide/generated/polaris.parallel.run_command", "developers_guide/generated/polaris.parallel.set_cores_per_node", "developers_guide/generated/polaris.provenance.write", "developers_guide/generated/polaris.remap.MappingFileStep", "developers_guide/generated/polaris.remap.MappingFileStep.dst_from_lon_lat", "developers_guide/generated/polaris.remap.MappingFileStep.dst_from_mpas", "developers_guide/generated/polaris.remap.MappingFileStep.dst_from_points", "developers_guide/generated/polaris.remap.MappingFileStep.dst_from_proj", "developers_guide/generated/polaris.remap.MappingFileStep.dst_global_lon_lat", "developers_guide/generated/polaris.remap.MappingFileStep.get_remapper", "developers_guide/generated/polaris.remap.MappingFileStep.runtime_setup", "developers_guide/generated/polaris.remap.MappingFileStep.src_from_lon_lat", "developers_guide/generated/polaris.remap.MappingFileStep.src_from_mpas", "developers_guide/generated/polaris.remap.MappingFileStep.src_from_proj", "developers_guide/generated/polaris.run.complete_step_run", "developers_guide/generated/polaris.run.load_dependencies", "developers_guide/generated/polaris.run.serial.run_single_step", "developers_guide/generated/polaris.run.serial.run_tasks", "developers_guide/generated/polaris.run.setup_config", "developers_guide/generated/polaris.run.unpickle_suite", "developers_guide/generated/polaris.setup.setup_task", "developers_guide/generated/polaris.setup.setup_tasks", "developers_guide/generated/polaris.streams.read", "developers_guide/generated/polaris.streams.update_defaults", "developers_guide/generated/polaris.streams.update_tree", "developers_guide/generated/polaris.streams.write", "developers_guide/generated/polaris.suite.setup_suite", "developers_guide/generated/polaris.validate.compare_variables", "developers_guide/generated/polaris.viz.plot_global_lat_lon_field", "developers_guide/generated/polaris.viz.plot_global_mpas_field", "developers_guide/generated/polaris.viz.plot_horiz_field", "developers_guide/generated/polaris.viz.use_mplstyle", "developers_guide/generated/polaris.yaml.PolarisYaml", "developers_guide/generated/polaris.yaml.PolarisYaml.read", "developers_guide/generated/polaris.yaml.PolarisYaml.update", "developers_guide/generated/polaris.yaml.PolarisYaml.write", "developers_guide/generated/polaris.yaml.main_mpas_to_yaml", "developers_guide/generated/polaris.yaml.mpas_namelist_and_streams_to_yaml", "developers_guide/generated/polaris.yaml.yaml_to_mpas_streams", "developers_guide/machines/anvil", "developers_guide/machines/chicoma", "developers_guide/machines/chrysalis", "developers_guide/machines/compy", "developers_guide/machines/frontier", "developers_guide/machines/index", "developers_guide/machines/perlmutter", "developers_guide/ocean/api", "developers_guide/ocean/framework", "developers_guide/ocean/generated/polaris.ocean.Ocean", "developers_guide/ocean/generated/polaris.ocean.convergence.analysis.ConvergenceAnalysis", "developers_guide/ocean/generated/polaris.ocean.convergence.analysis.ConvergenceAnalysis.compute_error", "developers_guide/ocean/generated/polaris.ocean.convergence.analysis.ConvergenceAnalysis.convergence_parameters", "developers_guide/ocean/generated/polaris.ocean.convergence.analysis.ConvergenceAnalysis.exact_solution", "developers_guide/ocean/generated/polaris.ocean.convergence.analysis.ConvergenceAnalysis.get_output_field", "developers_guide/ocean/generated/polaris.ocean.convergence.analysis.ConvergenceAnalysis.plot_convergence", "developers_guide/ocean/generated/polaris.ocean.convergence.analysis.ConvergenceAnalysis.run", "developers_guide/ocean/generated/polaris.ocean.convergence.analysis.ConvergenceAnalysis.setup", "developers_guide/ocean/generated/polaris.ocean.convergence.forward.ConvergenceForward", "developers_guide/ocean/generated/polaris.ocean.convergence.forward.ConvergenceForward.compute_cell_count", "developers_guide/ocean/generated/polaris.ocean.convergence.forward.ConvergenceForward.dynamic_model_config", "developers_guide/ocean/generated/polaris.ocean.convergence.get_resolution_for_task", "developers_guide/ocean/generated/polaris.ocean.convergence.get_timestep_for_task", "developers_guide/ocean/generated/polaris.ocean.convergence.spherical.SphericalConvergenceForward", "developers_guide/ocean/generated/polaris.ocean.convergence.spherical.SphericalConvergenceForward.compute_cell_count", "developers_guide/ocean/generated/polaris.ocean.ice_shelf.IceShelfTask", "developers_guide/ocean/generated/polaris.ocean.ice_shelf.IceShelfTask.setup_ssh_adjustment_steps", "developers_guide/ocean/generated/polaris.ocean.ice_shelf.SshAdjustment", "developers_guide/ocean/generated/polaris.ocean.ice_shelf.SshAdjustment.run", "developers_guide/ocean/generated/polaris.ocean.ice_shelf.SshForward", "developers_guide/ocean/generated/polaris.ocean.ice_shelf.SshForward.compute_cell_count", "developers_guide/ocean/generated/polaris.ocean.ice_shelf.SshForward.dynamic_model_config", "developers_guide/ocean/generated/polaris.ocean.mesh.spherical.add_spherical_base_mesh_step", "developers_guide/ocean/generated/polaris.ocean.model.OceanIOStep", "developers_guide/ocean/generated/polaris.ocean.model.OceanIOStep.map_from_native_model_vars", "developers_guide/ocean/generated/polaris.ocean.model.OceanIOStep.map_to_native_model_vars", "developers_guide/ocean/generated/polaris.ocean.model.OceanIOStep.open_model_dataset", "developers_guide/ocean/generated/polaris.ocean.model.OceanIOStep.setup", "developers_guide/ocean/generated/polaris.ocean.model.OceanIOStep.write_model_dataset", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.compute_cell_count", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.constrain_resources", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.map_yaml_configs", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.map_yaml_options", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.setup", "developers_guide/ocean/generated/polaris.ocean.model.get_time_interval_string", "developers_guide/ocean/generated/polaris.ocean.rpe.compute_rpe", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.add_baroclinic_channel_tasks", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.decomp.Decomp", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.default.Default", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.forward.Forward", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.forward.Forward.compute_cell_count", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.forward.Forward.dynamic_model_config", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.init.Init", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.init.Init.run", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.init.Init.setup", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.restart.Restart", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.restart.restart_step.RestartStep", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.restart.restart_step.RestartStep.dynamic_model_config", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.rpe.Rpe", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.rpe.Rpe.configure", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis.run", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis.setup", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.threads.Threads", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.validate.Validate", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.validate.Validate.run", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.viz.Viz", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.viz.Viz.run", "developers_guide/ocean/generated/polaris.ocean.tasks.barotropic_gyre.BarotropicGyre", "developers_guide/ocean/generated/polaris.ocean.tasks.barotropic_gyre.add_barotropic_gyre_tasks", "developers_guide/ocean/generated/polaris.ocean.tasks.barotropic_gyre.analysis.Analysis", "developers_guide/ocean/generated/polaris.ocean.tasks.barotropic_gyre.analysis.Analysis.compute_error", "developers_guide/ocean/generated/polaris.ocean.tasks.barotropic_gyre.analysis.Analysis.exact_solution", "developers_guide/ocean/generated/polaris.ocean.tasks.barotropic_gyre.analysis.Analysis.run", "developers_guide/ocean/generated/polaris.ocean.tasks.barotropic_gyre.forward.Forward", "developers_guide/ocean/generated/polaris.ocean.tasks.barotropic_gyre.forward.Forward.compute_cell_count", "developers_guide/ocean/generated/polaris.ocean.tasks.barotropic_gyre.forward.Forward.dynamic_model_config", "developers_guide/ocean/generated/polaris.ocean.tasks.barotropic_gyre.forward.compute_max_time_step", "developers_guide/ocean/generated/polaris.ocean.tasks.barotropic_gyre.init.Init", "developers_guide/ocean/generated/polaris.ocean.tasks.barotropic_gyre.init.Init.run", "developers_guide/ocean/generated/polaris.ocean.tasks.barotropic_gyre.init.Init.setup", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.CosineBell", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.CosineBell.configure", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.add_cosine_bell_tasks", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.analysis.Analysis", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.analysis.Analysis.exact_solution", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.decomp.Decomp", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.forward.Forward", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.init.Init", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.init.Init.run", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.init.cosine_bell", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.restart.Restart", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.restart.RestartStep", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.restart.RestartStep.dynamic_model_config", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.validate.Validate", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.validate.Validate.run", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.viz.Viz", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.viz.Viz.run", "developers_guide/ocean/generated/polaris.ocean.tasks.geostrophic.Geostrophic", "developers_guide/ocean/generated/polaris.ocean.tasks.geostrophic.Geostrophic.configure", "developers_guide/ocean/generated/polaris.ocean.tasks.geostrophic.add_geostrophic_tasks", "developers_guide/ocean/generated/polaris.ocean.tasks.geostrophic.analysis.Analysis", "developers_guide/ocean/generated/polaris.ocean.tasks.geostrophic.analysis.Analysis.exact_solution", "developers_guide/ocean/generated/polaris.ocean.tasks.geostrophic.analysis.Analysis.get_output_field", "developers_guide/ocean/generated/polaris.ocean.tasks.geostrophic.forward.Forward", "developers_guide/ocean/generated/polaris.ocean.tasks.geostrophic.init.Init", "developers_guide/ocean/generated/polaris.ocean.tasks.geostrophic.init.Init.run", "developers_guide/ocean/generated/polaris.ocean.tasks.geostrophic.viz.Viz", "developers_guide/ocean/generated/polaris.ocean.tasks.geostrophic.viz.Viz.run", "developers_guide/ocean/generated/polaris.ocean.tasks.ice_shelf_2d.add_ice_shelf_2d_tasks", "developers_guide/ocean/generated/polaris.ocean.tasks.ice_shelf_2d.default.Default", "developers_guide/ocean/generated/polaris.ocean.tasks.ice_shelf_2d.forward.Forward", "developers_guide/ocean/generated/polaris.ocean.tasks.ice_shelf_2d.forward.Forward.compute_cell_count", "developers_guide/ocean/generated/polaris.ocean.tasks.ice_shelf_2d.forward.Forward.dynamic_model_config", "developers_guide/ocean/generated/polaris.ocean.tasks.ice_shelf_2d.init.Init", "developers_guide/ocean/generated/polaris.ocean.tasks.ice_shelf_2d.init.Init.run", "developers_guide/ocean/generated/polaris.ocean.tasks.ice_shelf_2d.validate.Validate", "developers_guide/ocean/generated/polaris.ocean.tasks.ice_shelf_2d.validate.Validate.run", "developers_guide/ocean/generated/polaris.ocean.tasks.ice_shelf_2d.viz.Viz", "developers_guide/ocean/generated/polaris.ocean.tasks.ice_shelf_2d.viz.Viz.run", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.InertialGravityWave", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.add_inertial_gravity_wave_tasks", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.analysis.Analysis", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.analysis.Analysis.exact_solution", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution.normal_velocity", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution.ssh", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.forward.Forward", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.forward.Forward.compute_cell_count", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.init.Init", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.init.Init.run", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.viz.Viz", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.viz.Viz.run", "developers_guide/ocean/generated/polaris.ocean.tasks.internal_wave.add_internal_wave_tasks", "developers_guide/ocean/generated/polaris.ocean.tasks.internal_wave.default.Default", "developers_guide/ocean/generated/polaris.ocean.tasks.internal_wave.forward.Forward", "developers_guide/ocean/generated/polaris.ocean.tasks.internal_wave.forward.Forward.compute_cell_count", "developers_guide/ocean/generated/polaris.ocean.tasks.internal_wave.forward.Forward.dynamic_model_config", "developers_guide/ocean/generated/polaris.ocean.tasks.internal_wave.init.Init", "developers_guide/ocean/generated/polaris.ocean.tasks.internal_wave.init.Init.run", "developers_guide/ocean/generated/polaris.ocean.tasks.internal_wave.rpe.Rpe", "developers_guide/ocean/generated/polaris.ocean.tasks.internal_wave.rpe.Rpe.configure", "developers_guide/ocean/generated/polaris.ocean.tasks.internal_wave.rpe.analysis.Analysis", "developers_guide/ocean/generated/polaris.ocean.tasks.internal_wave.rpe.analysis.Analysis.run", "developers_guide/ocean/generated/polaris.ocean.tasks.internal_wave.viz.Viz", "developers_guide/ocean/generated/polaris.ocean.tasks.internal_wave.viz.Viz.run", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.ManufacturedSolution", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.add_manufactured_solution_tasks", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.analysis.Analysis", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.analysis.Analysis.exact_solution", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution.normal_velocity", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution.ssh", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.forward.Forward", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.forward.Forward.compute_cell_count", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.init.Init", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.init.Init.run", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.init.Init.setup", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.viz.Viz", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.viz.Viz.run", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.add_single_column_tasks", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.cvmix.CVMix", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.forward.Forward", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.ideal_age.IdealAge", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.init.Init", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.init.Init.run", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.viz.Viz", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.viz.Viz.run", "developers_guide/ocean/generated/polaris.ocean.tasks.sphere_transport.SphereTransport", "developers_guide/ocean/generated/polaris.ocean.tasks.sphere_transport.SphereTransport.configure", "developers_guide/ocean/generated/polaris.ocean.tasks.sphere_transport.add_sphere_transport_tasks", "developers_guide/ocean/generated/polaris.ocean.tasks.sphere_transport.analysis.Analysis", "developers_guide/ocean/generated/polaris.ocean.tasks.sphere_transport.analysis.Analysis.convergence_parameters", "developers_guide/ocean/generated/polaris.ocean.tasks.sphere_transport.filament_analysis.FilamentAnalysis", "developers_guide/ocean/generated/polaris.ocean.tasks.sphere_transport.filament_analysis.FilamentAnalysis.run", "developers_guide/ocean/generated/polaris.ocean.tasks.sphere_transport.forward.Forward", "developers_guide/ocean/generated/polaris.ocean.tasks.sphere_transport.init.Init", "developers_guide/ocean/generated/polaris.ocean.tasks.sphere_transport.init.Init.run", "developers_guide/ocean/generated/polaris.ocean.tasks.sphere_transport.mixing_analysis.MixingAnalysis", "developers_guide/ocean/generated/polaris.ocean.tasks.sphere_transport.mixing_analysis.MixingAnalysis.run", "developers_guide/ocean/generated/polaris.ocean.tasks.sphere_transport.viz.Viz", "developers_guide/ocean/generated/polaris.ocean.tasks.sphere_transport.viz.Viz.run", "developers_guide/ocean/generated/polaris.ocean.vertical.grid_1d.generate_1d_grid", "developers_guide/ocean/generated/polaris.ocean.vertical.grid_1d.write_1d_grid", "developers_guide/ocean/generated/polaris.ocean.vertical.init_vertical_coord", "developers_guide/ocean/generated/polaris.ocean.vertical.partial_cells.alter_bottom_depth", "developers_guide/ocean/generated/polaris.ocean.vertical.partial_cells.alter_ssh", "developers_guide/ocean/generated/polaris.ocean.vertical.sigma.init_sigma_vertical_coord", "developers_guide/ocean/generated/polaris.ocean.vertical.sigma.update_sigma_layer_thickness", "developers_guide/ocean/generated/polaris.ocean.vertical.update_layer_thickness", "developers_guide/ocean/generated/polaris.ocean.vertical.zlevel.compute_min_max_level_cell", "developers_guide/ocean/generated/polaris.ocean.vertical.zlevel.compute_z_level_layer_thickness", "developers_guide/ocean/generated/polaris.ocean.vertical.zlevel.compute_z_level_resting_thickness", "developers_guide/ocean/generated/polaris.ocean.vertical.zlevel.init_z_level_vertical_coord", "developers_guide/ocean/generated/polaris.ocean.vertical.zlevel.update_z_level_layer_thickness", "developers_guide/ocean/generated/polaris.ocean.vertical.zstar.init_z_star_vertical_coord", "developers_guide/ocean/generated/polaris.ocean.vertical.zstar.update_z_star_layer_thickness", "developers_guide/ocean/generated/polaris.ocean.viz.compute_transect", "developers_guide/ocean/generated/polaris.ocean.viz.plot_transect", "developers_guide/ocean/generated/polaris.ocean.viz.transect.horiz.find_planar_transect_cells_and_weights", "developers_guide/ocean/generated/polaris.ocean.viz.transect.horiz.find_spherical_transect_cells_and_weights", "developers_guide/ocean/generated/polaris.ocean.viz.transect.horiz.make_triangle_tree", "developers_guide/ocean/generated/polaris.ocean.viz.transect.horiz.mesh_to_triangles", "developers_guide/ocean/generated/polaris.ocean.viz.transect.vert.find_transect_levels_and_weights", "developers_guide/ocean/generated/polaris.ocean.viz.transect.vert.interp_mpas_to_transect_cells", "developers_guide/ocean/generated/polaris.ocean.viz.transect.vert.interp_mpas_to_transect_nodes", "developers_guide/ocean/index", "developers_guide/ocean/models/index", "developers_guide/ocean/models/mpas_ocean", "developers_guide/ocean/tasks/baroclinic_channel", "developers_guide/ocean/tasks/barotropic_gyre", "developers_guide/ocean/tasks/correlated_tracers_2d", "developers_guide/ocean/tasks/cosine_bell", "developers_guide/ocean/tasks/divergent_2d", "developers_guide/ocean/tasks/geostrophic", "developers_guide/ocean/tasks/ice_shelf_2d", "developers_guide/ocean/tasks/index", "developers_guide/ocean/tasks/inertial_gravity_wave", "developers_guide/ocean/tasks/internal_wave", "developers_guide/ocean/tasks/manufactured_solution", "developers_guide/ocean/tasks/nondivergent_2d", "developers_guide/ocean/tasks/rotation_2d", "developers_guide/ocean/tasks/single_column", "developers_guide/organization/categories_of_tasks", "developers_guide/organization/components", "developers_guide/organization/directories", "developers_guide/organization/index", "developers_guide/organization/steps", "developers_guide/organization/suites", "developers_guide/organization/tasks", "developers_guide/overview", "developers_guide/quick_start", "developers_guide/seaice/api", "developers_guide/seaice/framework", "developers_guide/seaice/generated/polaris.seaice.SeaIce", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.add_single_column_tasks", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.exact_restart.ExactRestart", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.exact_restart.validate.Validate", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.exact_restart.validate.Validate.run", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.forward.Forward", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.standard_physics.StandardPhysics", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.standard_physics.viz.Viz", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.standard_physics.viz.Viz.run", "developers_guide/seaice/index", "developers_guide/seaice/mpas_seaice", "developers_guide/seaice/tasks/index", "developers_guide/seaice/tasks/single_column", "developers_guide/troubleshooting", "glossary", "index", "tutorials/dev_add_test_group", "users_guide/config_files", "users_guide/machines/anvil", "users_guide/machines/chicoma", "users_guide/machines/chrysalis", "users_guide/machines/compy", "users_guide/machines/frontier", "users_guide/machines/index", "users_guide/machines/perlmutter", "users_guide/ocean/framework/ice_shelf", "users_guide/ocean/framework/index", "users_guide/ocean/framework/vertical", "users_guide/ocean/index", "users_guide/ocean/suites", "users_guide/ocean/tasks/baroclinic_channel", "users_guide/ocean/tasks/barotropic_gyre", "users_guide/ocean/tasks/correlated_tracers_2d", "users_guide/ocean/tasks/cosine_bell", "users_guide/ocean/tasks/divergent_2d", "users_guide/ocean/tasks/geostrophic", "users_guide/ocean/tasks/ice_shelf_2d", "users_guide/ocean/tasks/index", "users_guide/ocean/tasks/inertial_gravity_wave", "users_guide/ocean/tasks/internal_wave", "users_guide/ocean/tasks/manufactured_solution", "users_guide/ocean/tasks/nondivergent_2d", "users_guide/ocean/tasks/rotation_2d", "users_guide/ocean/tasks/single_column", "users_guide/ocean/tasks/template", "users_guide/quick_start", "users_guide/seaice/index", "users_guide/seaice/tasks/index", "users_guide/seaice/tasks/single_column", "users_guide/seaice/tasks/template", "users_guide/suites", "users_guide/tasks"], "envversion": {"sphinx": 64, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.viewcode": 1}, "filenames": ["design_docs/index.md", "design_docs/shared_steps.md", "design_docs/template.md", "developers_guide/api.md", "developers_guide/building_docs.md", "developers_guide/command_line.md", "developers_guide/deploying_spack.md", "developers_guide/docs.md", "developers_guide/framework/commands.md", "developers_guide/framework/config.md", "developers_guide/framework/index.md", "developers_guide/framework/io.md", "developers_guide/framework/logging.md", "developers_guide/framework/mesh.md", "developers_guide/framework/model.md", "developers_guide/framework/mpas.md", "developers_guide/framework/provenance.md", "developers_guide/framework/remapping.md", "developers_guide/framework/validation.md", "developers_guide/framework/visualization.md", "developers_guide/generated/polaris.Component.rst", "developers_guide/generated/polaris.Component.add_config.rst", "developers_guide/generated/polaris.Component.add_step.rst", "developers_guide/generated/polaris.Component.add_task.rst", "developers_guide/generated/polaris.Component.remove_step.rst", "developers_guide/generated/polaris.ModelStep.rst", "developers_guide/generated/polaris.ModelStep.add_model_config_options.rst", "developers_guide/generated/polaris.ModelStep.add_namelist_file.rst", "developers_guide/generated/polaris.ModelStep.add_streams_file.rst", "developers_guide/generated/polaris.ModelStep.add_yaml_file.rst", "developers_guide/generated/polaris.ModelStep.dynamic_model_config.rst", "developers_guide/generated/polaris.ModelStep.map_yaml_configs.rst", "developers_guide/generated/polaris.ModelStep.map_yaml_options.rst", "developers_guide/generated/polaris.ModelStep.map_yaml_to_namelist.rst", "developers_guide/generated/polaris.ModelStep.partition.rst", "developers_guide/generated/polaris.ModelStep.process_inputs_and_outputs.rst", "developers_guide/generated/polaris.ModelStep.runtime_setup.rst", "developers_guide/generated/polaris.ModelStep.set_model_resources.rst", "developers_guide/generated/polaris.ModelStep.setup.rst", "developers_guide/generated/polaris.ModelStep.update_namelist_pio.rst", "developers_guide/generated/polaris.Step.rst", "developers_guide/generated/polaris.Step.add_dependency.rst", "developers_guide/generated/polaris.Step.add_input_file.rst", "developers_guide/generated/polaris.Step.add_output_file.rst", "developers_guide/generated/polaris.Step.constrain_resources.rst", "developers_guide/generated/polaris.Step.run.rst", "developers_guide/generated/polaris.Step.runtime_setup.rst", "developers_guide/generated/polaris.Step.set_resources.rst", "developers_guide/generated/polaris.Step.set_shared_config.rst", "developers_guide/generated/polaris.Step.setup.rst", "developers_guide/generated/polaris.Step.validate_baselines.rst", "developers_guide/generated/polaris.Task.rst", "developers_guide/generated/polaris.Task.add_step.rst", "developers_guide/generated/polaris.Task.configure.rst", "developers_guide/generated/polaris.Task.remove_step.rst", "developers_guide/generated/polaris.Task.set_shared_config.rst", "developers_guide/generated/polaris.__main__.main.rst", "developers_guide/generated/polaris.cache.update_cache.rst", "developers_guide/generated/polaris.components.get_components.rst", "developers_guide/generated/polaris.config.PolarisConfigParser.rst", "developers_guide/generated/polaris.config.PolarisConfigParser.setup.rst", "developers_guide/generated/polaris.io.download.rst", "developers_guide/generated/polaris.io.symlink.rst", "developers_guide/generated/polaris.io.update_permissions.rst", "developers_guide/generated/polaris.job.clean_up_whitespace.rst", "developers_guide/generated/polaris.job.get_slurm_options.rst", "developers_guide/generated/polaris.job.write_job_script.rst", "developers_guide/generated/polaris.list.list_cases.rst", "developers_guide/generated/polaris.list.list_machines.rst", "developers_guide/generated/polaris.list.list_suites.rst", "developers_guide/generated/polaris.logging.log_method_call.rst", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.rst", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.build_subdivisions_cell_width_lat_lon.rst", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.get_cell_width.rst", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.get_subdivisions.rst", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.make_jigsaw_mesh.rst", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.run.rst", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.setup.rst", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep.rst", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep.build_cell_width_lat_lon.rst", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep.make_jigsaw_mesh.rst", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep.run.rst", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep.setup.rst", "developers_guide/generated/polaris.mesh.planar.compute_planar_hex_nx_ny.rst", "developers_guide/generated/polaris.mesh.spherical.SphericalBaseStep.rst", "developers_guide/generated/polaris.mesh.spherical.SphericalBaseStep.run.rst", "developers_guide/generated/polaris.mesh.spherical.SphericalBaseStep.save_and_plot_cell_width.rst", "developers_guide/generated/polaris.mesh.spherical.SphericalBaseStep.setup.rst", "developers_guide/generated/polaris.model_step.make_graph_file.rst", "developers_guide/generated/polaris.mpas.area_for_field.rst", "developers_guide/generated/polaris.mpas.cell_mask_to_edge_mask.rst", "developers_guide/generated/polaris.mpas.time_index_from_xtime.rst", "developers_guide/generated/polaris.namelist.ingest.rst", "developers_guide/generated/polaris.namelist.parse_replacements.rst", "developers_guide/generated/polaris.namelist.replace.rst", "developers_guide/generated/polaris.namelist.write.rst", "developers_guide/generated/polaris.parallel.get_available_parallel_resources.rst", "developers_guide/generated/polaris.parallel.get_parallel_command.rst", "developers_guide/generated/polaris.parallel.run_command.rst", "developers_guide/generated/polaris.parallel.set_cores_per_node.rst", "developers_guide/generated/polaris.provenance.write.rst", "developers_guide/generated/polaris.remap.MappingFileStep.rst", "developers_guide/generated/polaris.remap.MappingFileStep.dst_from_lon_lat.rst", "developers_guide/generated/polaris.remap.MappingFileStep.dst_from_mpas.rst", "developers_guide/generated/polaris.remap.MappingFileStep.dst_from_points.rst", "developers_guide/generated/polaris.remap.MappingFileStep.dst_from_proj.rst", "developers_guide/generated/polaris.remap.MappingFileStep.dst_global_lon_lat.rst", "developers_guide/generated/polaris.remap.MappingFileStep.get_remapper.rst", "developers_guide/generated/polaris.remap.MappingFileStep.runtime_setup.rst", "developers_guide/generated/polaris.remap.MappingFileStep.src_from_lon_lat.rst", "developers_guide/generated/polaris.remap.MappingFileStep.src_from_mpas.rst", "developers_guide/generated/polaris.remap.MappingFileStep.src_from_proj.rst", "developers_guide/generated/polaris.run.complete_step_run.rst", "developers_guide/generated/polaris.run.load_dependencies.rst", "developers_guide/generated/polaris.run.serial.run_single_step.rst", "developers_guide/generated/polaris.run.serial.run_tasks.rst", "developers_guide/generated/polaris.run.setup_config.rst", "developers_guide/generated/polaris.run.unpickle_suite.rst", "developers_guide/generated/polaris.setup.setup_task.rst", "developers_guide/generated/polaris.setup.setup_tasks.rst", "developers_guide/generated/polaris.streams.read.rst", "developers_guide/generated/polaris.streams.update_defaults.rst", "developers_guide/generated/polaris.streams.update_tree.rst", "developers_guide/generated/polaris.streams.write.rst", "developers_guide/generated/polaris.suite.setup_suite.rst", "developers_guide/generated/polaris.validate.compare_variables.rst", "developers_guide/generated/polaris.viz.plot_global_lat_lon_field.rst", "developers_guide/generated/polaris.viz.plot_global_mpas_field.rst", "developers_guide/generated/polaris.viz.plot_horiz_field.rst", "developers_guide/generated/polaris.viz.use_mplstyle.rst", "developers_guide/generated/polaris.yaml.PolarisYaml.rst", "developers_guide/generated/polaris.yaml.PolarisYaml.read.rst", "developers_guide/generated/polaris.yaml.PolarisYaml.update.rst", "developers_guide/generated/polaris.yaml.PolarisYaml.write.rst", "developers_guide/generated/polaris.yaml.main_mpas_to_yaml.rst", "developers_guide/generated/polaris.yaml.mpas_namelist_and_streams_to_yaml.rst", "developers_guide/generated/polaris.yaml.yaml_to_mpas_streams.rst", "developers_guide/machines/anvil.md", "developers_guide/machines/chicoma.md", "developers_guide/machines/chrysalis.md", "developers_guide/machines/compy.md", "developers_guide/machines/frontier.md", "developers_guide/machines/index.md", "developers_guide/machines/perlmutter.md", "developers_guide/ocean/api.md", "developers_guide/ocean/framework.md", "developers_guide/ocean/generated/polaris.ocean.Ocean.rst", "developers_guide/ocean/generated/polaris.ocean.convergence.analysis.ConvergenceAnalysis.rst", "developers_guide/ocean/generated/polaris.ocean.convergence.analysis.ConvergenceAnalysis.compute_error.rst", "developers_guide/ocean/generated/polaris.ocean.convergence.analysis.ConvergenceAnalysis.convergence_parameters.rst", "developers_guide/ocean/generated/polaris.ocean.convergence.analysis.ConvergenceAnalysis.exact_solution.rst", "developers_guide/ocean/generated/polaris.ocean.convergence.analysis.ConvergenceAnalysis.get_output_field.rst", "developers_guide/ocean/generated/polaris.ocean.convergence.analysis.ConvergenceAnalysis.plot_convergence.rst", "developers_guide/ocean/generated/polaris.ocean.convergence.analysis.ConvergenceAnalysis.run.rst", "developers_guide/ocean/generated/polaris.ocean.convergence.analysis.ConvergenceAnalysis.setup.rst", "developers_guide/ocean/generated/polaris.ocean.convergence.forward.ConvergenceForward.rst", "developers_guide/ocean/generated/polaris.ocean.convergence.forward.ConvergenceForward.compute_cell_count.rst", "developers_guide/ocean/generated/polaris.ocean.convergence.forward.ConvergenceForward.dynamic_model_config.rst", "developers_guide/ocean/generated/polaris.ocean.convergence.get_resolution_for_task.rst", "developers_guide/ocean/generated/polaris.ocean.convergence.get_timestep_for_task.rst", "developers_guide/ocean/generated/polaris.ocean.convergence.spherical.SphericalConvergenceForward.rst", "developers_guide/ocean/generated/polaris.ocean.convergence.spherical.SphericalConvergenceForward.compute_cell_count.rst", "developers_guide/ocean/generated/polaris.ocean.ice_shelf.IceShelfTask.rst", "developers_guide/ocean/generated/polaris.ocean.ice_shelf.IceShelfTask.setup_ssh_adjustment_steps.rst", "developers_guide/ocean/generated/polaris.ocean.ice_shelf.SshAdjustment.rst", "developers_guide/ocean/generated/polaris.ocean.ice_shelf.SshAdjustment.run.rst", "developers_guide/ocean/generated/polaris.ocean.ice_shelf.SshForward.rst", "developers_guide/ocean/generated/polaris.ocean.ice_shelf.SshForward.compute_cell_count.rst", "developers_guide/ocean/generated/polaris.ocean.ice_shelf.SshForward.dynamic_model_config.rst", "developers_guide/ocean/generated/polaris.ocean.mesh.spherical.add_spherical_base_mesh_step.rst", "developers_guide/ocean/generated/polaris.ocean.model.OceanIOStep.rst", "developers_guide/ocean/generated/polaris.ocean.model.OceanIOStep.map_from_native_model_vars.rst", "developers_guide/ocean/generated/polaris.ocean.model.OceanIOStep.map_to_native_model_vars.rst", "developers_guide/ocean/generated/polaris.ocean.model.OceanIOStep.open_model_dataset.rst", "developers_guide/ocean/generated/polaris.ocean.model.OceanIOStep.setup.rst", "developers_guide/ocean/generated/polaris.ocean.model.OceanIOStep.write_model_dataset.rst", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.rst", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.compute_cell_count.rst", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.constrain_resources.rst", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.map_yaml_configs.rst", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.map_yaml_options.rst", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.setup.rst", "developers_guide/ocean/generated/polaris.ocean.model.get_time_interval_string.rst", "developers_guide/ocean/generated/polaris.ocean.rpe.compute_rpe.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.add_baroclinic_channel_tasks.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.decomp.Decomp.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.default.Default.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.forward.Forward.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.forward.Forward.compute_cell_count.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.forward.Forward.dynamic_model_config.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.init.Init.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.init.Init.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.init.Init.setup.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.restart.Restart.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.restart.restart_step.RestartStep.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.restart.restart_step.RestartStep.dynamic_model_config.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.rpe.Rpe.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.rpe.Rpe.configure.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis.setup.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.threads.Threads.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.validate.Validate.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.validate.Validate.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.viz.Viz.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.viz.Viz.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.barotropic_gyre.BarotropicGyre.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.barotropic_gyre.add_barotropic_gyre_tasks.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.barotropic_gyre.analysis.Analysis.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.barotropic_gyre.analysis.Analysis.compute_error.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.barotropic_gyre.analysis.Analysis.exact_solution.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.barotropic_gyre.analysis.Analysis.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.barotropic_gyre.forward.Forward.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.barotropic_gyre.forward.Forward.compute_cell_count.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.barotropic_gyre.forward.Forward.dynamic_model_config.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.barotropic_gyre.forward.compute_max_time_step.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.barotropic_gyre.init.Init.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.barotropic_gyre.init.Init.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.barotropic_gyre.init.Init.setup.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.CosineBell.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.CosineBell.configure.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.add_cosine_bell_tasks.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.analysis.Analysis.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.analysis.Analysis.exact_solution.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.decomp.Decomp.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.forward.Forward.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.init.Init.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.init.Init.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.init.cosine_bell.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.restart.Restart.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.restart.RestartStep.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.restart.RestartStep.dynamic_model_config.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.validate.Validate.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.validate.Validate.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.viz.Viz.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.viz.Viz.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.geostrophic.Geostrophic.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.geostrophic.Geostrophic.configure.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.geostrophic.add_geostrophic_tasks.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.geostrophic.analysis.Analysis.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.geostrophic.analysis.Analysis.exact_solution.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.geostrophic.analysis.Analysis.get_output_field.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.geostrophic.forward.Forward.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.geostrophic.init.Init.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.geostrophic.init.Init.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.geostrophic.viz.Viz.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.geostrophic.viz.Viz.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.ice_shelf_2d.add_ice_shelf_2d_tasks.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.ice_shelf_2d.default.Default.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.ice_shelf_2d.forward.Forward.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.ice_shelf_2d.forward.Forward.compute_cell_count.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.ice_shelf_2d.forward.Forward.dynamic_model_config.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.ice_shelf_2d.init.Init.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.ice_shelf_2d.init.Init.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.ice_shelf_2d.validate.Validate.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.ice_shelf_2d.validate.Validate.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.ice_shelf_2d.viz.Viz.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.ice_shelf_2d.viz.Viz.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.InertialGravityWave.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.add_inertial_gravity_wave_tasks.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.analysis.Analysis.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.analysis.Analysis.exact_solution.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution.normal_velocity.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution.ssh.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.forward.Forward.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.forward.Forward.compute_cell_count.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.init.Init.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.init.Init.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.viz.Viz.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.viz.Viz.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.internal_wave.add_internal_wave_tasks.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.internal_wave.default.Default.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.internal_wave.forward.Forward.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.internal_wave.forward.Forward.compute_cell_count.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.internal_wave.forward.Forward.dynamic_model_config.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.internal_wave.init.Init.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.internal_wave.init.Init.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.internal_wave.rpe.Rpe.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.internal_wave.rpe.Rpe.configure.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.internal_wave.rpe.analysis.Analysis.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.internal_wave.rpe.analysis.Analysis.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.internal_wave.viz.Viz.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.internal_wave.viz.Viz.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.ManufacturedSolution.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.add_manufactured_solution_tasks.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.analysis.Analysis.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.analysis.Analysis.exact_solution.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution.normal_velocity.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution.ssh.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.forward.Forward.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.forward.Forward.compute_cell_count.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.init.Init.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.init.Init.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.init.Init.setup.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.viz.Viz.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.viz.Viz.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.add_single_column_tasks.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.cvmix.CVMix.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.forward.Forward.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.ideal_age.IdealAge.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.init.Init.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.init.Init.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.viz.Viz.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.viz.Viz.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.sphere_transport.SphereTransport.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.sphere_transport.SphereTransport.configure.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.sphere_transport.add_sphere_transport_tasks.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.sphere_transport.analysis.Analysis.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.sphere_transport.analysis.Analysis.convergence_parameters.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.sphere_transport.filament_analysis.FilamentAnalysis.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.sphere_transport.filament_analysis.FilamentAnalysis.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.sphere_transport.forward.Forward.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.sphere_transport.init.Init.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.sphere_transport.init.Init.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.sphere_transport.mixing_analysis.MixingAnalysis.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.sphere_transport.mixing_analysis.MixingAnalysis.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.sphere_transport.viz.Viz.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.sphere_transport.viz.Viz.run.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.grid_1d.generate_1d_grid.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.grid_1d.write_1d_grid.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.init_vertical_coord.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.partial_cells.alter_bottom_depth.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.partial_cells.alter_ssh.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.sigma.init_sigma_vertical_coord.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.sigma.update_sigma_layer_thickness.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.update_layer_thickness.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.zlevel.compute_min_max_level_cell.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.zlevel.compute_z_level_layer_thickness.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.zlevel.compute_z_level_resting_thickness.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.zlevel.init_z_level_vertical_coord.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.zlevel.update_z_level_layer_thickness.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.zstar.init_z_star_vertical_coord.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.zstar.update_z_star_layer_thickness.rst", "developers_guide/ocean/generated/polaris.ocean.viz.compute_transect.rst", "developers_guide/ocean/generated/polaris.ocean.viz.plot_transect.rst", "developers_guide/ocean/generated/polaris.ocean.viz.transect.horiz.find_planar_transect_cells_and_weights.rst", "developers_guide/ocean/generated/polaris.ocean.viz.transect.horiz.find_spherical_transect_cells_and_weights.rst", "developers_guide/ocean/generated/polaris.ocean.viz.transect.horiz.make_triangle_tree.rst", "developers_guide/ocean/generated/polaris.ocean.viz.transect.horiz.mesh_to_triangles.rst", "developers_guide/ocean/generated/polaris.ocean.viz.transect.vert.find_transect_levels_and_weights.rst", "developers_guide/ocean/generated/polaris.ocean.viz.transect.vert.interp_mpas_to_transect_cells.rst", "developers_guide/ocean/generated/polaris.ocean.viz.transect.vert.interp_mpas_to_transect_nodes.rst", "developers_guide/ocean/index.md", "developers_guide/ocean/models/index.md", "developers_guide/ocean/models/mpas_ocean.md", "developers_guide/ocean/tasks/baroclinic_channel.md", "developers_guide/ocean/tasks/barotropic_gyre.md", "developers_guide/ocean/tasks/correlated_tracers_2d.md", "developers_guide/ocean/tasks/cosine_bell.md", "developers_guide/ocean/tasks/divergent_2d.md", "developers_guide/ocean/tasks/geostrophic.md", "developers_guide/ocean/tasks/ice_shelf_2d.md", "developers_guide/ocean/tasks/index.md", "developers_guide/ocean/tasks/inertial_gravity_wave.md", "developers_guide/ocean/tasks/internal_wave.md", "developers_guide/ocean/tasks/manufactured_solution.md", "developers_guide/ocean/tasks/nondivergent_2d.md", "developers_guide/ocean/tasks/rotation_2d.md", "developers_guide/ocean/tasks/single_column.md", "developers_guide/organization/categories_of_tasks.md", "developers_guide/organization/components.md", "developers_guide/organization/directories.md", "developers_guide/organization/index.md", "developers_guide/organization/steps.md", "developers_guide/organization/suites.md", "developers_guide/organization/tasks.md", "developers_guide/overview.md", "developers_guide/quick_start.md", "developers_guide/seaice/api.md", "developers_guide/seaice/framework.md", "developers_guide/seaice/generated/polaris.seaice.SeaIce.rst", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.add_single_column_tasks.rst", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.exact_restart.ExactRestart.rst", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.exact_restart.validate.Validate.rst", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.exact_restart.validate.Validate.run.rst", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.forward.Forward.rst", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.standard_physics.StandardPhysics.rst", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.standard_physics.viz.Viz.rst", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.standard_physics.viz.Viz.run.rst", "developers_guide/seaice/index.md", "developers_guide/seaice/mpas_seaice.md", "developers_guide/seaice/tasks/index.md", "developers_guide/seaice/tasks/single_column.md", "developers_guide/troubleshooting.md", "glossary.md", "index.md", "tutorials/dev_add_test_group.md", "users_guide/config_files.md", "users_guide/machines/anvil.md", "users_guide/machines/chicoma.md", "users_guide/machines/chrysalis.md", "users_guide/machines/compy.md", "users_guide/machines/frontier.md", "users_guide/machines/index.md", "users_guide/machines/perlmutter.md", "users_guide/ocean/framework/ice_shelf.md", "users_guide/ocean/framework/index.md", "users_guide/ocean/framework/vertical.md", "users_guide/ocean/index.md", "users_guide/ocean/suites.md", "users_guide/ocean/tasks/baroclinic_channel.md", "users_guide/ocean/tasks/barotropic_gyre.md", "users_guide/ocean/tasks/correlated_tracers_2d.md", "users_guide/ocean/tasks/cosine_bell.md", "users_guide/ocean/tasks/divergent_2d.md", "users_guide/ocean/tasks/geostrophic.md", "users_guide/ocean/tasks/ice_shelf_2d.md", "users_guide/ocean/tasks/index.md", "users_guide/ocean/tasks/inertial_gravity_wave.md", "users_guide/ocean/tasks/internal_wave.md", "users_guide/ocean/tasks/manufactured_solution.md", "users_guide/ocean/tasks/nondivergent_2d.md", "users_guide/ocean/tasks/rotation_2d.md", "users_guide/ocean/tasks/single_column.md", "users_guide/ocean/tasks/template.md", "users_guide/quick_start.md", "users_guide/seaice/index.md", "users_guide/seaice/tasks/index.md", "users_guide/seaice/tasks/single_column.md", "users_guide/seaice/tasks/template.md", "users_guide/suites.md", "users_guide/tasks.md"], "indexentries": {"__init__() (polaris.component method)": [[20, "polaris.Component.__init__", false]], "__init__() (polaris.config.polarisconfigparser method)": [[59, "polaris.config.PolarisConfigParser.__init__", false]], "__init__() (polaris.mesh.icosahedralmeshstep method)": [[71, "polaris.mesh.IcosahedralMeshStep.__init__", false]], "__init__() (polaris.mesh.quasiuniformsphericalmeshstep method)": [[78, "polaris.mesh.QuasiUniformSphericalMeshStep.__init__", false]], "__init__() (polaris.mesh.spherical.sphericalbasestep method)": [[84, "polaris.mesh.spherical.SphericalBaseStep.__init__", false]], "__init__() (polaris.modelstep method)": [[25, "polaris.ModelStep.__init__", false]], "__init__() (polaris.ocean.convergence.analysis.convergenceanalysis method)": [[147, "polaris.ocean.convergence.analysis.ConvergenceAnalysis.__init__", false]], "__init__() (polaris.ocean.convergence.forward.convergenceforward method)": [[155, "polaris.ocean.convergence.forward.ConvergenceForward.__init__", false]], "__init__() (polaris.ocean.convergence.spherical.sphericalconvergenceforward method)": [[160, "polaris.ocean.convergence.spherical.SphericalConvergenceForward.__init__", false]], "__init__() (polaris.ocean.ice_shelf.iceshelftask method)": [[162, "polaris.ocean.ice_shelf.IceShelfTask.__init__", false]], "__init__() (polaris.ocean.ice_shelf.sshadjustment method)": [[164, "polaris.ocean.ice_shelf.SshAdjustment.__init__", false]], "__init__() (polaris.ocean.ice_shelf.sshforward method)": [[166, "polaris.ocean.ice_shelf.SshForward.__init__", false]], "__init__() (polaris.ocean.model.oceaniostep method)": [[170, "polaris.ocean.model.OceanIOStep.__init__", false]], "__init__() (polaris.ocean.model.oceanmodelstep method)": [[176, "polaris.ocean.model.OceanModelStep.__init__", false]], "__init__() (polaris.ocean.ocean method)": [[146, "polaris.ocean.Ocean.__init__", false]], "__init__() (polaris.ocean.tasks.baroclinic_channel.decomp.decomp method)": [[185, "polaris.ocean.tasks.baroclinic_channel.decomp.Decomp.__init__", false]], "__init__() (polaris.ocean.tasks.baroclinic_channel.default.default method)": [[186, "polaris.ocean.tasks.baroclinic_channel.default.Default.__init__", false]], "__init__() (polaris.ocean.tasks.baroclinic_channel.forward.forward method)": [[187, "polaris.ocean.tasks.baroclinic_channel.forward.Forward.__init__", false]], "__init__() (polaris.ocean.tasks.baroclinic_channel.init.init method)": [[190, "polaris.ocean.tasks.baroclinic_channel.init.Init.__init__", false]], "__init__() (polaris.ocean.tasks.baroclinic_channel.restart.restart method)": [[193, "polaris.ocean.tasks.baroclinic_channel.restart.Restart.__init__", false]], "__init__() (polaris.ocean.tasks.baroclinic_channel.restart.restart_step.restartstep method)": [[194, "polaris.ocean.tasks.baroclinic_channel.restart.restart_step.RestartStep.__init__", false]], "__init__() (polaris.ocean.tasks.baroclinic_channel.rpe.analysis.analysis method)": [[198, "polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis.__init__", false]], "__init__() (polaris.ocean.tasks.baroclinic_channel.rpe.rpe method)": [[196, "polaris.ocean.tasks.baroclinic_channel.rpe.Rpe.__init__", false]], "__init__() (polaris.ocean.tasks.baroclinic_channel.threads.threads method)": [[201, "polaris.ocean.tasks.baroclinic_channel.threads.Threads.__init__", false]], "__init__() (polaris.ocean.tasks.baroclinic_channel.validate.validate method)": [[202, "polaris.ocean.tasks.baroclinic_channel.validate.Validate.__init__", false]], "__init__() (polaris.ocean.tasks.baroclinic_channel.viz.viz method)": [[204, "polaris.ocean.tasks.baroclinic_channel.viz.Viz.__init__", false]], "__init__() (polaris.ocean.tasks.barotropic_gyre.analysis.analysis method)": [[208, "polaris.ocean.tasks.barotropic_gyre.analysis.Analysis.__init__", false]], "__init__() (polaris.ocean.tasks.barotropic_gyre.barotropicgyre method)": [[206, "polaris.ocean.tasks.barotropic_gyre.BarotropicGyre.__init__", false]], "__init__() (polaris.ocean.tasks.barotropic_gyre.forward.forward method)": [[212, "polaris.ocean.tasks.barotropic_gyre.forward.Forward.__init__", false]], "__init__() (polaris.ocean.tasks.barotropic_gyre.init.init method)": [[216, "polaris.ocean.tasks.barotropic_gyre.init.Init.__init__", false]], "__init__() (polaris.ocean.tasks.cosine_bell.analysis.analysis method)": [[222, "polaris.ocean.tasks.cosine_bell.analysis.Analysis.__init__", false]], "__init__() (polaris.ocean.tasks.cosine_bell.cosinebell method)": [[219, "polaris.ocean.tasks.cosine_bell.CosineBell.__init__", false]], "__init__() (polaris.ocean.tasks.cosine_bell.decomp.decomp method)": [[224, "polaris.ocean.tasks.cosine_bell.decomp.Decomp.__init__", false]], "__init__() (polaris.ocean.tasks.cosine_bell.forward.forward method)": [[225, "polaris.ocean.tasks.cosine_bell.forward.Forward.__init__", false]], "__init__() (polaris.ocean.tasks.cosine_bell.init.init method)": [[226, "polaris.ocean.tasks.cosine_bell.init.Init.__init__", false]], "__init__() (polaris.ocean.tasks.cosine_bell.restart.restart method)": [[229, "polaris.ocean.tasks.cosine_bell.restart.Restart.__init__", false]], "__init__() (polaris.ocean.tasks.cosine_bell.restart.restartstep method)": [[230, "polaris.ocean.tasks.cosine_bell.restart.RestartStep.__init__", false]], "__init__() (polaris.ocean.tasks.cosine_bell.validate.validate method)": [[232, "polaris.ocean.tasks.cosine_bell.validate.Validate.__init__", false]], "__init__() (polaris.ocean.tasks.cosine_bell.viz.viz method)": [[234, "polaris.ocean.tasks.cosine_bell.viz.Viz.__init__", false]], "__init__() (polaris.ocean.tasks.geostrophic.analysis.analysis method)": [[239, "polaris.ocean.tasks.geostrophic.analysis.Analysis.__init__", false]], "__init__() (polaris.ocean.tasks.geostrophic.forward.forward method)": [[242, "polaris.ocean.tasks.geostrophic.forward.Forward.__init__", false]], "__init__() (polaris.ocean.tasks.geostrophic.geostrophic method)": [[236, "polaris.ocean.tasks.geostrophic.Geostrophic.__init__", false]], "__init__() (polaris.ocean.tasks.geostrophic.init.init method)": [[243, "polaris.ocean.tasks.geostrophic.init.Init.__init__", false]], "__init__() (polaris.ocean.tasks.geostrophic.viz.viz method)": [[245, "polaris.ocean.tasks.geostrophic.viz.Viz.__init__", false]], "__init__() (polaris.ocean.tasks.ice_shelf_2d.default.default method)": [[248, "polaris.ocean.tasks.ice_shelf_2d.default.Default.__init__", false]], "__init__() (polaris.ocean.tasks.ice_shelf_2d.forward.forward method)": [[249, "polaris.ocean.tasks.ice_shelf_2d.forward.Forward.__init__", false]], "__init__() (polaris.ocean.tasks.ice_shelf_2d.init.init method)": [[252, "polaris.ocean.tasks.ice_shelf_2d.init.Init.__init__", false]], "__init__() (polaris.ocean.tasks.ice_shelf_2d.validate.validate method)": [[254, "polaris.ocean.tasks.ice_shelf_2d.validate.Validate.__init__", false]], "__init__() (polaris.ocean.tasks.ice_shelf_2d.viz.viz method)": [[256, "polaris.ocean.tasks.ice_shelf_2d.viz.Viz.__init__", false]], "__init__() (polaris.ocean.tasks.inertial_gravity_wave.analysis.analysis method)": [[260, "polaris.ocean.tasks.inertial_gravity_wave.analysis.Analysis.__init__", false]], "__init__() (polaris.ocean.tasks.inertial_gravity_wave.exact_solution.exactsolution method)": [[262, "polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution.__init__", false]], "__init__() (polaris.ocean.tasks.inertial_gravity_wave.forward.forward method)": [[265, "polaris.ocean.tasks.inertial_gravity_wave.forward.Forward.__init__", false]], "__init__() (polaris.ocean.tasks.inertial_gravity_wave.inertialgravitywave method)": [[258, "polaris.ocean.tasks.inertial_gravity_wave.InertialGravityWave.__init__", false]], "__init__() (polaris.ocean.tasks.inertial_gravity_wave.init.init method)": [[267, "polaris.ocean.tasks.inertial_gravity_wave.init.Init.__init__", false]], "__init__() (polaris.ocean.tasks.inertial_gravity_wave.viz.viz method)": [[269, "polaris.ocean.tasks.inertial_gravity_wave.viz.Viz.__init__", false]], "__init__() (polaris.ocean.tasks.internal_wave.default.default method)": [[272, "polaris.ocean.tasks.internal_wave.default.Default.__init__", false]], "__init__() (polaris.ocean.tasks.internal_wave.forward.forward method)": [[273, "polaris.ocean.tasks.internal_wave.forward.Forward.__init__", false]], "__init__() (polaris.ocean.tasks.internal_wave.init.init method)": [[276, "polaris.ocean.tasks.internal_wave.init.Init.__init__", false]], "__init__() (polaris.ocean.tasks.internal_wave.rpe.analysis.analysis method)": [[280, "polaris.ocean.tasks.internal_wave.rpe.analysis.Analysis.__init__", false]], "__init__() (polaris.ocean.tasks.internal_wave.rpe.rpe method)": [[278, "polaris.ocean.tasks.internal_wave.rpe.Rpe.__init__", false]], "__init__() (polaris.ocean.tasks.internal_wave.viz.viz method)": [[282, "polaris.ocean.tasks.internal_wave.viz.Viz.__init__", false]], "__init__() (polaris.ocean.tasks.manufactured_solution.analysis.analysis method)": [[286, "polaris.ocean.tasks.manufactured_solution.analysis.Analysis.__init__", false]], "__init__() (polaris.ocean.tasks.manufactured_solution.exact_solution.exactsolution method)": [[288, "polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution.__init__", false]], "__init__() (polaris.ocean.tasks.manufactured_solution.forward.forward method)": [[291, "polaris.ocean.tasks.manufactured_solution.forward.Forward.__init__", false]], "__init__() (polaris.ocean.tasks.manufactured_solution.init.init method)": [[293, "polaris.ocean.tasks.manufactured_solution.init.Init.__init__", false]], "__init__() (polaris.ocean.tasks.manufactured_solution.manufacturedsolution method)": [[284, "polaris.ocean.tasks.manufactured_solution.ManufacturedSolution.__init__", false]], "__init__() (polaris.ocean.tasks.manufactured_solution.viz.viz method)": [[296, "polaris.ocean.tasks.manufactured_solution.viz.Viz.__init__", false]], "__init__() (polaris.ocean.tasks.single_column.cvmix.cvmix method)": [[299, "polaris.ocean.tasks.single_column.cvmix.CVMix.__init__", false]], "__init__() (polaris.ocean.tasks.single_column.forward.forward method)": [[300, "polaris.ocean.tasks.single_column.forward.Forward.__init__", false]], "__init__() (polaris.ocean.tasks.single_column.ideal_age.idealage method)": [[301, "polaris.ocean.tasks.single_column.ideal_age.IdealAge.__init__", false]], "__init__() (polaris.ocean.tasks.single_column.init.init method)": [[302, "polaris.ocean.tasks.single_column.init.Init.__init__", false]], "__init__() (polaris.ocean.tasks.single_column.viz.viz method)": [[304, "polaris.ocean.tasks.single_column.viz.Viz.__init__", false]], "__init__() (polaris.ocean.tasks.sphere_transport.analysis.analysis method)": [[309, "polaris.ocean.tasks.sphere_transport.analysis.Analysis.__init__", false]], "__init__() (polaris.ocean.tasks.sphere_transport.filament_analysis.filamentanalysis method)": [[311, "polaris.ocean.tasks.sphere_transport.filament_analysis.FilamentAnalysis.__init__", false]], "__init__() (polaris.ocean.tasks.sphere_transport.forward.forward method)": [[313, "polaris.ocean.tasks.sphere_transport.forward.Forward.__init__", false]], "__init__() (polaris.ocean.tasks.sphere_transport.init.init method)": [[314, "polaris.ocean.tasks.sphere_transport.init.Init.__init__", false]], "__init__() (polaris.ocean.tasks.sphere_transport.mixing_analysis.mixinganalysis method)": [[316, "polaris.ocean.tasks.sphere_transport.mixing_analysis.MixingAnalysis.__init__", false]], "__init__() (polaris.ocean.tasks.sphere_transport.spheretransport method)": [[306, "polaris.ocean.tasks.sphere_transport.SphereTransport.__init__", false]], "__init__() (polaris.ocean.tasks.sphere_transport.viz.viz method)": [[318, "polaris.ocean.tasks.sphere_transport.viz.Viz.__init__", false]], "__init__() (polaris.remap.mappingfilestep method)": [[101, "polaris.remap.MappingFileStep.__init__", false]], "__init__() (polaris.seaice.seaice method)": [[372, "polaris.seaice.SeaIce.__init__", false]], "__init__() (polaris.seaice.tasks.single_column.exact_restart.exactrestart method)": [[374, "polaris.seaice.tasks.single_column.exact_restart.ExactRestart.__init__", false]], "__init__() (polaris.seaice.tasks.single_column.exact_restart.validate.validate method)": [[375, "polaris.seaice.tasks.single_column.exact_restart.validate.Validate.__init__", false]], "__init__() (polaris.seaice.tasks.single_column.forward.forward method)": [[377, "polaris.seaice.tasks.single_column.forward.Forward.__init__", false]], "__init__() (polaris.seaice.tasks.single_column.standard_physics.standardphysics method)": [[378, "polaris.seaice.tasks.single_column.standard_physics.StandardPhysics.__init__", false]], "__init__() (polaris.seaice.tasks.single_column.standard_physics.viz.viz method)": [[379, "polaris.seaice.tasks.single_column.standard_physics.viz.Viz.__init__", false]], "__init__() (polaris.step method)": [[40, "polaris.Step.__init__", false]], "__init__() (polaris.task method)": [[51, "polaris.Task.__init__", false]], "__init__() (polaris.yaml.polarisyaml method)": [[130, "polaris.yaml.PolarisYaml.__init__", false]], "add_baroclinic_channel_tasks() (in module polaris.ocean.tasks.baroclinic_channel)": [[184, "polaris.ocean.tasks.baroclinic_channel.add_baroclinic_channel_tasks", false]], "add_barotropic_gyre_tasks() (in module polaris.ocean.tasks.barotropic_gyre)": [[207, "polaris.ocean.tasks.barotropic_gyre.add_barotropic_gyre_tasks", false]], "add_config() (polaris.component method)": [[21, "polaris.Component.add_config", false]], "add_cosine_bell_tasks() (in module polaris.ocean.tasks.cosine_bell)": [[221, "polaris.ocean.tasks.cosine_bell.add_cosine_bell_tasks", false]], "add_dependency() (polaris.step method)": [[41, "polaris.Step.add_dependency", false]], "add_geostrophic_tasks() (in module polaris.ocean.tasks.geostrophic)": [[238, "polaris.ocean.tasks.geostrophic.add_geostrophic_tasks", false]], "add_ice_shelf_2d_tasks() (in module polaris.ocean.tasks.ice_shelf_2d)": [[247, "polaris.ocean.tasks.ice_shelf_2d.add_ice_shelf_2d_tasks", false]], "add_inertial_gravity_wave_tasks() (in module polaris.ocean.tasks.inertial_gravity_wave)": [[259, "polaris.ocean.tasks.inertial_gravity_wave.add_inertial_gravity_wave_tasks", false]], "add_input_file() (polaris.step method)": [[42, "polaris.Step.add_input_file", false]], "add_internal_wave_tasks() (in module polaris.ocean.tasks.internal_wave)": [[271, "polaris.ocean.tasks.internal_wave.add_internal_wave_tasks", false]], "add_manufactured_solution_tasks() (in module polaris.ocean.tasks.manufactured_solution)": [[285, "polaris.ocean.tasks.manufactured_solution.add_manufactured_solution_tasks", false]], "add_model_config_options() (polaris.modelstep method)": [[26, "polaris.ModelStep.add_model_config_options", false]], "add_namelist_file() (polaris.modelstep method)": [[27, "polaris.ModelStep.add_namelist_file", false]], "add_output_file() (polaris.step method)": [[43, "polaris.Step.add_output_file", false]], "add_single_column_tasks() (in module polaris.ocean.tasks.single_column)": [[298, "polaris.ocean.tasks.single_column.add_single_column_tasks", false]], "add_single_column_tasks() (in module polaris.seaice.tasks.single_column)": [[373, "polaris.seaice.tasks.single_column.add_single_column_tasks", false]], "add_sphere_transport_tasks() (in module polaris.ocean.tasks.sphere_transport)": [[308, "polaris.ocean.tasks.sphere_transport.add_sphere_transport_tasks", false]], "add_spherical_base_mesh_step() (in module polaris.ocean.mesh.spherical)": [[169, "polaris.ocean.mesh.spherical.add_spherical_base_mesh_step", false]], "add_step() (polaris.component method)": [[22, "polaris.Component.add_step", false]], "add_step() (polaris.task method)": [[52, "polaris.Task.add_step", false]], "add_streams_file() (polaris.modelstep method)": [[28, "polaris.ModelStep.add_streams_file", false]], "add_task() (polaris.component method)": [[23, "polaris.Component.add_task", false]], "add_yaml_file() (polaris.modelstep method)": [[29, "polaris.ModelStep.add_yaml_file", false]], "alter_bottom_depth() (in module polaris.ocean.vertical.partial_cells)": [[323, "polaris.ocean.vertical.partial_cells.alter_bottom_depth", false]], "alter_ssh() (in module polaris.ocean.vertical.partial_cells)": [[324, "polaris.ocean.vertical.partial_cells.alter_ssh", false]], "analysis (class in polaris.ocean.tasks.baroclinic_channel.rpe.analysis)": [[198, "polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis", false]], "analysis (class in polaris.ocean.tasks.barotropic_gyre.analysis)": [[208, "polaris.ocean.tasks.barotropic_gyre.analysis.Analysis", false]], "analysis (class in polaris.ocean.tasks.cosine_bell.analysis)": [[222, "polaris.ocean.tasks.cosine_bell.analysis.Analysis", false]], "analysis (class in polaris.ocean.tasks.geostrophic.analysis)": [[239, "polaris.ocean.tasks.geostrophic.analysis.Analysis", false]], "analysis (class in polaris.ocean.tasks.inertial_gravity_wave.analysis)": [[260, "polaris.ocean.tasks.inertial_gravity_wave.analysis.Analysis", false]], "analysis (class in polaris.ocean.tasks.internal_wave.rpe.analysis)": [[280, "polaris.ocean.tasks.internal_wave.rpe.analysis.Analysis", false]], "analysis (class in polaris.ocean.tasks.manufactured_solution.analysis)": [[286, "polaris.ocean.tasks.manufactured_solution.analysis.Analysis", false]], "analysis (class in polaris.ocean.tasks.sphere_transport.analysis)": [[309, "polaris.ocean.tasks.sphere_transport.analysis.Analysis", false]], "area_for_field() (in module polaris.mpas)": [[89, "polaris.mpas.area_for_field", false]], "barotropicgyre (class in polaris.ocean.tasks.barotropic_gyre)": [[206, "polaris.ocean.tasks.barotropic_gyre.BarotropicGyre", false]], "build_cell_width_lat_lon() (polaris.mesh.quasiuniformsphericalmeshstep method)": [[79, "polaris.mesh.QuasiUniformSphericalMeshStep.build_cell_width_lat_lon", false]], "build_subdivisions_cell_width_lat_lon() (polaris.mesh.icosahedralmeshstep method)": [[72, "polaris.mesh.IcosahedralMeshStep.build_subdivisions_cell_width_lat_lon", false]], "cell_mask_to_edge_mask() (in module polaris.mpas)": [[90, "polaris.mpas.cell_mask_to_edge_mask", false]], "clean_up_whitespace() (in module polaris.job)": [[64, "polaris.job.clean_up_whitespace", false]], "compare_variables() (in module polaris.validate)": [[125, "polaris.validate.compare_variables", false]], "complete_step_run() (in module polaris.run)": [[112, "polaris.run.complete_step_run", false]], "component (class in polaris)": [[20, "polaris.Component", false]], "compute_cell_count() (polaris.ocean.convergence.forward.convergenceforward method)": [[156, "polaris.ocean.convergence.forward.ConvergenceForward.compute_cell_count", false]], "compute_cell_count() (polaris.ocean.convergence.spherical.sphericalconvergenceforward method)": [[161, "polaris.ocean.convergence.spherical.SphericalConvergenceForward.compute_cell_count", false]], "compute_cell_count() (polaris.ocean.ice_shelf.sshforward method)": [[167, "polaris.ocean.ice_shelf.SshForward.compute_cell_count", false]], "compute_cell_count() (polaris.ocean.model.oceanmodelstep method)": [[177, "polaris.ocean.model.OceanModelStep.compute_cell_count", false]], "compute_cell_count() (polaris.ocean.tasks.baroclinic_channel.forward.forward method)": [[188, "polaris.ocean.tasks.baroclinic_channel.forward.Forward.compute_cell_count", false]], "compute_cell_count() (polaris.ocean.tasks.barotropic_gyre.forward.forward method)": [[213, "polaris.ocean.tasks.barotropic_gyre.forward.Forward.compute_cell_count", false]], "compute_cell_count() (polaris.ocean.tasks.ice_shelf_2d.forward.forward method)": [[250, "polaris.ocean.tasks.ice_shelf_2d.forward.Forward.compute_cell_count", false]], "compute_cell_count() (polaris.ocean.tasks.inertial_gravity_wave.forward.forward method)": [[266, "polaris.ocean.tasks.inertial_gravity_wave.forward.Forward.compute_cell_count", false]], "compute_cell_count() (polaris.ocean.tasks.internal_wave.forward.forward method)": [[274, "polaris.ocean.tasks.internal_wave.forward.Forward.compute_cell_count", false]], "compute_cell_count() (polaris.ocean.tasks.manufactured_solution.forward.forward method)": [[292, "polaris.ocean.tasks.manufactured_solution.forward.Forward.compute_cell_count", false]], "compute_error() (polaris.ocean.convergence.analysis.convergenceanalysis method)": [[148, "polaris.ocean.convergence.analysis.ConvergenceAnalysis.compute_error", false]], "compute_error() (polaris.ocean.tasks.barotropic_gyre.analysis.analysis method)": [[209, "polaris.ocean.tasks.barotropic_gyre.analysis.Analysis.compute_error", false]], "compute_max_time_step() (in module polaris.ocean.tasks.barotropic_gyre.forward)": [[215, "polaris.ocean.tasks.barotropic_gyre.forward.compute_max_time_step", false]], "compute_min_max_level_cell() (in module polaris.ocean.vertical.zlevel)": [[328, "polaris.ocean.vertical.zlevel.compute_min_max_level_cell", false]], "compute_planar_hex_nx_ny() (in module polaris.mesh.planar)": [[83, "polaris.mesh.planar.compute_planar_hex_nx_ny", false]], "compute_rpe() (in module polaris.ocean.rpe)": [[183, "polaris.ocean.rpe.compute_rpe", false]], "compute_transect() (in module polaris.ocean.viz)": [[335, "polaris.ocean.viz.compute_transect", false]], "compute_z_level_layer_thickness() (in module polaris.ocean.vertical.zlevel)": [[329, "polaris.ocean.vertical.zlevel.compute_z_level_layer_thickness", false]], "compute_z_level_resting_thickness() (in module polaris.ocean.vertical.zlevel)": [[330, "polaris.ocean.vertical.zlevel.compute_z_level_resting_thickness", false]], "configure() (polaris.ocean.tasks.baroclinic_channel.rpe.rpe method)": [[197, "polaris.ocean.tasks.baroclinic_channel.rpe.Rpe.configure", false]], "configure() (polaris.ocean.tasks.cosine_bell.cosinebell method)": [[220, "polaris.ocean.tasks.cosine_bell.CosineBell.configure", false]], "configure() (polaris.ocean.tasks.geostrophic.geostrophic method)": [[237, "polaris.ocean.tasks.geostrophic.Geostrophic.configure", false]], "configure() (polaris.ocean.tasks.internal_wave.rpe.rpe method)": [[279, "polaris.ocean.tasks.internal_wave.rpe.Rpe.configure", false]], "configure() (polaris.ocean.tasks.sphere_transport.spheretransport method)": [[307, "polaris.ocean.tasks.sphere_transport.SphereTransport.configure", false]], "configure() (polaris.task method)": [[53, "polaris.Task.configure", false]], "constrain_resources() (polaris.ocean.model.oceanmodelstep method)": [[178, "polaris.ocean.model.OceanModelStep.constrain_resources", false]], "constrain_resources() (polaris.step method)": [[44, "polaris.Step.constrain_resources", false]], "convergence_parameters() (polaris.ocean.convergence.analysis.convergenceanalysis method)": [[149, "polaris.ocean.convergence.analysis.ConvergenceAnalysis.convergence_parameters", false]], "convergence_parameters() (polaris.ocean.tasks.sphere_transport.analysis.analysis method)": [[310, "polaris.ocean.tasks.sphere_transport.analysis.Analysis.convergence_parameters", false]], "convergenceanalysis (class in polaris.ocean.convergence.analysis)": [[147, "polaris.ocean.convergence.analysis.ConvergenceAnalysis", false]], "convergenceforward (class in polaris.ocean.convergence.forward)": [[155, "polaris.ocean.convergence.forward.ConvergenceForward", false]], "cosine_bell() (in module polaris.ocean.tasks.cosine_bell.init)": [[228, "polaris.ocean.tasks.cosine_bell.init.cosine_bell", false]], "cosinebell (class in polaris.ocean.tasks.cosine_bell)": [[219, "polaris.ocean.tasks.cosine_bell.CosineBell", false]], "cvmix (class in polaris.ocean.tasks.single_column.cvmix)": [[299, "polaris.ocean.tasks.single_column.cvmix.CVMix", false]], "decomp (class in polaris.ocean.tasks.baroclinic_channel.decomp)": [[185, "polaris.ocean.tasks.baroclinic_channel.decomp.Decomp", false]], "decomp (class in polaris.ocean.tasks.cosine_bell.decomp)": [[224, "polaris.ocean.tasks.cosine_bell.decomp.Decomp", false]], "default (class in polaris.ocean.tasks.baroclinic_channel.default)": [[186, "polaris.ocean.tasks.baroclinic_channel.default.Default", false]], "default (class in polaris.ocean.tasks.ice_shelf_2d.default)": [[248, "polaris.ocean.tasks.ice_shelf_2d.default.Default", false]], "default (class in polaris.ocean.tasks.internal_wave.default)": [[272, "polaris.ocean.tasks.internal_wave.default.Default", false]], "download() (in module polaris.io)": [[61, "polaris.io.download", false]], "dst_from_lon_lat() (polaris.remap.mappingfilestep method)": [[102, "polaris.remap.MappingFileStep.dst_from_lon_lat", false]], "dst_from_mpas() (polaris.remap.mappingfilestep method)": [[103, "polaris.remap.MappingFileStep.dst_from_mpas", false]], "dst_from_points() (polaris.remap.mappingfilestep method)": [[104, "polaris.remap.MappingFileStep.dst_from_points", false]], "dst_from_proj() (polaris.remap.mappingfilestep method)": [[105, "polaris.remap.MappingFileStep.dst_from_proj", false]], "dst_global_lon_lat() (polaris.remap.mappingfilestep method)": [[106, "polaris.remap.MappingFileStep.dst_global_lon_lat", false]], "dynamic_model_config() (polaris.modelstep method)": [[30, "polaris.ModelStep.dynamic_model_config", false]], "dynamic_model_config() (polaris.ocean.convergence.forward.convergenceforward method)": [[157, "polaris.ocean.convergence.forward.ConvergenceForward.dynamic_model_config", false]], "dynamic_model_config() (polaris.ocean.ice_shelf.sshforward method)": [[168, "polaris.ocean.ice_shelf.SshForward.dynamic_model_config", false]], "dynamic_model_config() (polaris.ocean.tasks.baroclinic_channel.forward.forward method)": [[189, "polaris.ocean.tasks.baroclinic_channel.forward.Forward.dynamic_model_config", false]], "dynamic_model_config() (polaris.ocean.tasks.baroclinic_channel.restart.restart_step.restartstep method)": [[195, "polaris.ocean.tasks.baroclinic_channel.restart.restart_step.RestartStep.dynamic_model_config", false]], "dynamic_model_config() (polaris.ocean.tasks.barotropic_gyre.forward.forward method)": [[214, "polaris.ocean.tasks.barotropic_gyre.forward.Forward.dynamic_model_config", false]], "dynamic_model_config() (polaris.ocean.tasks.cosine_bell.restart.restartstep method)": [[231, "polaris.ocean.tasks.cosine_bell.restart.RestartStep.dynamic_model_config", false]], "dynamic_model_config() (polaris.ocean.tasks.ice_shelf_2d.forward.forward method)": [[251, "polaris.ocean.tasks.ice_shelf_2d.forward.Forward.dynamic_model_config", false]], "dynamic_model_config() (polaris.ocean.tasks.internal_wave.forward.forward method)": [[275, "polaris.ocean.tasks.internal_wave.forward.Forward.dynamic_model_config", false]], "exact_solution() (polaris.ocean.convergence.analysis.convergenceanalysis method)": [[150, "polaris.ocean.convergence.analysis.ConvergenceAnalysis.exact_solution", false]], "exact_solution() (polaris.ocean.tasks.barotropic_gyre.analysis.analysis method)": [[210, "polaris.ocean.tasks.barotropic_gyre.analysis.Analysis.exact_solution", false]], "exact_solution() (polaris.ocean.tasks.cosine_bell.analysis.analysis method)": [[223, "polaris.ocean.tasks.cosine_bell.analysis.Analysis.exact_solution", false]], "exact_solution() (polaris.ocean.tasks.geostrophic.analysis.analysis method)": [[240, "polaris.ocean.tasks.geostrophic.analysis.Analysis.exact_solution", false]], "exact_solution() (polaris.ocean.tasks.inertial_gravity_wave.analysis.analysis method)": [[261, "polaris.ocean.tasks.inertial_gravity_wave.analysis.Analysis.exact_solution", false]], "exact_solution() (polaris.ocean.tasks.manufactured_solution.analysis.analysis method)": [[287, "polaris.ocean.tasks.manufactured_solution.analysis.Analysis.exact_solution", false]], "exactrestart (class in polaris.seaice.tasks.single_column.exact_restart)": [[374, "polaris.seaice.tasks.single_column.exact_restart.ExactRestart", false]], "exactsolution (class in polaris.ocean.tasks.inertial_gravity_wave.exact_solution)": [[262, "polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution", false]], "exactsolution (class in polaris.ocean.tasks.manufactured_solution.exact_solution)": [[288, "polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution", false]], "filamentanalysis (class in polaris.ocean.tasks.sphere_transport.filament_analysis)": [[311, "polaris.ocean.tasks.sphere_transport.filament_analysis.FilamentAnalysis", false]], "find_planar_transect_cells_and_weights() (in module polaris.ocean.viz.transect.horiz)": [[337, "polaris.ocean.viz.transect.horiz.find_planar_transect_cells_and_weights", false]], "find_spherical_transect_cells_and_weights() (in module polaris.ocean.viz.transect.horiz)": [[338, "polaris.ocean.viz.transect.horiz.find_spherical_transect_cells_and_weights", false]], "find_transect_levels_and_weights() (in module polaris.ocean.viz.transect.vert)": [[341, "polaris.ocean.viz.transect.vert.find_transect_levels_and_weights", false]], "forward (class in polaris.ocean.tasks.baroclinic_channel.forward)": [[187, "polaris.ocean.tasks.baroclinic_channel.forward.Forward", false]], "forward (class in polaris.ocean.tasks.barotropic_gyre.forward)": [[212, "polaris.ocean.tasks.barotropic_gyre.forward.Forward", false]], "forward (class in polaris.ocean.tasks.cosine_bell.forward)": [[225, "polaris.ocean.tasks.cosine_bell.forward.Forward", false]], "forward (class in polaris.ocean.tasks.geostrophic.forward)": [[242, "polaris.ocean.tasks.geostrophic.forward.Forward", false]], "forward (class in polaris.ocean.tasks.ice_shelf_2d.forward)": [[249, "polaris.ocean.tasks.ice_shelf_2d.forward.Forward", false]], "forward (class in polaris.ocean.tasks.inertial_gravity_wave.forward)": [[265, "polaris.ocean.tasks.inertial_gravity_wave.forward.Forward", false]], "forward (class in polaris.ocean.tasks.internal_wave.forward)": [[273, "polaris.ocean.tasks.internal_wave.forward.Forward", false]], "forward (class in polaris.ocean.tasks.manufactured_solution.forward)": [[291, "polaris.ocean.tasks.manufactured_solution.forward.Forward", false]], "forward (class in polaris.ocean.tasks.single_column.forward)": [[300, "polaris.ocean.tasks.single_column.forward.Forward", false]], "forward (class in polaris.ocean.tasks.sphere_transport.forward)": [[313, "polaris.ocean.tasks.sphere_transport.forward.Forward", false]], "forward (class in polaris.seaice.tasks.single_column.forward)": [[377, "polaris.seaice.tasks.single_column.forward.Forward", false]], "generate_1d_grid() (in module polaris.ocean.vertical.grid_1d)": [[320, "polaris.ocean.vertical.grid_1d.generate_1d_grid", false]], "geostrophic (class in polaris.ocean.tasks.geostrophic)": [[236, "polaris.ocean.tasks.geostrophic.Geostrophic", false]], "get_available_parallel_resources() (in module polaris.parallel)": [[96, "polaris.parallel.get_available_parallel_resources", false]], "get_cell_width() (polaris.mesh.icosahedralmeshstep static method)": [[73, "polaris.mesh.IcosahedralMeshStep.get_cell_width", false]], "get_components() (in module polaris.components)": [[58, "polaris.components.get_components", false]], "get_output_field() (polaris.ocean.convergence.analysis.convergenceanalysis method)": [[151, "polaris.ocean.convergence.analysis.ConvergenceAnalysis.get_output_field", false]], "get_output_field() (polaris.ocean.tasks.geostrophic.analysis.analysis method)": [[241, "polaris.ocean.tasks.geostrophic.analysis.Analysis.get_output_field", false]], "get_parallel_command() (in module polaris.parallel)": [[97, "polaris.parallel.get_parallel_command", false]], "get_remapper() (polaris.remap.mappingfilestep method)": [[107, "polaris.remap.MappingFileStep.get_remapper", false]], "get_resolution_for_task() (in module polaris.ocean.convergence)": [[158, "polaris.ocean.convergence.get_resolution_for_task", false]], "get_slurm_options() (in module polaris.job)": [[65, "polaris.job.get_slurm_options", false]], "get_subdivisions() (polaris.mesh.icosahedralmeshstep static method)": [[74, "polaris.mesh.IcosahedralMeshStep.get_subdivisions", false]], "get_time_interval_string() (in module polaris.ocean.model)": [[182, "polaris.ocean.model.get_time_interval_string", false]], "get_timestep_for_task() (in module polaris.ocean.convergence)": [[159, "polaris.ocean.convergence.get_timestep_for_task", false]], "iceshelftask (class in polaris.ocean.ice_shelf)": [[162, "polaris.ocean.ice_shelf.IceShelfTask", false]], "icosahedralmeshstep (class in polaris.mesh)": [[71, "polaris.mesh.IcosahedralMeshStep", false]], "idealage (class in polaris.ocean.tasks.single_column.ideal_age)": [[301, "polaris.ocean.tasks.single_column.ideal_age.IdealAge", false]], "inertialgravitywave (class in polaris.ocean.tasks.inertial_gravity_wave)": [[258, "polaris.ocean.tasks.inertial_gravity_wave.InertialGravityWave", false]], "ingest() (in module polaris.namelist)": [[92, "polaris.namelist.ingest", false]], "init (class in polaris.ocean.tasks.baroclinic_channel.init)": [[190, "polaris.ocean.tasks.baroclinic_channel.init.Init", false]], "init (class in polaris.ocean.tasks.barotropic_gyre.init)": [[216, "polaris.ocean.tasks.barotropic_gyre.init.Init", false]], "init (class in polaris.ocean.tasks.cosine_bell.init)": [[226, "polaris.ocean.tasks.cosine_bell.init.Init", false]], "init (class in polaris.ocean.tasks.geostrophic.init)": [[243, "polaris.ocean.tasks.geostrophic.init.Init", false]], "init (class in polaris.ocean.tasks.ice_shelf_2d.init)": [[252, "polaris.ocean.tasks.ice_shelf_2d.init.Init", false]], "init (class in polaris.ocean.tasks.inertial_gravity_wave.init)": [[267, "polaris.ocean.tasks.inertial_gravity_wave.init.Init", false]], "init (class in polaris.ocean.tasks.internal_wave.init)": [[276, "polaris.ocean.tasks.internal_wave.init.Init", false]], "init (class in polaris.ocean.tasks.manufactured_solution.init)": [[293, "polaris.ocean.tasks.manufactured_solution.init.Init", false]], "init (class in polaris.ocean.tasks.single_column.init)": [[302, "polaris.ocean.tasks.single_column.init.Init", false]], "init (class in polaris.ocean.tasks.sphere_transport.init)": [[314, "polaris.ocean.tasks.sphere_transport.init.Init", false]], "init_sigma_vertical_coord() (in module polaris.ocean.vertical.sigma)": [[325, "polaris.ocean.vertical.sigma.init_sigma_vertical_coord", false]], "init_vertical_coord() (in module polaris.ocean.vertical)": [[322, "polaris.ocean.vertical.init_vertical_coord", false]], "init_z_level_vertical_coord() (in module polaris.ocean.vertical.zlevel)": [[331, "polaris.ocean.vertical.zlevel.init_z_level_vertical_coord", false]], "init_z_star_vertical_coord() (in module polaris.ocean.vertical.zstar)": [[333, "polaris.ocean.vertical.zstar.init_z_star_vertical_coord", false]], "interp_mpas_to_transect_cells() (in module polaris.ocean.viz.transect.vert)": [[342, "polaris.ocean.viz.transect.vert.interp_mpas_to_transect_cells", false]], "interp_mpas_to_transect_nodes() (in module polaris.ocean.viz.transect.vert)": [[343, "polaris.ocean.viz.transect.vert.interp_mpas_to_transect_nodes", false]], "list_cases() (in module polaris.list)": [[67, "polaris.list.list_cases", false]], "list_machines() (in module polaris.list)": [[68, "polaris.list.list_machines", false]], "list_suites() (in module polaris.list)": [[69, "polaris.list.list_suites", false]], "load_dependencies() (in module polaris.run)": [[113, "polaris.run.load_dependencies", false]], "log_method_call() (in module polaris.logging)": [[70, "polaris.logging.log_method_call", false]], "main() (in module polaris.__main__)": [[56, "polaris.__main__.main", false]], "main_mpas_to_yaml() (in module polaris.yaml)": [[134, "polaris.yaml.main_mpas_to_yaml", false]], "make_graph_file() (in module polaris.model_step)": [[88, "polaris.model_step.make_graph_file", false]], "make_jigsaw_mesh() (polaris.mesh.icosahedralmeshstep method)": [[75, "polaris.mesh.IcosahedralMeshStep.make_jigsaw_mesh", false]], "make_jigsaw_mesh() (polaris.mesh.quasiuniformsphericalmeshstep method)": [[80, "polaris.mesh.QuasiUniformSphericalMeshStep.make_jigsaw_mesh", false]], "make_triangle_tree() (in module polaris.ocean.viz.transect.horiz)": [[339, "polaris.ocean.viz.transect.horiz.make_triangle_tree", false]], "manufacturedsolution (class in polaris.ocean.tasks.manufactured_solution)": [[284, "polaris.ocean.tasks.manufactured_solution.ManufacturedSolution", false]], "map_from_native_model_vars() (polaris.ocean.model.oceaniostep method)": [[171, "polaris.ocean.model.OceanIOStep.map_from_native_model_vars", false]], "map_to_native_model_vars() (polaris.ocean.model.oceaniostep method)": [[172, "polaris.ocean.model.OceanIOStep.map_to_native_model_vars", false]], "map_yaml_configs() (polaris.modelstep method)": [[31, "polaris.ModelStep.map_yaml_configs", false]], "map_yaml_configs() (polaris.ocean.model.oceanmodelstep method)": [[179, "polaris.ocean.model.OceanModelStep.map_yaml_configs", false]], "map_yaml_options() (polaris.modelstep method)": [[32, "polaris.ModelStep.map_yaml_options", false]], "map_yaml_options() (polaris.ocean.model.oceanmodelstep method)": [[180, "polaris.ocean.model.OceanModelStep.map_yaml_options", false]], "map_yaml_to_namelist() (polaris.modelstep method)": [[33, "polaris.ModelStep.map_yaml_to_namelist", false]], "mappingfilestep (class in polaris.remap)": [[101, "polaris.remap.MappingFileStep", false]], "mesh_to_triangles() (in module polaris.ocean.viz.transect.horiz)": [[340, "polaris.ocean.viz.transect.horiz.mesh_to_triangles", false]], "mixinganalysis (class in polaris.ocean.tasks.sphere_transport.mixing_analysis)": [[316, "polaris.ocean.tasks.sphere_transport.mixing_analysis.MixingAnalysis", false]], "modelstep (class in polaris)": [[25, "polaris.ModelStep", false]], "mpas_namelist_and_streams_to_yaml() (in module polaris.yaml)": [[135, "polaris.yaml.mpas_namelist_and_streams_to_yaml", false]], "normal_velocity() (polaris.ocean.tasks.inertial_gravity_wave.exact_solution.exactsolution method)": [[263, "polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution.normal_velocity", false]], "normal_velocity() (polaris.ocean.tasks.manufactured_solution.exact_solution.exactsolution method)": [[289, "polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution.normal_velocity", false]], "ocean (class in polaris.ocean)": [[146, "polaris.ocean.Ocean", false]], "oceaniostep (class in polaris.ocean.model)": [[170, "polaris.ocean.model.OceanIOStep", false]], "oceanmodelstep (class in polaris.ocean.model)": [[176, "polaris.ocean.model.OceanModelStep", false]], "open_model_dataset() (polaris.ocean.model.oceaniostep method)": [[173, "polaris.ocean.model.OceanIOStep.open_model_dataset", false]], "parse_replacements() (in module polaris.namelist)": [[93, "polaris.namelist.parse_replacements", false]], "partition() (polaris.modelstep method)": [[34, "polaris.ModelStep.partition", false]], "plot_convergence() (polaris.ocean.convergence.analysis.convergenceanalysis method)": [[152, "polaris.ocean.convergence.analysis.ConvergenceAnalysis.plot_convergence", false]], "plot_global_lat_lon_field() (in module polaris.viz)": [[126, "polaris.viz.plot_global_lat_lon_field", false]], "plot_global_mpas_field() (in module polaris.viz)": [[127, "polaris.viz.plot_global_mpas_field", false]], "plot_horiz_field() (in module polaris.viz)": [[128, "polaris.viz.plot_horiz_field", false]], "plot_transect() (in module polaris.ocean.viz)": [[336, "polaris.ocean.viz.plot_transect", false]], "polarisconfigparser (class in polaris.config)": [[59, "polaris.config.PolarisConfigParser", false]], "polarisyaml (class in polaris.yaml)": [[130, "polaris.yaml.PolarisYaml", false]], "process_inputs_and_outputs() (polaris.modelstep method)": [[35, "polaris.ModelStep.process_inputs_and_outputs", false]], "quasiuniformsphericalmeshstep (class in polaris.mesh)": [[78, "polaris.mesh.QuasiUniformSphericalMeshStep", false]], "read() (in module polaris.streams)": [[120, "polaris.streams.read", false]], "read() (polaris.yaml.polarisyaml class method)": [[131, "polaris.yaml.PolarisYaml.read", false]], "remove_step() (polaris.component method)": [[24, "polaris.Component.remove_step", false]], "remove_step() (polaris.task method)": [[54, "polaris.Task.remove_step", false]], "replace() (in module polaris.namelist)": [[94, "polaris.namelist.replace", false]], "restart (class in polaris.ocean.tasks.baroclinic_channel.restart)": [[193, "polaris.ocean.tasks.baroclinic_channel.restart.Restart", false]], "restart (class in polaris.ocean.tasks.cosine_bell.restart)": [[229, "polaris.ocean.tasks.cosine_bell.restart.Restart", false]], "restartstep (class in polaris.ocean.tasks.baroclinic_channel.restart.restart_step)": [[194, "polaris.ocean.tasks.baroclinic_channel.restart.restart_step.RestartStep", false]], "restartstep (class in polaris.ocean.tasks.cosine_bell.restart)": [[230, "polaris.ocean.tasks.cosine_bell.restart.RestartStep", false]], "rpe (class in polaris.ocean.tasks.baroclinic_channel.rpe)": [[196, "polaris.ocean.tasks.baroclinic_channel.rpe.Rpe", false]], "rpe (class in polaris.ocean.tasks.internal_wave.rpe)": [[278, "polaris.ocean.tasks.internal_wave.rpe.Rpe", false]], "run() (polaris.mesh.icosahedralmeshstep method)": [[76, "polaris.mesh.IcosahedralMeshStep.run", false]], "run() (polaris.mesh.quasiuniformsphericalmeshstep method)": [[81, "polaris.mesh.QuasiUniformSphericalMeshStep.run", false]], "run() (polaris.mesh.spherical.sphericalbasestep method)": [[85, "polaris.mesh.spherical.SphericalBaseStep.run", false]], "run() (polaris.ocean.convergence.analysis.convergenceanalysis method)": [[153, "polaris.ocean.convergence.analysis.ConvergenceAnalysis.run", false]], "run() (polaris.ocean.ice_shelf.sshadjustment method)": [[165, "polaris.ocean.ice_shelf.SshAdjustment.run", false]], "run() (polaris.ocean.tasks.baroclinic_channel.init.init method)": [[191, "polaris.ocean.tasks.baroclinic_channel.init.Init.run", false]], "run() (polaris.ocean.tasks.baroclinic_channel.rpe.analysis.analysis method)": [[199, "polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis.run", false]], "run() (polaris.ocean.tasks.baroclinic_channel.validate.validate method)": [[203, "polaris.ocean.tasks.baroclinic_channel.validate.Validate.run", false]], "run() (polaris.ocean.tasks.baroclinic_channel.viz.viz method)": [[205, "polaris.ocean.tasks.baroclinic_channel.viz.Viz.run", false]], "run() (polaris.ocean.tasks.barotropic_gyre.analysis.analysis method)": [[211, "polaris.ocean.tasks.barotropic_gyre.analysis.Analysis.run", false]], "run() (polaris.ocean.tasks.barotropic_gyre.init.init method)": [[217, "polaris.ocean.tasks.barotropic_gyre.init.Init.run", false]], "run() (polaris.ocean.tasks.cosine_bell.init.init method)": [[227, "polaris.ocean.tasks.cosine_bell.init.Init.run", false]], "run() (polaris.ocean.tasks.cosine_bell.validate.validate method)": [[233, "polaris.ocean.tasks.cosine_bell.validate.Validate.run", false]], "run() (polaris.ocean.tasks.cosine_bell.viz.viz method)": [[235, "polaris.ocean.tasks.cosine_bell.viz.Viz.run", false]], "run() (polaris.ocean.tasks.geostrophic.init.init method)": [[244, "polaris.ocean.tasks.geostrophic.init.Init.run", false]], "run() (polaris.ocean.tasks.geostrophic.viz.viz method)": [[246, "polaris.ocean.tasks.geostrophic.viz.Viz.run", false]], "run() (polaris.ocean.tasks.ice_shelf_2d.init.init method)": [[253, "polaris.ocean.tasks.ice_shelf_2d.init.Init.run", false]], "run() (polaris.ocean.tasks.ice_shelf_2d.validate.validate method)": [[255, "polaris.ocean.tasks.ice_shelf_2d.validate.Validate.run", false]], "run() (polaris.ocean.tasks.ice_shelf_2d.viz.viz method)": [[257, "polaris.ocean.tasks.ice_shelf_2d.viz.Viz.run", false]], "run() (polaris.ocean.tasks.inertial_gravity_wave.init.init method)": [[268, "polaris.ocean.tasks.inertial_gravity_wave.init.Init.run", false]], "run() (polaris.ocean.tasks.inertial_gravity_wave.viz.viz method)": [[270, "polaris.ocean.tasks.inertial_gravity_wave.viz.Viz.run", false]], "run() (polaris.ocean.tasks.internal_wave.init.init method)": [[277, "polaris.ocean.tasks.internal_wave.init.Init.run", false]], "run() (polaris.ocean.tasks.internal_wave.rpe.analysis.analysis method)": [[281, "polaris.ocean.tasks.internal_wave.rpe.analysis.Analysis.run", false]], "run() (polaris.ocean.tasks.internal_wave.viz.viz method)": [[283, "polaris.ocean.tasks.internal_wave.viz.Viz.run", false]], "run() (polaris.ocean.tasks.manufactured_solution.init.init method)": [[294, "polaris.ocean.tasks.manufactured_solution.init.Init.run", false]], "run() (polaris.ocean.tasks.manufactured_solution.viz.viz method)": [[297, "polaris.ocean.tasks.manufactured_solution.viz.Viz.run", false]], "run() (polaris.ocean.tasks.single_column.init.init method)": [[303, "polaris.ocean.tasks.single_column.init.Init.run", false]], "run() (polaris.ocean.tasks.single_column.viz.viz method)": [[305, "polaris.ocean.tasks.single_column.viz.Viz.run", false]], "run() (polaris.ocean.tasks.sphere_transport.filament_analysis.filamentanalysis method)": [[312, "polaris.ocean.tasks.sphere_transport.filament_analysis.FilamentAnalysis.run", false]], "run() (polaris.ocean.tasks.sphere_transport.init.init method)": [[315, "polaris.ocean.tasks.sphere_transport.init.Init.run", false]], "run() (polaris.ocean.tasks.sphere_transport.mixing_analysis.mixinganalysis method)": [[317, "polaris.ocean.tasks.sphere_transport.mixing_analysis.MixingAnalysis.run", false]], "run() (polaris.ocean.tasks.sphere_transport.viz.viz method)": [[319, "polaris.ocean.tasks.sphere_transport.viz.Viz.run", false]], "run() (polaris.seaice.tasks.single_column.exact_restart.validate.validate method)": [[376, "polaris.seaice.tasks.single_column.exact_restart.validate.Validate.run", false]], "run() (polaris.seaice.tasks.single_column.standard_physics.viz.viz method)": [[380, "polaris.seaice.tasks.single_column.standard_physics.viz.Viz.run", false]], "run() (polaris.step method)": [[45, "polaris.Step.run", false]], "run_command() (in module polaris.parallel)": [[98, "polaris.parallel.run_command", false]], "run_single_step() (in module polaris.run.serial)": [[114, "polaris.run.serial.run_single_step", false]], "run_tasks() (in module polaris.run.serial)": [[115, "polaris.run.serial.run_tasks", false]], "runtime_setup() (polaris.modelstep method)": [[36, "polaris.ModelStep.runtime_setup", false]], "runtime_setup() (polaris.remap.mappingfilestep method)": [[108, "polaris.remap.MappingFileStep.runtime_setup", false]], "runtime_setup() (polaris.step method)": [[46, "polaris.Step.runtime_setup", false]], "save_and_plot_cell_width() (polaris.mesh.spherical.sphericalbasestep method)": [[86, "polaris.mesh.spherical.SphericalBaseStep.save_and_plot_cell_width", false]], "seaice (class in polaris.seaice)": [[372, "polaris.seaice.SeaIce", false]], "set_cores_per_node() (in module polaris.parallel)": [[99, "polaris.parallel.set_cores_per_node", false]], "set_model_resources() (polaris.modelstep method)": [[37, "polaris.ModelStep.set_model_resources", false]], "set_resources() (polaris.step method)": [[47, "polaris.Step.set_resources", false]], "set_shared_config() (polaris.step method)": [[48, "polaris.Step.set_shared_config", false]], "set_shared_config() (polaris.task method)": [[55, "polaris.Task.set_shared_config", false]], "setup() (polaris.config.polarisconfigparser method)": [[60, "polaris.config.PolarisConfigParser.setup", false]], "setup() (polaris.mesh.icosahedralmeshstep method)": [[77, "polaris.mesh.IcosahedralMeshStep.setup", false]], "setup() (polaris.mesh.quasiuniformsphericalmeshstep method)": [[82, "polaris.mesh.QuasiUniformSphericalMeshStep.setup", false]], "setup() (polaris.mesh.spherical.sphericalbasestep method)": [[87, "polaris.mesh.spherical.SphericalBaseStep.setup", false]], "setup() (polaris.modelstep method)": [[38, "polaris.ModelStep.setup", false]], "setup() (polaris.ocean.convergence.analysis.convergenceanalysis method)": [[154, "polaris.ocean.convergence.analysis.ConvergenceAnalysis.setup", false]], "setup() (polaris.ocean.model.oceaniostep method)": [[174, "polaris.ocean.model.OceanIOStep.setup", false]], "setup() (polaris.ocean.model.oceanmodelstep method)": [[181, "polaris.ocean.model.OceanModelStep.setup", false]], "setup() (polaris.ocean.tasks.baroclinic_channel.init.init method)": [[192, "polaris.ocean.tasks.baroclinic_channel.init.Init.setup", false]], "setup() (polaris.ocean.tasks.baroclinic_channel.rpe.analysis.analysis method)": [[200, "polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis.setup", false]], "setup() (polaris.ocean.tasks.barotropic_gyre.init.init method)": [[218, "polaris.ocean.tasks.barotropic_gyre.init.Init.setup", false]], "setup() (polaris.ocean.tasks.manufactured_solution.init.init method)": [[295, "polaris.ocean.tasks.manufactured_solution.init.Init.setup", false]], "setup() (polaris.step method)": [[49, "polaris.Step.setup", false]], "setup_config() (in module polaris.run)": [[116, "polaris.run.setup_config", false]], "setup_ssh_adjustment_steps() (polaris.ocean.ice_shelf.iceshelftask method)": [[163, "polaris.ocean.ice_shelf.IceShelfTask.setup_ssh_adjustment_steps", false]], "setup_suite() (in module polaris.suite)": [[124, "polaris.suite.setup_suite", false]], "setup_task() (in module polaris.setup)": [[118, "polaris.setup.setup_task", false]], "setup_tasks() (in module polaris.setup)": [[119, "polaris.setup.setup_tasks", false]], "spheretransport (class in polaris.ocean.tasks.sphere_transport)": [[306, "polaris.ocean.tasks.sphere_transport.SphereTransport", false]], "sphericalbasestep (class in polaris.mesh.spherical)": [[84, "polaris.mesh.spherical.SphericalBaseStep", false]], "sphericalconvergenceforward (class in polaris.ocean.convergence.spherical)": [[160, "polaris.ocean.convergence.spherical.SphericalConvergenceForward", false]], "src_from_lon_lat() (polaris.remap.mappingfilestep method)": [[109, "polaris.remap.MappingFileStep.src_from_lon_lat", false]], "src_from_mpas() (polaris.remap.mappingfilestep method)": [[110, "polaris.remap.MappingFileStep.src_from_mpas", false]], "src_from_proj() (polaris.remap.mappingfilestep method)": [[111, "polaris.remap.MappingFileStep.src_from_proj", false]], "ssh() (polaris.ocean.tasks.inertial_gravity_wave.exact_solution.exactsolution method)": [[264, "polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution.ssh", false]], "ssh() (polaris.ocean.tasks.manufactured_solution.exact_solution.exactsolution method)": [[290, "polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution.ssh", false]], "sshadjustment (class in polaris.ocean.ice_shelf)": [[164, "polaris.ocean.ice_shelf.SshAdjustment", false]], "sshforward (class in polaris.ocean.ice_shelf)": [[166, "polaris.ocean.ice_shelf.SshForward", false]], "standardphysics (class in polaris.seaice.tasks.single_column.standard_physics)": [[378, "polaris.seaice.tasks.single_column.standard_physics.StandardPhysics", false]], "step (class in polaris)": [[40, "polaris.Step", false]], "symlink() (in module polaris.io)": [[62, "polaris.io.symlink", false]], "task (class in polaris)": [[51, "polaris.Task", false]], "threads (class in polaris.ocean.tasks.baroclinic_channel.threads)": [[201, "polaris.ocean.tasks.baroclinic_channel.threads.Threads", false]], "time_index_from_xtime() (in module polaris.mpas)": [[91, "polaris.mpas.time_index_from_xtime", false]], "unpickle_suite() (in module polaris.run)": [[117, "polaris.run.unpickle_suite", false]], "update() (polaris.yaml.polarisyaml method)": [[132, "polaris.yaml.PolarisYaml.update", false]], "update_cache() (in module polaris.cache)": [[57, "polaris.cache.update_cache", false]], "update_defaults() (in module polaris.streams)": [[121, "polaris.streams.update_defaults", false]], "update_layer_thickness() (in module polaris.ocean.vertical)": [[327, "polaris.ocean.vertical.update_layer_thickness", false]], "update_namelist_pio() (polaris.modelstep method)": [[39, "polaris.ModelStep.update_namelist_pio", false]], "update_permissions() (in module polaris.io)": [[63, "polaris.io.update_permissions", false]], "update_sigma_layer_thickness() (in module polaris.ocean.vertical.sigma)": [[326, "polaris.ocean.vertical.sigma.update_sigma_layer_thickness", false]], "update_tree() (in module polaris.streams)": [[122, "polaris.streams.update_tree", false]], "update_z_level_layer_thickness() (in module polaris.ocean.vertical.zlevel)": [[332, "polaris.ocean.vertical.zlevel.update_z_level_layer_thickness", false]], "update_z_star_layer_thickness() (in module polaris.ocean.vertical.zstar)": [[334, "polaris.ocean.vertical.zstar.update_z_star_layer_thickness", false]], "use_mplstyle() (in module polaris.viz)": [[129, "polaris.viz.use_mplstyle", false]], "validate (class in polaris.ocean.tasks.baroclinic_channel.validate)": [[202, "polaris.ocean.tasks.baroclinic_channel.validate.Validate", false]], "validate (class in polaris.ocean.tasks.cosine_bell.validate)": [[232, "polaris.ocean.tasks.cosine_bell.validate.Validate", false]], "validate (class in polaris.ocean.tasks.ice_shelf_2d.validate)": [[254, "polaris.ocean.tasks.ice_shelf_2d.validate.Validate", false]], "validate (class in polaris.seaice.tasks.single_column.exact_restart.validate)": [[375, "polaris.seaice.tasks.single_column.exact_restart.validate.Validate", false]], "validate_baselines() (polaris.step method)": [[50, "polaris.Step.validate_baselines", false]], "viz (class in polaris.ocean.tasks.baroclinic_channel.viz)": [[204, "polaris.ocean.tasks.baroclinic_channel.viz.Viz", false]], "viz (class in polaris.ocean.tasks.cosine_bell.viz)": [[234, "polaris.ocean.tasks.cosine_bell.viz.Viz", false]], "viz (class in polaris.ocean.tasks.geostrophic.viz)": [[245, "polaris.ocean.tasks.geostrophic.viz.Viz", false]], "viz (class in polaris.ocean.tasks.ice_shelf_2d.viz)": [[256, "polaris.ocean.tasks.ice_shelf_2d.viz.Viz", false]], "viz (class in polaris.ocean.tasks.inertial_gravity_wave.viz)": [[269, "polaris.ocean.tasks.inertial_gravity_wave.viz.Viz", false]], "viz (class in polaris.ocean.tasks.internal_wave.viz)": [[282, "polaris.ocean.tasks.internal_wave.viz.Viz", false]], "viz (class in polaris.ocean.tasks.manufactured_solution.viz)": [[296, "polaris.ocean.tasks.manufactured_solution.viz.Viz", false]], "viz (class in polaris.ocean.tasks.single_column.viz)": [[304, "polaris.ocean.tasks.single_column.viz.Viz", false]], "viz (class in polaris.ocean.tasks.sphere_transport.viz)": [[318, "polaris.ocean.tasks.sphere_transport.viz.Viz", false]], "viz (class in polaris.seaice.tasks.single_column.standard_physics.viz)": [[379, "polaris.seaice.tasks.single_column.standard_physics.viz.Viz", false]], "write() (in module polaris.namelist)": [[95, "polaris.namelist.write", false]], "write() (in module polaris.provenance)": [[100, "polaris.provenance.write", false]], "write() (in module polaris.streams)": [[123, "polaris.streams.write", false]], "write() (polaris.yaml.polarisyaml method)": [[133, "polaris.yaml.PolarisYaml.write", false]], "write_1d_grid() (in module polaris.ocean.vertical.grid_1d)": [[321, "polaris.ocean.vertical.grid_1d.write_1d_grid", false]], "write_job_script() (in module polaris.job)": [[66, "polaris.job.write_job_script", false]], "write_model_dataset() (polaris.ocean.model.oceaniostep method)": [[175, "polaris.ocean.model.OceanIOStep.write_model_dataset", false]], "yaml_to_mpas_streams() (in module polaris.yaml)": [[136, "polaris.yaml.yaml_to_mpas_streams", false]]}, "objects": {"polaris": [[20, 0, 1, "", "Component"], [25, 0, 1, "", "ModelStep"], [40, 0, 1, "", "Step"], [51, 0, 1, "", "Task"]], "polaris.Component": [[20, 1, 1, "", "__init__"], [21, 1, 1, "", "add_config"], [22, 1, 1, "", "add_step"], [23, 1, 1, "", "add_task"], [24, 1, 1, "", "remove_step"]], "polaris.ModelStep": [[25, 1, 1, "", "__init__"], [26, 1, 1, "", "add_model_config_options"], [27, 1, 1, "", "add_namelist_file"], [28, 1, 1, "", "add_streams_file"], [29, 1, 1, "", "add_yaml_file"], [30, 1, 1, "", "dynamic_model_config"], [31, 1, 1, "", "map_yaml_configs"], [32, 1, 1, "", "map_yaml_options"], [33, 1, 1, "", "map_yaml_to_namelist"], [34, 1, 1, "", "partition"], [35, 1, 1, "", "process_inputs_and_outputs"], [36, 1, 1, "", "runtime_setup"], [37, 1, 1, "", "set_model_resources"], [38, 1, 1, "", "setup"], [39, 1, 1, "", "update_namelist_pio"]], "polaris.Step": [[40, 1, 1, "", "__init__"], [41, 1, 1, "", "add_dependency"], [42, 1, 1, "", "add_input_file"], [43, 1, 1, "", "add_output_file"], [44, 1, 1, "", "constrain_resources"], [45, 1, 1, "", "run"], [46, 1, 1, "", "runtime_setup"], [47, 1, 1, "", "set_resources"], [48, 1, 1, "", "set_shared_config"], [49, 1, 1, "", "setup"], [50, 1, 1, "", "validate_baselines"]], "polaris.Task": [[51, 1, 1, "", "__init__"], [52, 1, 1, "", "add_step"], [53, 1, 1, "", "configure"], [54, 1, 1, "", "remove_step"], [55, 1, 1, "", "set_shared_config"]], "polaris.__main__": [[56, 2, 1, "", "main"]], "polaris.cache": [[57, 2, 1, "", "update_cache"]], "polaris.components": [[58, 2, 1, "", "get_components"]], "polaris.config": [[59, 0, 1, "", "PolarisConfigParser"]], "polaris.config.PolarisConfigParser": [[59, 1, 1, "", "__init__"], [60, 1, 1, "", "setup"]], "polaris.io": [[61, 2, 1, "", "download"], [62, 2, 1, "", "symlink"], [63, 2, 1, "", "update_permissions"]], "polaris.job": [[64, 2, 1, "", "clean_up_whitespace"], [65, 2, 1, "", "get_slurm_options"], [66, 2, 1, "", "write_job_script"]], "polaris.list": [[67, 2, 1, "", "list_cases"], [68, 2, 1, "", "list_machines"], [69, 2, 1, "", "list_suites"]], "polaris.logging": [[70, 2, 1, "", "log_method_call"]], "polaris.mesh": [[71, 0, 1, "", "IcosahedralMeshStep"], [78, 0, 1, "", "QuasiUniformSphericalMeshStep"]], "polaris.mesh.IcosahedralMeshStep": [[71, 1, 1, "", "__init__"], [72, 1, 1, "", "build_subdivisions_cell_width_lat_lon"], [73, 1, 1, "", "get_cell_width"], [74, 1, 1, "", "get_subdivisions"], [75, 1, 1, "", "make_jigsaw_mesh"], [76, 1, 1, "", "run"], [77, 1, 1, "", "setup"]], "polaris.mesh.QuasiUniformSphericalMeshStep": [[78, 1, 1, "", "__init__"], [79, 1, 1, "", "build_cell_width_lat_lon"], [80, 1, 1, "", "make_jigsaw_mesh"], [81, 1, 1, "", "run"], [82, 1, 1, "", "setup"]], "polaris.mesh.planar": [[83, 2, 1, "", "compute_planar_hex_nx_ny"]], "polaris.mesh.spherical": [[84, 0, 1, "", "SphericalBaseStep"]], "polaris.mesh.spherical.SphericalBaseStep": [[84, 1, 1, "", "__init__"], [85, 1, 1, "", "run"], [86, 1, 1, "", "save_and_plot_cell_width"], [87, 1, 1, "", "setup"]], "polaris.model_step": [[88, 2, 1, "", "make_graph_file"]], "polaris.mpas": [[89, 2, 1, "", "area_for_field"], [90, 2, 1, "", "cell_mask_to_edge_mask"], [91, 2, 1, "", "time_index_from_xtime"]], "polaris.namelist": [[92, 2, 1, "", "ingest"], [93, 2, 1, "", "parse_replacements"], [94, 2, 1, "", "replace"], [95, 2, 1, "", "write"]], "polaris.ocean": [[146, 0, 1, "", "Ocean"]], "polaris.ocean.Ocean": [[146, 1, 1, "", "__init__"]], "polaris.ocean.convergence": [[158, 2, 1, "", "get_resolution_for_task"], [159, 2, 1, "", "get_timestep_for_task"]], "polaris.ocean.convergence.analysis": [[147, 0, 1, "", "ConvergenceAnalysis"]], "polaris.ocean.convergence.analysis.ConvergenceAnalysis": [[147, 1, 1, "", "__init__"], [148, 1, 1, "", "compute_error"], [149, 1, 1, "", "convergence_parameters"], [150, 1, 1, "", "exact_solution"], [151, 1, 1, "", "get_output_field"], [152, 1, 1, "", "plot_convergence"], [153, 1, 1, "", "run"], [154, 1, 1, "", "setup"]], "polaris.ocean.convergence.forward": [[155, 0, 1, "", "ConvergenceForward"]], "polaris.ocean.convergence.forward.ConvergenceForward": [[155, 1, 1, "", "__init__"], [156, 1, 1, "", "compute_cell_count"], [157, 1, 1, "", "dynamic_model_config"]], "polaris.ocean.convergence.spherical": [[160, 0, 1, "", "SphericalConvergenceForward"]], "polaris.ocean.convergence.spherical.SphericalConvergenceForward": [[160, 1, 1, "", "__init__"], [161, 1, 1, "", "compute_cell_count"]], "polaris.ocean.ice_shelf": [[162, 0, 1, "", "IceShelfTask"], [164, 0, 1, "", "SshAdjustment"], [166, 0, 1, "", "SshForward"]], "polaris.ocean.ice_shelf.IceShelfTask": [[162, 1, 1, "", "__init__"], [163, 1, 1, "", "setup_ssh_adjustment_steps"]], "polaris.ocean.ice_shelf.SshAdjustment": [[164, 1, 1, "", "__init__"], [165, 1, 1, "", "run"]], "polaris.ocean.ice_shelf.SshForward": [[166, 1, 1, "", "__init__"], [167, 1, 1, "", "compute_cell_count"], [168, 1, 1, "", "dynamic_model_config"]], "polaris.ocean.mesh.spherical": [[169, 2, 1, "", "add_spherical_base_mesh_step"]], "polaris.ocean.model": [[170, 0, 1, "", "OceanIOStep"], [176, 0, 1, "", "OceanModelStep"], [182, 2, 1, "", "get_time_interval_string"]], "polaris.ocean.model.OceanIOStep": [[170, 1, 1, "", "__init__"], [171, 1, 1, "", "map_from_native_model_vars"], [172, 1, 1, "", "map_to_native_model_vars"], [173, 1, 1, "", "open_model_dataset"], [174, 1, 1, "", "setup"], [175, 1, 1, "", "write_model_dataset"]], "polaris.ocean.model.OceanModelStep": [[176, 1, 1, "", "__init__"], [177, 1, 1, "", "compute_cell_count"], [178, 1, 1, "", "constrain_resources"], [179, 1, 1, "", "map_yaml_configs"], [180, 1, 1, "", "map_yaml_options"], [181, 1, 1, "", "setup"]], "polaris.ocean.rpe": [[183, 2, 1, "", "compute_rpe"]], "polaris.ocean.tasks.baroclinic_channel": [[184, 2, 1, "", "add_baroclinic_channel_tasks"]], "polaris.ocean.tasks.baroclinic_channel.decomp": [[185, 0, 1, "", "Decomp"]], "polaris.ocean.tasks.baroclinic_channel.decomp.Decomp": [[185, 1, 1, "", "__init__"]], "polaris.ocean.tasks.baroclinic_channel.default": [[186, 0, 1, "", "Default"]], "polaris.ocean.tasks.baroclinic_channel.default.Default": [[186, 1, 1, "", "__init__"]], "polaris.ocean.tasks.baroclinic_channel.forward": [[187, 0, 1, "", "Forward"]], "polaris.ocean.tasks.baroclinic_channel.forward.Forward": [[187, 1, 1, "", "__init__"], [188, 1, 1, "", "compute_cell_count"], [189, 1, 1, "", "dynamic_model_config"]], "polaris.ocean.tasks.baroclinic_channel.init": [[190, 0, 1, "", "Init"]], "polaris.ocean.tasks.baroclinic_channel.init.Init": [[190, 1, 1, "", "__init__"], [191, 1, 1, "", "run"], [192, 1, 1, "", "setup"]], "polaris.ocean.tasks.baroclinic_channel.restart": [[193, 0, 1, "", "Restart"]], "polaris.ocean.tasks.baroclinic_channel.restart.Restart": [[193, 1, 1, "", "__init__"]], "polaris.ocean.tasks.baroclinic_channel.restart.restart_step": [[194, 0, 1, "", "RestartStep"]], "polaris.ocean.tasks.baroclinic_channel.restart.restart_step.RestartStep": [[194, 1, 1, "", "__init__"], [195, 1, 1, "", "dynamic_model_config"]], "polaris.ocean.tasks.baroclinic_channel.rpe": [[196, 0, 1, "", "Rpe"]], "polaris.ocean.tasks.baroclinic_channel.rpe.Rpe": [[196, 1, 1, "", "__init__"], [197, 1, 1, "", "configure"]], "polaris.ocean.tasks.baroclinic_channel.rpe.analysis": [[198, 0, 1, "", "Analysis"]], "polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis": [[198, 1, 1, "", "__init__"], [199, 1, 1, "", "run"], [200, 1, 1, "", "setup"]], "polaris.ocean.tasks.baroclinic_channel.threads": [[201, 0, 1, "", "Threads"]], "polaris.ocean.tasks.baroclinic_channel.threads.Threads": [[201, 1, 1, "", "__init__"]], "polaris.ocean.tasks.baroclinic_channel.validate": [[202, 0, 1, "", "Validate"]], "polaris.ocean.tasks.baroclinic_channel.validate.Validate": [[202, 1, 1, "", "__init__"], [203, 1, 1, "", "run"]], "polaris.ocean.tasks.baroclinic_channel.viz": [[204, 0, 1, "", "Viz"]], "polaris.ocean.tasks.baroclinic_channel.viz.Viz": [[204, 1, 1, "", "__init__"], [205, 1, 1, "", "run"]], "polaris.ocean.tasks.barotropic_gyre": [[206, 0, 1, "", "BarotropicGyre"], [207, 2, 1, "", "add_barotropic_gyre_tasks"]], "polaris.ocean.tasks.barotropic_gyre.BarotropicGyre": [[206, 1, 1, "", "__init__"]], "polaris.ocean.tasks.barotropic_gyre.analysis": [[208, 0, 1, "", "Analysis"]], "polaris.ocean.tasks.barotropic_gyre.analysis.Analysis": [[208, 1, 1, "", "__init__"], [209, 1, 1, "", "compute_error"], [210, 1, 1, "", "exact_solution"], [211, 1, 1, "", "run"]], "polaris.ocean.tasks.barotropic_gyre.forward": [[212, 0, 1, "", "Forward"], [215, 2, 1, "", "compute_max_time_step"]], "polaris.ocean.tasks.barotropic_gyre.forward.Forward": [[212, 1, 1, "", "__init__"], [213, 1, 1, "", "compute_cell_count"], [214, 1, 1, "", "dynamic_model_config"]], "polaris.ocean.tasks.barotropic_gyre.init": [[216, 0, 1, "", "Init"]], "polaris.ocean.tasks.barotropic_gyre.init.Init": [[216, 1, 1, "", "__init__"], [217, 1, 1, "", "run"], [218, 1, 1, "", "setup"]], "polaris.ocean.tasks.cosine_bell": [[219, 0, 1, "", "CosineBell"], [221, 2, 1, "", "add_cosine_bell_tasks"]], "polaris.ocean.tasks.cosine_bell.CosineBell": [[219, 1, 1, "", "__init__"], [220, 1, 1, "", "configure"]], "polaris.ocean.tasks.cosine_bell.analysis": [[222, 0, 1, "", "Analysis"]], "polaris.ocean.tasks.cosine_bell.analysis.Analysis": [[222, 1, 1, "", "__init__"], [223, 1, 1, "", "exact_solution"]], "polaris.ocean.tasks.cosine_bell.decomp": [[224, 0, 1, "", "Decomp"]], "polaris.ocean.tasks.cosine_bell.decomp.Decomp": [[224, 1, 1, "", "__init__"]], "polaris.ocean.tasks.cosine_bell.forward": [[225, 0, 1, "", "Forward"]], "polaris.ocean.tasks.cosine_bell.forward.Forward": [[225, 1, 1, "", "__init__"]], "polaris.ocean.tasks.cosine_bell.init": [[226, 0, 1, "", "Init"], [228, 2, 1, "", "cosine_bell"]], "polaris.ocean.tasks.cosine_bell.init.Init": [[226, 1, 1, "", "__init__"], [227, 1, 1, "", "run"]], "polaris.ocean.tasks.cosine_bell.restart": [[229, 0, 1, "", "Restart"], [230, 0, 1, "", "RestartStep"]], "polaris.ocean.tasks.cosine_bell.restart.Restart": [[229, 1, 1, "", "__init__"]], "polaris.ocean.tasks.cosine_bell.restart.RestartStep": [[230, 1, 1, "", "__init__"], [231, 1, 1, "", "dynamic_model_config"]], "polaris.ocean.tasks.cosine_bell.validate": [[232, 0, 1, "", "Validate"]], "polaris.ocean.tasks.cosine_bell.validate.Validate": [[232, 1, 1, "", "__init__"], [233, 1, 1, "", "run"]], "polaris.ocean.tasks.cosine_bell.viz": [[234, 0, 1, "", "Viz"]], "polaris.ocean.tasks.cosine_bell.viz.Viz": [[234, 1, 1, "", "__init__"], [235, 1, 1, "", "run"]], "polaris.ocean.tasks.geostrophic": [[236, 0, 1, "", "Geostrophic"], [238, 2, 1, "", "add_geostrophic_tasks"]], "polaris.ocean.tasks.geostrophic.Geostrophic": [[236, 1, 1, "", "__init__"], [237, 1, 1, "", "configure"]], "polaris.ocean.tasks.geostrophic.analysis": [[239, 0, 1, "", "Analysis"]], "polaris.ocean.tasks.geostrophic.analysis.Analysis": [[239, 1, 1, "", "__init__"], [240, 1, 1, "", "exact_solution"], [241, 1, 1, "", "get_output_field"]], "polaris.ocean.tasks.geostrophic.forward": [[242, 0, 1, "", "Forward"]], "polaris.ocean.tasks.geostrophic.forward.Forward": [[242, 1, 1, "", "__init__"]], "polaris.ocean.tasks.geostrophic.init": [[243, 0, 1, "", "Init"]], "polaris.ocean.tasks.geostrophic.init.Init": [[243, 1, 1, "", "__init__"], [244, 1, 1, "", "run"]], "polaris.ocean.tasks.geostrophic.viz": [[245, 0, 1, "", "Viz"]], "polaris.ocean.tasks.geostrophic.viz.Viz": [[245, 1, 1, "", "__init__"], [246, 1, 1, "", "run"]], "polaris.ocean.tasks.ice_shelf_2d": [[247, 2, 1, "", "add_ice_shelf_2d_tasks"]], "polaris.ocean.tasks.ice_shelf_2d.default": [[248, 0, 1, "", "Default"]], "polaris.ocean.tasks.ice_shelf_2d.default.Default": [[248, 1, 1, "", "__init__"]], "polaris.ocean.tasks.ice_shelf_2d.forward": [[249, 0, 1, "", "Forward"]], "polaris.ocean.tasks.ice_shelf_2d.forward.Forward": [[249, 1, 1, "", "__init__"], [250, 1, 1, "", "compute_cell_count"], [251, 1, 1, "", "dynamic_model_config"]], "polaris.ocean.tasks.ice_shelf_2d.init": [[252, 0, 1, "", "Init"]], "polaris.ocean.tasks.ice_shelf_2d.init.Init": [[252, 1, 1, "", "__init__"], [253, 1, 1, "", "run"]], "polaris.ocean.tasks.ice_shelf_2d.validate": [[254, 0, 1, "", "Validate"]], "polaris.ocean.tasks.ice_shelf_2d.validate.Validate": [[254, 1, 1, "", "__init__"], [255, 1, 1, "", "run"]], "polaris.ocean.tasks.ice_shelf_2d.viz": [[256, 0, 1, "", "Viz"]], "polaris.ocean.tasks.ice_shelf_2d.viz.Viz": [[256, 1, 1, "", "__init__"], [257, 1, 1, "", "run"]], "polaris.ocean.tasks.inertial_gravity_wave": [[258, 0, 1, "", "InertialGravityWave"], [259, 2, 1, "", "add_inertial_gravity_wave_tasks"]], "polaris.ocean.tasks.inertial_gravity_wave.InertialGravityWave": [[258, 1, 1, "", "__init__"]], "polaris.ocean.tasks.inertial_gravity_wave.analysis": [[260, 0, 1, "", "Analysis"]], "polaris.ocean.tasks.inertial_gravity_wave.analysis.Analysis": [[260, 1, 1, "", "__init__"], [261, 1, 1, "", "exact_solution"]], "polaris.ocean.tasks.inertial_gravity_wave.exact_solution": [[262, 0, 1, "", "ExactSolution"]], "polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution": [[262, 1, 1, "", "__init__"], [263, 1, 1, "", "normal_velocity"], [264, 1, 1, "", "ssh"]], "polaris.ocean.tasks.inertial_gravity_wave.forward": [[265, 0, 1, "", "Forward"]], "polaris.ocean.tasks.inertial_gravity_wave.forward.Forward": [[265, 1, 1, "", "__init__"], [266, 1, 1, "", "compute_cell_count"]], "polaris.ocean.tasks.inertial_gravity_wave.init": [[267, 0, 1, "", "Init"]], "polaris.ocean.tasks.inertial_gravity_wave.init.Init": [[267, 1, 1, "", "__init__"], [268, 1, 1, "", "run"]], "polaris.ocean.tasks.inertial_gravity_wave.viz": [[269, 0, 1, "", "Viz"]], "polaris.ocean.tasks.inertial_gravity_wave.viz.Viz": [[269, 1, 1, "", "__init__"], [270, 1, 1, "", "run"]], "polaris.ocean.tasks.internal_wave": [[271, 2, 1, "", "add_internal_wave_tasks"]], "polaris.ocean.tasks.internal_wave.default": [[272, 0, 1, "", "Default"]], "polaris.ocean.tasks.internal_wave.default.Default": [[272, 1, 1, "", "__init__"]], "polaris.ocean.tasks.internal_wave.forward": [[273, 0, 1, "", "Forward"]], "polaris.ocean.tasks.internal_wave.forward.Forward": [[273, 1, 1, "", "__init__"], [274, 1, 1, "", "compute_cell_count"], [275, 1, 1, "", "dynamic_model_config"]], "polaris.ocean.tasks.internal_wave.init": [[276, 0, 1, "", "Init"]], "polaris.ocean.tasks.internal_wave.init.Init": [[276, 1, 1, "", "__init__"], [277, 1, 1, "", "run"]], "polaris.ocean.tasks.internal_wave.rpe": [[278, 0, 1, "", "Rpe"]], "polaris.ocean.tasks.internal_wave.rpe.Rpe": [[278, 1, 1, "", "__init__"], [279, 1, 1, "", "configure"]], "polaris.ocean.tasks.internal_wave.rpe.analysis": [[280, 0, 1, "", "Analysis"]], "polaris.ocean.tasks.internal_wave.rpe.analysis.Analysis": [[280, 1, 1, "", "__init__"], [281, 1, 1, "", "run"]], "polaris.ocean.tasks.internal_wave.viz": [[282, 0, 1, "", "Viz"]], "polaris.ocean.tasks.internal_wave.viz.Viz": [[282, 1, 1, "", "__init__"], [283, 1, 1, "", "run"]], "polaris.ocean.tasks.manufactured_solution": [[284, 0, 1, "", "ManufacturedSolution"], [285, 2, 1, "", "add_manufactured_solution_tasks"]], "polaris.ocean.tasks.manufactured_solution.ManufacturedSolution": [[284, 1, 1, "", "__init__"]], "polaris.ocean.tasks.manufactured_solution.analysis": [[286, 0, 1, "", "Analysis"]], "polaris.ocean.tasks.manufactured_solution.analysis.Analysis": [[286, 1, 1, "", "__init__"], [287, 1, 1, "", "exact_solution"]], "polaris.ocean.tasks.manufactured_solution.exact_solution": [[288, 0, 1, "", "ExactSolution"]], "polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution": [[288, 1, 1, "", "__init__"], [289, 1, 1, "", "normal_velocity"], [290, 1, 1, "", "ssh"]], "polaris.ocean.tasks.manufactured_solution.forward": [[291, 0, 1, "", "Forward"]], "polaris.ocean.tasks.manufactured_solution.forward.Forward": [[291, 1, 1, "", "__init__"], [292, 1, 1, "", "compute_cell_count"]], "polaris.ocean.tasks.manufactured_solution.init": [[293, 0, 1, "", "Init"]], "polaris.ocean.tasks.manufactured_solution.init.Init": [[293, 1, 1, "", "__init__"], [294, 1, 1, "", "run"], [295, 1, 1, "", "setup"]], "polaris.ocean.tasks.manufactured_solution.viz": [[296, 0, 1, "", "Viz"]], "polaris.ocean.tasks.manufactured_solution.viz.Viz": [[296, 1, 1, "", "__init__"], [297, 1, 1, "", "run"]], "polaris.ocean.tasks.single_column": [[298, 2, 1, "", "add_single_column_tasks"]], "polaris.ocean.tasks.single_column.cvmix": [[299, 0, 1, "", "CVMix"]], "polaris.ocean.tasks.single_column.cvmix.CVMix": [[299, 1, 1, "", "__init__"]], "polaris.ocean.tasks.single_column.forward": [[300, 0, 1, "", "Forward"]], "polaris.ocean.tasks.single_column.forward.Forward": [[300, 1, 1, "", "__init__"]], "polaris.ocean.tasks.single_column.ideal_age": [[301, 0, 1, "", "IdealAge"]], "polaris.ocean.tasks.single_column.ideal_age.IdealAge": [[301, 1, 1, "", "__init__"]], "polaris.ocean.tasks.single_column.init": [[302, 0, 1, "", "Init"]], "polaris.ocean.tasks.single_column.init.Init": [[302, 1, 1, "", "__init__"], [303, 1, 1, "", "run"]], "polaris.ocean.tasks.single_column.viz": [[304, 0, 1, "", "Viz"]], "polaris.ocean.tasks.single_column.viz.Viz": [[304, 1, 1, "", "__init__"], [305, 1, 1, "", "run"]], "polaris.ocean.tasks.sphere_transport": [[306, 0, 1, "", "SphereTransport"], [308, 2, 1, "", "add_sphere_transport_tasks"]], "polaris.ocean.tasks.sphere_transport.SphereTransport": [[306, 1, 1, "", "__init__"], [307, 1, 1, "", "configure"]], "polaris.ocean.tasks.sphere_transport.analysis": [[309, 0, 1, "", "Analysis"]], "polaris.ocean.tasks.sphere_transport.analysis.Analysis": [[309, 1, 1, "", "__init__"], [310, 1, 1, "", "convergence_parameters"]], "polaris.ocean.tasks.sphere_transport.filament_analysis": [[311, 0, 1, "", "FilamentAnalysis"]], "polaris.ocean.tasks.sphere_transport.filament_analysis.FilamentAnalysis": [[311, 1, 1, "", "__init__"], [312, 1, 1, "", "run"]], "polaris.ocean.tasks.sphere_transport.forward": [[313, 0, 1, "", "Forward"]], "polaris.ocean.tasks.sphere_transport.forward.Forward": [[313, 1, 1, "", "__init__"]], "polaris.ocean.tasks.sphere_transport.init": [[314, 0, 1, "", "Init"]], "polaris.ocean.tasks.sphere_transport.init.Init": [[314, 1, 1, "", "__init__"], [315, 1, 1, "", "run"]], "polaris.ocean.tasks.sphere_transport.mixing_analysis": [[316, 0, 1, "", "MixingAnalysis"]], "polaris.ocean.tasks.sphere_transport.mixing_analysis.MixingAnalysis": [[316, 1, 1, "", "__init__"], [317, 1, 1, "", "run"]], "polaris.ocean.tasks.sphere_transport.viz": [[318, 0, 1, "", "Viz"]], "polaris.ocean.tasks.sphere_transport.viz.Viz": [[318, 1, 1, "", "__init__"], [319, 1, 1, "", "run"]], "polaris.ocean.vertical": [[322, 2, 1, "", "init_vertical_coord"], [327, 2, 1, "", "update_layer_thickness"]], "polaris.ocean.vertical.grid_1d": [[320, 2, 1, "", "generate_1d_grid"], [321, 2, 1, "", "write_1d_grid"]], "polaris.ocean.vertical.partial_cells": [[323, 2, 1, "", "alter_bottom_depth"], [324, 2, 1, "", "alter_ssh"]], "polaris.ocean.vertical.sigma": [[325, 2, 1, "", "init_sigma_vertical_coord"], [326, 2, 1, "", "update_sigma_layer_thickness"]], "polaris.ocean.vertical.zlevel": [[328, 2, 1, "", "compute_min_max_level_cell"], [329, 2, 1, "", "compute_z_level_layer_thickness"], [330, 2, 1, "", "compute_z_level_resting_thickness"], [331, 2, 1, "", "init_z_level_vertical_coord"], [332, 2, 1, "", "update_z_level_layer_thickness"]], "polaris.ocean.vertical.zstar": [[333, 2, 1, "", "init_z_star_vertical_coord"], [334, 2, 1, "", "update_z_star_layer_thickness"]], "polaris.ocean.viz": [[335, 2, 1, "", "compute_transect"], [336, 2, 1, "", "plot_transect"]], "polaris.ocean.viz.transect.horiz": [[337, 2, 1, "", "find_planar_transect_cells_and_weights"], [338, 2, 1, "", "find_spherical_transect_cells_and_weights"], [339, 2, 1, "", "make_triangle_tree"], [340, 2, 1, "", "mesh_to_triangles"]], "polaris.ocean.viz.transect.vert": [[341, 2, 1, "", "find_transect_levels_and_weights"], [342, 2, 1, "", "interp_mpas_to_transect_cells"], [343, 2, 1, "", "interp_mpas_to_transect_nodes"]], "polaris.parallel": [[96, 2, 1, "", "get_available_parallel_resources"], [97, 2, 1, "", "get_parallel_command"], [98, 2, 1, "", "run_command"], [99, 2, 1, "", "set_cores_per_node"]], "polaris.provenance": [[100, 2, 1, "", "write"]], "polaris.remap": [[101, 0, 1, "", "MappingFileStep"]], "polaris.remap.MappingFileStep": [[101, 1, 1, "", "__init__"], [102, 1, 1, "", "dst_from_lon_lat"], [103, 1, 1, "", "dst_from_mpas"], [104, 1, 1, "", "dst_from_points"], [105, 1, 1, "", "dst_from_proj"], [106, 1, 1, "", "dst_global_lon_lat"], [107, 1, 1, "", "get_remapper"], [108, 1, 1, "", "runtime_setup"], [109, 1, 1, "", "src_from_lon_lat"], [110, 1, 1, "", "src_from_mpas"], [111, 1, 1, "", "src_from_proj"]], "polaris.run": [[112, 2, 1, "", "complete_step_run"], [113, 2, 1, "", "load_dependencies"], [116, 2, 1, "", "setup_config"], [117, 2, 1, "", "unpickle_suite"]], "polaris.run.serial": [[114, 2, 1, "", "run_single_step"], [115, 2, 1, "", "run_tasks"]], "polaris.seaice": [[372, 0, 1, "", "SeaIce"]], "polaris.seaice.SeaIce": [[372, 1, 1, "", "__init__"]], "polaris.seaice.tasks.single_column": [[373, 2, 1, "", "add_single_column_tasks"]], "polaris.seaice.tasks.single_column.exact_restart": [[374, 0, 1, "", "ExactRestart"]], "polaris.seaice.tasks.single_column.exact_restart.ExactRestart": [[374, 1, 1, "", "__init__"]], "polaris.seaice.tasks.single_column.exact_restart.validate": [[375, 0, 1, "", "Validate"]], "polaris.seaice.tasks.single_column.exact_restart.validate.Validate": [[375, 1, 1, "", "__init__"], [376, 1, 1, "", "run"]], "polaris.seaice.tasks.single_column.forward": [[377, 0, 1, "", "Forward"]], "polaris.seaice.tasks.single_column.forward.Forward": [[377, 1, 1, "", "__init__"]], "polaris.seaice.tasks.single_column.standard_physics": [[378, 0, 1, "", "StandardPhysics"]], "polaris.seaice.tasks.single_column.standard_physics.StandardPhysics": [[378, 1, 1, "", "__init__"]], "polaris.seaice.tasks.single_column.standard_physics.viz": [[379, 0, 1, "", "Viz"]], "polaris.seaice.tasks.single_column.standard_physics.viz.Viz": [[379, 1, 1, "", "__init__"], [380, 1, 1, "", "run"]], "polaris.setup": [[118, 2, 1, "", "setup_task"], [119, 2, 1, "", "setup_tasks"]], "polaris.streams": [[120, 2, 1, "", "read"], [121, 2, 1, "", "update_defaults"], [122, 2, 1, "", "update_tree"], [123, 2, 1, "", "write"]], "polaris.suite": [[124, 2, 1, "", "setup_suite"]], "polaris.validate": [[125, 2, 1, "", "compare_variables"]], "polaris.viz": [[126, 2, 1, "", "plot_global_lat_lon_field"], [127, 2, 1, "", "plot_global_mpas_field"], [128, 2, 1, "", "plot_horiz_field"], [129, 2, 1, "", "use_mplstyle"]], "polaris.yaml": [[130, 0, 1, "", "PolarisYaml"], [134, 2, 1, "", "main_mpas_to_yaml"], [135, 2, 1, "", "mpas_namelist_and_streams_to_yaml"], [136, 2, 1, "", "yaml_to_mpas_streams"]], "polaris.yaml.PolarisYaml": [[130, 1, 1, "", "__init__"], [131, 1, 1, "", "read"], [132, 1, 1, "", "update"], [133, 1, 1, "", "write"]]}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"], "2": ["py", "function", "Python function"]}, "objtypes": {"0": "py:class", "1": "py:method", "2": "py:function"}, "terms": {"": [1, 5, 6, 7, 8, 9, 11, 12, 14, 17, 19, 40, 42, 43, 48, 51, 52, 53, 55, 57, 59, 85, 114, 116, 121, 124, 142, 145, 234, 245, 318, 344, 347, 348, 349, 350, 351, 352, 353, 355, 356, 357, 358, 359, 360, 361, 362, 363, 365, 366, 367, 368, 369, 381, 384, 385, 386, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 400, 402, 403, 404, 405, 406, 407, 410, 412, 413, 414, 416, 417, 418, 421], "0": [1, 2, 5, 6, 7, 13, 14, 17, 18, 19, 73, 102, 106, 109, 125, 127, 128, 137, 138, 139, 140, 141, 142, 143, 145, 322, 325, 330, 331, 333, 336, 337, 338, 346, 349, 350, 351, 353, 358, 359, 361, 365, 368, 369, 382, 385, 388, 389, 391, 395, 397, 399, 400, 402, 403, 404, 405, 406, 407, 408, 410, 411, 412, 413, 414, 415, 416, 417, 418, 421], "00": [1, 14, 18, 145, 367, 382, 388, 394, 396, 417], "0000": 388, "00000000000000e": 18, "0000_00": [14, 388], "0001": [14, 145, 388], "0002": 388, "0024_00": 14, "003": 411, "0030_00": 14, "00_00": [367, 382, 388], "01": [1, 14, 145, 382, 388, 408, 411, 415, 420], "0100": 388, "01_00": [14, 145, 382, 388], "02": [1, 391], "0200": 367, "03": 1, "04": 142, "05": [388, 407], "05_degre": 11, "05_degree_20220729": 365, "06": 1, "08": [1, 388, 402], "0_chrysalis_gnu_openmpi": 6, "0_chrysalis_gnu_openmpi_albani": 6, "0_chrysalis_intel_openmpi": 6, "0_chrysalis_intel_openmpi_petsc": 6, "0_mpich": 417, "0e": [14, 412, 415], "1": [5, 7, 9, 13, 14, 17, 18, 19, 40, 73, 137, 138, 139, 140, 142, 143, 145, 166, 185, 187, 201, 212, 249, 273, 299, 300, 301, 322, 325, 331, 333, 336, 337, 338, 347, 348, 349, 350, 351, 353, 355, 357, 358, 359, 360, 362, 363, 365, 367, 369, 382, 385, 388, 389, 391, 394, 395, 396, 397, 399, 402, 403, 404, 405, 406, 407, 408, 410, 411, 412, 413, 414, 415, 416, 417], "10": [1, 9, 13, 73, 142, 344, 347, 353, 355, 357, 361, 362, 388, 389, 395, 397, 399, 402, 404, 406, 407, 408, 410, 411, 412, 413, 415, 423], "100": [353, 355, 357, 360, 399, 410, 412, 415], "1000": [388, 389, 399, 402, 403, 407, 410, 412], "10000": [337, 338, 410, 412], "101": [404, 406, 413, 414], "1016": 411, "1040": 408, "1050": 408, "10e": 403, "10km": [5, 18, 347, 388, 402, 417, 422, 423], "11": [13, 73, 142, 388, 403], "12": [6, 13, 73, 128, 336, 341, 349, 350, 351, 358, 359, 384, 388, 391, 404, 405, 406, 407, 413, 414, 417, 420], "120": [13, 73, 145, 366, 404, 405, 406, 407, 413, 414], "1200": 403, "120km": [1, 5, 367], "127": 385, "128": [17, 366, 391, 392, 396], "13": [13, 73, 388, 402], "1384565": [14, 388], "14": [385, 405], "14159265": 405, "146": 399, "15": [13, 14, 73, 347, 353, 388, 402, 404, 405, 406, 407, 408, 411, 413, 414, 415, 416, 417, 421], "150": [404, 405, 406, 411, 413, 414], "150km": 1, "151209": 11, "156": 420, "159": 385, "16": [389, 415, 417], "160": [388, 402], "160e3": 13, "164": 385, "17": 417, "173": 385, "18": [1, 6, 389, 391], "180": [19, 72, 79, 80, 86, 106, 340, 404, 405, 406, 413, 414], "180km": 1, "19": 6, "190": 408, "1950": 403, "1992": [405, 407], "1_": 142, "1_anvil_gnu_openmpi": 137, "1_anvil_intel_impi": [137, 142], "1_chicoma": 138, "1_chrysalis_gnu_openmpi": 139, "1_chrysalis_intel_openmpi": 139, "1_compy_gnu_openmpi": 140, "1_compy_intel_impi": 140, "1_frontier_crayclang_mpich": 141, "1_frontier_gnu_mpich": 141, "1_pm": 143, "1d": [102, 106, 109, 126, 145, 320, 321, 322, 323, 324, 325, 328, 329, 331, 333, 353], "1e": 410, "1e3": [13, 365, 388], "1km": [388, 402, 417], "1m": [382, 420], "1thread": [18, 347, 402], "2": [2, 6, 13, 14, 15, 18, 41, 128, 142, 145, 201, 247, 252, 346, 347, 349, 350, 351, 353, 358, 359, 363, 366, 369, 375, 382, 388, 389, 391, 395, 399, 400, 402, 403, 405, 407, 408, 409, 410, 411, 412, 417], "20": [1, 196, 278, 347, 353, 356, 366, 388, 402, 403, 411, 415], "200": [127, 145, 336, 355, 357, 388, 402, 408, 410, 412, 415], "2000": [145, 361, 382, 384, 388, 408, 420], "2000m": [361, 417], "200128": 11, "2004": 399, "2011": 411, "2012": [402, 404, 406, 411, 413, 414], "2015": [145, 388, 402], "2017": 399, "2019": 391, "2020": 142, "2022": 389, "2023": [1, 17, 410, 412], "20230414": 17, "20_00": 388, "20km": 411, "210": [399, 404, 405, 406, 413, 414], "210131_test_new_branch": 417, "210km": [1, 5], "2123666": 405, "22": 142, "221": 399, "23": 1, "230914": 5, "24": [145, 350, 405, 420], "240": [13, 73, 349, 350, 351, 352, 358, 359, 389, 404, 405, 406, 413, 414], "240km": [1, 5, 11, 169, 367], "245": 6, "246": 6, "25": [145, 355, 357, 403, 404, 405, 406, 410, 412, 413, 414, 415], "250": [399, 411], "2500": 399, "250km": 411, "256": [366, 391, 396], "25_extrap": 17, "28": [389, 399, 404], "288": [404, 406, 413, 414], "2ab": 2, "2d": [102, 106, 109, 126, 164, 248, 254, 341, 353, 400, 409], "2e": [388, 402], "2thread": [18, 402], "3": [13, 73, 141, 142, 145, 337, 338, 347, 348, 356, 365, 366, 369, 385, 388, 389, 395, 396, 399, 402, 403, 404, 405, 406, 407, 408, 410, 411, 412, 413, 414, 416, 417], "30": [13, 14, 73, 145, 361, 388, 394, 396, 402, 408, 415, 416, 421], "300": [404, 405, 406, 413, 414, 416], "3000": [389, 407], "304": 142, "314": 385, "32": [142, 366, 417], "33": [389, 411, 417], "34": [361, 408, 417], "35": [388, 402, 404, 405, 406, 407, 411, 413, 414, 415, 416, 417, 421], "35n": 420, "36": [390, 395, 415, 417], "369": 385, "37": 417, "38": [1, 417], "395": 385, "3_chrysalis_intel_openmpi": 388, "3a": 405, "3d": 336, "3rd": [365, 388], "3wbgy5": 13, "4": [5, 7, 9, 13, 14, 127, 142, 145, 185, 186, 347, 355, 356, 357, 360, 362, 365, 367, 388, 389, 395, 402, 403, 404, 405, 406, 407, 408, 410, 412, 413, 414, 415, 417], "40": [393, 407, 408], "400": 415, "40e3": [388, 402], "44": 408, "45": 391, "48": 406, "480": [404, 405, 406, 413, 414], "480km": 367, "4e2": 403, "4km": [388, 402, 417], "4proc": [388, 402], "4th": [404, 405, 406, 407, 413, 414], "4x4": 415, "5": [13, 14, 73, 127, 142, 145, 196, 278, 347, 352, 365, 366, 368, 385, 388, 389, 402, 404, 405, 406, 407, 408, 411, 413, 414, 416, 417, 421], "50": [347, 355, 356, 357, 388, 402, 408, 410, 412, 415], "500": [388, 389, 399, 402, 411], "5000": 403, "500e3": 13, "500km": [388, 402, 411], "50e3": 411, "51": 399, "5500": 399, "5550": 399, "55742015": 62, "576": 405, "59": 1, "5degre": [102, 106, 109], "5e": 415, "5km": [356, 408, 411], "5w": 420, "5x0": [102, 106, 109], "6": [13, 73, 336, 337, 338, 365, 388, 397, 400, 402, 404, 413, 415, 417, 418], "60": [13, 73, 145, 349, 350, 351, 352, 358, 359, 399, 404, 405, 406, 408, 413, 414], "6000": [389, 399], "60km": [1, 5, 367, 404, 405, 406, 413, 414], "63": 399, "64": [17, 394, 399], "66": 404, "6667": 405, "7": [13, 73, 142, 388, 396, 404, 405, 408, 414, 417], "71": 420, "720": 19, "75": [145, 405, 408], "77": 369, "7728169": [14, 62, 388], "7ohuiwq": 142, "8": [13, 73, 127, 142, 145, 347, 369, 388, 389, 402, 405, 410, 412, 414, 417], "80": 399, "8080": 385, "81": 142, "86": 406, "8844": 396, "8proc": [388, 402], "9": [13, 73, 142, 388, 404, 405, 406, 413, 414, 417], "90": [72, 79, 80, 86, 365, 404, 405, 406, 408, 413, 414], "90c": 365, "90km": [1, 5], "91": 365, "91c": 365, "92": [365, 399], "94": [13, 73, 407], "94e4": 407, "95": 385, "960": 415, "99": [404, 406, 413, 414], "A": [1, 6, 7, 8, 11, 13, 14, 17, 19, 20, 26, 28, 29, 31, 32, 33, 40, 41, 42, 43, 44, 48, 51, 52, 55, 58, 59, 60, 67, 71, 72, 75, 78, 79, 80, 84, 93, 96, 98, 100, 101, 102, 103, 104, 105, 109, 110, 111, 115, 118, 119, 120, 122, 124, 125, 126, 127, 128, 130, 131, 132, 133, 135, 136, 142, 145, 147, 155, 160, 162, 164, 166, 170, 171, 172, 175, 176, 179, 180, 182, 185, 186, 187, 190, 193, 194, 196, 198, 201, 202, 204, 208, 212, 216, 219, 222, 224, 225, 226, 229, 230, 232, 234, 236, 239, 242, 243, 245, 249, 252, 254, 256, 258, 260, 265, 267, 269, 272, 273, 276, 278, 280, 282, 284, 286, 291, 293, 296, 300, 302, 304, 306, 309, 311, 313, 314, 316, 318, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 331, 332, 333, 334, 336, 337, 338, 339, 340, 341, 342, 343, 347, 348, 353, 355, 356, 357, 360, 362, 365, 366, 367, 368, 369, 374, 375, 377, 379, 386, 387, 388, 390, 391, 392, 393, 394, 395, 396, 402, 403, 404, 405, 406, 407, 408, 410, 411, 412, 413, 414, 416, 417, 420, 421], "And": [7, 14, 369, 388], "As": [1, 4, 5, 6, 9, 11, 13, 18, 73, 145, 361, 365, 366, 367, 368, 369, 388, 389, 399, 403, 404, 405, 406, 407, 413, 414, 415, 422], "At": [14, 40, 51, 363, 364, 367, 388, 397, 407], "Be": [6, 396], "But": [13, 142, 361, 365, 368, 369, 388, 389, 395], "By": [5, 14, 18, 41, 42, 145, 344, 362, 365, 367, 381, 388, 389, 402, 405, 408, 415], "For": [2, 3, 5, 6, 7, 9, 12, 14, 17, 19, 25, 119, 128, 137, 142, 145, 149, 150, 223, 240, 261, 287, 310, 346, 347, 348, 353, 355, 356, 357, 360, 365, 368, 369, 388, 389, 397, 400, 404, 405, 406, 407, 410, 412, 413, 414, 417, 418, 423], "If": [2, 5, 6, 7, 8, 9, 12, 14, 18, 19, 25, 26, 31, 32, 37, 40, 42, 47, 48, 51, 52, 53, 55, 62, 97, 98, 99, 101, 112, 125, 128, 137, 138, 139, 140, 141, 142, 143, 145, 155, 160, 162, 166, 171, 172, 174, 176, 179, 180, 182, 187, 212, 249, 273, 295, 300, 347, 348, 353, 356, 365, 367, 368, 369, 382, 385, 386, 388, 389, 395, 396, 399, 404, 405, 406, 407, 408, 413, 414, 416, 417, 421], "In": [1, 2, 6, 7, 8, 9, 11, 14, 17, 18, 40, 142, 145, 337, 338, 341, 350, 361, 363, 365, 366, 367, 368, 369, 387, 388, 389, 395, 399, 405, 407, 408, 411, 416, 417, 421, 422, 423], "It": [2, 5, 6, 9, 14, 17, 40, 46, 126, 145, 349, 350, 351, 352, 353, 355, 357, 358, 359, 361, 365, 366, 367, 368, 369, 386, 388, 389, 395, 403, 405, 410, 412, 413, 414], "No": [11, 387, 410, 412], "ON": 369, "On": [6, 7, 13, 142, 369, 395], "One": [9, 13, 147, 155, 160, 219, 224, 225, 229, 230, 236, 242, 265, 269, 291, 296, 306, 309, 313, 388, 417, 422], "Or": [5, 365, 389], "That": [365, 368, 386, 388, 417], "The": [2, 5, 6, 7, 8, 9, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 34, 40, 41, 42, 43, 46, 49, 51, 52, 54, 57, 59, 61, 62, 63, 65, 66, 67, 70, 71, 72, 73, 74, 75, 78, 79, 83, 84, 88, 89, 90, 91, 93, 97, 98, 100, 101, 102, 103, 104, 105, 106, 107, 109, 110, 111, 112, 113, 115, 116, 117, 118, 119, 120, 124, 125, 126, 127, 128, 130, 131, 135, 136, 142, 145, 146, 147, 148, 149, 150, 151, 152, 155, 156, 158, 159, 160, 161, 162, 163, 164, 166, 167, 169, 170, 171, 172, 173, 175, 176, 177, 182, 185, 186, 187, 188, 190, 192, 193, 194, 196, 198, 200, 201, 202, 204, 206, 208, 209, 212, 213, 215, 216, 218, 219, 222, 223, 224, 225, 226, 229, 230, 232, 234, 236, 239, 240, 241, 242, 243, 245, 248, 249, 250, 252, 254, 256, 258, 260, 261, 265, 266, 267, 269, 272, 273, 274, 276, 278, 280, 282, 284, 286, 287, 291, 292, 293, 296, 299, 300, 301, 302, 304, 306, 309, 310, 311, 313, 314, 316, 318, 322, 323, 324, 325, 328, 329, 330, 331, 333, 335, 336, 337, 338, 342, 343, 344, 346, 347, 348, 349, 350, 351, 352, 353, 355, 356, 357, 358, 359, 360, 361, 362, 363, 365, 366, 367, 368, 369, 371, 372, 375, 377, 378, 379, 381, 382, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 410, 411, 412, 413, 414, 415, 416, 417, 418, 420, 421, 423], "Then": [4, 6, 7, 11, 14, 137, 138, 139, 140, 141, 142, 143, 344, 347, 348, 353, 355, 356, 357, 360, 362, 365, 367, 381, 388, 395, 402, 407, 408, 417], "There": [1, 5, 6, 13, 322, 325, 331, 333, 341, 350, 360, 361, 363, 365, 368, 369, 385, 388, 389, 390, 391, 392, 393, 394, 396, 405, 410, 411, 412, 417], "These": [5, 6, 8, 9, 14, 20, 40, 142, 145, 344, 346, 362, 365, 367, 368, 369, 381, 382, 387, 388, 389, 395, 397, 402, 403, 404, 405, 406, 407, 408, 410, 411, 412, 413, 414, 415, 416, 417, 422, 423], "To": [2, 5, 6, 12, 17, 18, 125, 141, 142, 143, 145, 344, 365, 368, 369, 381, 382, 388, 390, 391, 395, 399, 404, 405, 406, 413, 414, 417], "With": 369, "_": [101, 142, 365, 367, 369, 388, 411, 415], "__init__": [9, 17, 18, 20, 25, 40, 51, 59, 70, 71, 78, 84, 101, 130, 145, 146, 147, 155, 160, 162, 164, 166, 170, 176, 185, 186, 187, 190, 193, 194, 196, 198, 201, 202, 204, 206, 208, 212, 216, 219, 222, 224, 225, 226, 229, 230, 232, 234, 236, 239, 242, 243, 245, 248, 249, 252, 254, 256, 258, 260, 262, 265, 267, 269, 272, 273, 276, 278, 280, 282, 284, 286, 288, 291, 293, 296, 299, 300, 301, 302, 304, 306, 309, 311, 313, 314, 316, 318, 361, 362, 365, 367, 368, 372, 374, 375, 377, 378, 379, 386, 388], "__int__": 17, "__version__": 369, "_add_rpe_and_analysis_step": 9, "_add_step": 388, "_all": 119, "_build": 4, "_cached_fil": [8, 365], "_cosine_bel": 367, "_database_root": 42, "_forward_": 367, "_get_basic_config": 9, "_init_": 367, "_map_": 367, "_nu_": 388, "_plot": 388, "_resolut": 367, "_run_test": 388, "_setup_step": [367, 388], "_tidal_forc": 408, "_viz": 19, "_viz_": 367, "_with_viz": 367, "ab": 388, "abil": [1, 7, 404, 413], "abl": [5, 6, 137, 138, 139, 140, 141, 143, 145, 365, 366, 369, 388, 395, 417], "about": [1, 5, 6, 7, 8, 12, 14, 40, 101, 130, 145, 361, 365, 367, 368, 369, 388, 389, 391, 407, 414], "abov": [5, 7, 14, 18, 19, 142, 341, 361, 363, 365, 366, 367, 368, 369, 388, 389, 404, 405, 406, 407, 413, 415, 417, 422], "abruptli": 408, "absenc": 399, "absolut": [5, 9, 40, 42, 59, 119, 124, 344, 362, 365, 369, 381, 417], "ac": [6, 388], "accept": [355, 357], "access": [11, 41, 367, 368, 369, 388, 390, 395, 396], "accommod": [9, 25, 37, 40, 47, 97, 98, 176], "accomplish": [5, 11, 17, 365, 368], "accord": [228, 407, 410, 412, 417], "accordingli": [19, 99], "account": [13, 83, 369, 388, 390, 391, 393, 394, 395, 396, 417], "account_nam": 391, "accountutilizationbyus": 391, "accuraci": [410, 412], "achiev": [74, 366], "acm": [390, 417], "acme_high": 390, "across": [1, 6, 7, 9, 14, 19, 145, 347, 350, 361, 365, 366, 367, 368, 369, 386, 388, 398, 402, 404, 405, 406, 413, 414], "act": [5, 368, 399], "activ": [6, 19, 142, 395, 396, 417], "actual": [2, 5, 6, 12, 365, 367, 369, 388], "ad": [1, 2, 5, 6, 7, 9, 10, 11, 17, 18, 24, 41, 42, 49, 52, 53, 54, 59, 145, 169, 182, 184, 192, 200, 207, 218, 221, 238, 247, 248, 259, 271, 285, 298, 308, 322, 325, 331, 333, 361, 362, 367, 369, 373, 382, 387, 390, 391, 392, 393, 394, 396, 407, 417], "adcroft": 399, "add": [1, 2, 5, 6, 7, 9, 13, 14, 17, 18, 21, 22, 23, 24, 26, 27, 28, 29, 30, 41, 42, 43, 52, 53, 54, 60, 77, 82, 87, 120, 121, 122, 131, 132, 135, 136, 142, 145, 154, 168, 169, 184, 189, 195, 207, 214, 221, 231, 238, 247, 251, 259, 271, 275, 285, 298, 308, 361, 362, 365, 367, 368, 369, 373, 386, 388, 389, 394, 396, 404, 405, 406, 413, 414], "add_baroclinic_channel_task": [7, 9, 362, 368], "add_cosine_bell_task": [145, 362], "add_depend": 365, "add_dome_task": 361, "add_from_packag": [9, 11, 17, 145, 365, 367, 368, 388], "add_inertial_gravity_wave_task": 362, "add_input_fil": [11, 17, 18, 41, 365, 367, 388], "add_manufactured_solution_task": 362, "add_mesh_dens": 13, "add_metadata": 389, "add_model_config_opt": [14, 25, 145, 365, 367, 388], "add_namelist_fil": [14, 25, 145, 365, 367], "add_output_fil": [18, 41, 365, 367, 388], "add_single_column_task": 362, "add_spherical_base_mesh_step": [145, 367], "add_step": [9, 367, 388], "add_streams_fil": [14, 25, 145, 365, 367], "add_task": [9, 361, 362], "add_test_cas": 388, "add_test_group": 388, "add_yaml_fil": [9, 14, 25, 145, 365, 367, 388], "addit": [2, 6, 7, 9, 18, 40, 145, 341, 342, 343, 353, 360, 361, 362, 363, 365, 367, 368, 369, 388, 405, 407, 408, 411], "addition": [347, 348, 349, 350, 351, 352, 353, 355, 356, 357, 358, 359, 360, 365, 390, 391, 392, 393, 394, 396], "address": [389, 404, 413], "adequ": 403, "adher": [368, 388], "adjac": [13, 340, 399], "adjust": [14, 142, 145, 164, 165, 166, 344, 353, 389, 408], "adjust_vari": [397, 408], "adjusted_init": 365, "adjustsshmask": 397, "admittedli": 13, "adopt": 388, "advanc": [387, 388], "advantag": [9, 14, 142, 367, 368, 388, 395], "advect": [219, 272, 273, 278, 306, 349, 350, 351, 352, 356, 358, 359, 404, 405, 406, 410, 411, 412, 413, 414, 415], "affect": [1, 6, 349, 351, 358, 359, 365, 369, 388, 407], "after": [1, 5, 6, 7, 9, 11, 17, 18, 19, 40, 42, 43, 64, 85, 107, 112, 142, 145, 323, 324, 327, 344, 349, 350, 351, 352, 358, 359, 362, 365, 367, 369, 381, 388, 389, 391, 394, 396, 405, 407, 417, 420], "ag": [301, 302, 304], "again": [5, 6, 14, 140, 145, 344, 365, 367, 369, 385, 417], "against": [5, 10, 43, 50, 125, 145, 155, 160, 347, 348, 353, 355, 356, 357, 360, 365, 384, 388, 401, 403], "aim": 388, "al": [145, 388, 399, 402, 404, 405, 406, 407, 410, 411, 412, 413, 414], "albani": [5, 137, 139, 140, 362, 389, 417], "albany_support": 6, "ale_vertical_grid": 14, "algebra": 6, "algorithm": [9, 14, 145, 300, 347, 348, 355, 356, 357, 365, 388], "all": [1, 5, 6, 7, 8, 10, 11, 12, 14, 17, 18, 19, 20, 25, 40, 47, 51, 58, 97, 98, 100, 119, 125, 142, 145, 146, 149, 150, 163, 166, 176, 187, 212, 223, 240, 249, 261, 273, 287, 300, 310, 322, 325, 331, 333, 344, 347, 356, 361, 362, 363, 365, 366, 367, 368, 369, 372, 381, 386, 387, 388, 389, 395, 397, 399, 400, 402, 403, 404, 405, 406, 407, 408, 412, 413, 414, 416, 417, 418, 421, 423], "all_pass": [18, 125], "all_proxi": 385, "allow": [1, 2, 6, 8, 17, 18, 25, 37, 40, 47, 59, 125, 142, 145, 176, 337, 338, 365, 386, 388, 389, 395, 399, 404, 405, 406, 413, 414, 415, 423], "almost": [2, 9], "along": [11, 14, 19, 142, 336, 337, 338, 347, 353, 356, 365, 387, 388, 403], "alpha": [6, 137, 138, 139, 140, 141, 142, 143, 369, 388, 407], "alphabet": [362, 388], "alreadi": [1, 4, 5, 6, 11, 14, 52, 53, 62, 125, 142, 145, 169, 300, 327, 365, 367, 368, 369, 388, 389, 395, 399, 404, 405, 406, 413, 414, 417], "also": [1, 2, 5, 6, 7, 9, 13, 14, 19, 35, 46, 59, 125, 126, 142, 145, 322, 325, 331, 333, 336, 337, 338, 341, 344, 348, 350, 353, 355, 357, 360, 361, 362, 363, 365, 367, 368, 369, 388, 389, 395, 396, 397, 399, 403, 405, 407, 410, 411, 412, 416, 417, 421, 423], "alter": [323, 324, 365, 367, 369, 387, 388, 399, 402, 403, 404, 405, 406, 407, 408, 410, 411, 412, 413, 414, 415, 416], "altern": [5, 13, 365, 382, 417], "although": [12, 145], "alwai": [6, 7, 9, 12, 59, 142, 150, 223, 240, 261, 287, 340, 344, 362, 365, 367, 368, 369, 381, 386, 388, 389, 408], "amdclang": 142, "amdclanggpu": 142, "among": [342, 343, 361, 363, 369, 388], "amount": [6, 25, 37, 40, 47, 176, 365, 398, 415], "amplitid": [262, 288], "amplitud": [403, 404, 406, 408, 410, 411, 412, 413, 414], "amplitude_width_dist": 411, "amplitude_width_frac": 411, "an": [1, 2, 3, 5, 6, 7, 9, 11, 13, 15, 17, 18, 19, 25, 35, 40, 41, 42, 43, 62, 71, 73, 74, 90, 103, 110, 120, 122, 126, 135, 142, 147, 152, 172, 176, 226, 243, 314, 336, 337, 338, 339, 340, 342, 343, 347, 349, 350, 351, 352, 353, 356, 358, 359, 360, 361, 362, 363, 365, 366, 367, 368, 369, 385, 386, 387, 389, 391, 395, 397, 399, 403, 407, 408, 410, 414, 417, 422, 423], "analogi": 388, "analys": [208, 260, 286], "analysi": [1, 6, 9, 19, 145, 347, 356, 367, 368, 386, 387, 389, 403, 404, 405, 406, 410, 411, 412, 413, 414, 423], "analysis_depend": 367, "analyt": [348, 403, 410, 423], "analyz": [145, 147, 222, 239, 309, 311, 316, 388, 404, 405, 406, 413, 414], "angl": [262, 288, 407], "angleedg": [262, 288], "angular": [262, 288], "ani": [1, 5, 6, 7, 8, 9, 11, 13, 14, 17, 18, 19, 36, 49, 65, 112, 118, 119, 192, 200, 218, 361, 362, 363, 365, 366, 367, 368, 369, 371, 388, 389, 395, 402, 405, 415, 416, 417, 420, 421], "anl": [11, 365, 389], "anoth": [1, 2, 6, 7, 9, 10, 13, 17, 18, 19, 31, 32, 40, 41, 42, 125, 165, 249, 344, 347, 353, 356, 361, 363, 365, 367, 368, 369, 386, 388, 389, 402, 405, 408, 417, 422, 423], "antarct": 389, "antarctica": 389, "anticip": [5, 388], "antimeridian": 19, "anvil": [5, 6, 142, 365, 389, 395, 417], "anymor": 6, "anyon": 369, "anyth": 388, "anytim": 385, "anywher": [8, 12, 142, 369], "api": [7, 12, 387, 388], "app": [393, 417], "appear": [2, 142, 365, 388], "append": [25, 40, 42, 51, 101, 164, 166, 176, 185, 186, 187, 190, 193, 194, 196, 198, 201, 202, 204, 208, 212, 232, 249, 252, 254, 256, 272, 273, 276, 278, 280, 300, 365, 375, 377, 379, 407], "appli": [7, 13, 14, 67, 145, 249, 346, 361, 369, 388, 402, 405, 408, 415, 416, 421], "applic": [365, 368, 369, 416, 421], "apport": 145, "approach": [365, 368, 369, 385, 388, 399], "appropri": [2, 5, 6, 14, 15, 26, 83, 89, 142, 145, 171, 172, 173, 175, 344, 347, 348, 353, 355, 356, 357, 360, 362, 363, 365, 369, 381, 387, 388, 389, 395, 416, 417, 421], "approxim": [13, 71, 73, 74, 78, 145, 156, 161, 167, 177, 188, 213, 215, 250, 266, 274, 292, 347, 348, 355, 356, 357, 369, 388], "ar": [2, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 25, 26, 31, 32, 36, 37, 40, 42, 46, 47, 51, 59, 63, 83, 90, 97, 98, 101, 114, 115, 116, 119, 128, 132, 142, 145, 147, 166, 171, 176, 179, 180, 182, 187, 212, 249, 269, 273, 296, 300, 322, 325, 328, 331, 333, 335, 337, 338, 339, 341, 344, 346, 347, 348, 349, 350, 351, 352, 353, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 381, 382, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 399, 402, 403, 404, 405, 406, 407, 408, 410, 411, 412, 413, 414, 415, 416, 417, 420, 421, 422, 423], "arang": 9, "arbitrari": 407, "arbitrarili": 415, "arch": 142, "archiv": [391, 396], "arctic": [389, 420], "area": [89, 337, 338, 388], "area_for_field": 15, "aren": [6, 11, 40, 41, 142, 365, 368, 369, 388, 422], "arg": [7, 12, 40, 97, 98, 365], "argument": [1, 5, 7, 9, 12, 14, 18, 19, 38, 40, 97, 98, 108, 126, 145, 170, 173, 347, 356, 362, 365, 367, 368, 369, 388, 416, 421, 422], "argv": 396, "arisen": 365, "armpl": 6, "around": [350, 388, 389, 402, 404, 405, 406, 411, 413, 414], "arrai": [9, 15, 19, 72, 79, 80, 86, 126, 128, 145, 320, 321, 323, 324, 328, 329, 335, 342, 343, 388], "arrm10to60": 399, "asai": [1, 389], "ask": 142, "aspect": [19, 128, 388], "aspir": 365, "assess": [410, 412], "assign": [355, 357, 405], "assoc": 391, "associ": [9, 13, 14, 15, 19, 145, 322, 325, 331, 333, 337, 338, 347, 349, 351, 356, 358, 359, 365, 367, 369, 386, 408], "assum": [19, 53, 120, 131, 142, 369, 388, 396, 402, 403], "at_setup": [14, 30, 157, 168, 189, 195, 214, 231, 251, 275, 388], "atmospher": 420, "attempt": [6, 142, 387, 395], "attr": [365, 388], "attribut": [1, 8, 9, 12, 13, 14, 46, 48, 55, 105, 111, 112, 147, 269, 296, 338, 355, 357, 388], "augment": 368, "author": 389, "auto": 3, "autodetect": 389, "autom": 387, "automat": [6, 7, 9, 12, 14, 19, 142, 145, 365, 368, 369, 388, 389, 390, 392, 393, 395, 396, 417], "autopep8": 368, "autosummari": 7, "avail": [1, 4, 5, 7, 11, 14, 19, 25, 26, 31, 32, 37, 40, 43, 44, 47, 58, 67, 96, 97, 98, 142, 145, 166, 176, 179, 180, 187, 212, 249, 273, 300, 347, 349, 350, 351, 352, 356, 358, 359, 365, 367, 368, 369, 388, 390, 391, 392, 393, 394, 396, 402, 407, 408, 417, 422], "available_cor": 178, "available_resourc": [44, 96], "availi": [410, 412], "averag": [337, 338], "avoid": [5, 365, 388], "awai": 2, "awar": [6, 7, 142, 388, 395], "awkward": 388, "ax": [128, 336], "axi": [336, 365, 388, 414], "b": [2, 5, 6, 369, 386, 388, 417], "back": [7, 388, 391, 417], "background": [368, 404, 406, 411, 413, 414], "background_salin": 411, "balanc": [19, 236, 352, 353, 365, 388, 403, 404, 406, 407, 413, 414], "bar": [63, 128], "baroclin": [7, 9, 14, 184, 185, 186, 187, 190, 193, 196, 198, 201, 202, 204, 216, 249, 300, 347, 362, 365, 388, 400, 409, 423], "baroclinic_channel": [5, 7, 9, 14, 18, 272, 278, 344, 348, 354, 361, 362, 365, 368, 388, 402, 417, 422, 423], "baroclinic_channel_rp": 9, "baroclinicchannel": 388, "barotrop": [145, 187, 208, 212, 217, 300, 348, 365, 388, 400, 402, 409, 415], "barotropic_gyr": [344, 354, 403], "base": [1, 5, 8, 13, 14, 16, 18, 20, 40, 42, 44, 51, 57, 77, 82, 84, 116, 118, 119, 124, 128, 142, 145, 154, 155, 160, 163, 164, 166, 169, 176, 178, 181, 187, 212, 225, 226, 230, 234, 242, 243, 245, 313, 314, 318, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 341, 344, 347, 348, 349, 350, 351, 352, 355, 356, 357, 358, 359, 360, 362, 364, 365, 367, 368, 369, 381, 386, 388, 389, 390, 391, 392, 393, 394, 395, 396, 399, 402, 403, 404, 405, 406, 407, 413, 414, 423], "base_mesh": [1, 5, 13, 71, 78, 147, 169, 226, 234, 243, 245, 269, 296, 313, 314, 318, 365, 367, 388, 404, 405, 406, 413, 414], "base_mesh_step": 367, "base_mesh_vtk": 13, "base_path_to_install_or_update_conda": 369, "base_resolut": [145, 410, 412], "base_url": 11, "base_work_dir": [40, 51, 116, 365, 367], "baselin": [5, 6, 8, 10, 40, 43, 50, 118, 119, 124, 125, 145, 155, 160, 300, 347, 348, 353, 355, 356, 357, 360, 365, 366, 368, 384, 386, 388, 401, 408, 417], "baseline_dir": [5, 40, 118, 119, 124, 365], "bash": [6, 369, 385, 388, 417], "basi": [7, 388], "basic": [5, 7, 389, 391, 395, 407, 417], "basicmesh": 388, "batch": [391, 394], "bathy_descript": 389, "bathymetri": [11, 335, 341, 365, 389], "bathymetry_databas": [11, 365, 389], "batymetri": 399, "bear": 388, "becam": 388, "becaus": [1, 5, 6, 7, 11, 12, 13, 14, 40, 41, 346, 365, 367, 368, 369, 388, 391, 393, 394, 396, 417], "becom": [7, 365, 367, 388], "bedmachin": 389, "bedmachineantarctica_and_gebco_2019_0": 11, "bedmachineantarctica_v2_and_gebco_2022_0": 365, "been": [1, 5, 6, 40, 43, 48, 52, 53, 55, 107, 119, 124, 137, 139, 140, 142, 145, 154, 169, 260, 286, 309, 311, 316, 327, 344, 362, 365, 367, 368, 369, 381, 385, 388, 389, 390, 391, 392, 393, 394, 395, 396, 399, 402, 417], "befor": [5, 6, 8, 9, 14, 17, 19, 46, 119, 124, 142, 145, 365, 367, 368, 369, 385, 388, 391, 394, 396, 399, 404, 405, 406, 407, 413, 414, 417], "begeman": 1, "begin": [6, 7, 18, 347, 365, 369, 382, 387, 388, 395, 402, 405, 408, 415], "beginn": [387, 388], "behav": 13, "behavior": [9, 14, 115, 145, 365, 366, 369, 388], "behind": [1, 368], "being": [14, 19, 30, 40, 51, 114, 116, 119, 125, 142, 145, 157, 168, 172, 189, 195, 214, 231, 251, 275, 336, 353, 365, 367, 368, 388, 399], "bell": [19, 145, 219, 221, 222, 224, 225, 226, 228, 229, 232, 234, 242, 245, 314, 318, 350, 367, 388, 400, 404, 406, 407, 409, 413, 414, 416, 421], "belong": [1, 10, 11, 12, 14, 17, 25, 37, 40, 47, 51, 71, 78, 84, 101, 116, 145, 147, 155, 160, 162, 164, 166, 170, 176, 185, 186, 187, 190, 193, 194, 196, 198, 201, 202, 204, 206, 208, 212, 216, 219, 222, 224, 225, 226, 229, 230, 232, 234, 236, 239, 242, 243, 245, 248, 249, 252, 254, 256, 258, 260, 265, 267, 269, 272, 273, 276, 278, 280, 282, 284, 286, 291, 293, 296, 299, 300, 301, 302, 304, 306, 309, 311, 313, 314, 316, 318, 337, 338, 361, 362, 365, 367, 368, 374, 375, 377, 378, 379, 388, 422], "below": [1, 5, 6, 14, 19, 25, 37, 40, 47, 97, 98, 142, 145, 166, 176, 187, 212, 249, 273, 300, 341, 344, 350, 361, 363, 365, 367, 369, 388, 389, 395, 399, 404, 405, 406, 407, 408, 410, 412, 413, 414, 415, 417], "benefit": [366, 387], "besid": [342, 343], "best": [6, 17, 142, 365, 369], "beta": [6, 403], "better": [14, 17, 142, 417], "between": [1, 2, 5, 6, 7, 8, 12, 13, 14, 17, 18, 25, 31, 32, 39, 42, 50, 72, 79, 80, 83, 86, 101, 107, 125, 145, 174, 176, 179, 180, 193, 202, 229, 232, 254, 262, 288, 295, 322, 325, 331, 333, 336, 337, 338, 341, 343, 348, 349, 350, 351, 352, 358, 359, 362, 363, 365, 367, 368, 374, 375, 395, 397, 399, 402, 403, 404, 407, 408, 410, 411, 412], "bilinear": [17, 101, 336, 405, 416, 421], "bilinearli": 341, "bin": [142, 369, 396, 417], "biogeochemistri": 368, "bishnu": [410, 412], "bit": [14, 142, 350, 368, 386, 388, 402, 405, 408, 417], "black": [128, 336], "blank": [64, 369], "blob": 350, "block": [2, 367], "blue": [363, 390, 417], "bodi": 405, "bold": [1, 367], "bonu": 388, "bool": [14, 25, 26, 30, 40, 42, 50, 51, 52, 57, 61, 62, 63, 67, 114, 115, 119, 124, 125, 126, 127, 128, 132, 157, 168, 169, 176, 189, 195, 214, 219, 225, 230, 231, 236, 248, 249, 251, 275, 284, 291, 300, 302, 304, 306, 311, 316, 335, 336, 338, 388], "boolean": [9, 128, 328], "bootstrap": 6, "bot": [368, 399], "both": [5, 6, 7, 8, 13, 14, 25, 30, 142, 145, 147, 148, 150, 155, 158, 159, 160, 168, 182, 189, 195, 214, 219, 222, 223, 224, 225, 229, 230, 231, 236, 239, 240, 242, 251, 258, 260, 261, 265, 269, 275, 284, 286, 287, 291, 296, 306, 309, 311, 313, 316, 336, 347, 350, 353, 361, 362, 364, 365, 369, 387, 388, 389, 403, 405, 408, 410, 412, 415, 416], "bottom": [322, 323, 324, 325, 328, 329, 330, 331, 333, 346, 388, 389, 399, 402, 403, 404, 405, 406, 407, 408, 410, 411, 412, 413, 414, 415, 416], "bottom_depth": [335, 341, 365, 388, 389, 399, 402, 403, 404, 405, 406, 407, 408, 410, 411, 412, 413, 414, 415, 416], "bottom_drag": [145, 388], "bottom_salin": 408, "bottom_temperatur": [365, 388, 402, 411], "bottomdepth": [19, 145, 322, 323, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 365, 388, 399, 407], "bound": [341, 355, 357], "boundari": [19, 336, 341, 387, 402, 403, 408, 411, 423], "boundary_condit": [208, 209, 210], "bp": 391, "branch": [2, 5, 142, 344, 362, 365, 369, 381, 387, 388, 417], "break": [388, 402], "brief": [6, 7, 388], "briefli": 388, "bring": [9, 145, 388, 397], "broadcast": [365, 388], "broader": 362, "broadli": [361, 362, 368], "broken": [14, 365, 368], "brows": 388, "browser": 396, "bsnc6lt": 142, "btr_dt": [14, 145, 187, 300, 365, 388, 402], "btr_dt_per_km": [14, 145, 388, 397, 402, 408], "bug": 366, "build": [5, 6, 10, 13, 14, 75, 80, 137, 138, 139, 140, 141, 143, 335, 344, 362, 367, 368, 381, 385, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396], "build_": 6, "build_cell_width_lat_lon": [13, 78], "build_mesh": 13, "build_planar_mesh": 13, "buildabl": 142, "built": [5, 6, 14, 119, 124, 142, 344, 362, 369, 381, 387, 389, 395, 417], "bulk": 415, "bump": 6, "bunch": 388, "c": [5, 6, 119, 142, 365, 369, 390, 391, 392, 393, 394, 395, 396, 401, 404, 406, 411, 413, 414, 417, 422], "cach": [6, 20, 25, 40, 42, 118, 119, 128, 176, 387, 389, 395, 417, 422], "cached_fil": [5, 20, 365], "cached_step": 118, "calandrini": 6, "calcul": [15, 125, 355, 365, 367], "calendar": 391, "call": [5, 6, 8, 9, 10, 11, 12, 13, 14, 17, 18, 19, 25, 35, 40, 46, 51, 52, 53, 70, 107, 114, 128, 142, 145, 337, 338, 339, 342, 343, 347, 348, 355, 356, 357, 360, 362, 365, 366, 367, 368, 369, 385, 386, 387, 388, 389, 395, 396, 417], "calledprocesserror": 385, "camelcas": 388, "campin": 399, "can": [1, 2, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 17, 18, 19, 37, 40, 41, 42, 43, 47, 51, 60, 63, 75, 78, 80, 102, 106, 107, 109, 118, 119, 124, 137, 138, 139, 140, 141, 142, 143, 145, 248, 335, 337, 338, 341, 344, 347, 348, 355, 356, 357, 361, 362, 363, 365, 366, 367, 368, 369, 381, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 401, 402, 404, 405, 406, 407, 408, 412, 413, 414, 417, 422, 423], "cancel": 395, "candid": [337, 338], "cannot": [6, 18, 388], "cap": 388, "capabl": [1, 2, 6, 17, 142, 248, 350, 353, 365, 368, 387, 388, 395, 405, 417], "capit": [145, 388], "captur": [12, 411], "care": [6, 11, 13, 145, 361, 365, 369, 388], "carolyn": 1, "cartesian": [338, 340, 414], "cartopi": [19, 385], "case": [5, 6, 7, 8, 9, 11, 14, 18, 19, 28, 29, 51, 52, 57, 66, 96, 97, 98, 120, 125, 142, 145, 146, 153, 162, 164, 186, 193, 194, 196, 197, 198, 199, 201, 206, 208, 215, 220, 221, 222, 225, 226, 229, 230, 234, 235, 237, 239, 242, 243, 245, 246, 248, 257, 258, 260, 262, 265, 267, 268, 269, 270, 272, 273, 276, 277, 278, 279, 281, 282, 283, 284, 286, 288, 291, 293, 294, 296, 297, 299, 300, 301, 302, 303, 305, 306, 307, 308, 309, 311, 312, 313, 314, 316, 317, 318, 319, 320, 337, 338, 347, 348, 349, 350, 351, 353, 355, 356, 357, 358, 359, 360, 361, 362, 363, 365, 367, 369, 372, 374, 377, 378, 380, 386, 387, 388, 395, 396, 399, 402, 403, 404, 405, 406, 407, 408, 410, 411, 412, 413, 414, 415, 416, 417, 421, 422], "case_nam": [306, 309, 311, 313, 314, 316], "case_output": [8, 12], "cat": 388, "catch": [142, 366, 369], "categori": [7, 145, 362, 363, 364, 387, 423], "caus": [369, 391, 396, 399], "caution": 369, "caveat": 8, "caviti": [145, 353, 368, 388, 389, 397, 399, 408], "cbegeman": 388, "cc": [142, 394], "cd": [4, 6, 344, 369, 381, 388, 391, 417], "cdir": [396, 417], "cell": [13, 14, 15, 19, 71, 72, 73, 74, 78, 79, 80, 83, 86, 89, 90, 101, 103, 110, 145, 156, 161, 167, 176, 177, 188, 210, 213, 250, 262, 264, 266, 274, 288, 290, 292, 322, 323, 324, 325, 328, 331, 333, 335, 336, 337, 338, 340, 341, 342, 343, 347, 348, 355, 356, 357, 361, 382, 399, 402, 403, 404, 405, 406, 408, 410, 411, 412, 413, 414, 415, 416, 420], "cell_boundary_color": 336, "cell_count": [145, 156, 161, 167, 177, 188, 213, 250, 266, 274, 292, 388], "cell_mask": [19, 90], "cell_mask_to_edge_mask": 19, "cell_width": [13, 71, 72, 73, 74, 78, 79, 80, 86], "cell_width_colormap": 13, "cell_width_filenam": [13, 86], "cell_width_image_filenam": 13, "cellindic": 341, "cellmask": [145, 322, 325, 328, 331, 333, 388], "cellwidthglob": 13, "cellwidthvslatlon": [5, 13], "celsiu": [402, 408], "center": [13, 83, 127, 228, 262, 288, 336, 337, 338, 339, 340, 361, 388, 399, 402, 403, 411], "central": [19, 405], "central_longitud": [19, 127], "centric": 2, "certain": [9, 18, 59, 142, 365, 369, 389, 416, 421], "certif": 389, "cf": [396, 417], "cfg": [9, 11, 17, 53, 145, 362, 367, 368, 388, 389, 404, 406, 413, 414, 417], "cfl": 403, "ch": 391, "challeng": 2, "chang": [5, 6, 8, 11, 17, 63, 78, 112, 113, 145, 154, 344, 362, 365, 366, 367, 368, 369, 381, 386, 388, 389, 391, 396, 397, 399, 402, 403, 404, 405, 406, 408, 410, 411, 412, 413, 414, 417, 422], "channel": [7, 9, 14, 184, 185, 186, 187, 190, 193, 196, 198, 201, 202, 204, 216, 249, 300, 347, 362, 365, 385, 388, 400, 409, 423], "char": 91, "charact": 368, "character": [19, 404, 406, 411, 413, 414], "characterist": [7, 399, 416, 421], "check": [5, 6, 18, 125, 350, 353, 365, 369, 388, 389, 391, 396, 403, 417, 422], "check_cal": [12, 365], "check_siz": 389, "checker": 369, "checkout": [6, 369, 388], "chicoma": [142, 395, 417], "child": [45, 145, 211, 362, 365, 367, 368], "children": 121, "chkhome": 391, "choic": [388, 404, 405, 406, 407, 413, 414], "choos": [5, 365, 368, 369, 388, 390, 391, 392, 393, 396, 423], "chosen": [407, 415], "chrysali": [5, 6, 142, 365, 388, 389, 395, 417], "cime": 369, "circl": 338, "circul": [403, 405], "circular_shelf": 417, "circumst": [14, 18, 40, 41, 365, 388], "cism": 361, "citat": 7, "ckdtree": [337, 338, 339], "clang": [142, 369], "clariti": [14, 365], "class": [1, 9, 11, 13, 14, 17, 18, 19, 20, 25, 35, 40, 45, 51, 59, 70, 71, 78, 84, 101, 130, 145, 146, 147, 155, 160, 162, 163, 164, 166, 170, 176, 185, 186, 187, 190, 193, 194, 196, 198, 201, 202, 204, 206, 208, 211, 212, 216, 219, 222, 224, 225, 226, 229, 230, 232, 234, 236, 239, 242, 243, 245, 248, 249, 252, 254, 256, 258, 260, 262, 265, 267, 269, 272, 273, 276, 278, 280, 282, 284, 286, 288, 291, 293, 296, 299, 300, 301, 302, 304, 306, 309, 311, 313, 314, 316, 318, 344, 347, 348, 349, 350, 351, 352, 353, 355, 356, 357, 358, 359, 360, 362, 363, 365, 367, 372, 374, 375, 377, 378, 379, 381, 384, 388, 397], "classmethod": 131, "clean": [2, 4, 5, 6, 64, 119, 124, 365, 367, 369], "clear": [1, 2, 145, 368, 388], "clearli": 145, "cli115": 394, "climat": [70, 390, 391, 392, 395, 417], "climatologi": 399, "clobber_mod": [14, 145, 388], "clock": 417, "clockwis": 403, "clone": [5, 6, 142, 344, 363, 369, 381, 388, 417], "close": [1, 6, 74, 142, 353, 387, 404, 405, 406, 413, 414], "closer": 367, "closest": [15, 91, 145, 343, 361], "clu": 368, "clumsi": 368, "cluster": 391, "clutter": 361, "cmake": 369, "cmap": [19, 128, 336, 365, 388], "cmap_scal": 128, "cmap_set_ov": 128, "cmap_set_und": 128, "cmap_titl": 128, "cmo": [19, 365, 388, 404, 406, 407, 413, 414], "cmocean": [19, 365, 388], "co": [403, 404, 405, 406, 407, 410, 412, 413], "coars": [350, 405], "coarser": [389, 399, 404, 405, 406, 407, 413, 414], "coarsest": [388, 389], "cobalt": [142, 390, 391, 392, 393, 394, 395, 396], "code": [2, 5, 7, 9, 12, 14, 40, 145, 344, 361, 362, 365, 366, 367, 371, 381, 386, 387, 389, 398, 402, 408, 415, 417], "collaps": 399, "collect": [11, 104, 146, 362, 364, 372, 386, 388], "colon": 7, "color": [19, 127, 128, 336], "color_start_and_end": 336, "colorbar": [19, 126, 127, 128, 336, 349, 350, 351, 358, 359, 404, 405, 406, 407, 413, 414], "colorbar_label": [126, 127, 336], "colorbar_limit": [349, 350, 351, 358, 359, 404, 406, 407, 413, 414], "colorbar_tick": [19, 126, 405], "colormap": [19, 126, 127, 128, 336, 349, 350, 351, 352, 358, 359, 388, 404, 405, 406, 407, 413, 414], "colormap_nam": [19, 126, 127, 349, 350, 351, 358, 359, 404, 405, 406, 407, 413, 414], "colormap_sect": [19, 126, 127], "column": [19, 298, 299, 301, 302, 304, 352, 360, 369, 373, 374, 375, 377, 378, 379, 381, 382, 384, 399, 400, 407, 408, 409, 417, 418, 419], "com": [5, 6, 7, 14, 62, 368, 369, 387, 388, 389, 417, 418], "combin": [6, 40, 42, 51, 59, 66, 100, 130, 163, 166, 365, 366, 367, 385, 388, 389, 417], "come": [42, 142, 365, 369, 388, 390, 391, 392, 393, 394, 395, 396, 400], "comfort": [368, 388], "comma": [9, 404, 405, 406, 413, 414], "command": [6, 10, 16, 38, 40, 46, 97, 98, 100, 108, 142, 365, 368, 369, 386, 387, 388, 391, 395, 396, 417], "command_line_arg": 97, "commandlin": 365, "comment": [7, 366, 389], "commit": [368, 369], "common": [7, 12, 14, 46, 51, 142, 347, 348, 349, 350, 351, 352, 353, 355, 356, 357, 358, 359, 360, 361, 365, 366, 367, 368, 385, 386, 388, 389, 395, 396, 397, 416, 417, 421, 422, 423], "commonli": [365, 386], "commun": 388, "compact": [18, 388], "compar": [5, 10, 18, 40, 43, 50, 118, 119, 124, 125, 145, 202, 203, 232, 233, 254, 255, 300, 349, 350, 351, 352, 358, 359, 360, 365, 366, 367, 368, 369, 375, 376, 384, 386, 388, 401, 402, 403, 408, 411, 417, 420, 422], "compare_vari": [18, 388], "comparison": [5, 8, 18, 40, 50, 125, 365, 388, 389, 403, 408, 413], "comparisonantarcticstereoresolut": 389, "comparisonantarcticstereowidth": 389, "comparisonarcticstereoresolut": 389, "comparisonarcticstereowidth": 389, "comparisonlatresolut": 389, "comparisonlonresolut": 389, "compass": [1, 5, 6, 365, 368, 386, 388], "compat": [344, 369, 381, 385, 387, 408], "compi": [142, 393, 417], "compil": [4, 5, 6, 14, 137, 138, 139, 140, 141, 142, 143, 385, 387, 388, 390, 391, 392, 393, 394, 395, 396, 417], "compiler_gnu": 142, "compiler_intel": 142, "complet": [1, 5, 8, 27, 28, 29, 112, 388, 417], "complex": [13, 79, 367, 368, 388], "compli": 369, "complianc": 369, "complic": [14, 145, 368, 369, 388], "compon": [1, 5, 6, 7, 8, 9, 10, 13, 15, 17, 25, 40, 42, 51, 52, 54, 59, 66, 69, 71, 78, 84, 100, 101, 116, 118, 124, 130, 141, 142, 143, 147, 155, 160, 162, 164, 166, 169, 170, 176, 184, 185, 186, 187, 190, 193, 194, 196, 198, 201, 202, 204, 206, 207, 208, 212, 216, 219, 221, 222, 224, 225, 226, 229, 230, 232, 234, 236, 238, 239, 242, 243, 245, 247, 248, 249, 252, 254, 256, 258, 259, 260, 265, 267, 269, 271, 272, 273, 276, 278, 280, 282, 284, 285, 286, 291, 293, 296, 298, 299, 300, 301, 302, 304, 306, 308, 309, 311, 313, 314, 316, 318, 361, 363, 364, 365, 366, 367, 371, 372, 373, 374, 375, 377, 378, 379, 382, 386, 387, 388, 389, 395, 398, 401, 422, 423], "component_nam": 116, "component_path": [5, 9, 119, 124, 344, 362, 381, 389, 417], "compris": 348, "comput": [1, 7, 13, 14, 15, 83, 142, 145, 148, 149, 152, 156, 161, 167, 176, 177, 183, 188, 209, 213, 215, 228, 250, 262, 266, 274, 288, 292, 328, 329, 330, 341, 347, 348, 349, 350, 351, 352, 353, 355, 356, 357, 358, 359, 360, 365, 369, 391, 392, 395, 396, 402, 404, 405, 406, 407, 410, 412, 413, 414, 417], "compute_cell_count": [7, 145, 347, 348, 355, 356, 357, 388], "compute_error": 15, "compute_land_ice_pressure_and_draft": 7, "compute_planar_hex_nx_ni": [13, 365, 388], "compute_rp": [145, 388], "compute_transect": [145, 336, 353], "compyf": 393, "compymcnodefac": [142, 395], "concept": [363, 368, 388, 423], "conceptu": [361, 368, 408], "concret": 142, "conda": [4, 5, 16, 100, 137, 139, 140, 142, 344, 362, 368, 381, 387, 388, 389, 390, 391, 392, 393, 394, 396], "conda_bas": 6, "conda_env": [369, 417], "conda_path": [142, 369], "condit": [1, 7, 40, 145, 150, 163, 166, 172, 186, 190, 216, 217, 226, 243, 248, 249, 252, 256, 261, 265, 267, 276, 287, 291, 293, 299, 301, 302, 304, 314, 347, 348, 349, 350, 351, 352, 353, 355, 356, 357, 358, 359, 360, 361, 365, 366, 367, 368, 378, 384, 386, 387, 389, 397, 422, 423], "condo": [390, 417], "config": [5, 7, 8, 10, 11, 12, 13, 17, 19, 21, 25, 26, 29, 30, 31, 32, 33, 40, 41, 42, 48, 51, 53, 55, 61, 65, 66, 77, 79, 82, 96, 97, 98, 99, 100, 116, 118, 119, 124, 126, 127, 130, 131, 132, 133, 135, 136, 154, 155, 157, 158, 159, 160, 163, 168, 176, 179, 180, 182, 189, 195, 196, 210, 214, 215, 219, 220, 224, 229, 231, 236, 237, 248, 251, 258, 262, 275, 278, 284, 288, 306, 307, 320, 322, 323, 324, 325, 326, 327, 331, 332, 333, 334, 344, 347, 348, 349, 350, 351, 352, 353, 355, 356, 357, 358, 359, 360, 361, 365, 366, 367, 368, 369, 381, 382, 385, 387, 399, 417, 423], "config_atmospheric_forcing_typ": 382, "config_block_decomp_file_prefix": [14, 388], "config_bottom_drag_mod": 145, "config_btr_dt": [14, 145, 388], "config_cvmix_background_diffus": [14, 388], "config_cvmix_background_viscos": [14, 388], "config_disable_vel_hmix": 145, "config_dt": [14, 145, 388], "config_fil": [5, 9, 119, 124], "config_filenam": [9, 40, 51, 163, 365, 367], "config_filepath": 116, "config_forcing_cycle_dur": 382, "config_forcing_cycle_start": 382, "config_forcing_precipitation_unit": 382, "config_forcing_sst_typ": 382, "config_forcing_start_tim": 382, "config_implicit_bottom_drag_coeff": [14, 388], "config_implicit_bottom_drag_typ": 145, "config_implicit_constant_bottom_drag_coeff": 145, "config_include_pond_freshwater_feedback": 382, "config_initial_ice_area": 382, "config_initial_ice_volum": 382, "config_machin": 6, "config_map": 176, "config_model": [25, 26, 31, 32, 145, 155, 160, 179, 180], "config_mom_del2": [14, 145, 347, 356, 365, 388], "config_ocean_run_mod": 14, "config_pio_num_iotask": 14, "config_pio_strid": 14, "config_run_dur": [14, 145, 367, 388], "config_time_integr": [14, 145], "config_update_ocean_flux": 382, "config_use_cvmix_background": 14, "config_use_manufactured_solut": 145, "config_use_mom_del2": [14, 388], "config_vert_coord_mov": 14, "config_write_output_on_startup": [14, 388], "configpars": [9, 97, 98], "configur": [2, 5, 6, 11, 14, 17, 37, 40, 47, 51, 61, 66, 96, 97, 98, 99, 100, 119, 124, 142, 145, 163, 166, 236, 248, 306, 320, 322, 323, 324, 325, 326, 327, 331, 332, 333, 334, 365, 368, 369, 387, 388, 389, 391, 394, 395, 396, 399, 408, 410, 412, 416, 417, 421, 423], "configure_polaris_env": [6, 142, 369, 385, 388, 394], "confluenc": 390, "confus": [5, 14, 368, 369, 388], "connect": [90, 340, 388, 396], "connection_fil": 396, "conserv": [101, 405, 416, 421], "consid": 368, "consider": [13, 322, 325, 331, 333, 346, 382], "consist": [19, 25, 39, 142, 165, 176, 344, 369, 388, 389, 402, 411], "constant": [71, 78, 79, 145, 336, 337, 338, 346, 359, 388, 402, 403, 404, 405, 406, 407, 408, 410, 411, 413, 414, 415, 416, 421], "constrain": [44, 156, 161, 167, 177, 188, 213, 250, 266, 274, 292, 347, 348, 355, 356, 357, 365, 388], "constrain_resourc": 388, "constraint": [6, 65, 396, 417], "construct": [9, 14, 145, 146, 162, 320, 322, 323, 324, 325, 326, 327, 331, 332, 333, 334, 340, 341, 346, 360, 362, 367, 372, 388, 402, 407], "constructor": [1, 9, 14, 145, 347, 355, 356, 357, 361, 388], "consult": [346, 388], "consum": [8, 365, 367, 388, 422], "contact": 389, "contain": [1, 2, 5, 6, 7, 8, 9, 17, 19, 20, 27, 28, 29, 44, 58, 93, 96, 102, 103, 104, 105, 109, 110, 111, 120, 127, 128, 130, 145, 147, 155, 160, 162, 163, 166, 171, 172, 175, 183, 210, 322, 325, 326, 327, 331, 332, 333, 334, 335, 337, 338, 341, 362, 363, 364, 365, 368, 371, 381, 382, 386, 388, 389, 395, 400, 416, 417, 418, 421], "content": [9, 14, 119, 120, 122, 124, 136, 145, 361, 363, 365, 368, 384, 388, 417, 420], "context": [366, 388], "contin": [19, 126, 127], "continu": [2, 6, 365, 388], "contrast": 8, "contribut": 368, "contributor": [1, 2], "control": [145, 349, 350, 351, 352, 358, 359, 365, 389, 402, 404, 405, 406, 413, 414, 415, 417], "conv_thresh": [149, 310, 410, 412], "conveni": [5, 9, 17, 322, 325, 331, 333, 361, 365, 388, 389, 404, 405, 406, 413, 414, 417, 423], "convent": [1, 145, 365, 369, 388], "converg": [19, 206, 207, 219, 223, 224, 229, 236, 240, 241, 258, 259, 261, 284, 285, 287, 310, 349, 350, 351, 352, 355, 357, 358, 359, 363, 366, 387, 388, 404, 405, 406, 407, 410, 412, 413, 414, 416, 421], "convergence_": [349, 351, 358, 359, 405], "convergence_both": [401, 405, 407, 410, 412], "convergence_eval_tim": [145, 404, 405, 406, 407, 413, 414], "convergence_forward": [145, 349, 350, 351, 358, 359, 405, 407], "convergence_h": 352, "convergence_normalveloc": 352, "convergence_spac": [401, 405, 407, 410, 412], "convergence_thresh": [145, 405], "convergence_thresh_h": 407, "convergence_thresh_normalveloc": 407, "convergence_thresh_tracer1": [404, 406, 413, 414], "convergence_thresh_tracer2": [404, 406, 413, 414], "convergence_thresh_tracer3": [404, 406, 413, 414], "convergence_tim": [401, 405, 407, 410, 412], "convergence_tracer1": 350, "convergence_var": [145, 147], "convergenceanalysi": [145, 349, 350, 351, 352, 355, 357, 358, 359], "convergenceforward": [145, 355, 357], "convers": [365, 388], "convert": [5, 9, 13, 14, 19, 90, 145, 182, 365, 388], "convert_to_vtk": 13, "cooler": 402, "coord_typ": [353, 388, 399, 402, 403, 404, 405, 406, 408, 410, 411, 412, 413, 414, 415, 416], "coordin": [102, 104, 105, 109, 111, 126, 128, 262, 288, 322, 325, 326, 327, 331, 332, 333, 334, 335, 337, 338, 340, 341, 353, 398, 400, 402, 403, 404, 405, 406, 408, 410, 411, 412, 413, 414, 415, 416, 420], "copi": [5, 6, 8, 42, 57, 119, 124, 388, 391, 417], "copy_execut": [5, 119, 124, 417], "core": [5, 7, 8, 14, 25, 37, 39, 40, 42, 44, 46, 47, 66, 96, 97, 98, 124, 142, 145, 146, 176, 185, 186, 224, 299, 301, 347, 350, 356, 360, 361, 362, 365, 366, 367, 368, 382, 386, 388, 389, 390, 391, 392, 393, 394, 395, 396, 417, 422], "core_path": 389, "cores_per_nod": [44, 96, 99, 142, 389, 390, 391, 392, 393, 394, 395, 396, 417], "coriloi": 410, "corioli": [262, 355, 357, 388, 402, 403, 404, 405, 406, 407, 408, 411, 412, 413, 414, 415], "coriolis_paramet": [365, 388, 402, 408, 410, 411, 412, 415], "corner": 341, "correct": [142, 369], "correctli": 6, "correl": [349, 400, 409], "correlated_tracer_2d": 404, "correlated_tracers_2d": [308, 344, 354, 404], "correspond": [2, 6, 7, 17, 18, 90, 125, 142, 145, 147, 158, 159, 269, 296, 340, 344, 353, 365, 369, 381, 402, 410, 412], "cos_bell_dir": 367, "cosin": [19, 145, 219, 221, 222, 224, 225, 226, 228, 229, 232, 234, 242, 245, 314, 318, 350, 367, 388, 400, 404, 406, 407, 409, 413, 414, 416, 421], "cosine_bel": [1, 5, 14, 145, 310, 344, 354, 362, 367, 388, 405, 414, 416, 421, 422], "cosine_bell_cached_init": [417, 422], "cosine_bell_viz": [17, 19, 350, 405, 416, 421], "cosine_bells_amplitud": [404, 406, 413, 414], "cosine_bells_background": [404, 406, 413, 414], "cosine_bells_radiu": [404, 406, 413, 414], "cosinebel": [350, 367], "could": [1, 14, 17, 142, 365, 366, 367, 368, 369, 388, 405], "count": [11, 350, 366, 386, 405], "counter": 388, "counterclockwis": 340, "counterpart": [31, 32, 33], "coupl": [6, 385, 387], "cover": [17, 382, 388], "coverag": 366, "cp": 388, "cpu": [8, 142, 365, 388, 394, 417], "cpu_gnu_mpich": [138, 143], "cpu_intel_mpich": 143, "cpus_per_nod": 99, "cpus_per_task": [8, 14, 40, 44, 47, 97, 98, 365], "cr": 19, "crai": [138, 141, 142, 143, 394, 396], "cray_compil": [394, 396], "crayclang": [142, 394], "crayclanggpu": [142, 394], "creat": [5, 8, 9, 11, 12, 13, 14, 16, 17, 18, 19, 20, 25, 40, 42, 46, 51, 62, 71, 72, 78, 79, 84, 101, 108, 118, 119, 124, 128, 130, 142, 145, 147, 155, 160, 163, 164, 166, 169, 170, 176, 185, 186, 187, 190, 193, 194, 196, 198, 201, 202, 204, 206, 208, 212, 216, 217, 219, 222, 224, 225, 226, 229, 230, 232, 234, 236, 239, 242, 243, 245, 248, 249, 252, 254, 256, 258, 260, 262, 265, 267, 269, 272, 273, 276, 278, 280, 282, 284, 286, 288, 291, 293, 296, 299, 300, 301, 302, 304, 306, 309, 311, 313, 314, 316, 318, 322, 325, 331, 333, 349, 350, 351, 352, 353, 358, 359, 360, 361, 365, 366, 367, 368, 374, 375, 377, 378, 379, 385, 386, 387, 389, 390, 391, 392, 393, 394, 395, 396, 404, 405, 406, 413, 414, 417, 422], "create_landice_grid_from_generic_mpas_grid": 12, "create_polaris_load_script": 417, "creation": [13, 365, 389], "creation_d": 389, "crest": [365, 388, 402], "critic": [18, 388], "cross": [256, 282, 388], "csh": 369, "csv": [145, 349, 350, 351, 352, 358, 359, 388], "ctest": 369, "cull": [14, 19, 347, 348, 353, 355, 356, 357, 365, 388], "culled_graph": [365, 388], "culled_mesh": [365, 388], "culler": 14, "curl": 142, "current": [1, 2, 5, 6, 8, 11, 18, 19, 25, 37, 40, 47, 125, 142, 145, 176, 344, 348, 350, 360, 362, 365, 368, 369, 371, 381, 382, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 399, 402, 403, 408, 412, 415, 417, 422, 423], "currentmodul": 7, "curv": 368, "curvatur": [337, 338], "custom": [5, 6, 8, 13, 17, 19, 59, 61, 119, 124, 344, 362, 369, 381, 389, 396, 417], "customize_config_pars": 389, "cvmix": 388, "cxx": 142, "cylind": [404, 406, 413, 414], "d": [5, 19, 171, 172, 173, 175, 247, 252, 262, 288, 322, 325, 326, 327, 331, 332, 333, 334, 346, 349, 351, 358, 359, 365, 388, 400, 408, 409, 415], "d_": 14, "da": [19, 127, 342, 343], "da_cel": 342, "da_nod": 343, "dai": [145, 182, 196, 278, 347, 349, 350, 351, 352, 353, 356, 358, 359, 360, 384, 388, 402, 404, 405, 406, 407, 408, 411, 413, 414, 415, 420], "darren": 387, "dask": 389, "data": [5, 10, 13, 17, 18, 19, 26, 40, 41, 42, 107, 120, 122, 123, 126, 127, 128, 130, 136, 142, 145, 322, 325, 326, 327, 331, 332, 333, 334, 335, 337, 338, 340, 342, 343, 365, 369, 387, 389, 390, 391, 392, 393, 394, 395, 417, 422, 423], "data_arrai": 126, "dataarrai": [7, 89, 90, 127, 128, 150, 151, 223, 240, 241, 261, 262, 263, 264, 287, 288, 289, 290, 323, 324, 328, 329, 330, 335, 336, 337, 338, 341, 342, 343], "databas": [5, 6, 8, 11, 17, 20, 25, 40, 42, 63, 176, 365, 395], "database_compon": [42, 365], "database_path": 11, "database_root": [11, 142, 365, 389, 390, 391, 392, 393, 394, 395, 396, 417], "dataset": [17, 89, 90, 91, 125, 128, 145, 171, 172, 173, 175, 209, 210, 262, 288, 322, 325, 326, 327, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 365, 388], "date": [1, 2, 5, 57, 344, 363, 369, 381, 389], "date_str": [5, 57], "datestamp": 57, "daunt": 388, "davi": [1, 389], "dayssincestart": 388, "dayssincestartofsim": 388, "dc": [13, 361, 365, 388], "dcellboundari": 341, "dd": 2, "dddd_hh": [145, 182], "debug": [1, 8, 137, 138, 139, 140, 141, 142, 143, 145, 369, 388, 391, 392, 396, 404, 413], "debug_tracers_1": 405, "debugtrac": [404, 406, 413, 414], "decid": [145, 388], "declar": [2, 7], "decomp": [5, 362, 388, 401, 405, 417, 422], "decomposit": [14, 51, 185, 224, 350, 386, 388], "decomposition_test": [70, 361, 417], "decompositiontest": [70, 361], "deem": 1, "deep": 407, "deepest": 399, "def": [2, 7, 9, 11, 12, 14, 15, 17, 18, 19, 145, 361, 362, 365, 367, 368, 388], "default": [5, 7, 9, 11, 14, 15, 18, 19, 25, 41, 42, 51, 57, 66, 79, 84, 91, 92, 100, 101, 102, 106, 109, 115, 119, 121, 124, 128, 137, 139, 140, 142, 145, 149, 150, 162, 187, 223, 240, 261, 273, 287, 344, 349, 350, 351, 352, 355, 357, 358, 359, 360, 361, 362, 365, 367, 369, 381, 382, 387, 389, 390, 391, 392, 393, 394, 395, 396, 397, 399, 404, 405, 406, 413, 414, 415, 416, 417, 421, 423], "default_input": [344, 362, 381, 388, 389], "default_tidal_forc": 353, "defaults_filenam": 92, "defin": [6, 7, 8, 9, 13, 14, 16, 19, 40, 51, 78, 105, 111, 118, 119, 124, 142, 145, 207, 221, 238, 259, 285, 308, 337, 338, 339, 340, 341, 342, 343, 344, 346, 347, 348, 349, 350, 351, 352, 353, 355, 356, 357, 358, 359, 360, 361, 362, 363, 365, 366, 367, 368, 369, 373, 381, 382, 384, 386, 387, 389, 395, 397, 399, 402, 405, 411, 414, 415, 422, 423], "definit": [6, 14, 388], "deform": [349, 358, 413], "degc": 415, "degre": [19, 72, 79, 80, 86, 106, 335, 338, 340, 389, 402, 408, 411], "del2": [284, 291, 403, 411], "del4": [284, 291], "delet": [5, 119, 124, 368, 369, 385, 417], "delta": [399, 402, 407, 415], "demonstr": [367, 388], "den_l2": 15, "dens": 368, "densiti": [7, 13, 145, 388, 403], "dep": 369, "depend": [5, 14, 17, 19, 40, 41, 49, 112, 113, 142, 145, 147, 155, 160, 192, 200, 218, 222, 239, 260, 269, 286, 296, 309, 311, 316, 367, 369, 386, 387, 388, 389, 395, 396, 399, 404, 405, 406, 408, 413, 414, 417, 423], "dependencies_dict": [147, 269, 296], "deploi": [142, 369, 387, 390, 391, 392, 393, 394, 395, 396], "deploy": [6, 369, 390, 391, 392, 393, 394, 396], "deploy_tmp": 385, "depress": [388, 399, 408], "depth": [128, 145, 320, 321, 322, 323, 324, 325, 328, 329, 330, 331, 333, 335, 336, 341, 388, 389, 399, 402, 403, 404, 405, 406, 407, 408, 410, 411, 412, 413, 414, 415, 416], "deriv": [150, 163, 166, 261, 287], "descend": [14, 17, 145, 349, 350, 351, 352, 355, 357, 358, 359, 361, 362, 365, 367, 368, 388], "describ": [5, 7, 14, 17, 19, 100, 120, 122, 136, 145, 347, 348, 349, 350, 351, 352, 353, 355, 356, 357, 358, 359, 360, 361, 364, 365, 366, 367, 368, 369, 384, 385, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 399, 404, 405, 406, 407, 408, 413, 417], "descript": [5, 7, 388, 389, 400, 418], "descriptor": [19, 128], "design": [1, 142, 345, 365, 367, 368, 387, 395, 402, 403], "desir": [12, 13, 14, 18, 19, 125, 145, 365, 366, 367, 388, 389, 403, 417], "desktop": 388, "dest_path": [11, 61], "dest_typ": 101, "destin": [17, 101, 102, 103, 104, 105, 106, 107], "detail": [2, 3, 5, 7, 9, 11, 12, 13, 67, 125, 335, 346, 349, 350, 351, 352, 358, 359, 363, 365, 368, 369, 385, 388, 405, 407, 410, 412, 417], "detect": [14, 19, 389, 390, 392, 393, 395, 407, 417], "determin": [8, 9, 13, 14, 15, 19, 42, 46, 89, 91, 128, 136, 142, 145, 166, 181, 306, 347, 348, 349, 350, 351, 352, 355, 356, 357, 358, 359, 365, 388, 397, 399, 402, 403, 404, 405, 406, 407, 408, 410, 411, 412, 413, 414, 416, 417, 421], "dev": [5, 6, 7, 353, 361, 362, 364, 365, 368, 369, 387, 388, 400, 417, 418], "dev_polaris_": [369, 385], "dev_polaris_0_2_0_gnu_mpich": 6, "develop": [1, 5, 6, 7, 8, 9, 12, 13, 19, 142, 145, 344, 346, 362, 365, 366, 367, 368, 382, 385, 389, 390, 391, 392, 393, 394, 395, 396, 400, 403, 417], "developers_guid": 388, "deviat": 7, "df": 391, "diagnost": [6, 358, 389, 390, 391, 393, 394, 395, 396, 404, 417], "diagram": 363, "dict": [14, 20, 26, 28, 29, 31, 32, 33, 40, 44, 51, 93, 94, 96, 100, 101, 117, 119, 120, 126, 130, 131, 132, 145, 147, 155, 160, 163, 166, 170, 176, 179, 180, 222, 239, 260, 269, 286, 296, 309, 311, 316, 365, 367, 388], "dictat": [408, 415], "dictionari": [1, 8, 9, 14, 19, 20, 26, 28, 29, 31, 32, 33, 40, 41, 44, 51, 59, 93, 96, 100, 119, 120, 130, 131, 132, 145, 155, 160, 176, 179, 180, 365, 367, 368, 388, 405], "did": [11, 386, 388], "didn": 388, "diff": 15, "differ": [6, 14, 15, 17, 18, 31, 32, 59, 75, 80, 125, 142, 145, 184, 187, 196, 224, 247, 271, 273, 278, 341, 344, 347, 348, 350, 356, 361, 362, 363, 365, 366, 367, 368, 381, 386, 388, 389, 390, 391, 392, 393, 394, 396, 402, 403, 404, 405, 406, 407, 410, 411, 412, 413, 414, 416, 421], "differenti": [349, 351, 358, 359], "difficult": [14, 142, 395], "diffus": [347, 349, 350, 351, 352, 355, 356, 357, 358, 359, 360], "dig": [368, 389], "dim": [365, 388], "dimens": [15, 89, 128, 145, 147, 152, 170, 171, 172, 173, 175, 223, 240, 335, 342, 343, 360, 402, 403, 408], "dimension": 408, "dinterfaceseg": 341, "direct": [12, 13, 14, 83, 262, 288, 347, 348, 353, 355, 356, 357, 388, 396, 402, 408, 410, 411, 412], "directli": [11, 13, 14, 17, 18, 40, 145, 363, 365, 368, 386, 387, 388, 391], "directori": [5, 6, 8, 9, 11, 12, 14, 16, 19, 25, 40, 42, 43, 48, 49, 51, 52, 55, 57, 59, 62, 63, 66, 100, 101, 114, 116, 118, 119, 124, 125, 142, 155, 160, 162, 163, 164, 166, 176, 185, 186, 187, 190, 192, 193, 194, 196, 198, 200, 201, 202, 204, 208, 212, 218, 219, 224, 229, 232, 234, 245, 248, 249, 252, 254, 256, 272, 273, 276, 278, 280, 300, 318, 344, 347, 353, 356, 362, 364, 365, 366, 367, 368, 369, 375, 377, 379, 381, 382, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 404, 405, 406, 407, 413, 414, 417, 423], "dirti": 388, "disabl": [19, 346, 405, 423], "disadvantag": 388, "disc": [382, 420], "discontinu": [337, 338, 406, 413, 414], "discourag": [368, 386], "discov": 6, "discoveri": 142, "discret": [410, 412], "discuss": [2, 6, 145, 349, 350, 351, 352, 358, 359, 365, 368, 388, 402, 408], "disk": [369, 389, 391, 396], "displac": 7, "displai": [5, 8, 336, 396], "display_nam": 396, "dissip": [388, 402], "distanc": [13, 83, 101, 228, 337, 338, 388, 402, 403, 411], "distant": 13, "distinct": 368, "distinguish": 402, "distribut": [349, 350, 351, 358, 359, 404, 406, 413, 414], "diverg": [31, 32, 33, 351, 400, 404, 407, 409, 413], "divergent_2d": [308, 344, 354, 406], "divid": [14, 19, 340, 399], "dlat": [17, 106, 405, 416, 421], "dlon": [17, 106, 405, 416, 421], "dnode": [337, 338], "do": [2, 5, 9, 11, 14, 17, 18, 131, 142, 145, 361, 365, 367, 369, 385, 386, 387, 388, 395, 404, 405, 406, 407, 413, 414, 417], "do_restart": [225, 230, 249], "doc": [4, 7, 388, 396], "docstr": [368, 387, 388], "document": [1, 3, 6, 9, 14, 365, 368, 387, 389, 411, 417], "doe": [2, 6, 9, 12, 14, 142, 365, 371, 387, 388, 395, 408], "doesn": [5, 6, 136, 142, 365, 367, 388, 389, 394, 395, 417], "doi": 411, "domain": [13, 25, 34, 83, 128, 145, 162, 176, 183, 346, 361, 382, 388, 402, 403, 405, 407, 408, 410, 411, 412, 415, 416, 421, 423], "dome": [12, 70, 361, 365, 367, 417, 423], "dome_typ": 361, "dome_varres_grid": 365, "dome_viz": 361, "domega_build_test": 369, "domega_build_typ": 369, "domega_cime_compil": 369, "domega_cime_machin": 369, "domega_metis_root": 369, "domega_parmetis_root": 369, "don": [5, 6, 7, 14, 142, 145, 147, 152, 365, 367, 368, 369, 388, 393, 417, 423], "done": [18, 37, 47, 365, 367, 369, 388, 417], "dot": [127, 128, 336, 368], "doubl": [7, 14, 145, 365, 366, 388], "doubli": [410, 412], "down": [322, 323, 324, 325, 328, 329, 330, 331, 333, 335, 341, 353, 388, 399, 405], "download": [5, 6, 8, 10, 40, 42, 49, 63, 142, 192, 200, 218, 367, 368, 369, 389, 417, 422], "download_path": 11, "download_target": 11, "downsid": 369, "downstream": 368, "dozen": 368, "dpi": [127, 336], "draft": [7, 353, 399], "drag": [346, 349, 350, 351, 352, 358, 359, 403], "driven": 403, "dry": [57, 366], "dry_run": [5, 57], "ds1": [18, 125], "ds2": [18, 125], "ds_horiz_mesh": 335, "ds_horiz_transect": 341, "ds_init": [19, 388], "ds_mesh": [13, 15, 19, 89, 90, 128, 209, 210, 337, 338, 340, 365, 388], "ds_out": [15, 209, 337, 338], "ds_transect": [335, 336, 341, 342, 343], "ds_tri": [337, 338, 339, 340], "dst": 391, "dst_": 17, "dst_from_mpa": 17, "dst_global_lon_lat": 17, "dst_grid_info": 101, "dst_mesh_filenam": 101, "dt": [14, 145, 187, 212, 300, 365, 388, 402, 404, 405, 406, 407, 410, 412, 413, 414, 416, 421], "dt_max": 215, "dt_per_km": [14, 145, 349, 350, 351, 352, 358, 359, 388, 402, 408, 410, 412, 416, 421], "dt_str": 145, "dt_target": 91, "dtransect": [337, 338], "dtype": [9, 367, 388], "durat": [14, 145, 347, 348, 355, 356, 357, 360, 366, 388, 397], "dure": [6, 8, 11, 14, 18, 30, 40, 51, 60, 157, 168, 189, 195, 214, 231, 251, 275, 365, 367, 368, 369, 388, 389, 417, 422, 423], "dv": 145, "dynam": [165, 176, 344, 348, 353, 360, 389, 397, 402, 404, 405, 406, 407, 408, 413, 414, 415, 416], "dynamic_adjust": [1, 14, 389], "dynamic_model_config": [7, 14, 347, 348, 356, 388], "dynamic_ntask": 176, "dz": 415, "e": [5, 6, 7, 9, 11, 14, 15, 19, 31, 32, 33, 40, 41, 53, 70, 130, 142, 145, 151, 169, 337, 338, 344, 361, 363, 365, 366, 368, 369, 381, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 396, 399, 402, 403, 404, 405, 406, 408, 410, 411, 412, 413, 414, 415, 416, 417, 421, 423], "e302": 369, "e3sm": [5, 7, 10, 11, 40, 130, 142, 344, 362, 365, 366, 368, 381, 382, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 399, 400, 418], "e3sm_chrys_gnu_openmpi": 6, "e3sm_compon": 388, "e3sm_diag": 6, "e3sm_submodul": [5, 344, 362, 369, 381, 382, 388], "e3sm_unifi": 11, "e3sm_vers": 389, "e501": [70, 388], "each": [1, 2, 5, 6, 7, 8, 9, 12, 13, 14, 17, 18, 40, 46, 51, 67, 73, 74, 83, 113, 119, 136, 142, 145, 147, 152, 155, 160, 202, 203, 219, 224, 232, 233, 236, 248, 255, 306, 322, 323, 324, 325, 328, 329, 330, 331, 333, 336, 337, 338, 340, 341, 346, 347, 348, 349, 350, 351, 352, 353, 355, 356, 357, 358, 359, 360, 361, 363, 364, 365, 366, 367, 368, 369, 375, 376, 384, 386, 388, 389, 395, 397, 399, 402, 404, 405, 406, 407, 408, 410, 411, 412, 413, 414, 416, 417, 421, 422], "earli": [145, 400, 417], "earth": [338, 387], "earth_radiu": 338, "easi": [7, 9, 42, 368, 388], "easier": [1, 14, 145, 365, 367, 368, 369, 389, 417, 422], "easiest": [18, 142, 369], "easili": 388, "ec": 389, "ec30to60": 417, "echo": 369, "ecosystem": 390, "ecwisc30to60": 417, "eddi": [347, 402], "edg": [15, 19, 89, 90, 103, 106, 110, 127, 128, 262, 263, 288, 289, 337, 338, 339, 346, 388], "edge_mask": [19, 90], "edit": [5, 7, 369, 388, 417], "editor": 368, "effect": [388, 416], "effici": [19, 365, 388], "eigen": 6, "either": [1, 5, 6, 7, 8, 9, 12, 13, 14, 17, 73, 142, 145, 158, 159, 171, 344, 353, 365, 369, 386, 388, 389, 399, 407, 415, 417], "ekat": 369, "element": [322, 325, 331, 333, 388], "elev": [322, 325, 331, 333, 388, 399], "els": [7, 8, 142, 365, 367, 388], "elsewher": [1, 369], "email": 389, "embed": 412, "emploi": 365, "empti": [59, 336, 365, 368, 369, 386, 388], "emtpi": 395, "enabel": 360, "enabl": [8, 19, 360, 365, 385, 389, 396, 410, 412], "enable_diagnostics_fil": 389, "enable_ocean_graph_partit": 389, "enable_ocean_initial_condit": 389, "enable_scrip": 389, "enable_seaice_initial_condit": 389, "enclos": 388, "encod": 369, "encompass": 362, "encount": [6, 366, 385], "encourag": 388, "end": [14, 128, 155, 160, 336, 337, 338, 365, 367, 368, 369, 384, 386, 388, 391, 402, 404, 405, 410, 412, 415, 420], "end_color": 336, "endeavor": 368, "endswith": 368, "energi": [183, 196, 278, 387, 388, 402, 411], "enforc": [1, 346, 369], "engin": 389, "engwirda": 387, "enough": [337, 338, 339, 347, 356, 365, 368, 388, 408], "ensur": [1, 2, 6, 9, 14, 59, 142, 347, 353, 356, 368, 369, 403, 404, 405, 406, 413, 414, 415], "enter": 389, "entha_analy_result": 365, "enthalpy_benchmark": 365, "entir": [145, 388, 402, 408, 411, 422], "entri": [7, 56, 91, 94, 119], "enumer": 388, "env": [142, 396], "env_nam": 369, "env_onli": 369, "environ": [4, 5, 11, 137, 139, 140, 344, 362, 368, 381, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396], "environo": [390, 391, 392, 393, 394, 396], "equal": [7, 360, 365, 368, 408, 415], "equat": [403, 404, 405, 406, 407, 410, 412, 413, 414, 415], "equatori": 405, "equilibrium": 397, "equival": [14, 170, 171, 172, 369, 388, 390], "errno": 385, "error": [6, 8, 15, 40, 51, 142, 145, 148, 149, 152, 209, 348, 349, 350, 351, 352, 355, 357, 358, 359, 365, 367, 369, 387, 388, 404, 405, 406, 407, 413, 414], "error_typ": [145, 148, 149, 209, 404, 405, 406, 407, 413, 414], "es3m": 369, "esmf": [6, 17, 369, 394, 417], "esmf_regridweightgen": 17, "especi": 388, "essenti": [5, 14], "establish": [40, 41, 365], "estim": [178, 181, 388, 403], "et": [145, 388, 399, 402, 404, 405, 406, 407, 410, 411, 412, 413, 414], "eta": [264, 290, 410, 412], "eta0": [262, 288], "eta_0": 412, "etc": [9, 14, 121, 124, 362, 365, 402], "etre": [120, 122, 136], "eval": 7, "evalu": [145, 148, 149, 150, 151, 209, 223, 240, 241, 261, 263, 264, 284, 287, 289, 290, 291, 310, 349, 351, 358, 359, 404, 405, 406, 407, 413, 414], "evapor": 415, "evaporation_flux": 415, "even": [1, 6, 12, 13, 14, 42, 59, 142, 365, 368, 369, 388, 389, 395, 417], "ever": [145, 368], "everi": [45, 211, 347, 365, 367, 368, 384, 385, 386, 388, 402, 408, 415], "everyon": 63, "everyth": 142, "everywher": 388, "evolut": [407, 411], "evolv": [301, 387, 399, 404, 405, 406, 413, 414, 415], "exact": [148, 150, 151, 209, 210, 223, 240, 241, 261, 262, 263, 264, 287, 288, 289, 290, 350, 352, 355, 357, 368, 410, 412], "exact_restart": 384, "exact_solut": 145, "exactli": [368, 369, 388, 399], "exactrestart": 384, "exactsolut": [355, 357], "examin": [407, 415], "exampl": [2, 3, 5, 6, 7, 9, 11, 12, 13, 14, 15, 17, 18, 19, 25, 142, 145, 361, 362, 363, 365, 366, 367, 368, 369, 385, 386, 388, 389, 391, 399, 416, 417, 422, 423], "example_compact": [344, 362, 381, 389], "example_funct": 2, "exascal": 387, "exce": 366, "except": [9, 40, 43, 61, 336, 365, 368, 369, 388, 403, 411, 412, 414], "exclud": 417, "exclus": 417, "execut": [1, 5, 8, 14, 25, 119, 124, 142, 176, 344, 362, 365, 369, 381, 388, 389, 390, 391, 392, 393, 394, 395, 396, 417], "exercis": [360, 384, 404, 405, 406, 407, 413, 414, 415], "exhaust": 366, "exist": [6, 7, 9, 31, 32, 33, 40, 43, 62, 120, 122, 124, 142, 145, 179, 180, 347, 356, 365, 367, 368, 369, 385, 388, 395, 422], "expand": [101, 145, 399], "expand_dim": [365, 388], "expand_dist": 101, "expand_factor": 101, "expect": [1, 2, 12, 17, 142, 145, 171, 173, 362, 365, 369, 388, 412], "expens": [1, 365, 366], "experi": [14, 142, 210, 368, 399], "experienc": 6, "expert": 387, "explain": [368, 403], "explan": 13, "explanatori": 389, "explicit": [12, 368], "explicitli": [5, 7, 145, 347, 348, 355, 356, 357, 365, 369, 388, 389, 417], "explor": [6, 361, 365, 388, 399, 413], "export": [6, 385], "express": [5, 67], "extend": 389, "extens": [387, 389, 403], "extent": [2, 13, 17, 388, 402], "extern": [40, 142, 344, 362, 365, 367, 369, 381, 400, 418], "extra": [13, 64, 369, 394], "extra_rpath": 142, "extract": [13, 15], "ey": 6, "f": [5, 9, 11, 18, 145, 210, 228, 362, 365, 367, 368, 369, 388, 389, 396, 402, 407, 408, 410, 417], "f0": 262, "f401": [19, 365, 388], "f77": 142, "f_0": 403, "face": 127, "facilit": 145, "fact": [1, 14, 40, 142], "factor": [13, 101, 145, 148, 150, 155, 158, 159, 160, 223, 224, 225, 229, 230, 240, 242, 261, 265, 287, 291, 313, 405], "fail": [8, 14, 18, 25, 37, 40, 47, 61, 142, 145, 166, 176, 187, 212, 249, 273, 300, 365, 387, 388, 389, 404, 405, 406, 407, 410, 412, 413, 414], "fairli": [367, 368, 369, 388, 408], "fake": 388, "fall": [355, 357, 417], "fals": [1, 9, 13, 14, 18, 19, 25, 40, 42, 52, 57, 67, 69, 90, 114, 115, 119, 124, 125, 128, 142, 145, 176, 225, 230, 248, 249, 284, 291, 302, 304, 335, 336, 346, 361, 365, 367, 382, 388, 389, 391, 393, 394, 396, 402, 411], "familiar": 388, "far": [13, 142, 145, 322, 331, 333, 368, 388], "fast": [349, 350, 351, 352, 358, 359, 388], "faster": [8, 369], "fatal": 385, "fc": 142, "fcell": [346, 365, 388, 404, 405, 406, 413, 414], "fe": 391, "feasibl": 365, "featur": [9, 14, 368, 369, 386, 388, 389, 397, 402, 411, 415], "fedg": [346, 365, 388, 404, 405, 406, 413, 414], "feel": [14, 142, 365, 388], "felt": 368, "fetch": [6, 369, 388], "few": [5, 13, 14, 25, 37, 40, 47, 97, 98, 142, 176, 347, 348, 349, 350, 351, 352, 355, 356, 357, 358, 359, 360, 365, 368, 388, 389, 395], "fewer": [25, 37, 40, 47, 97, 98, 145, 166, 176, 187, 212, 249, 273, 300, 365, 388, 417], "fewest": 8, "ff": 365, "field": [14, 15, 18, 86, 88, 89, 127, 128, 145, 148, 149, 150, 151, 209, 210, 223, 234, 240, 241, 245, 261, 287, 310, 318, 322, 325, 331, 333, 335, 336, 337, 338, 341, 342, 343, 346, 347, 348, 352, 355, 356, 357, 360, 388, 402, 403, 404, 405, 406, 407, 410, 411, 412, 413, 414], "field_exact": 15, "field_mask": [19, 128], "field_mpa": [15, 151, 241], "field_nam": [15, 149, 150, 151, 223, 240, 241, 261, 287, 310], "fig": 363, "figsiz": [19, 127, 128, 336], "figur": [8, 19, 127, 128, 336, 348, 355, 357, 360, 361, 363, 365, 389, 403, 404, 406, 413, 414], "filament": [358, 413], "filament_analysi": 413, "filament_evaluation_tim": 413, "filamentanalysi": 358, "file": [1, 5, 6, 7, 8, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 25, 26, 27, 28, 29, 30, 34, 35, 36, 40, 41, 42, 43, 46, 48, 49, 50, 51, 53, 55, 57, 61, 62, 63, 70, 87, 88, 92, 93, 100, 101, 102, 103, 104, 105, 106, 109, 110, 111, 112, 113, 116, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 133, 135, 136, 147, 151, 152, 154, 155, 160, 163, 166, 168, 170, 173, 175, 176, 181, 183, 187, 189, 192, 195, 200, 212, 214, 218, 231, 241, 251, 275, 321, 336, 344, 347, 348, 349, 350, 351, 352, 353, 355, 356, 357, 358, 359, 360, 361, 366, 367, 368, 369, 375, 381, 382, 384, 385, 386, 387, 391, 394, 395, 396, 397, 399, 402, 403, 404, 405, 406, 407, 408, 411, 413, 414, 416, 417, 420, 421, 423], "fileexistserror": 62, "filenam": [11, 17, 18, 40, 42, 43, 51, 95, 102, 103, 104, 105, 109, 110, 111, 125, 127, 131, 133, 163, 164, 166, 173, 175, 365, 367, 369, 388], "filename1": [18, 125, 388], "filename2": [18, 125, 388], "filename_interv": 388, "filename_templ": [14, 145, 388], "filepath": [9, 17, 48, 55, 59, 145], "files_for_e3sm": [11, 365, 367, 389], "filesystem": 396, "fill": 145, "final": [2, 5, 6, 7, 8, 142, 163, 337, 338, 347, 348, 349, 350, 351, 352, 353, 355, 356, 357, 358, 359, 360, 365, 367, 384, 388, 397, 405, 413], "final_normalveloc": [19, 388], "final_temperatur": 388, "find": [1, 6, 7, 15, 61, 74, 99, 142, 337, 338, 339, 344, 367, 368, 369, 385, 388, 389, 417], "find_planar_transect_cells_and_weight": 341, "find_spherical_transect_cells_and_weight": 341, "find_transect_levels_and_weight": [335, 342, 343], "finder": 399, "fine": [9, 367, 388, 415], "finer": [389, 399], "finest": 389, "finger": 388, "finish": [40, 41, 85, 365, 388], "firewal": 365, "first": [1, 6, 9, 14, 15, 91, 119, 142, 145, 337, 338, 347, 348, 353, 355, 356, 357, 360, 365, 367, 368, 369, 385, 388, 390, 391, 392, 393, 394, 395, 396, 402, 405, 407, 408, 415, 417], "fit": [365, 389], "fix": [63, 145, 388], "flag": [5, 6, 142, 365, 368, 385, 386, 388, 389, 394, 400, 402, 411, 417, 418], "flake8": [368, 369], "flat": [132, 336, 399, 402, 403, 407], "flavor": [369, 388], "flesh": 388, "flexibl": [11, 145, 365, 367, 369, 388], "float": [7, 9, 14, 26, 71, 73, 74, 78, 83, 91, 101, 106, 125, 127, 128, 145, 148, 149, 150, 151, 155, 158, 159, 160, 162, 166, 169, 182, 185, 186, 187, 190, 193, 196, 198, 201, 209, 212, 215, 216, 223, 224, 225, 228, 229, 230, 240, 241, 242, 248, 249, 252, 260, 261, 262, 263, 264, 265, 267, 273, 278, 280, 286, 287, 288, 289, 290, 291, 293, 300, 306, 309, 310, 311, 313, 316, 336, 337, 338, 365, 367, 388], "floor": [341, 399, 408], "flow": [349, 351, 358, 359, 402, 404, 405, 406, 407, 413, 414], "fluid": 403, "flux": [145, 346, 353, 356, 408, 411, 415], "flynt": 369, "fo": 367, "fo_decomposition_test": 417, "fo_integr": 417, "fo_restart_test": 417, "fo_smoke_test": 417, "focu": [2, 388], "focus": 386, "fold": 388, "follow": [1, 4, 5, 7, 9, 11, 13, 14, 19, 70, 142, 145, 147, 322, 325, 331, 333, 344, 346, 365, 366, 367, 369, 381, 382, 385, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 399, 401, 403, 404, 405, 406, 407, 410, 411, 412, 413, 414, 415, 416, 417, 420], "font": 19, "foo": [2, 368], "forc": [7, 248, 249, 348, 353, 360, 384, 388, 423], "forcing_data": 365, "foremost": 388, "forg": [6, 142, 387, 417], "forgotten": 14, "fork": [6, 388], "form": [145, 356, 411, 423], "formal": 361, "format": [5, 7, 11, 13, 14, 130, 136, 182, 366, 367, 369, 388, 389, 391, 408], "formerli": 1, "fortran": [6, 142, 390, 391, 392, 393, 394, 395, 396], "forward": [1, 5, 7, 9, 14, 40, 145, 147, 159, 160, 163, 164, 166, 183, 186, 194, 196, 230, 234, 245, 248, 269, 278, 296, 299, 301, 318, 344, 362, 365, 367, 368, 378, 381, 389, 397, 402, 403, 404, 405, 406, 407, 408, 410, 411, 412, 413, 414, 416, 421], "forward_cor": 389, "forward_max_disk": 389, "forward_max_memori": 389, "forward_min_cor": 389, "forward_run_dur": 408, "forward_step": 367, "forward_thread": 389, "forwardstep": [163, 365], "found": [6, 9, 14, 131, 142, 337, 338, 368, 369, 387, 388, 390, 391, 392, 393, 394, 395, 396], "four": 362, "frac": [365, 388, 399, 402, 403, 404, 406, 410, 413], "fraction": [8, 388, 399, 402, 403, 404, 405, 406, 408, 410, 411, 412, 413, 414, 415, 416], "framework": [1, 5, 7, 9, 12, 13, 14, 114, 344, 361, 362, 365, 367, 381, 386, 387, 388, 397, 400, 415, 416, 418, 421, 423], "frazil": [145, 353, 408], "free": [142, 208, 209, 210, 346, 388, 389], "frequenc": [262, 288, 347], "frequent": [17, 344, 381], "fresh": [5, 6, 367, 388], "freshwat": 408, "friction": [410, 412], "from": [2, 5, 7, 8, 9, 11, 12, 13, 14, 15, 17, 18, 20, 24, 25, 26, 27, 28, 31, 32, 33, 40, 41, 42, 50, 51, 53, 54, 57, 61, 62, 88, 93, 98, 102, 103, 104, 105, 106, 109, 110, 111, 113, 115, 116, 119, 120, 121, 122, 125, 128, 131, 132, 135, 136, 142, 147, 150, 151, 157, 163, 164, 170, 171, 172, 173, 175, 176, 179, 180, 187, 208, 222, 228, 234, 239, 241, 245, 249, 260, 261, 269, 273, 286, 287, 296, 309, 311, 316, 318, 329, 336, 337, 338, 339, 340, 341, 344, 346, 347, 348, 349, 350, 351, 352, 353, 355, 356, 357, 358, 359, 360, 361, 362, 367, 368, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 396, 397, 399, 402, 404, 405, 406, 407, 408, 410, 411, 412, 413, 414, 416, 417, 420, 421, 422, 423], "front": [391, 408], "frontier": [142, 395], "fs1": 388, "full": [12, 40, 97, 115, 254, 323, 324, 337, 338, 347, 350, 365, 367, 384, 387, 388, 395, 399, 402, 403, 404, 405, 406, 408, 410, 411, 412, 413, 414, 415, 416, 417], "full_integr": [6, 417], "full_path": 11, "full_run": [5, 18, 384, 402, 420], "function": [1, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 18, 19, 49, 72, 79, 145, 192, 200, 218, 228, 361, 362, 365, 367, 368, 386, 387, 388, 397, 399, 403, 404, 405, 406, 407, 408, 413, 414, 423], "fundament": 367, "further": [7, 145, 361, 367, 396, 403, 416, 421], "further_valid": 18, "futur": [1, 13, 46, 128, 365, 368, 386, 387, 388, 389, 407, 415, 417, 423], "fvertex": [346, 365, 388, 404, 405, 406, 413, 414], "g": [5, 6, 7, 9, 11, 14, 15, 31, 32, 33, 40, 41, 53, 70, 130, 142, 145, 169, 337, 338, 344, 361, 363, 365, 366, 368, 369, 381, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 396, 399, 402, 403, 404, 405, 406, 407, 408, 410, 411, 412, 413, 414, 415, 416, 417, 421], "gain": 390, "gassmann": 405, "gb": 142, "gcc": 142, "ge": [402, 405], "gebco": 389, "gener": [2, 3, 5, 7, 8, 12, 14, 19, 25, 26, 27, 28, 29, 35, 49, 78, 125, 145, 192, 200, 218, 265, 291, 320, 344, 346, 347, 348, 353, 355, 356, 357, 360, 362, 365, 369, 381, 387, 388, 389, 395, 404, 405, 406, 407, 410, 412, 413, 414, 417], "generate_1d_grid": 145, "geo": 385, "geom": 13, "geometri": 408, "geostroph": [344, 354, 400, 409], "geostrophic_viz_diff_h": 407, "geostrophic_viz_diff_vel": 407, "geostrophic_viz_h": 407, "geostrophic_viz_vel": 407, "geostropnic_viz": 407, "get": [5, 6, 7, 9, 11, 12, 14, 15, 17, 25, 26, 27, 28, 29, 40, 51, 52, 58, 65, 73, 89, 96, 107, 114, 142, 145, 149, 150, 151, 158, 159, 176, 223, 240, 241, 261, 287, 310, 361, 364, 365, 367, 368, 369, 386, 389, 390, 391, 392, 393, 394, 396, 399, 417], "get_available_cores_and_nod": 368, "get_output_field": [15, 145], "get_time_interval_str": 145, "getboolean": [9, 365, 388], "getexpress": 9, "getfloat": [9, 12, 14, 17, 145, 365, 388], "gethostbynam": 387, "getint": 365, "getinteg": 9, "getlist": [9, 367, 388], "getsockinterfaceaddr": 385, "gfortran": [6, 137, 139, 140, 142, 369], "gh_0": 407, "git": [2, 6, 16, 100, 344, 369, 381, 388, 389, 417], "gitconfig": 389, "github": [5, 6, 7, 368, 369, 387, 388, 389, 400, 417, 418], "give": [5, 6, 14, 18, 142, 365, 368, 369, 388, 389, 417], "given": [5, 7, 8, 13, 14, 15, 17, 18, 20, 24, 25, 54, 61, 73, 83, 89, 93, 97, 98, 115, 120, 122, 125, 131, 142, 145, 147, 148, 151, 152, 169, 173, 175, 176, 196, 209, 241, 269, 278, 296, 328, 337, 338, 341, 347, 353, 356, 360, 365, 367, 385, 387, 388, 389, 402, 403, 404, 405, 406, 407, 408, 411, 413, 414, 415, 416, 417, 421, 422], "gl": 408, "global": [1, 13, 17, 105, 106, 111, 306, 338, 349, 350, 351, 352, 358, 359, 361, 365, 366, 368, 386, 387, 388, 389, 396, 404, 405, 406, 407, 413, 414, 416, 417, 421, 423], "global_converg": [14, 367, 388], "global_ocean": [11, 14, 365, 367, 368, 369, 389, 417], "globalconverg": 388, "globe": [404, 405, 406, 413, 414], "glossari": 388, "gmtime": [14, 388], "gnu": [6, 142, 369, 390, 391, 392, 393, 394, 395, 396, 417], "gnugpu": [142, 394], "go": [12, 48, 55, 302, 304, 361, 365, 367, 368, 369, 388, 396], "goal_cells_per_cor": [145, 388, 403, 404, 405, 406, 410, 411, 412, 413, 414, 416, 421], "goe": [51, 365, 367, 388], "good": [6, 11, 12, 40, 365, 369, 388], "gov": [11, 365, 385, 389, 391, 394, 396], "gpf": 388, "gpmeti": [14, 389], "gpu": [65, 142, 391, 394, 396], "gpus_per_nod": 65, "grab": 396, "gradient": [388, 402, 410, 411, 412, 415], "gradient_width_dist": [365, 388, 402], "gradient_width_frac": [365, 388, 402], "gradient_width_fract": 402, "graph": [5, 25, 34, 36, 46, 88, 145, 155, 160, 163, 166, 176, 187, 212, 347, 348, 353, 355, 356, 357, 388, 389], "graph_fil": 34, "graph_filenam": [25, 88], "graph_target": [145, 155, 160, 163, 166, 176, 187, 212], "graphinfofilenam": [365, 388], "graviti": [206, 207, 258, 259, 260, 262, 265, 267, 269, 355, 367, 400, 409], "great": [338, 388], "greater": [365, 388], "green": [128, 336, 363], "greenland": [361, 387, 423], "grep": [6, 391, 417], "grid": [7, 13, 17, 72, 79, 83, 86, 101, 102, 103, 104, 105, 106, 107, 109, 110, 111, 145, 320, 321, 322, 323, 324, 325, 326, 327, 328, 331, 332, 333, 334, 347, 348, 353, 355, 356, 357, 360, 365, 382, 388, 389], "grid_1d": 145, "grid_typ": [388, 389, 399, 402, 403, 404, 405, 406, 408, 410, 411, 412, 413, 414, 415, 416], "group": [6, 7, 11, 63, 273, 348, 353, 361, 387, 390, 392, 395, 396, 411, 416, 417, 423], "guarante": [1, 14, 142, 340, 344, 369, 381], "guess": [142, 388], "guid": [7, 145, 347, 348, 349, 350, 351, 352, 353, 355, 356, 357, 358, 359, 360, 366, 368, 388, 390, 391, 392, 393, 394, 395, 396, 400, 418], "guidelin": 369, "gyre": [208, 212, 217, 348, 400, 409], "h": [5, 14, 388, 407], "h_": 399, "h_0": 407, "ha": [1, 5, 6, 9, 11, 14, 15, 25, 37, 40, 41, 43, 47, 52, 53, 99, 107, 112, 137, 139, 140, 142, 145, 166, 169, 176, 187, 212, 249, 273, 300, 327, 337, 338, 344, 349, 350, 351, 353, 358, 359, 362, 363, 364, 365, 366, 367, 368, 369, 381, 382, 385, 386, 388, 389, 399, 402, 403, 405, 408, 410, 411, 415, 417], "had": [1, 142], "half": [388, 402, 408, 411], "halfar": 361, "halv": [388, 402], "hand": [13, 106, 368], "handi": 15, "handl": [11, 12, 369, 388, 395, 407], "hang": [391, 396], "happen": [6, 9, 12, 17, 113, 365, 388, 404, 405, 406, 413, 414], "hard": [6, 365, 388, 402, 408, 415], "harder": 368, "harm": 365, "has_opt": 11, "has_shared_config": 40, "have": [1, 2, 4, 5, 6, 7, 9, 11, 12, 14, 17, 18, 31, 32, 33, 40, 41, 48, 55, 113, 119, 124, 131, 140, 142, 145, 147, 152, 154, 260, 269, 286, 296, 309, 311, 316, 340, 344, 347, 348, 355, 356, 357, 361, 363, 365, 366, 367, 368, 369, 385, 386, 388, 389, 390, 391, 392, 393, 394, 395, 396, 399, 402, 404, 405, 406, 407, 408, 413, 414, 416, 417, 422, 423], "haven": [6, 388], "hdf5": [142, 390, 391, 392, 393, 394, 395, 396], "head": [2, 346, 391], "heat": [408, 415], "heavi": 388, "height": [7, 128, 145, 164, 165, 210, 262, 264, 288, 290, 324, 328, 329, 330, 336, 341, 344, 353, 388, 389, 399, 408, 410, 412], "help": [5, 6, 13, 142, 361, 362, 363, 365, 369, 387, 388, 395, 400, 418], "helper": [15, 361, 362], "here": [1, 6, 9, 12, 14, 17, 18, 142, 145, 347, 353, 356, 360, 361, 364, 365, 367, 368, 369, 384, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 403, 404, 405, 406, 407, 413, 414, 415, 416, 417, 421, 422], "hesit": 368, "heurist": 145, "hexagon": [13, 83, 388, 410, 412], "hidden": 368, "hide": [361, 388], "hide_fig": 361, "hierarch": 14, "high": [142, 365, 392, 395], "higher": 388, "highest": 1, "highli": 388, "hill": 405, "hmix_del2": 388, "home": [6, 18, 142, 369, 388, 389, 391, 395, 396], "homogen": 403, "honor": 385, "hood": 17, "hope": 368, "hopefulli": [142, 389], "horiz": 341, "horizcellindic": [337, 338], "horizont": [127, 128, 145, 183, 256, 335, 336, 341, 346, 347, 349, 350, 351, 352, 355, 356, 357, 358, 359, 360, 402, 403, 404, 406, 408, 410, 411, 412, 413, 414, 415], "horiztriangleindic": [337, 338], "horiztrianglenodeindic": [337, 338], "host": [385, 389, 395, 417], "hostnam": 142, "hostname_contain": 142, "hour": [142, 145, 355, 357, 366, 384, 391, 396, 397, 404, 405, 406, 407, 408, 410, 412, 413, 414, 417, 420], "hous": [20, 404, 405, 406, 413, 414], "how": [2, 5, 6, 12, 14, 78, 145, 364, 365, 367, 368, 369, 389, 395, 396, 408, 410, 412], "howev": [1, 13, 365, 366, 367, 369, 388, 403], "hpc": [142, 369, 391, 395], "hpss": [391, 396], "hsi": 396, "htar": 396, "html": [4, 400], "http": [5, 7, 11, 14, 62, 365, 368, 385, 387, 388, 389, 396, 400, 411, 417, 418], "huge": 388, "hydro": [361, 423], "hydrograph": 399, "hydrologi": 361, "hyperbol": 399, "hyperthread": [391, 394, 396], "hyperviscos": 412, "hyphen": 388, "i": [2, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 17, 18, 19, 25, 30, 37, 40, 41, 42, 43, 46, 47, 51, 52, 57, 61, 62, 78, 79, 84, 91, 97, 98, 101, 105, 111, 112, 114, 115, 120, 122, 125, 128, 131, 136, 137, 139, 140, 142, 145, 148, 150, 151, 155, 157, 158, 159, 160, 164, 166, 168, 169, 171, 172, 174, 176, 185, 186, 187, 189, 190, 193, 194, 195, 196, 198, 201, 202, 204, 208, 212, 214, 225, 230, 231, 232, 241, 248, 249, 251, 252, 254, 256, 272, 273, 275, 276, 278, 280, 295, 300, 322, 325, 331, 333, 336, 337, 338, 340, 341, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 355, 356, 357, 358, 359, 360, 361, 362, 363, 365, 366, 367, 368, 369, 375, 377, 379, 381, 382, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 402, 403, 404, 405, 406, 407, 408, 410, 411, 412, 413, 414, 415, 416, 420, 421, 422, 423], "ic": [7, 162, 164, 165, 247, 248, 252, 254, 256, 344, 353, 367, 368, 369, 382, 384, 387, 388, 389, 391, 398, 399, 400, 409, 420, 423], "ice_shelf": [145, 353], "ice_shelf_2d": [145, 344, 354, 408], "ice_shelf_2d_default": 408, "ice_shelf_2d_default_tidal_forc": 408, "icepresent_qu60km_polar": 365, "iceshelf": 145, "iceshelf2d": [145, 353], "iceshelftask": [353, 397], "ico": [1, 5, 145, 219, 224, 229, 367, 388, 401, 404, 405, 406, 413, 414, 422], "icos_base_mesh_60km": 1, "icos_base_resolut": [145, 405], "icos_forward_60km": 1, "icos_init_60km": 1, "icos_map_60km": 1, "icos_refinement_factor": [145, 405], "icos_resolut": [404, 405, 406, 413, 414], "icos_viz_60km": 1, "icosahedr": [13, 71, 73, 169, 236, 306, 311, 316, 349, 350, 351, 352, 358, 359, 367, 404, 405, 406, 407, 413, 414], "icosahedral_method": 13, "icosahedralmeshstep": [13, 145, 367], "icosahedron": [13, 72, 73, 74, 75], "icosohedr": [416, 421], "icosohydr": [404, 405, 406, 413, 414], "id": [368, 369], "idea": [6, 11, 12, 388], "ideal": [25, 37, 40, 47, 97, 98, 101, 145, 166, 176, 187, 212, 249, 273, 300, 301, 302, 304, 361, 365, 368, 387, 388, 389, 423], "ideal_ag": [302, 304], "idealag": 360, "idealagetrac": [360, 415], "ident": [1, 2, 5, 18, 185, 193, 201, 224, 229, 347, 353, 356, 365, 366, 368, 374, 388, 402, 405, 408], "identifi": [11, 118, 142, 362, 381, 423], "idl": 8, "ifort": [6, 137, 139, 142, 388], "ignor": [5, 105, 111], "ilicak": [402, 411], "imag": [2, 7, 19, 126, 127, 128, 336, 361, 388, 416, 421], "immedi": [14, 70, 145, 369, 388], "immediatli": 145, "immutable_stream": [14, 388], "imp_r": 367, "impermeable_interfac": 14, "impi": [6, 137, 142, 390, 393], "implement": [9, 145, 353, 362, 365, 368, 402, 403, 404, 405, 406, 407, 410, 412, 413, 414], "implicit": 145, "import": [9, 11, 12, 13, 15, 17, 18, 19, 145, 361, 362, 365, 367, 368, 369, 386, 388], "importlib": 11, "improv": 388, "inch": [127, 128, 336], "includ": [1, 2, 5, 6, 7, 8, 9, 13, 14, 15, 17, 18, 19, 42, 49, 51, 61, 114, 115, 126, 127, 142, 145, 192, 200, 218, 219, 236, 248, 302, 304, 306, 336, 337, 338, 340, 347, 349, 350, 351, 352, 358, 359, 360, 361, 363, 365, 366, 367, 368, 369, 385, 386, 387, 388, 389, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 410, 413, 414, 415, 416, 417, 418, 420, 421, 422, 423], "include_restart": 248, "include_tid": 248, "include_viz": [219, 236, 248, 306, 367], "incompat": 142, "incorpor": 367, "incorrect": 369, "increas": [19, 145, 368], "increment": 389, "indent": [7, 365], "independ": [1, 2, 5, 6, 366, 386], "index": [4, 15, 18, 91, 145, 147, 148, 150, 151, 152, 209, 223, 240, 241, 261, 287, 322, 323, 324, 325, 328, 329, 330, 331, 333, 335, 337, 338, 340, 341, 361, 388, 399], "indic": [1, 7, 8, 14, 17, 18, 19, 40, 41, 112, 119, 128, 142, 145, 147, 155, 160, 219, 224, 225, 229, 230, 236, 242, 265, 269, 291, 296, 306, 309, 313, 328, 337, 338, 340, 363, 365, 385, 388, 389, 399, 403, 408, 415], "indir": [9, 25, 40, 51, 101, 164, 166, 176, 185, 186, 187, 190, 193, 194, 196, 198, 201, 202, 204, 208, 212, 232, 248, 249, 252, 254, 256, 272, 273, 276, 278, 280, 282, 300, 302, 304, 362, 365, 375, 377, 379], "individu": [8, 9, 19, 362, 367, 368, 388, 395, 396, 402, 408, 416, 417, 423], "induc": 411, "inej": 389, "inerti": [206, 207, 258, 259, 260, 262, 265, 267, 269, 355, 367, 400, 409], "inertial_gravity_wav": [9, 344, 354, 357, 362, 367, 410, 422], "inertialgravitywav": [9, 355, 367], "inf": [145, 148, 149, 209, 407], "infin": [125, 404, 406, 413, 414], "inflect": 408, "influenc": 397, "info": [5, 12, 14, 25, 34, 88, 142, 145, 187, 212, 365, 388], "inform": [1, 5, 6, 7, 8, 40, 90, 101, 125, 136, 262, 288, 365, 367, 369, 389, 391, 400, 403, 417, 418], "infrastructur": [145, 368, 388], "infti": [145, 399], "inher": [411, 416], "inherit": [353, 368, 388], "init": [1, 5, 6, 7, 9, 14, 18, 19, 37, 47, 145, 147, 155, 160, 185, 186, 193, 194, 196, 201, 225, 230, 234, 242, 245, 248, 249, 256, 265, 269, 272, 273, 278, 291, 296, 313, 318, 344, 346, 362, 365, 367, 368, 369, 381, 389, 397, 402, 405, 408, 410, 412, 417], "init_cor": 389, "init_descript": 389, "init_filenam": [163, 166, 388], "init_max_disk": 389, "init_max_memori": 389, "init_min_cor": 389, "init_mode_forcing_data": 365, "init_step": 367, "init_thread": 389, "init_vertical_coord": [145, 365, 388], "initi": [1, 7, 8, 40, 128, 145, 150, 163, 166, 172, 183, 185, 186, 190, 193, 194, 196, 201, 216, 223, 226, 240, 243, 248, 249, 252, 256, 261, 265, 267, 272, 273, 276, 278, 287, 291, 293, 299, 301, 302, 304, 314, 327, 347, 348, 349, 350, 351, 352, 353, 355, 356, 357, 358, 359, 360, 361, 365, 367, 368, 378, 385, 386, 387, 389, 397, 399, 422, 423], "initial_condit": 368, "initial_condition_databas": [17, 389], "initial_normal_veloc": [365, 388], "initial_normalveloc": 388, "initial_onli": 388, "initial_salin": 388, "initial_st": [5, 18, 19, 147, 269, 296, 347, 356, 365, 388], "initial_state_file_nam": 388, "initial_state_filenam": 183, "initial_state_target": 365, "initial_temperatur": [365, 388], "inner": [40, 365], "input": [1, 5, 8, 10, 11, 17, 35, 40, 41, 42, 43, 49, 88, 90, 154, 163, 170, 172, 192, 200, 218, 341, 347, 348, 349, 350, 351, 352, 355, 356, 357, 358, 359, 360, 388, 415], "input_data": 40, "input_interv": 388, "insensit": [404, 405, 406, 407, 413, 414, 415], "inset": 336, "insid": [1, 12, 363, 365, 368, 404, 405, 406, 413, 414], "insofar": 1, "instal": [5, 6, 142, 369, 388, 395, 396, 417], "install_missing_compil": 142, "instanc": [19, 388], "instant": 335, "instead": [1, 5, 6, 12, 14, 15, 18, 25, 115, 137, 142, 365, 368, 369, 386, 388, 404, 405, 406, 413, 414, 417, 422], "instruct": 388, "int": [13, 14, 25, 26, 37, 40, 47, 65, 66, 67, 71, 72, 73, 74, 75, 83, 91, 97, 98, 101, 127, 128, 147, 148, 150, 151, 152, 156, 161, 166, 167, 176, 177, 187, 188, 209, 212, 213, 223, 224, 240, 241, 249, 250, 261, 266, 273, 274, 287, 292, 300, 336, 365, 388, 415], "int_": 145, "integ": [9, 13], "integr": [6, 15, 145, 196, 278, 347, 348, 353, 356, 368, 388, 397, 402, 403, 404, 405, 406, 407, 408, 411, 413, 414, 416, 421], "intel": [6, 142, 390, 392, 393, 395], "intend": [2, 6, 8, 9, 366, 389, 412, 423], "intens": [347, 356], "intent": 12, "interact": [388, 391, 394, 395, 396, 417], "interest": 388, "interfac": [2, 10, 320, 321, 322, 325, 331, 333, 336, 341, 353, 368, 369, 387, 388, 399], "interface_color": 336, "interfer": 7, "intern": [5, 11, 25, 271, 272, 273, 276, 278, 280, 282, 337, 338, 356, 365, 369, 385, 400, 409], "internal_wav": [344, 354, 411], "internal_wave_rp": 411, "interp_mpas_to_transect_cel": 341, "interp_mpas_to_transect_nod": 341, "interpcellindic": 341, "interpcellweight": 341, "interphorizcellindic": [337, 338], "interphorizcellweight": [337, 338], "interplevelindic": 341, "interpol": [17, 101, 336, 337, 338, 340, 341, 342, 343, 389], "interpret": 396, "interrupt": 388, "intersect": [335, 337, 338, 339], "interv": [14, 15, 182, 397, 404, 405, 406, 407, 408, 413, 414], "intro": 368, "introduc": 388, "introduct": 391, "intuit": 9, "invalid": 90, "invari": 353, "invers": 170, "investig": 416, "invoc": 1, "invok": 145, "involv": [6, 14, 341, 365, 386, 388, 410, 412], "io": [10, 365, 367, 368, 387, 388, 389, 400, 418], "ipykernel": 396, "ipykernel_launch": 396, "iri": 396, "is_depend": [40, 365], "is_task": 115, "isadirectoryerror": 62, "isel": [15, 19, 335], "isn": [6, 9, 15, 349, 350, 351, 352, 358, 359, 365, 368, 388], "isol": 369, "isort": 369, "issu": [2, 6, 365, 366, 369], "item": [2, 388], "iter": [1, 163, 164, 344, 353, 389, 397, 408], "its": [1, 5, 6, 7, 8, 9, 12, 17, 40, 53, 107, 112, 113, 121, 142, 145, 353, 361, 362, 363, 365, 366, 367, 368, 369, 386, 388, 389, 390, 405, 417, 423], "itself": [5, 6, 7, 9, 40, 48, 55, 361, 362, 364, 365, 367, 369, 388, 417], "j": [411, 417], "j3zxncu": 142, "jig": 13, "jigsaw": [13, 71, 75, 77, 78, 80, 82, 84, 219, 224, 229, 236, 306, 311, 316, 365, 369, 387], "jigsaw_geom_filenam": 13, "jigsaw_hfun_filenam": 13, "jigsaw_jcfg_filenam": 13, "jigsaw_jig_t": 84, "jigsaw_mesh_filenam": 13, "jigsawpi": [84, 365], "jinja": [64, 131, 145, 349, 350, 351, 358, 359], "jinja2": [14, 28, 29, 120, 155, 160], "job": [1, 6, 142, 369, 387, 388, 390, 391, 392, 393, 394, 396], "job_nam": 417, "job_script": [6, 388, 417], "jobid": 395, "join": [11, 388], "joinpath": 367, "jpeg": 2, "json": [5, 8, 20, 57, 365, 396], "just": [5, 14, 19, 25, 37, 40, 47, 67, 142, 145, 176, 353, 365, 368, 369, 386, 388, 391, 394, 396], "jut": 19, "k": [349, 351, 358, 359, 399], "k2zu3y5": 142, "k_0": 399, "k_x": [410, 412], "k_y": [410, 412], "kd": 339, "keep": [2, 5, 6, 9, 14, 25, 59, 349, 350, 351, 352, 358, 359, 361, 362, 365, 367, 369, 388, 416, 421], "kei": [20, 51, 119, 145, 147, 163, 166, 269, 296, 367], "kept": 387, "kernel": 396, "kernelspec": 396, "keyword": [5, 7, 14, 18, 19, 170, 173, 365, 405], "kg": 403, "kilomet": 403, "kind": [6, 388], "kineticenergycel": 14, "km": [13, 14, 71, 72, 73, 74, 78, 79, 80, 83, 86, 145, 160, 162, 166, 169, 185, 186, 187, 190, 193, 194, 196, 198, 201, 212, 216, 248, 249, 252, 267, 278, 291, 293, 347, 349, 350, 351, 352, 355, 357, 358, 359, 365, 388, 389, 402, 403, 404, 405, 406, 407, 408, 410, 411, 412, 413, 414, 415, 416, 421, 423], "know": [6, 9, 11, 13, 365, 367, 368, 369, 388], "known": [40, 41, 142, 350, 365, 388], "kpp": 415, "kpp_test": 360, "ksh": 369, "kutta": [404, 405, 406, 407, 413, 414], "kwarg": [170, 173], "kx": [262, 288], "ky": [262, 288], "l": [12, 125, 145, 388, 396], "l1": [18, 125], "l1_norm": [18, 125], "l2": [18, 125, 145, 148, 149, 209, 348, 349, 350, 351, 352, 358, 359, 403, 404, 405, 406, 407, 410, 412, 413, 414], "l2_norm": [18, 125], "l_": 407, "l_1": 407, "l_2": 407, "l_infin": 18, "l_x": 402, "l_y": [402, 403], "label": [7, 126, 127, 336, 395, 407, 417], "lagrangian": [356, 411], "laid": 363, "lambda": [404, 406, 407, 413], "land": [7, 19, 145, 165, 344, 353, 367, 387, 388, 389, 397, 399, 408], "land_ice_flux": 353, "land_ice_pressur": 408, "landic": [5, 6, 12, 20, 42, 70, 124, 361, 362, 364, 365, 367, 386, 387, 388, 389, 417, 423], "landice_database_root": 389, "landice_full_chrys_gnu_openmpi": 6, "landice_grid": [12, 365, 388], "landice_model": [362, 369], "landicedraft": 7, "landicemodelstep": 388, "landicepressur": [7, 397, 408], "languag": 396, "lanl": [387, 389, 391], "laplacian": [348, 403, 412], "laptop": [142, 369, 388, 389], "larg": [9, 353, 365, 367, 388, 390, 408, 413], "last": [2, 145, 350, 366, 369, 402, 417], "lat": [13, 17, 72, 78, 79, 80, 86, 102, 104, 106, 109, 126, 338, 349, 350, 351, 352, 358, 359, 389, 405], "lat_cent": 405, "lat_transect": 338, "lat_var": [17, 102, 104, 109], "late": 388, "latent": 415, "latent_heat_flux": 415, "later": [5, 8, 18, 25, 37, 40, 47, 59, 142, 176, 365, 388, 389, 403], "latest": [344, 369, 381, 387, 400, 417], "latex": 2, "latitud": [72, 79, 102, 104, 106, 109, 126, 127, 145, 335, 338, 404, 405, 406, 407, 413, 416, 421], "latitudin": 403, "latnod": [338, 340], "latter": [5, 51, 142], "lattransect": 338, "launch": [365, 387], "lauritzen": [404, 406, 413, 414], "layer": [210, 320, 321, 322, 325, 326, 327, 329, 330, 331, 332, 333, 334, 335, 336, 341, 346, 347, 348, 349, 351, 353, 355, 356, 357, 358, 359, 360, 388, 389, 399, 402, 403, 404, 405, 406, 408, 410, 411, 412, 413, 414, 415, 416], "layer_thick": [335, 341], "layerthick": [14, 18, 145, 203, 233, 255, 322, 325, 329, 330, 331, 333, 335, 347, 348, 353, 355, 356, 357, 360, 365, 388], "lcrc": [5, 6, 8, 11, 57, 365, 368, 389, 390, 392, 395, 417], "le": [402, 415], "learn": [368, 388], "least": [8, 13, 362, 369, 402, 407], "leav": [5, 389, 405, 408], "led": 368, "left": [106, 145, 336, 388, 399, 402, 405], "len": [183, 388], "length": [72, 79, 80, 86, 403, 408, 411], "less": [219, 224, 229, 236, 306, 311, 316, 365, 399], "lesson": 388, "let": [5, 365, 369, 386, 388, 389, 396], "letter": 388, "level": [1, 2, 11, 12, 13, 18, 19, 128, 145, 150, 151, 223, 240, 241, 261, 287, 322, 323, 324, 325, 328, 329, 330, 331, 332, 333, 341, 347, 353, 361, 363, 364, 365, 367, 388, 389, 402, 403, 404, 405, 406, 407, 408, 410, 411, 412, 413, 414, 415, 416, 421], "levelindic": 341, "li": 1, "lib": [6, 142], "librari": [6, 14, 137, 142, 369, 388, 390, 391, 392, 393, 394, 395, 396, 417], "lie": [337, 338], "light": 388, "like": [2, 5, 6, 7, 8, 9, 10, 11, 14, 18, 19, 102, 106, 109, 141, 142, 143, 145, 172, 361, 363, 365, 367, 368, 369, 385, 387, 388, 389, 395, 402, 404, 405, 406, 407, 413, 414, 417, 423], "likewis": [365, 388], "limit": [6, 349, 350, 351, 358, 359, 366, 369, 402, 404, 406, 407, 413, 414], "line": [7, 10, 38, 40, 64, 97, 98, 108, 128, 142, 365, 366, 368, 369, 387, 416, 417], "linear": [6, 19, 126, 127, 128, 210, 337, 338, 348, 349, 350, 351, 355, 358, 359, 388, 402, 403, 404, 405, 406, 407, 408, 410, 411, 413, 414], "linearli": [343, 408], "linewidth": 336, "linf": [18, 125], "linf_norm": [18, 125], "link": [1, 2, 7, 9, 11, 14, 17, 42, 48, 55, 62, 142, 176, 361, 365, 367, 369, 388, 394, 395, 400, 417, 418], "link_nam": 62, "linspac": [9, 405], "lint": 368, "linter": 368, "linux": [6, 142, 369, 395], "list": [1, 2, 6, 7, 9, 11, 14, 18, 25, 40, 43, 51, 52, 57, 58, 59, 63, 91, 97, 98, 115, 118, 119, 124, 125, 145, 147, 155, 160, 183, 198, 202, 224, 232, 254, 260, 280, 286, 300, 306, 309, 311, 316, 365, 366, 367, 368, 369, 375, 386, 387, 388, 389, 391, 395, 396, 404, 405, 406, 413, 414, 417, 422, 423], "list_cas": 8, "list_machin": [8, 368], "list_suit": 8, "literatur": 402, "littl": [14, 368, 369, 387, 388], "live": [1, 52, 367, 408, 417], "ll": [6, 142, 368, 388, 396, 405], "load": [6, 11, 18, 19, 113, 125, 138, 141, 142, 143, 365, 369, 387, 388, 389, 395], "load_": 369, "load_dataset": 388, "load_dev_polaris_": [369, 388], "load_dev_polaris_0": [6, 137, 138, 139, 140, 141, 142, 143, 388], "load_latest_polari": 417, "load_latest_polaris_gnu_openmpi": 417, "load_polaris_1": 417, "load_polaris_env": [142, 369, 388, 417], "load_polaris_test_morpheus_gnu_openmpi": 369, "loc": [209, 210], "local": [1, 5, 6, 8, 9, 11, 18, 42, 344, 363, 365, 369, 381, 385, 388, 389, 395, 396, 397, 399], "local_filenam": 11, "localhost": [385, 389, 395, 396, 417], "locat": [1, 5, 6, 9, 11, 14, 19, 40, 52, 118, 119, 124, 145, 344, 353, 365, 367, 369, 381, 386, 388, 389, 391, 395, 399, 402, 405, 408, 411, 417], "log": [8, 10, 19, 40, 51, 98, 125, 126, 127, 128, 365, 367, 369, 387, 417], "log_filenam": [40, 51, 365, 367], "logarithm": [19, 128], "logger": [12, 18, 40, 51, 70, 98, 125, 365, 367, 388], "loggingcontext": 12, "logic": [388, 402, 403, 411], "logical_and": [365, 388], "login": [6, 142, 369, 391, 394, 396], "lognorm": 19, "logon": 396, "lon": [13, 17, 72, 78, 79, 80, 86, 102, 104, 106, 109, 126, 338, 349, 350, 351, 352, 358, 359, 389, 405], "lon_cent": 405, "lon_min": [17, 106], "lon_transect": 338, "lon_var": [17, 102, 104, 109], "long": [4, 25, 37, 40, 47, 97, 98, 166, 176, 187, 212, 249, 273, 300, 365, 388, 402, 403, 408, 417], "long_forward": 403, "longer": [1, 193, 229, 347, 353, 356, 366, 374, 388, 402, 404, 405, 406, 407, 408, 413, 414], "longitud": [72, 79, 80, 86, 102, 104, 106, 109, 126, 127, 145, 335, 338, 404, 405, 406, 407, 413, 416, 421], "longituidin": 403, "lonnod": [338, 340], "lontransect": 338, "look": [5, 6, 7, 11, 18, 141, 143, 337, 338, 367, 368, 388, 389], "loop": 388, "lot": [11, 145, 365, 368, 388], "low": [2, 128, 407], "lower": [11, 367, 388, 402], "lowercas": 388, "lowersurfac": 388, "luck": 142, "lustr": [391, 394], "lx": [13, 83, 365, 388, 402, 403, 408, 410, 411, 412, 415], "lxml": [120, 122, 136], "ly": [13, 83, 365, 388, 402, 403, 408, 411, 415], "m": [5, 6, 14, 72, 79, 80, 86, 337, 338, 347, 353, 356, 360, 361, 369, 388, 390, 391, 392, 393, 394, 396, 399, 402, 403, 405, 406, 407, 408, 413, 415, 417], "m1795": 396, "m2": 403, "mac": [369, 387], "mach": [5, 9, 11, 40, 142, 387, 390, 391, 392, 393, 394, 395, 396, 417], "mache_branch": 6, "mache_fork": 6, "machin": [5, 8, 9, 11, 40, 42, 65, 66, 100, 118, 119, 124, 344, 365, 368, 381, 387, 388, 389, 390, 391, 392, 393, 394, 396], "machine_config": 368, "machine_info": [40, 365], "machineinfo": 40, "made": [2, 5, 17, 18, 40, 43, 51, 125, 365, 367, 368, 369, 382, 384, 386, 388, 423], "magic": 388, "mai": [5, 6, 7, 8, 9, 12, 13, 14, 18, 41, 43, 46, 113, 125, 126, 142, 154, 337, 338, 344, 346, 361, 365, 366, 367, 369, 381, 382, 385, 386, 388, 389, 396, 397, 403, 404, 405, 406, 407, 408, 411, 413, 414, 415, 416, 417, 421, 423], "main": [1, 3, 6, 7, 9, 14, 45, 142, 211, 361, 362, 367, 368, 369, 388, 423], "maintain": [1, 344, 404, 417], "mainten": 388, "major": [6, 362, 365], "make": [1, 4, 5, 6, 7, 9, 11, 12, 17, 18, 19, 25, 36, 42, 59, 72, 73, 75, 88, 128, 137, 138, 139, 140, 141, 142, 143, 145, 176, 181, 185, 193, 201, 224, 229, 322, 325, 331, 333, 336, 337, 338, 339, 341, 344, 347, 353, 356, 361, 365, 367, 368, 369, 374, 381, 386, 387, 389, 395, 402, 404, 405, 406, 408, 413, 414, 417, 422], "make_graph": [14, 25, 176], "make_graph_fil": 14, "make_jigsaw_mesh": [13, 78], "make_map": 17, "make_planar_hex_mesh": [13, 83, 347, 348, 353, 355, 356, 357, 360, 365, 388], "make_triangle_tre": [337, 338], "make_yaml": 25, "mali": [5, 362, 365, 369, 386, 388, 389, 417, 423], "manag": [2, 348, 385, 395], "mani": [5, 6, 8, 9, 145, 361, 363, 365, 367, 368, 369, 387, 388, 402, 416, 421], "manipul": [18, 368], "manual": [6, 14, 51, 52, 365, 367, 423], "manufactur": [284, 285, 286, 288, 291, 293, 296, 357, 400, 409], "manufactured_solut": [145, 344, 354, 362, 412], "manufacturedsolut": 357, "map": [1, 8, 17, 19, 20, 31, 32, 33, 78, 79, 101, 126, 127, 128, 170, 173, 174, 175, 176, 179, 180, 295, 367, 369, 389], "map_": 101, "map_filenam": 101, "map_from_native_model_var": 145, "map_to_native_model_var": 145, "map_tool": 17, "map_yaml_config": 145, "map_yaml_opt": 145, "mappingfilestep": [17, 19], "mark": [128, 336, 369, 405], "markdown": 388, "marker": 128, "mask": [7, 19, 90, 128, 322, 325, 328, 331, 333, 365, 388, 389, 399], "mask_vari": 397, "mass": 346, "master": [6, 344, 381, 418], "mat": 365, "match": [164, 353, 369, 388], "math": 2, "mathrm": 399, "matplotlib": [128, 129, 336, 388], "matrix": 6, "matter": [5, 388], "max": [13, 145, 365, 388, 399, 402, 405, 411], "max_cells_per_cor": [145, 388, 403, 404, 405, 406, 410, 411, 412, 413, 414, 416, 421], "max_depth": 389, "max_layer_thick": [389, 399], "max_level_cel": [335, 341], "max_memori": [25, 37, 40, 47, 176, 365], "max_r": 389, "max_temp": 411, "max_valu": 228, "max_veloc": [19, 388], "maximum": [8, 18, 125, 128, 215, 228, 310, 336, 388, 389, 399, 403], "maxlevelcel": [19, 145, 322, 323, 324, 325, 328, 329, 330, 331, 333, 388], "mayb": [368, 388], "mb": [25, 37, 40, 47, 176, 365, 389], "mbtempest": 17, "md": [7, 388], "me": [6, 388], "mean": [5, 336, 369, 388, 399, 402, 404, 405, 406, 407, 411, 413, 414, 422], "meant": [10, 368, 389], "mechan": [1, 365], "medium": 390, "meet": 2, "melt": 408, "member": 389, "memor": 369, "memori": [25, 37, 40, 47, 176, 365, 389], "mention": 368, "merg": 366, "meridion": [402, 411, 415], "mesh": [1, 5, 7, 10, 17, 25, 40, 88, 89, 90, 101, 103, 110, 127, 128, 147, 151, 155, 156, 160, 161, 163, 164, 167, 176, 177, 178, 181, 183, 186, 188, 190, 209, 213, 216, 219, 224, 225, 226, 229, 230, 234, 236, 241, 242, 243, 245, 248, 249, 250, 252, 256, 260, 262, 265, 266, 267, 269, 274, 276, 286, 288, 291, 292, 293, 296, 299, 301, 302, 306, 309, 311, 313, 314, 316, 318, 322, 325, 326, 327, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 346, 347, 348, 349, 350, 351, 352, 353, 355, 356, 357, 358, 359, 360, 361, 363, 365, 367, 368, 369, 377, 378, 386, 387, 389, 399, 417, 422], "mesh_cor": 389, "mesh_cpus_per_task": 365, "mesh_databas": 389, "mesh_descript": 389, "mesh_filenam": [15, 19, 25, 88, 127, 163, 164, 176, 183], "mesh_max_disk": 389, "mesh_max_memori": 389, "mesh_min_cor": 389, "mesh_min_cpus_per_task": 365, "mesh_nam": [17, 102, 103, 104, 105, 106, 109, 110, 111, 169, 234, 241, 245, 318, 367], "mesh_path": 365, "mesh_revis": 389, "mesh_step": 365, "mesh_to_triangl": [337, 338, 339], "mesh_triangl": 13, "mesh_typ": [103, 110, 361, 365, 367], "meshstep": 365, "messag": [5, 8, 142, 365, 385, 396], "met": 2, "meta": 59, "metadata": 389, "meter": [101, 228, 320, 321, 338, 404, 406, 413], "meth": 18, "method": [8, 9, 13, 14, 17, 18, 20, 25, 30, 31, 32, 33, 40, 41, 45, 46, 51, 52, 53, 59, 60, 70, 71, 75, 78, 79, 80, 84, 85, 101, 107, 130, 145, 146, 147, 149, 150, 155, 157, 160, 162, 164, 166, 168, 170, 176, 185, 186, 187, 189, 190, 193, 194, 195, 196, 198, 201, 202, 204, 206, 208, 211, 212, 214, 216, 219, 222, 223, 224, 225, 226, 229, 230, 231, 232, 234, 236, 239, 240, 242, 243, 245, 248, 249, 251, 252, 254, 256, 258, 260, 261, 262, 265, 267, 269, 272, 273, 275, 276, 278, 280, 282, 284, 285, 286, 287, 288, 291, 293, 296, 299, 300, 301, 302, 304, 306, 309, 311, 313, 314, 316, 318, 336, 355, 357, 362, 365, 367, 368, 372, 374, 375, 377, 378, 379, 388, 397, 405, 416, 421], "meti": [6, 88], "metis_root": 369, "mhoffman": 70, "mid": [346, 402, 413], "middl": [322, 325, 331, 333, 336, 388], "midpoint": [322, 325, 331, 333, 388], "might": [2, 6, 11, 14, 17, 19, 131, 142, 145, 339, 361, 365, 369, 388, 389, 395, 417], "min": [365, 388, 399, 402, 408, 411, 415], "min_cor": 66, "min_cpus_per_task": [8, 14, 40, 47, 97, 98, 365], "min_layer_thick": [328, 389, 399, 408], "min_level_cel": [335, 341], "min_pc_fract": [388, 399, 402, 403, 404, 405, 406, 408, 410, 411, 412, 413, 414, 415, 416], "min_r": 389, "min_resolut": [162, 166], "min_task": [8, 9, 14, 17, 25, 37, 40, 47, 97, 98, 101, 145, 166, 176, 187, 212, 249, 273, 300, 365, 388], "min_temp": 411, "min_vert_level": [328, 399, 408], "mind": [2, 5, 388], "miniconda": 388, "miniconda3": [6, 369], "miniforge3": [6, 369, 388, 395, 417], "minim": 346, "minimum": [8, 66, 128, 145, 149, 166, 176, 310, 336, 347, 348, 355, 356, 357, 365, 388, 389, 399, 402, 403, 404, 405, 406, 407, 408, 410, 411, 412, 413, 414, 415, 416, 421], "minlevelcel": [145, 322, 324, 325, 328, 329, 330, 331, 333, 388], "minor": 6, "minu": 417, "minut": [142, 347, 353, 366, 402, 408, 411, 422], "mirrcz7": 142, "miss": [14, 365, 388, 389], "mistak": 388, "mitgcm": [388, 402], "mix": [299, 361, 362, 404, 410, 412, 415], "mixed_layer_depth_salin": 415, "mixed_layer_depth_temperatur": 415, "mixed_layer_depth_x": 415, "mixedlayerdepthsoutput": 360, "mixing_analysi": 404, "mixing_evaluation_tim": 404, "mixinganalysi": 349, "mk": 402, "mkdir": [6, 369], "mkl": [6, 142], "ml": 415, "mld": 415, "mm": [2, 145, 182], "mm_per_sec": 382, "moab": [6, 17, 369, 394, 417], "mod": [337, 338], "mode": [1, 5, 14, 362, 369, 386, 387, 388, 417], "model": [2, 5, 10, 18, 25, 26, 30, 31, 32, 33, 35, 40, 42, 118, 119, 124, 130, 131, 135, 137, 138, 139, 140, 141, 142, 143, 151, 155, 157, 160, 168, 185, 187, 189, 193, 194, 195, 196, 201, 212, 214, 224, 229, 230, 231, 241, 251, 275, 278, 295, 300, 344, 347, 348, 349, 350, 351, 352, 353, 355, 356, 357, 358, 359, 360, 362, 365, 366, 368, 369, 374, 381, 385, 386, 387, 389, 395], "model_config_data": 25, "model_step": 14, "modelstep": [14, 145, 365, 367, 388], "modif": [2, 6, 7, 365, 382], "modifi": [2, 8, 9, 13, 14, 25, 39, 53, 120, 122, 145, 176, 197, 279, 347, 348, 353, 355, 356, 357, 365, 367, 369, 387, 388, 389, 402, 408, 417], "modifysshmask": 7, "modul": [4, 5, 9, 10, 12, 14, 15, 16, 27, 28, 29, 70, 93, 120, 137, 139, 140, 142, 145, 155, 160, 163, 166, 361, 362, 363, 365, 367, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 417], "modules_aft": [142, 391, 394, 396], "modules_befor": [142, 391, 394, 396], "mom": [388, 402], "moment": 1, "momentum": [284, 291, 346, 347, 349, 350, 351, 352, 355, 356, 357, 358, 359, 403, 410, 412], "monik": 396, "month": 400, "more": [3, 5, 6, 9, 11, 12, 13, 14, 17, 19, 40, 51, 57, 79, 118, 119, 142, 145, 346, 347, 349, 350, 351, 352, 358, 359, 361, 363, 365, 366, 367, 368, 369, 386, 395, 400, 402, 405, 407, 408, 410, 412, 416, 417, 418, 421, 423], "morpheu": 142, "mosaic": [19, 128], "most": [9, 12, 46, 344, 350, 361, 362, 365, 368, 369, 381, 388, 389, 394, 395, 396, 399, 400, 418, 423], "mostli": 388, "motiv": 1, "move": [368, 369, 388, 416, 421], "movement": [322, 325, 331, 333, 388], "mpa": [5, 9, 10, 11, 12, 13, 14, 17, 18, 25, 31, 32, 33, 40, 42, 70, 88, 103, 110, 120, 122, 124, 127, 135, 136, 137, 138, 139, 140, 141, 143, 146, 170, 171, 172, 173, 174, 175, 176, 179, 180, 183, 262, 273, 288, 295, 306, 321, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 347, 348, 349, 350, 351, 352, 353, 355, 356, 357, 358, 359, 360, 362, 365, 368, 372, 381, 384, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 400, 402, 403, 404, 405, 406, 407, 408, 410, 411, 412, 413, 414, 415, 416, 417, 418, 421, 422, 423], "mpas_field": 336, "mpas_grid": [12, 365], "mpas_make_target": [369, 417], "mpas_mesh_filenam": 13, "mpas_model": [5, 389], "mpas_ocean": 368, "mpas_standalonedata": [11, 142, 389, 395], "mpas_to_yaml": 387, "mpas_tool": [9, 12, 13, 83, 347, 348, 353, 355, 356, 357, 360, 365, 367, 388], "mpasconfigpars": [9, 365, 367], "mpaso_to_omega": 145, "mpaso_to_omega_dim_map": 170, "mpaso_to_omega_var_map": 170, "mpi": [6, 14, 17, 101, 137, 140, 142, 176, 178, 181, 347, 348, 355, 356, 357, 365, 369, 385, 387, 388, 390, 391, 392, 393, 394, 396, 417], "mpi_": 142, "mpi_crayclang": 394, "mpi_crayclanggpu": 394, "mpi_gnu": [142, 390, 391, 392, 393, 394, 395, 396], "mpi_gnugpu": 394, "mpi_init": 385, "mpi_intel": [390, 392, 393, 395], "mpi_mpich": [395, 417], "mpi_openmpi": [395, 417], "mpich": [142, 369, 387, 391, 394, 396, 417], "mpid_init": 385, "mpid_nem_init": 385, "mpid_nem_tcp_get_business_card": 385, "mpid_nem_tcp_init": 385, "mpidi_ch3_init": 385, "mpir_init_thread": 385, "mpirun": [142, 385, 389, 390, 391, 392, 393, 394, 395, 396, 417], "msh": [5, 13], "much": [5, 6, 14, 365, 388, 408], "multi": [128, 336], "multinod": [389, 417], "multipl": [5, 9, 14, 25, 26, 31, 32, 131, 142, 145, 179, 180, 345, 366, 367, 368, 369, 388, 395, 402, 417], "multipli": [145, 341, 404, 405, 406, 407, 410, 412, 413, 414], "multiprocess": [365, 368, 389], "munk": [210, 403], "must": [5, 7, 11, 14, 19, 25, 28, 29, 40, 43, 45, 48, 55, 124, 126, 127, 142, 145, 147, 176, 210, 211, 269, 296, 346, 365, 367, 369, 388, 399, 407, 423], "my": [6, 142, 391], "my_config": 417, "my_machin": 389, "my_test_cas": 17, "my_usernam": [395, 396], "myenv": 396, "mypi": 369, "myquota": 396, "myst": [7, 388], "mytestcas": 17, "n": [5, 6, 72, 79, 80, 86, 365, 388, 391, 395, 396, 402, 403, 405, 407, 408, 410, 411, 412, 416, 417, 421], "n3b5fye": 142, "n_wavelengths_i": [410, 412], "n_wavelengths_x": [410, 412], "n_z": 399, "name": [1, 5, 6, 7, 8, 9, 11, 13, 14, 17, 18, 20, 25, 27, 28, 29, 31, 32, 33, 34, 40, 41, 42, 43, 51, 53, 61, 62, 63, 65, 66, 67, 71, 78, 84, 88, 93, 101, 102, 103, 104, 105, 106, 109, 110, 111, 114, 115, 117, 118, 119, 120, 124, 125, 126, 127, 128, 130, 131, 135, 142, 145, 147, 148, 149, 150, 151, 152, 155, 160, 162, 163, 164, 166, 169, 170, 171, 172, 173, 174, 175, 176, 183, 185, 186, 187, 190, 193, 194, 196, 198, 201, 202, 204, 208, 209, 212, 219, 223, 224, 225, 226, 229, 230, 232, 234, 240, 241, 242, 243, 245, 248, 249, 252, 261, 265, 272, 273, 276, 278, 280, 287, 291, 293, 295, 300, 306, 309, 310, 311, 313, 314, 316, 318, 321, 336, 361, 362, 365, 367, 368, 369, 375, 377, 379, 386, 388, 389, 396, 402, 407, 417, 422], "namelist": [5, 7, 8, 10, 25, 26, 27, 30, 31, 32, 33, 35, 36, 39, 49, 119, 124, 135, 136, 163, 166, 168, 176, 181, 189, 192, 195, 200, 214, 218, 231, 251, 275, 344, 347, 348, 353, 355, 356, 357, 361, 362, 365, 367, 368, 381, 382, 384, 387, 388, 389, 397, 408, 415], "namelist_templ": 135, "namesak": 366, "nativ": [19, 171], "natur": 83, "navig": 388, "nc": [5, 11, 12, 13, 14, 17, 18, 19, 101, 145, 147, 155, 160, 269, 296, 347, 348, 353, 356, 365, 368, 388, 397], "ncar": 382, "ncell": [145, 223, 240, 335, 342, 343, 365, 388], "ndarrai": [72, 79, 80, 86, 91, 126, 128, 183, 228, 320, 321, 388], "nearest": [404, 405, 406, 413, 414], "neareststod": [101, 405, 416, 421], "nearli": [17, 365, 367, 386, 387, 388], "necessari": [6, 7, 13, 125, 142, 388], "necessarili": [40, 42], "necessit": 407, "nedg": [365, 388], "need": [1, 2, 4, 5, 6, 7, 9, 11, 12, 13, 14, 17, 18, 30, 52, 59, 79, 128, 142, 145, 168, 189, 195, 214, 231, 251, 275, 344, 349, 350, 351, 352, 358, 359, 362, 365, 367, 368, 369, 381, 382, 385, 387, 388, 389, 390, 395, 396, 399, 402, 404, 405, 406, 413, 414, 417, 422], "neglect": [410, 412], "neglig": [365, 408], "neighbor": 343, "neither": [25, 40, 51, 101, 166, 176, 187, 212, 249, 273, 300, 365], "nersc": 396, "nest": [31, 33, 130, 132, 155, 160, 176, 179], "net": 415, "netcdf": [6, 142, 147, 152, 173, 175, 183, 360, 389, 390, 391, 392, 393, 394, 395, 396], "netcdf3_64bit": 389, "netcdf3_class": 389, "netcdf4": 389, "netcdf4_class": 389, "network": 391, "never": [14, 142, 386], "new": [1, 2, 5, 20, 26, 40, 51, 59, 62, 71, 78, 84, 101, 121, 122, 145, 155, 160, 166, 170, 187, 194, 212, 225, 230, 242, 249, 262, 265, 273, 288, 291, 300, 313, 322, 325, 331, 333, 365, 367, 368, 369, 382, 385, 386, 387, 417], "new_branch_nam": 369, "new_child": 121, "new_step_log_fil": [51, 367], "new_tre": 122, "newli": 388, "next": [7, 142, 163, 347, 348, 353, 356, 388, 399, 408, 417], "nhalflevel": [341, 342], "nhoriznod": [341, 343], "nhorizweight": 341, "nice": [388, 396], "nightli": [2, 369, 417, 422], "no_proxi": 385, "node": [6, 14, 25, 39, 40, 44, 47, 65, 96, 97, 98, 142, 176, 337, 338, 340, 341, 343, 365, 366, 368, 369, 388, 389, 390, 391, 392, 393, 394, 395, 396, 417], "nodecellindic": 340, "nodecellweight": 340, "nodevalu": [337, 338], "nompi": [395, 417], "non": [6, 14, 18, 346, 365, 388, 403, 404, 413, 417], "nondiverg": [358, 400, 409], "nondivergent_2d": [308, 344, 354, 413], "none": [7, 9, 14, 18, 25, 26, 28, 29, 31, 32, 37, 40, 41, 42, 43, 47, 48, 51, 52, 55, 57, 59, 61, 66, 67, 69, 71, 78, 84, 88, 91, 100, 101, 102, 105, 106, 109, 111, 115, 119, 120, 124, 125, 126, 127, 128, 131, 132, 135, 145, 147, 148, 149, 150, 151, 152, 155, 156, 160, 161, 162, 163, 164, 166, 167, 176, 177, 179, 180, 182, 187, 188, 212, 213, 223, 240, 241, 249, 250, 261, 266, 273, 274, 287, 288, 292, 300, 310, 328, 336, 338, 365, 367, 377, 388, 399, 402, 403, 404, 405, 406, 408, 410, 411, 412, 413, 414, 415, 416, 420], "nonhydro": 6, "nonhydro_chrys_intel_openmpi": 6, "nonhydrostat": 6, "nonlinear": [403, 404, 407, 410, 412], "nonlinearli": 404, "nonperiod": 346, "nonperiodic_i": [13, 365, 388], "nonperiodic_x": [13, 365, 388], "nonzero": [18, 125], "noqa": [19, 70, 365, 388], "nor": [25, 40, 51, 101, 166, 176, 187, 212, 249, 273, 300, 365, 388], "norm": [19, 125, 126, 127, 145, 149, 152, 348, 349, 350, 351, 352, 358, 359, 403, 404, 405, 406, 407, 410, 412, 413, 414], "norm_arg": [19, 126, 405], "norm_typ": [19, 126, 127, 349, 350, 351, 358, 359, 404, 405, 406, 407, 413, 414], "norm_vel": 263, "normal": [19, 262, 263, 288, 289, 346, 352, 365, 366, 369, 388, 395, 407], "normal_veloc": [355, 357, 365, 388], "normalveloc": [14, 18, 19, 145, 203, 233, 255, 289, 346, 347, 348, 353, 355, 356, 357, 360, 365, 388, 415], "north": 402, "northern": [388, 402, 408, 411], "notat": [365, 416, 421], "note": [5, 7, 17, 18, 145, 388, 396], "noth": [9, 142, 385, 404, 405, 406, 413, 414], "notic": 369, "now": [1, 6, 142, 365, 369, 388, 389, 395], "np": [13, 15, 228, 365, 388, 405], "np110py27_4": 385, "nsegment": [341, 342], "ntask": [8, 9, 14, 17, 25, 37, 40, 44, 47, 97, 98, 101, 145, 166, 176, 187, 212, 249, 273, 300, 365, 367, 388], "nu": [9, 14, 145, 187, 198, 212, 273, 280, 347, 356, 365, 388], "nu_": 9, "nu_2": 403, "nuanc": 388, "num": 5, "num_l2": 15, "number": [5, 6, 8, 13, 14, 25, 34, 37, 39, 40, 44, 46, 47, 65, 66, 67, 71, 72, 73, 74, 75, 83, 96, 97, 98, 101, 119, 142, 145, 156, 161, 166, 167, 176, 177, 178, 181, 187, 188, 202, 212, 213, 224, 232, 249, 250, 262, 266, 273, 274, 288, 292, 300, 344, 347, 348, 353, 355, 356, 357, 361, 365, 366, 367, 368, 375, 386, 388, 389, 395, 397, 399, 401, 402, 403, 404, 405, 406, 407, 408, 410, 411, 412, 413, 414, 415, 416, 417, 421], "numer": [65, 145, 349, 351, 358, 359, 403, 404, 406, 410, 412, 413, 414], "numpi": [9, 13, 15, 72, 79, 80, 86, 91, 126, 128, 145, 183, 320, 321, 337, 338, 365, 388], "numpydoc": [7, 388], "nvertlevel": [19, 128, 145, 147, 152, 322, 325, 331, 333, 335, 342, 343, 365, 388, 399], "nvertnod": [341, 343], "nvertweight": 341, "nvidia": 142, "nvidiagpu": [6, 142], "nx": [13, 83, 361, 365, 388, 415], "ny": [13, 83, 361, 365, 388, 415], "o": [11, 12, 120, 122, 136, 142, 368, 369, 388, 389, 417], "object": [8, 12, 17, 24, 27, 28, 29, 52, 54, 93, 112, 113, 116, 120, 130, 131, 135, 136, 155, 160, 163, 166, 262, 288, 362, 367, 368, 388], "observ": [17, 337, 338, 341, 387], "obtain": [355, 357, 369, 391], "obviou": [7, 14, 388], "obvious": 388, "occupi": 408, "occur": [369, 385, 399], "ocean": [1, 3, 5, 7, 9, 10, 11, 13, 14, 18, 19, 20, 25, 31, 32, 33, 42, 124, 345, 347, 348, 349, 350, 351, 352, 353, 355, 356, 357, 358, 359, 360, 361, 362, 364, 365, 367, 368, 386, 387, 388, 389, 395, 397, 398, 399, 401, 402, 403, 404, 405, 406, 407, 408, 410, 411, 412, 413, 414, 415, 416, 417, 422, 423], "ocean_cached_fil": 5, "ocean_database_root": 389, "ocean_model": [344, 369, 389], "ocean_pr_chrys_gnu_openmpi": 6, "ocean_pr_chrys_intel_openmpi": 6, "oceaniostep": 145, "oceanmodelstep": [145, 365, 388], "ocemod": 411, "oddli": 13, "off": [5, 6, 369, 385], "offer": 366, "offlin": 389, "offset": 414, "often": [6, 9, 18, 19, 40, 145, 361, 363, 365, 366, 367, 368, 369, 388, 389, 422, 423], "okai": [2, 6, 365, 388], "olcf": 394, "older": 5, "omega": [5, 18, 25, 31, 32, 33, 130, 170, 171, 172, 173, 174, 175, 176, 179, 180, 262, 288, 295, 344, 362, 368, 386, 388, 400, 405, 407, 410, 412, 416, 417], "omega_build": 369, "omega_ctest": 11, "omega_to_mpaso_dim_map": 170, "omega_to_mpaso_var_map": 170, "omit": [6, 365, 417], "onc": [5, 6, 14, 43, 128, 337, 338, 347, 350, 369, 388, 389, 404, 405, 406, 413, 414, 417], "one": [1, 2, 5, 6, 7, 10, 11, 14, 17, 18, 19, 25, 39, 40, 42, 43, 50, 51, 57, 62, 118, 119, 124, 142, 145, 165, 169, 176, 193, 229, 300, 337, 338, 344, 347, 348, 349, 351, 353, 355, 356, 357, 358, 359, 360, 361, 363, 365, 367, 368, 369, 374, 384, 385, 386, 387, 389, 395, 396, 399, 402, 404, 405, 406, 408, 412, 413, 414, 416, 417, 420, 421, 422, 423], "ones": [5, 322, 325, 331, 333, 368, 388], "ones_lik": [365, 388], "onli": [1, 5, 6, 7, 8, 14, 17, 18, 19, 51, 128, 142, 145, 344, 346, 349, 350, 351, 352, 358, 359, 360, 362, 365, 367, 368, 381, 384, 387, 388, 389, 391, 395, 396, 397, 399, 402, 403, 404, 405, 406, 407, 408, 410, 411, 412, 413, 414, 415, 416, 417, 420], "onlin": 389, "onto": [5, 369], "open": [4, 6, 145, 173, 369, 388, 408], "open_dataset": [15, 19, 173, 365, 388], "open_model_dataset": 145, "openmp": [6, 25, 37, 40, 47, 98, 137, 139, 140, 166, 176, 187, 212, 249, 273, 300, 365, 388], "openmp_thread": [9, 14, 25, 37, 40, 47, 98, 166, 176, 187, 212, 249, 273, 300, 365, 367, 388], "openmpi": [6, 137, 142, 369, 387, 390, 392, 393, 417], "oper": [8, 49, 142, 192, 200, 218, 284, 291, 365, 367, 422], "operating_system": 142, "oppos": [5, 14, 30, 157, 168, 169, 189, 195, 214, 231, 236, 251, 275, 306, 311, 316, 338, 388], "opt": [13, 84], "option": [5, 7, 9, 11, 13, 17, 18, 19, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 40, 41, 42, 43, 47, 48, 51, 52, 53, 55, 57, 59, 60, 61, 62, 63, 65, 66, 67, 71, 77, 78, 79, 82, 84, 88, 91, 93, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 109, 110, 111, 114, 115, 118, 119, 120, 124, 125, 126, 127, 128, 130, 131, 132, 133, 135, 136, 142, 147, 148, 150, 151, 154, 155, 157, 158, 159, 160, 162, 163, 164, 166, 168, 176, 179, 180, 182, 187, 189, 195, 197, 209, 212, 214, 215, 219, 220, 222, 223, 225, 230, 231, 236, 237, 239, 240, 241, 242, 248, 249, 251, 256, 258, 260, 261, 262, 265, 269, 272, 273, 275, 278, 279, 284, 286, 287, 288, 291, 296, 300, 302, 304, 306, 307, 309, 313, 320, 322, 323, 324, 325, 326, 327, 331, 332, 333, 334, 335, 336, 337, 338, 344, 347, 348, 349, 350, 351, 352, 353, 355, 356, 357, 358, 359, 360, 361, 362, 365, 366, 367, 368, 377, 381, 382, 385, 387, 389, 399, 401, 417, 423], "orang": [349, 351, 358, 359, 363], "order": [1, 5, 8, 13, 14, 145, 337, 338, 349, 350, 351, 352, 358, 359, 362, 365, 366, 388, 397, 404, 405, 406, 407, 412, 413, 414, 415, 417], "org": 411, "organ": [361, 363, 366, 387], "organiz": 363, "orient": [368, 407], "origin": [8, 57, 335, 337, 338, 341, 369, 388, 399, 417], "orion": 394, "ornl": 394, "osx": [142, 395], "ot": [7, 388], "other": [2, 5, 6, 7, 8, 9, 10, 11, 13, 15, 17, 19, 40, 41, 43, 51, 59, 112, 137, 203, 233, 255, 342, 343, 349, 350, 351, 352, 358, 359, 360, 361, 362, 363, 367, 368, 369, 376, 385, 386, 387, 389, 402, 403, 404, 405, 406, 413, 414, 423], "otherwis": [12, 19, 142, 348, 365, 367, 369, 388, 390, 391, 392, 393, 394, 395, 396, 402], "our": [6, 142, 368, 388, 417], "ourselv": 365, "out": [6, 8, 9, 13, 59, 95, 99, 128, 142, 145, 155, 160, 175, 336, 363, 365, 368, 369, 389, 399, 417], "out_file_nam": 128, "out_filenam": [19, 123, 126, 127, 321, 336], "out_nam": 14, "outcom": 368, "outer": 365, "outlin": 336, "outline_color": 336, "output": [5, 7, 8, 10, 12, 13, 14, 15, 18, 20, 25, 40, 41, 43, 49, 50, 51, 57, 87, 88, 98, 101, 114, 115, 125, 127, 147, 151, 152, 155, 160, 170, 171, 176, 183, 192, 200, 202, 203, 208, 209, 218, 222, 232, 233, 234, 239, 241, 245, 254, 255, 260, 269, 286, 296, 309, 311, 316, 318, 321, 341, 347, 348, 349, 350, 351, 352, 353, 355, 356, 357, 358, 359, 360, 367, 375, 376, 384, 386, 389, 396, 397, 404, 405, 406, 407, 408, 413, 414, 417, 422], "output_": 388, "output_fil": [183, 365, 388], "output_filenam": [15, 145, 155, 160, 183], "output_full_run": 18, "output_interv": [14, 145, 388, 397, 404, 405, 406, 407, 408, 413, 414], "output_interval_str": 145, "output_restart_run": 18, "outsid": [51, 52, 361, 363, 365, 367, 369], "over": [5, 9, 14, 59, 101, 126, 127, 336, 365, 368, 387, 388, 399, 402, 408, 411, 415, 417], "over_color": [349, 351, 358, 359], "overal": 8, "overhead": 365, "overkil": 14, "overlain": 19, "overli": [7, 388, 408], "overrid": [5, 13, 14, 45, 46, 49, 53, 59, 75, 78, 79, 80, 145, 192, 200, 211, 218, 365, 367, 368, 388, 389, 394, 396, 417], "overridden": [9, 31, 32, 33, 60, 145, 388], "overview": [7, 387, 391, 396], "overwrit": 62, "own": [6, 7, 8, 9, 11, 12, 19, 40, 142, 145, 365, 367, 368, 369, 386, 388, 389, 404, 405, 406, 413, 414, 417, 423], "p": [5, 6, 369, 388, 389, 417], "p1": 396, "packag": [4, 5, 6, 7, 9, 10, 13, 14, 16, 27, 28, 29, 42, 53, 93, 100, 120, 124, 131, 142, 145, 155, 160, 163, 166, 361, 362, 363, 364, 365, 367, 369, 385, 386, 387, 388, 390, 391, 392, 393, 394, 395, 396, 417], "page": [3, 7, 142, 390], "pain": 388, "pair": [340, 404, 406, 413, 414, 420], "panel": [128, 336], "paper": [407, 417], "parallel": [1, 5, 17, 25, 37, 40, 46, 47, 142, 176, 365, 368, 369, 385, 386, 388, 389, 390, 391, 392, 393, 394, 395, 396, 417, 423], "parallel_execut": [142, 385, 389, 390, 391, 392, 393, 394, 395, 396, 417], "param": [299, 301], "paramet": [7, 13, 14, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 37, 40, 41, 42, 43, 44, 47, 48, 51, 52, 54, 55, 57, 59, 61, 62, 63, 64, 65, 66, 67, 70, 71, 73, 74, 75, 78, 83, 84, 86, 88, 89, 90, 91, 93, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 124, 125, 126, 127, 128, 131, 132, 133, 135, 136, 145, 147, 148, 149, 150, 151, 152, 155, 157, 158, 159, 160, 162, 163, 164, 166, 168, 169, 170, 171, 172, 173, 175, 176, 179, 180, 182, 183, 185, 186, 187, 189, 190, 193, 194, 195, 196, 198, 201, 202, 204, 206, 208, 209, 210, 212, 214, 215, 216, 219, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 234, 236, 239, 240, 241, 242, 243, 245, 248, 249, 251, 252, 254, 256, 258, 260, 261, 262, 263, 264, 265, 267, 269, 272, 273, 275, 276, 278, 280, 282, 284, 286, 287, 288, 289, 290, 291, 293, 296, 300, 302, 304, 306, 309, 310, 311, 313, 314, 316, 318, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 355, 357, 361, 365, 367, 373, 374, 375, 377, 378, 379, 402, 403, 404, 405, 406, 407, 408, 410, 411, 412, 413, 414, 415], "parameter": 408, "parent": [1, 35, 145, 349, 350, 351, 352, 355, 357, 358, 359, 361, 362, 365], "parlanc": 142, "parmeti": 6, "parmetis_root": 369, "pars": [5, 9, 14, 26, 27, 28, 29, 93, 120, 122, 131], "parser": [9, 48, 55, 59, 196, 219, 224, 229, 236, 258, 278, 284, 306], "part": [1, 3, 5, 6, 7, 9, 12, 14, 18, 19, 40, 51, 145, 155, 160, 164, 166, 187, 212, 225, 242, 249, 265, 273, 291, 300, 313, 336, 340, 347, 348, 353, 355, 356, 357, 365, 366, 367, 368, 369, 387, 388, 399], "partial": [323, 324, 388, 399, 402, 403, 404, 405, 406, 408, 410, 411, 412, 413, 414, 415, 416], "partial_cell_typ": [388, 399, 402, 403, 404, 405, 406, 408, 410, 411, 412, 413, 414, 415, 416], "particular": [9, 142, 335, 361, 369, 387, 391, 395, 417], "particularli": [14, 385, 388, 408, 416, 421], "partit": [25, 36, 46, 65, 88, 145, 176, 347, 348, 353, 355, 356, 357, 365, 389, 390, 391, 392, 393, 394, 417], "partition_execut": 389, "partition_graph": [14, 25, 176], "pass": [5, 8, 9, 12, 13, 14, 18, 83, 125, 126, 145, 170, 173, 361, 362, 365, 367, 368, 369, 386, 417], "passiv": 405, "past": 14, "patch": [19, 127, 128, 388], "patch_edge_color": 127, "path": [5, 6, 9, 11, 14, 18, 40, 42, 43, 51, 52, 57, 59, 61, 62, 67, 70, 100, 116, 118, 119, 124, 125, 128, 142, 145, 147, 173, 175, 269, 296, 344, 362, 365, 367, 368, 369, 375, 381, 386, 388, 389, 390, 391, 392, 393, 394, 395, 396, 417, 423], "path_to_mpas_ocean": 388, "path_to_working_dir": 388, "pattern": 388, "pde": 2, "peopl": 389, "pep8": [368, 369], "per": [1, 8, 14, 25, 37, 39, 40, 47, 65, 97, 98, 127, 128, 142, 145, 176, 336, 365, 388, 389, 390, 391, 392, 393, 394, 395, 396, 402, 404, 405, 406, 407, 410, 412, 413, 414, 416, 421], "perform": [1, 2, 5, 8, 14, 17, 18, 40, 45, 46, 49, 50, 71, 125, 142, 145, 155, 160, 166, 186, 187, 192, 196, 200, 211, 212, 218, 225, 242, 248, 249, 265, 273, 278, 291, 299, 300, 301, 313, 341, 344, 347, 348, 349, 350, 351, 352, 353, 355, 356, 357, 358, 359, 360, 365, 366, 367, 378, 386, 387, 388, 389, 395, 402, 403, 405, 408, 422], "performance_test": 365, "perhap": [17, 19, 43, 336, 361, 363], "period": [13, 346, 347, 348, 349, 351, 353, 355, 356, 357, 358, 359, 365, 388, 402, 403, 404, 405, 406, 407, 408, 410, 411, 412, 413, 414], "perl": 142, "perlmutt": [6, 142, 391, 395, 417], "permiss": [63, 369], "permit": 403, "person": [369, 385], "perspect": 362, "pertain": [416, 421], "perturb": [402, 405, 411, 412], "perturb_width": [365, 388, 402], "petabyt": 391, "petersen": [145, 369, 388, 402], "petsc_support": 6, "phase": [397, 408], "phc": [365, 399], "phi": 415, "phi_0": 415, "philosophi": [366, 368, 388], "physic": [13, 83, 378, 384, 388, 399], "pi": [365, 388, 399, 402, 403, 404, 405, 406, 407, 413], "pick": [17, 112, 113], "pickl": [5, 8, 112, 113, 365, 388, 417], "piec": [5, 361, 362, 388], "piecewis": 408, "pinch": 145, "pio": [6, 25, 36, 39, 176, 347, 348, 353, 355, 356, 357], "pip": 369, "piston": 415, "pkgconf": 142, "place": [5, 6, 14, 126, 142, 361, 365, 367, 382, 388, 395], "placehold": [25, 37, 40, 47, 176, 365, 417], "plan": [2, 13, 145, 344, 355, 357, 365, 381, 386, 390, 391, 392, 393, 394, 396, 410, 412, 423], "planar": [5, 9, 128, 145, 337, 346, 353, 362, 365, 388, 403, 408, 410, 411, 412, 415, 416, 421, 422, 423], "planar_hex": [13, 83, 347, 348, 353, 355, 356, 357, 360, 365, 388], "plane": [256, 403], "platecarre": 19, "platform": 391, "pleas": [6, 142, 362, 368, 369, 388, 417], "plot": [13, 86, 126, 127, 128, 145, 147, 152, 198, 204, 234, 245, 280, 304, 318, 335, 336, 337, 338, 341, 347, 349, 350, 351, 352, 356, 358, 359, 379, 404, 405, 406, 407, 410, 411, 412, 413, 414, 420, 423], "plot_cell_width": 13, "plot_global_lat_lon_field": 19, "plot_global_mpas_field": 19, "plot_horiz_field": [19, 365, 388], "plot_land": [19, 126, 127], "plot_start_end": 336, "plot_tim": 411, "plot_transect": [145, 335], "plt": 388, "plu": [6, 386], "plugin": 368, "pm": [142, 396, 417], "pmi2": 393, "pn2034311": 385, "pnetcdf": [6, 142, 390, 391, 392, 393, 394, 395, 396], "png": [2, 13, 19, 336, 349, 350, 351, 352, 358, 359, 365, 388], "poari": 394, "point": [5, 6, 9, 56, 62, 104, 142, 337, 338, 341, 344, 346, 361, 362, 367, 368, 369, 381, 388, 389, 395, 408, 413, 417], "polar": [389, 390, 392, 399], "polari": [1, 2, 4, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 137, 139, 140, 142, 145, 344, 345, 347, 348, 349, 350, 351, 352, 353, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 366, 367, 381, 384, 385, 386, 388, 389, 395, 400, 401, 402, 408, 418, 422, 423], "polaris_branch": [344, 381], "polaris_cach": [5, 8, 20, 365], "polaris_compil": 369, "polaris_env": [142, 390, 391, 392, 393, 394, 395, 396], "polaris_head": 388, "polaris_machin": [11, 369], "polarisconfigpars": [9, 11, 17, 21, 40, 48, 51, 55, 61, 65, 66, 96, 99, 100, 116, 126, 127, 145, 163, 196, 215, 219, 224, 229, 236, 248, 258, 262, 278, 284, 288, 306, 320, 322, 323, 324, 325, 326, 327, 331, 332, 333, 334, 388], "polarisyaml": [135, 136], "polygon": 19, "polypcolor": 19, "pop": [388, 402], "port": [1, 388, 396], "posit": [262, 288, 320, 321, 322, 323, 324, 325, 328, 329, 330, 331, 333, 335, 341, 388, 399, 415], "possibl": [2, 8, 11, 74, 346, 349, 350, 351, 352, 353, 358, 359, 365, 366, 367, 368, 387, 388, 399, 407], "possibli": [14, 40, 51, 342, 343, 362, 365, 367, 369, 388], "post": 381, "potenti": [142, 183, 196, 278, 365, 388, 402, 411], "pr": [5, 6, 417, 422], "practic": [365, 368, 369], "pre": [5, 142, 369], "prebootstrap": 6, "preced": [5, 59, 145], "precis": [14, 145, 365, 388], "predecessor": [368, 386, 387], "predefin": 5, "prefer": [1, 2, 142, 365, 366, 388, 389], "prefix": [14, 42, 142, 145, 151, 219, 224, 229, 241, 367, 369, 389], "premium": 396, "prepend": 7, "prescrib": [347, 348, 355, 356, 357, 407], "present": [1, 52, 145, 369, 388, 397], "preserv": [413, 417], "press": 399, "pressur": [7, 164, 165, 344, 353, 389, 397, 408, 410, 412], "pretti": [142, 365, 368, 388, 389], "prevent": [1, 365], "previou": [5, 128, 203, 233, 255, 365, 369, 376, 388, 403, 417, 422], "previous": 388, "previous_workdir": 417, "primari": [2, 5, 9, 388, 422], "primarili": 387, "print": [5, 12, 18, 67, 125, 132, 365, 368, 403, 422], "prior": [53, 145, 365], "prioriti": 391, "privat": 388, "prjquota": 396, "probabl": [388, 395, 407], "problem": [6, 365, 369, 385, 388], "problemat": 365, "proc": 388, "proc_count": 224, "proce": 1, "procedur": [4, 142, 369, 388, 396], "proceed": 369, "process": [2, 6, 8, 14, 35, 97, 98, 136, 365, 368, 369, 381, 386, 387, 388, 408], "processed_registry_filenam": 136, "processor": [202, 224, 232, 365, 375, 402, 408], "produc": [12, 14, 17, 19, 40, 41, 43, 57, 145, 152, 163, 164, 185, 193, 201, 224, 229, 249, 256, 341, 347, 348, 349, 350, 351, 352, 353, 355, 356, 357, 358, 359, 360, 365, 368, 369, 374, 384, 388, 403, 404, 406, 410, 412, 413, 414, 417, 420], "product": 8, "profil": [353, 360, 385, 415], "prognost": [353, 402, 408], "program": [368, 389], "progress": [63, 114, 115], "prohibit": 422, "proj": [105, 111, 394], "proj_attr": [105, 111], "proj_str": [105, 111], "project": [2, 5, 6, 7, 19, 70, 105, 111, 344, 368, 369, 381, 382, 388, 389, 390, 391, 395, 417, 418], "project_nam": 391, "projectid": 396, "promot": 388, "propag": [410, 411, 412], "proper": 388, "properli": [2, 137, 139, 140, 388, 389, 417], "properti": [8, 306, 346, 365, 395, 404, 405, 406, 413, 414], "proport": [14, 145, 388, 399, 402, 404, 405, 406, 407, 408, 410, 412, 413, 414, 416, 421], "proportion": [405, 407], "propos": [1, 2], "proven": [8, 10, 59, 387, 389], "provid": [2, 3, 5, 8, 9, 14, 17, 18, 19, 25, 40, 42, 43, 48, 50, 51, 55, 101, 105, 111, 125, 131, 142, 145, 166, 176, 182, 187, 212, 249, 273, 300, 337, 338, 344, 347, 348, 353, 355, 356, 357, 360, 361, 362, 363, 365, 366, 367, 368, 369, 381, 384, 385, 386, 387, 388, 389, 395, 397, 400, 403, 405, 408, 413, 416, 417], "proxi": 387, "proxy_dis": 385, "proxy_en": 385, "proxyout": 385, "pscratch": 6, "pseudo": 2, "psi": 405, "psi0": 405, "psi_0": 405, "psu": [402, 408, 411, 415], "pty": 388, "public": [7, 11, 365, 388, 389], "public_html": [390, 392, 395], "pull": [7, 142, 368, 369, 388, 389], "pull_request": 389, "purg": 142, "purpos": [2, 361, 368, 388, 423], "purposefulli": [337, 338], "push": 388, "put": [145, 162, 369, 388], "put_origin_on_a_cel": 361, "py": [6, 12, 14, 18, 70, 142, 353, 361, 362, 368, 369, 386, 388, 389, 394], "pycharm": [368, 369, 388], "pyplot": 388, "pyremap": [17, 107], "python": [6, 7, 8, 9, 26, 46, 53, 145, 361, 363, 365, 367, 368, 369, 386, 387, 388, 389, 395, 396, 417], "q": 5, "qo": [65, 390, 391, 393, 395, 396, 417], "qu": [1, 5, 11, 145, 219, 224, 229, 367, 388, 389, 401, 404, 405, 406, 407, 413, 414, 422], "qu240": [14, 365, 368, 369, 389, 417], "qu240_for_e3sm": 417, "qu240dynamicadjust": 14, "qu60": 17, "qu_base_mesh_120km": 1, "qu_base_mesh_150km": 1, "qu_base_mesh_180km": 1, "qu_base_mesh_210km": 1, "qu_base_mesh_240km": 1, "qu_base_mesh_60km": 1, "qu_base_mesh_90km": 1, "qu_base_resolut": [145, 405], "qu_forward_120km": 1, "qu_forward_150km": 1, "qu_forward_180km": 1, "qu_forward_210km": 1, "qu_forward_240km": 1, "qu_forward_60km": 1, "qu_forward_90km": 1, "qu_init_120km": 1, "qu_init_150km": 1, "qu_init_180km": 1, "qu_init_210km": 1, "qu_init_240km": 1, "qu_init_60km": 1, "qu_init_90km": 1, "qu_map_120km": 1, "qu_map_150km": 1, "qu_map_180km": 1, "qu_map_210km": 1, "qu_map_240km": 1, "qu_map_60km": 1, "qu_map_90km": 1, "qu_refinement_factor": [145, 405], "qu_resolut": [404, 405, 406, 413, 414], "qu_viz_120km": 1, "qu_viz_150km": 1, "qu_viz_180km": 1, "qu_viz_210km": 1, "qu_viz_240km": 1, "qu_viz_60km": 1, "qu_viz_90km": 1, "quad": 335, "quadrilater": 341, "qualit": [14, 403], "qualiti": [65, 390, 391, 393, 395, 396, 417], "quantiti": 19, "quasi": [13, 78, 349, 350, 351, 352, 358, 359, 367, 389, 404, 405, 406, 407, 408, 413, 414, 416, 421], "quasiuniformsphericalmeshstep": [13, 145, 367], "question": [14, 365, 389], "queu": 142, "queue": 387, "quick": [387, 388, 400, 408, 418], "quicker": 366, "quickli": [8, 408], "quiet": [18, 114, 115, 125, 132], "quit": [2, 363, 365, 367, 388, 408], "quot": 7, "quwisc240": [365, 368, 417], "quwisc240_for_e3sm": 417, "r": [5, 228, 396, 404, 405, 406, 413], "rad": 405, "radial": 423, "radian": [338, 340], "radiu": [228, 338, 404, 405, 406, 413, 414], "rain": 415, "rain_flux": 415, "rais": [7, 9, 18, 40, 43, 61, 62, 145, 365, 368, 388, 407], "ran": [1, 113], "rang": [9, 128, 388, 411], "rare": [367, 369], "rate": [147, 149, 150, 223, 240, 261, 287, 310, 349, 350, 351, 352, 355, 357, 358, 359, 388, 404, 405, 406, 407, 410, 412, 413, 414, 415], "rather": [1, 2, 5, 6, 8, 9, 11, 13, 14, 40, 42, 59, 142, 145, 347, 365, 369, 385, 388, 399, 403], "ratio": 128, "rc": 6, "re": [5, 6, 9, 353, 367, 368, 369, 386, 388, 389, 395, 396, 404, 405, 406, 408, 413, 414], "reach": 366, "read": [8, 20, 27, 28, 29, 40, 41, 51, 63, 92, 93, 130, 145, 346, 365, 367, 388], "readabl": [11, 368], "readi": [6, 388, 396], "readlin": 142, "readm": [11, 367], "realist": [361, 387, 408, 423], "realli": [388, 396], "reason": [14, 17, 18, 46, 142, 365, 368, 388, 422], "recent": [366, 400, 418], "recip": 367, "recogn": [369, 389, 417], "recognit": 369, "recommend": [5, 7, 11, 19, 142, 365, 366, 368, 369, 388, 395], "recompil": 417, "recreat": [6, 367, 369, 385], "recurs": [6, 344, 368, 369, 381, 388, 417], "red": [128, 336, 363], "redirect": [40, 365], "reduc": [361, 365, 408], "redund": [5, 322, 325, 331, 333, 347, 361, 388], "ref": [322, 325, 331, 333, 388], "ref_dens": 7, "refbottomdepth": [322, 323, 324, 325, 328, 329, 331, 333, 365, 388], "refer": [1, 7, 14, 40, 183, 196, 278, 322, 325, 328, 331, 333, 365, 368, 369, 386, 387, 388, 399, 402, 403, 407, 411, 417], "referenc": [368, 388], "reference_tim": [14, 145], "refin": [145, 147, 148, 150, 155, 158, 159, 160, 219, 222, 224, 225, 229, 230, 236, 239, 242, 258, 260, 265, 269, 284, 286, 291, 296, 306, 309, 311, 313, 316, 405], "refinement_factor": [145, 147, 148, 150, 151, 155, 158, 159, 160, 223, 224, 225, 229, 230, 240, 241, 242, 261, 265, 269, 287, 291, 296, 311, 313, 316, 410, 412], "refinterfac": [322, 325, 331, 333, 388], "reflayerthick": 14, "reflect": [1, 5, 369], "reformat": 368, "reftopdepth": [322, 325, 328, 329, 331, 333, 388], "refzmid": [14, 322, 325, 331, 333, 365, 388], "regard": 2, "regardless": [51, 367], "region": [17, 19, 387, 389, 408], "registri": [136, 346, 381], "registry_process": 381, "regress": [2, 347, 349, 350, 351, 352, 356, 358, 359, 366, 386, 387, 388, 402, 405, 408, 417, 422], "regular": [5, 19, 67, 72, 79, 219, 224, 229, 236, 306, 311, 316, 388, 390, 393, 395, 396, 407, 417], "reinstal": 369, "rel": [1, 2, 5, 9, 17, 18, 42, 43, 52, 57, 59, 118, 119, 124, 125, 155, 160, 163, 164, 166, 176, 187, 212, 344, 362, 365, 367, 368, 369, 375, 381, 386, 388, 402, 407, 408, 411, 417, 423], "relat": [1, 6, 7, 11, 13, 14, 17, 142, 145, 344, 347, 348, 349, 350, 351, 352, 353, 355, 356, 357, 358, 359, 360, 361, 365, 369, 385, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 399, 400, 402, 403, 404, 405, 406, 407, 408, 411, 413, 414, 415, 416, 417, 418], "relationship": [349, 404], "relativevort": 388, "relativevorticitycel": 14, "releas": [6, 142, 368, 369, 387, 395, 400, 417], "release_6": 400, "relev": [3, 7, 9, 145, 349, 350, 351, 352, 355, 357, 358, 359, 388, 390, 391, 392, 393, 394, 395, 396, 416, 417, 421], "reli": [14, 365, 367, 388], "remain": [6, 388, 405, 407, 408, 415], "remap": [1, 10, 19, 356, 387, 405, 407, 411, 416, 421], "remap_fil": 107, "remap_method": [17, 405, 416, 421], "remapp": [107, 108], "rememb": 369, "remot": [11, 42, 369, 387], "remote_filenam": 11, "remov": [1, 5, 14, 24, 54, 64, 115, 347, 348, 353, 355, 356, 357, 367, 369, 388], "remove_step": 367, "renam": [18, 125, 171, 172, 368], "render": [14, 28, 29, 120], "renorm": 399, "repeat": [337, 338, 350], "replac": [1, 5, 7, 9, 14, 26, 27, 28, 29, 30, 31, 32, 33, 48, 51, 55, 62, 93, 120, 131, 132, 142, 145, 155, 160, 163, 166, 168, 179, 180, 189, 195, 214, 231, 251, 275, 367, 368, 388, 389, 417], "repo": [2, 5, 6, 142, 344, 381, 387, 388, 418], "report": 18, "repositori": [142, 363, 387, 388, 417], "repres": [40, 388, 399, 405, 408, 413], "reproduc": 350, "request": [6, 7, 14, 15, 25, 34, 36, 142, 145, 155, 160, 176, 323, 324, 365, 367, 368, 369, 385, 388, 389, 404, 405, 406, 413, 414], "requir": [5, 6, 8, 14, 17, 18, 25, 37, 40, 41, 47, 101, 145, 166, 176, 187, 212, 249, 273, 300, 344, 361, 362, 365, 366, 367, 368, 369, 381, 382, 385, 387, 388, 389, 394, 395, 399, 400, 416, 417, 418, 421, 423], "rerun": [5, 350, 369, 405], "res_str": 388, "resdir": [9, 362], "reset": 6, "resid": [1, 5, 9, 42, 145, 147, 222, 239, 260, 286, 309, 311, 316, 363, 365, 367], "resolut": [1, 9, 13, 14, 17, 71, 74, 78, 79, 83, 102, 106, 109, 145, 147, 148, 152, 154, 158, 159, 160, 162, 166, 169, 185, 186, 187, 190, 193, 194, 196, 198, 201, 209, 212, 216, 219, 236, 248, 249, 252, 260, 267, 269, 278, 286, 291, 293, 296, 306, 309, 311, 316, 337, 338, 347, 348, 349, 350, 351, 352, 353, 355, 356, 357, 358, 359, 360, 361, 362, 363, 365, 367, 389, 397, 399, 402, 403, 404, 405, 406, 407, 408, 410, 411, 412, 413, 414, 415, 416, 421, 423], "resolution_to_subdir": [9, 362], "resolv": [369, 403], "resourc": [11, 14, 37, 40, 44, 47, 96, 97, 98, 156, 161, 167, 177, 188, 213, 250, 266, 274, 292, 300, 347, 348, 355, 356, 357, 365, 367, 388], "resources_fix": 300, "respect": [2, 8, 9, 14, 18, 19, 145, 148, 209, 337, 338, 353, 365, 368, 404, 405, 406, 408, 413, 414, 416, 421], "respons": 369, "rest": [6, 183, 217, 330, 399, 403, 405], "restart": [14, 18, 51, 145, 225, 248, 249, 254, 348, 349, 351, 352, 353, 355, 356, 357, 358, 359, 360, 362, 366, 368, 374, 375, 384, 386, 388, 401, 405, 408, 417, 422], "restart_filenam": 375, "restart_interv": 14, "restart_run": [5, 18, 384, 402, 420], "restart_test": 361, "restartstep": 350, "restarttest": 361, "restingthick": [145, 322, 325, 330, 331, 333, 388], "restor": 415, "restrict": [13, 388, 411, 416], "restructuredtext": 7, "result": [5, 13, 18, 61, 74, 83, 142, 145, 185, 193, 198, 201, 204, 224, 229, 280, 304, 337, 338, 339, 342, 343, 347, 349, 350, 351, 352, 356, 358, 359, 365, 366, 368, 369, 374, 379, 386, 388, 389, 402, 404, 405, 406, 407, 413, 414, 416, 421, 422], "retain": 389, "retriev": [8, 385], "return": [2, 7, 15, 19, 31, 32, 33, 50, 58, 61, 64, 65, 72, 73, 74, 79, 83, 89, 90, 91, 93, 96, 97, 107, 116, 117, 119, 120, 122, 125, 128, 131, 135, 136, 145, 148, 149, 150, 151, 156, 158, 159, 161, 163, 167, 169, 171, 172, 173, 177, 179, 180, 182, 183, 188, 209, 213, 215, 223, 228, 240, 241, 250, 261, 263, 264, 266, 274, 287, 289, 290, 292, 310, 320, 323, 324, 328, 329, 330, 335, 337, 338, 339, 340, 341, 342, 343, 367, 368, 388, 405], "reus": [14, 19, 128, 365, 368, 369, 388, 389, 417], "revers": 413, "revis": [5, 31, 32, 179, 180, 389], "rho": 145, "rho_0": 403, "ri": 228, "right": [15, 141, 142, 143, 145, 336, 367, 369, 388, 389, 399, 402, 405, 417], "rightarrow": 399, "rigid": [346, 414], "rise": 408, "risk": [369, 388, 408], "rk4": [14, 145, 353, 368, 404, 405, 406, 407, 408, 413, 414], "rk4_dt_per_km": [145, 397, 404, 405, 406, 407, 408, 413, 414], "role": 1, "root": [1, 42, 142, 145, 344, 362, 365, 368, 369, 381, 386, 389, 390, 391, 392, 393, 394, 395, 396, 399, 417], "rotat": [359, 400, 404, 405, 406, 409, 410, 412, 413], "rotation_2d": [308, 344, 354, 414], "rotation_vector": 414, "rough": 413, "roughli": [404, 405, 406, 413, 414], "round": [145, 404, 405, 406, 413, 414], "routin": 19, "row": 388, "rpe": [9, 204, 362, 368, 388, 417], "rpe_": 388, "rpe_1_nu_1": [388, 402], "rpe_2_nu_5": [388, 402], "rpe_3_nu_10": 388, "rpe_4_nu_20": 388, "rpe_5_nu_200": 388, "rpe_t": 388, "rst": [7, 14, 388], "rule": 73, "run": [4, 5, 6, 7, 10, 12, 17, 18, 19, 25, 30, 37, 40, 41, 43, 46, 47, 50, 51, 52, 57, 70, 96, 97, 98, 107, 118, 119, 124, 140, 142, 155, 157, 160, 166, 168, 172, 176, 186, 187, 189, 193, 195, 198, 202, 204, 212, 214, 224, 225, 229, 230, 231, 232, 242, 248, 249, 251, 254, 260, 265, 273, 275, 280, 286, 291, 299, 300, 301, 309, 311, 313, 316, 344, 347, 348, 349, 350, 351, 352, 353, 355, 356, 357, 358, 359, 360, 363, 364, 366, 367, 368, 374, 375, 378, 381, 384, 385, 386, 387, 388, 389, 395, 397, 401, 422, 423], "run_as_subprocess": [40, 365], "run_by_default": [52, 367], "run_dur": [145, 397, 404, 405, 406, 407, 408, 413, 414], "run_duration_str": 145, "run_mod": 14, "run_second": [14, 388], "run_single_step": 8, "run_step": 367, "run_task": [8, 365, 367], "run_time_step": [14, 187, 212, 273, 348, 365, 388], "rung": [404, 405, 406, 407, 413, 414], "runmodel": 367, "runtim": [1, 8, 14, 30, 46, 145, 157, 168, 189, 195, 214, 231, 251, 275, 365, 388, 408], "runtime_setup": [14, 17, 37, 47, 347, 348, 353, 355, 356, 357, 367], "sacctmgr": 391, "safe": [6, 14, 365, 369, 402], "safer": 417, "safest": [142, 369], "sai": [388, 395], "salin": [18, 203, 255, 346, 347, 353, 356, 360, 365, 388, 402, 404, 405, 406, 407, 408, 411, 413, 414, 415, 416, 421], "salinity_difference_across_mixed_lay": 415, "salinity_gradient_interior": 415, "salinity_gradient_mixed_lay": 415, "salinity_interior_restoring_r": 415, "salinity_piston_veloc": 415, "salinity_surface_restoring_valu": 415, "salloc": [391, 394, 395, 396], "same": [5, 6, 7, 9, 14, 18, 19, 40, 41, 42, 50, 125, 127, 142, 145, 149, 150, 171, 172, 223, 240, 261, 287, 310, 347, 356, 360, 361, 363, 365, 366, 367, 368, 369, 386, 388, 389, 390, 391, 392, 393, 394, 395, 396, 399, 401, 402, 404, 405, 406, 407, 408, 412, 413, 414, 415, 417, 422, 423], "saniti": [5, 388], "sara": 6, "satisfi": 1, "save": [8, 19, 61, 86, 125, 142, 336, 347, 349, 350, 351, 352, 358, 359, 361, 365, 367, 388, 395, 402, 408], "save_imag": 361, "sbatch": [6, 388, 394, 395, 417], "scalandr": 6, "scalar": 346, "scale": [145, 155, 160, 223, 224, 225, 229, 230, 240, 242, 261, 265, 287, 291, 313, 402, 413, 417], "scancel": 395, "scheme": [349, 351, 353, 356, 358, 359, 397, 404, 408, 411, 413, 415], "scienc": 399, "scientif": 417, "scipi": [337, 338, 339, 389], "scorpio": [6, 369, 395, 417], "scratch": [5, 6, 369, 388, 391, 396, 417], "scratch4": 391, "scratch5": 391, "scrip": [101, 141, 143, 389], "script": [4, 5, 6, 11, 12, 19, 56, 66, 138, 141, 142, 143, 368, 386, 387, 388, 391, 395], "sea": [7, 145, 164, 165, 210, 262, 264, 288, 290, 324, 328, 329, 330, 335, 336, 341, 344, 353, 382, 384, 387, 388, 389, 399, 408, 410, 412, 420, 423], "seafloor": [323, 328, 329, 330, 335, 336, 341, 399], "seafloor_color": 336, "seaic": [3, 10, 20, 42, 362, 365, 384, 386, 387, 417, 418, 421, 423], "seaice_model": 381, "seaice_standalone_framework": 418, "search": [5, 67, 391], "seawat": 7, "sec": 405, "seciton": 145, "second": [1, 9, 13, 14, 15, 91, 145, 150, 151, 182, 187, 212, 223, 240, 241, 261, 287, 300, 337, 338, 350, 360, 365, 368, 397, 402, 404, 405, 406, 408, 413, 415, 420], "section": [2, 3, 5, 6, 7, 9, 12, 14, 17, 19, 25, 31, 33, 79, 126, 127, 130, 131, 132, 142, 145, 176, 179, 256, 282, 320, 322, 325, 331, 333, 344, 349, 350, 351, 352, 358, 359, 360, 361, 362, 365, 366, 368, 369, 381, 385, 388, 389, 390, 391, 392, 393, 394, 395, 396, 399, 403, 404, 405, 406, 407, 408, 411, 413, 414, 415, 416, 417, 421], "sections_yet_another_channel_": 388, "see": [5, 6, 7, 8, 9, 12, 13, 14, 17, 18, 137, 139, 140, 142, 335, 347, 349, 350, 351, 352, 353, 356, 357, 358, 359, 365, 369, 385, 388, 389, 395, 400, 402, 404, 405, 406, 407, 408, 410, 411, 412, 413, 414, 415, 416, 417, 418, 420, 422, 423], "seem": [6, 14, 388, 391, 396], "seen": 388, "segment": [337, 338, 339, 341], "select": [5, 8, 128, 335, 365, 369, 388], "self": [1, 9, 11, 12, 14, 17, 18, 19, 53, 86, 145, 362, 365, 367, 368, 388, 389], "sens": [9, 387, 388], "sensibl": 415, "sensible_heat_flux": 415, "sensit": 407, "separ": [5, 7, 9, 14, 17, 18, 147, 269, 296, 365, 366, 386, 388, 404, 405, 406, 413, 414, 417], "sequenc": [2, 5, 14, 145, 335, 349, 350, 351, 352, 358, 359, 364, 365, 368, 386, 388, 417, 422, 423], "seri": [1, 14, 145, 198, 204, 280, 350, 352, 355, 384, 388, 397, 401, 408], "serial": [1, 46, 365, 367, 387, 388, 417], "serv": [6, 118, 119, 124, 145, 361, 388], "server": [5, 8, 42, 57, 365, 368, 389, 396], "server_base_url": 389, "servic": [65, 390, 391, 393, 395, 396, 417], "session": [369, 388], "set": [4, 5, 6, 7, 8, 9, 10, 11, 14, 17, 18, 19, 26, 27, 28, 29, 30, 40, 42, 48, 49, 55, 59, 63, 79, 99, 100, 102, 103, 104, 105, 106, 108, 109, 110, 111, 116, 118, 119, 120, 122, 124, 125, 126, 127, 128, 137, 138, 139, 140, 141, 142, 143, 157, 168, 174, 189, 192, 195, 200, 214, 218, 220, 231, 237, 251, 275, 295, 300, 307, 322, 325, 326, 327, 331, 332, 333, 334, 337, 338, 344, 346, 347, 348, 349, 350, 351, 352, 353, 355, 356, 357, 358, 359, 360, 361, 364, 365, 367, 368, 382, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 402, 403, 404, 405, 406, 408, 410, 412, 413, 414, 415, 416, 421, 422], "set_model_resourc": 14, "set_ov": [349, 351, 358, 359], "set_shared_config": [9, 17, 367], "set_und": [349, 351, 358, 359], "settl": 388, "setup": [1, 6, 7, 9, 11, 14, 18, 30, 37, 40, 41, 47, 51, 142, 145, 157, 163, 168, 189, 195, 214, 231, 251, 275, 347, 348, 355, 356, 357, 360, 367, 368, 369, 386, 387, 388, 389, 404, 405, 406, 407, 413, 414, 417, 423], "setup_complet": 1, "setup_mesh": [12, 365], "setup_ssh_adjustment_step": 145, "setup_suit": 8, "setup_task": [1, 8, 9], "setupmesh": [12, 365, 367], "sever": [5, 6, 12, 142, 145, 361, 365, 367, 368, 369, 387, 388, 411, 416, 417, 422], "sh": [6, 137, 138, 139, 140, 141, 142, 143, 369, 385, 388, 417], "shallow": [355, 369, 404, 405, 406, 407, 410, 412, 413, 414, 416], "shape": [19, 350, 405], "share": [0, 7, 11, 19, 21, 25, 40, 48, 51, 52, 55, 142, 145, 169, 185, 186, 193, 196, 201, 219, 224, 229, 236, 258, 272, 278, 284, 306, 344, 347, 348, 349, 350, 351, 352, 353, 356, 358, 359, 360, 361, 362, 363, 365, 367, 369, 371, 384, 386, 387, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 402, 404, 405, 406, 413, 414, 415, 416, 417, 421, 423], "shared_clim": 417, "shared_step": 163, "sheet": 19, "shelf": [7, 162, 164, 247, 248, 252, 254, 256, 353, 361, 368, 388, 389, 398, 399, 400, 409], "shell": [385, 387], "shelv": [162, 344, 389, 399, 408], "short": [5, 186, 248, 299, 301, 365, 366, 367, 368, 378, 388, 402, 403, 408], "short_forward": 403, "shortcut": [368, 417], "shorter": [193, 229, 366, 374], "shortwav": 415, "shortwave_heat_flux": 415, "should": [1, 2, 5, 6, 7, 9, 11, 12, 14, 18, 19, 25, 26, 31, 32, 33, 40, 41, 42, 49, 51, 53, 61, 66, 79, 118, 119, 126, 128, 137, 138, 139, 140, 141, 142, 143, 145, 147, 152, 192, 200, 218, 302, 304, 337, 338, 344, 361, 362, 363, 365, 366, 367, 369, 381, 382, 385, 386, 388, 389, 402, 403, 404, 405, 406, 407, 408, 411, 412, 413, 414, 415, 416, 417, 421], "shouldn": [5, 142, 300, 388], "show": [2, 7, 13, 63, 335, 336, 365, 388, 395, 396, 402, 403, 404, 405, 406, 407, 413, 414, 416, 421], "show_patch_edg": [19, 128, 365, 388], "show_progressbar": 63, "shown": [1, 14, 19, 142, 363, 397, 415], "sia": [367, 369], "sia_decomposition_test": 417, "sia_integr": 417, "sia_restart_test": 417, "sia_smoke_test": 417, "side": 7, "signific": [365, 366, 367], "significantli": [13, 399, 407, 412], "similar": [1, 2, 5, 9, 12, 13, 14, 138, 141, 142, 143, 145, 361, 363, 368, 369, 388, 389, 399, 403, 404, 406, 413, 414, 416, 417], "similarli": [5, 8, 141, 143, 341, 344, 365, 367, 369, 395, 417], "simpl": [142, 145, 368, 381, 388, 417], "simpler": [369, 388], "simplest": [369, 387], "simpli": [1, 14, 18, 59, 142, 186, 248, 362, 365, 367, 369, 388, 399, 417, 422], "simplifi": [10, 353, 403, 408], "simplify_local_mach": 6, "simul": [145, 348, 353, 355, 357, 365, 386, 388, 397, 402, 404, 407, 408, 410, 412, 416, 417, 421], "sin": [365, 388, 402, 404, 406, 407, 410, 411, 412, 413], "sinc": [5, 6, 14, 25, 91, 113, 136, 145, 347, 365, 367, 368, 369, 388, 402, 403, 404, 405, 406, 407, 410, 412, 413, 414, 416, 421], "singl": [1, 5, 8, 9, 19, 40, 128, 142, 298, 299, 301, 302, 304, 360, 365, 367, 368, 373, 374, 375, 377, 378, 379, 381, 382, 386, 388, 395, 400, 404, 405, 406, 409, 410, 412, 413, 414, 418, 419], "single_column": [344, 354, 362, 381, 383, 415], "single_column_forc": [360, 415], "single_nod": [142, 389, 390, 391, 392, 393, 394, 395, 396, 417], "sinusoid": [402, 411], "sit": 8, "site": 385, "situat": [1, 17, 31, 32, 33, 369, 388, 417], "size": [2, 13, 19, 73, 74, 83, 127, 128, 145, 178, 181, 183, 336, 361, 388, 389, 402, 405, 407, 410, 411, 412, 415, 416, 421], "skamarock": 405, "skill": 368, "skip": [1, 5, 8, 125, 369, 422], "skip_step": 5, "slate": 365, "slice": [128, 148, 209], "slightli": [14, 369], "slip": [208, 209, 210, 346], "slot": [404, 406, 413, 414], "slotted_cylinders_amplitud": [404, 406, 413, 414], "slotted_cylinders_background": [404, 406, 413, 414], "slotted_cylinders_radiu": [404, 406, 413, 414], "slow": 405, "slurm": [1, 65, 99, 142, 365, 387, 389, 390, 391, 392, 393, 394, 396, 417], "slurm_jobid": 388, "small": [2, 9, 46, 142, 337, 338, 361, 365, 388, 390, 391, 398, 399, 408, 413, 415, 417], "smaller": 417, "smallest": [40, 365, 386, 399, 423], "smoke_test": [361, 367], "smoketest": [361, 367], "smooth": [13, 101, 336], "snippet": [12, 388], "snow": 384, "so": [5, 6, 7, 9, 11, 12, 13, 14, 18, 19, 25, 39, 63, 112, 128, 142, 145, 176, 322, 331, 333, 344, 347, 348, 353, 355, 356, 357, 361, 362, 365, 367, 368, 369, 381, 386, 388, 389, 394, 395, 396, 399, 402, 403, 404, 405, 406, 407, 408, 413, 414, 415, 417, 422], "soft": [390, 392, 395, 417], "softwar": [2, 88, 394, 396, 417], "software_compil": 394, "solar": 415, "solid": [346, 382, 402, 405, 408, 411], "solut": [18, 140, 148, 150, 151, 209, 210, 223, 240, 241, 261, 262, 263, 264, 284, 285, 286, 287, 288, 289, 290, 291, 293, 296, 348, 350, 352, 355, 357, 366, 385, 388, 400, 403, 407, 409, 410], "solv": [346, 385, 399], "solver": [2, 367, 369, 387, 417], "some": [5, 6, 8, 9, 10, 11, 13, 14, 15, 18, 51, 142, 145, 337, 338, 346, 349, 350, 351, 352, 358, 359, 361, 363, 365, 367, 368, 369, 385, 386, 388, 389, 390, 391, 392, 393, 394, 395, 396, 399, 400, 402, 408, 417, 418, 422, 423], "someth": [5, 7, 102, 106, 109, 141, 142, 143, 369, 388], "sometim": [6, 14, 322, 325, 331, 333, 361, 363, 365, 367, 386, 388, 422], "somewher": 365, "soon": [140, 142, 388, 417], "sophist": 14, "sort": [145, 362, 363, 368, 369], "sound": 368, "sourc": [2, 6, 7, 11, 17, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 193, 194, 195, 196, 197, 198, 199, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 365, 369, 372, 373, 374, 375, 376, 377, 378, 379, 380, 388, 389, 395, 396, 417], "source_typ": 101, "southern": [388, 402], "sowisc12to60": [365, 417], "spac": 13, "space": [5, 6, 7, 9, 13, 142, 145, 147, 148, 150, 155, 158, 159, 160, 219, 222, 223, 224, 225, 229, 230, 236, 239, 240, 242, 258, 260, 261, 265, 269, 284, 286, 287, 291, 296, 306, 309, 313, 355, 357, 365, 369, 388, 391, 395, 399, 405, 407, 410, 412, 417], "spack": [4, 5, 137, 139, 140, 385, 387, 388, 390, 391, 392, 393, 394, 395, 396], "spack_for_mache_1": 6, "spack_temp": 6, "spack_test": 6, "spackdir": 142, "span": 415, "spatial": [337, 338, 339, 410, 412, 415], "spawn": 385, "spec": [142, 385, 396], "special": [5, 386, 416], "specif": [7, 9, 14, 53, 142, 145, 344, 361, 362, 363, 365, 381, 382, 387, 388, 389, 391, 395, 402, 408, 411, 416, 417, 421, 422], "specifi": [5, 6, 14, 17, 18, 19, 42, 142, 145, 346, 365, 369, 384, 388, 389, 394, 396, 402, 403, 404, 405, 406, 408, 413, 414, 416, 417, 421], "speed": 422, "sphere": [13, 308, 309, 311, 313, 316, 349, 350, 351, 352, 358, 359, 404, 405, 406, 413, 414], "sphere_radiu": 338, "sphere_transport": [349, 351, 358, 359, 404, 406, 413, 414], "sphere_transport_viz": [404, 406, 413, 414], "sphere_transport_viz_": [349, 351, 358, 359], "sphere_transport_viz_h": [404, 406, 413, 414], "sphere_transport_viz_h_diff": [404, 406, 413, 414], "sphere_transport_viz_trac": [404, 406, 413, 414], "sphere_transport_viz_tracer_diff": [404, 406, 413, 414], "spheretransport": [349, 351, 358, 359], "spheric": [1, 5, 155, 335, 349, 350, 351, 352, 358, 359, 367, 401, 404, 405, 406, 413, 414, 422], "spherical_converg": [145, 352, 367, 404, 405, 406, 413, 414], "spherical_convergence_forward": [404, 406, 413, 414], "spherical_mesh": [13, 79], "sphericalconvergenceforward": [145, 349, 350, 351, 352, 358, 359], "sphinx": 7, "spin": 14, "split": [145, 368], "split_dt_per_km": [145, 397, 408], "split_explicit": [145, 397, 404, 405, 406, 407, 408, 413, 414], "split_explicit_t": [145, 388], "splitext": 368, "spuriou": [388, 402], "spyder": 368, "sqrt": [13, 15, 410], "squash": [353, 399], "squeue": 395, "src": 381, "src_": 17, "src_from_lon_lat": 17, "src_from_mpa": 17, "src_grid_info": 101, "src_mesh_filenam": 101, "sreport": 391, "srun": [142, 365, 385, 388, 389, 390, 391, 392, 393, 394, 395, 396, 417], "ss": [145, 182], "ssh": [7, 19, 145, 166, 322, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 336, 341, 344, 353, 355, 357, 365, 388, 389, 391, 394, 396, 399, 407, 408, 410, 412], "ssh_adjust": [145, 162, 163, 164, 344, 353, 365, 389, 397, 408], "ssh_amplitud": [410, 412], "ssh_color": 336, "ssh_forward": [145, 163, 166, 353], "sshadjust": [145, 353], "sshare": 391, "sshdir": 162, "sshforward": [145, 163, 353], "ssl": 389, "stabil": [215, 403], "stabl": 411, "stack": 385, "stackoverflow": [14, 62, 388], "staf": 2, "stage": [145, 346, 365, 367, 369, 377, 384, 400, 417], "stagger": [13, 83], "stai": [6, 369], "stair": 399, "stamp": 5, "stand": 6, "standalon": [5, 14, 140, 142, 362, 369, 386, 387, 395, 418], "standard": [19, 272, 273, 278, 356, 368, 369, 378, 388, 391, 411, 417], "standard_phys": 384, "standardphys": 384, "star": [145, 330, 333, 334, 353, 388, 402, 403, 404, 405, 406, 408, 410, 411, 412, 413, 414, 415, 416], "start": [6, 7, 8, 14, 15, 91, 121, 128, 142, 336, 346, 347, 352, 361, 366, 367, 368, 387, 391, 395, 396, 400, 418, 420], "start_color": 336, "start_xtim": 91, "startswith": 388, "state": [145, 150, 164, 183, 185, 186, 193, 194, 196, 201, 223, 240, 261, 272, 273, 278, 287, 346, 347, 348, 349, 350, 351, 352, 353, 355, 356, 357, 358, 359, 360, 365, 366, 388, 397, 405, 407], "statement": [2, 12, 365, 386], "static": [73, 74], "stationari": [402, 415], "statist": [15, 389], "stderr": [12, 40, 51, 365, 367], "stdout": [5, 12, 40, 51, 365, 367], "stdout_logg": [51, 367], "steadi": [366, 407], "steam": 136, "steer": 2, "step": [0, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 17, 18, 19, 20, 22, 24, 25, 26, 27, 28, 29, 30, 37, 51, 52, 54, 57, 71, 76, 78, 81, 84, 85, 96, 98, 100, 101, 107, 112, 113, 114, 115, 118, 119, 142, 145, 147, 148, 150, 153, 155, 157, 158, 159, 160, 162, 163, 164, 166, 168, 169, 170, 176, 183, 185, 186, 187, 189, 190, 191, 192, 193, 194, 195, 196, 198, 199, 200, 201, 202, 203, 204, 205, 208, 211, 212, 214, 215, 216, 218, 219, 222, 224, 225, 226, 227, 229, 230, 231, 232, 233, 234, 235, 236, 239, 242, 243, 244, 245, 246, 248, 249, 251, 252, 253, 254, 255, 256, 257, 260, 265, 267, 268, 269, 270, 272, 273, 275, 276, 277, 278, 280, 281, 282, 283, 286, 291, 293, 294, 296, 297, 300, 302, 303, 304, 305, 306, 309, 311, 312, 313, 314, 315, 316, 317, 318, 319, 346, 347, 348, 349, 350, 351, 352, 353, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 366, 367, 368, 375, 376, 377, 379, 380, 384, 386, 387, 389, 396, 399, 422, 423], "step_dir": 11, "step_is_subprocess": [5, 114], "step_path": 57, "step_subdir": [202, 232, 254, 375], "step_symlink": [51, 367], "steps_to_run": [5, 51, 115, 365, 367, 388, 389, 403], "steps_to_skip": 115, "stereograph": 389, "stewart": 399, "stick": 388, "still": [388, 400, 416, 417, 421], "stommel": 403, "storag": 391, "store": [8, 11, 19, 53, 142, 145, 353, 355, 357, 365, 388, 404, 406, 413, 414, 417], "str": [11, 14, 20, 25, 26, 27, 28, 29, 31, 32, 34, 40, 41, 42, 43, 48, 51, 52, 55, 57, 59, 61, 62, 63, 64, 65, 66, 67, 71, 78, 84, 88, 91, 93, 97, 98, 100, 101, 102, 103, 104, 105, 106, 109, 110, 111, 115, 116, 117, 118, 119, 120, 124, 125, 126, 127, 128, 130, 131, 133, 135, 136, 145, 147, 148, 149, 150, 151, 152, 155, 158, 159, 160, 163, 164, 166, 169, 170, 173, 175, 176, 179, 180, 182, 183, 185, 186, 187, 190, 193, 194, 196, 198, 201, 202, 204, 208, 209, 212, 219, 222, 223, 224, 225, 226, 229, 230, 232, 234, 236, 239, 240, 241, 242, 243, 245, 248, 249, 252, 254, 256, 258, 260, 261, 265, 267, 269, 272, 273, 276, 278, 280, 284, 286, 287, 291, 293, 296, 300, 302, 304, 306, 309, 310, 311, 313, 314, 316, 318, 321, 336, 365, 367, 375, 377, 379, 388], "straightforward": 365, "strategi": [12, 390, 391, 392, 393, 394, 396], "stratif": 411, "stream": [5, 7, 8, 10, 25, 28, 30, 35, 49, 130, 131, 135, 136, 168, 181, 189, 192, 195, 200, 214, 218, 231, 251, 275, 344, 346, 347, 348, 349, 350, 351, 352, 353, 355, 356, 357, 358, 359, 360, 361, 362, 365, 367, 368, 381, 384, 389, 416, 421], "stream_replac": 14, "streamfunct": 403, "streams_data": 25, "streams_filenam": 120, "streams_sect": [25, 130, 131], "strenuou": 408, "stress": [348, 388, 403, 415], "stretch": [322, 325, 331, 333, 388, 399], "strftime": [14, 388], "strict": 388, "strictli": [6, 13, 368, 388], "stride": [25, 39, 176], "string": [5, 9, 15, 42, 105, 111, 142, 145, 162, 163, 166, 182, 306, 336, 369], "strip": 368, "structur": [5, 13, 31, 32, 33, 364, 367, 387, 388, 411], "studi": [404, 405, 406, 407, 413, 414], "style": [129, 145, 387, 388], "sub": [121, 388, 408], "subclass": [17, 75, 78, 79, 80, 85, 145, 388], "subdir": [1, 5, 9, 17, 25, 40, 51, 52, 71, 78, 84, 101, 145, 147, 155, 160, 162, 166, 176, 187, 212, 216, 222, 225, 226, 230, 234, 239, 242, 243, 245, 249, 260, 265, 267, 273, 286, 291, 293, 300, 309, 311, 313, 314, 316, 318, 365, 367, 375, 388], "subdirectori": [1, 5, 7, 8, 13, 20, 24, 25, 40, 42, 51, 52, 54, 67, 71, 78, 84, 101, 118, 145, 147, 155, 160, 162, 166, 176, 187, 212, 219, 222, 224, 225, 226, 229, 230, 232, 234, 239, 242, 243, 245, 249, 260, 265, 267, 269, 273, 286, 291, 293, 296, 300, 302, 304, 309, 311, 313, 314, 316, 318, 361, 363, 365, 367, 368, 388, 416, 417, 421, 423], "subdivid": [169, 337, 338, 367], "subdivis": [13, 71, 72, 73, 74, 75], "subdivision_r": [337, 338], "submit": 395, "submodul": [6, 344, 362, 369, 381, 388, 417], "subpackag": 368, "subprocess": [12, 40, 97, 98, 114, 365, 368, 385], "subsequ": [19, 145, 365, 422], "subset": 5, "substanti": 369, "substep": [97, 98], "substitut": 14, "substr": [5, 142], "subtask": 47, "subtitl": [126, 127], "subtleti": 13, "success": [1, 2, 8, 50, 61, 344, 362, 381, 388, 389, 403], "successfulli": [1, 50, 388], "suffici": [40, 365, 411], "suffix": [6, 42, 119, 365], "suggest": [6, 142, 385], "suit": [1, 2, 6, 7, 12, 18, 40, 51, 66, 67, 114, 115, 116, 117, 119, 142, 347, 364, 365, 367, 369, 386, 387, 388, 389, 390, 391, 392, 393, 396, 400, 402], "suite_nam": [5, 8, 115, 117, 119, 124, 417], "suitenam": 417, "sum": 15, "summar": 2, "summari": [3, 391], "super": [9, 14, 17, 18, 145, 362, 365, 367, 368, 388], "superclass": 365, "supercomput": 388, "suppli": [5, 6, 7, 15, 18, 136, 142, 365, 369, 388], "support": [5, 6, 8, 13, 17, 19, 40, 145, 322, 331, 333, 346, 365, 368, 381, 386, 387, 388, 389, 390, 391, 392, 393, 394, 396, 399, 402, 404, 405, 406, 407, 408, 410, 411, 412, 413, 414, 415, 416, 423], "suppos": 388, "sure": [1, 5, 6, 7, 12, 14, 17, 18, 142, 145, 185, 193, 201, 224, 229, 344, 347, 353, 365, 368, 369, 374, 381, 386, 388, 389, 395, 396, 402, 404, 405, 406, 408, 413, 414], "surfac": [7, 145, 164, 165, 210, 262, 264, 288, 290, 324, 328, 329, 330, 335, 336, 341, 344, 346, 353, 360, 384, 388, 389, 399, 402, 408, 410, 411, 412, 415], "surface_salin": [408, 415], "surface_temperatur": [365, 388, 402, 411, 415], "surface_x": 415, "surfacespe": 388, "switch": [6, 388, 389], "sxfyy4k": 142, "symbol": [1, 62, 365], "symlink": [1, 5, 8, 9, 14, 18, 40, 42, 51, 52, 367, 368, 369, 404, 405, 406, 413, 414], "symlog": [19, 126], "symlognorm": 19, "symmetr": 19, "sync": 6, "synchron": [14, 387], "syntax": [2, 145, 388], "system": [4, 5, 6, 25, 37, 40, 47, 97, 98, 99, 137, 139, 140, 142, 166, 176, 187, 212, 249, 273, 300, 365, 385, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 417], "t": [5, 6, 7, 9, 11, 12, 14, 15, 40, 41, 136, 142, 145, 147, 152, 263, 264, 289, 290, 300, 349, 350, 351, 352, 358, 359, 365, 367, 368, 369, 385, 388, 389, 391, 393, 394, 395, 401, 402, 404, 406, 410, 412, 413, 417, 422, 423], "t_": 402, "t_0": 402, "t_b": 402, "t_index": [19, 128, 388], "tab": [5, 417], "tabl": [13, 369, 395, 417], "tag": [14, 387], "take": [5, 6, 7, 11, 13, 14, 59, 142, 145, 151, 241, 361, 365, 366, 367, 369, 388, 404, 405, 406, 413, 422], "taken": [14, 25, 176, 338, 349, 350, 351, 352, 358, 359, 365, 388, 396, 417], "talk": 361, "tangent": 399, "tangenti": 346, "tanh": 399, "tanh_dz": 389, "target": [8, 11, 17, 18, 25, 42, 62, 66, 91, 101, 142, 145, 176, 347, 348, 355, 356, 357, 365, 367, 388, 404, 405, 406, 413, 414], "target_cor": 66, "task": [5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 23, 25, 34, 37, 39, 40, 43, 44, 46, 47, 49, 58, 59, 67, 70, 76, 81, 96, 97, 98, 100, 101, 114, 115, 116, 118, 119, 124, 142, 158, 159, 162, 163, 164, 166, 170, 176, 178, 181, 344, 346, 347, 348, 349, 350, 351, 352, 353, 355, 356, 357, 358, 359, 360, 362, 363, 365, 366, 369, 381, 382, 384, 385, 386, 387, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 410, 412, 413, 414, 415, 418, 422], "task_expr": [5, 67], "task_list": 119, "task_numb": 5, "taskdir": [269, 293, 296], "tasksthat": 397, "tau": [404, 405, 406, 413], "tau_0": 403, "tau_i": 403, "tau_x": 403, "tcsh": 369, "team": [6, 142, 387], "technic": [2, 7], "techniqu": 388, "tell": [5, 6, 142, 369], "temp": 5, "temp_vert": [365, 388], "temperatur": [18, 203, 255, 346, 347, 353, 356, 357, 360, 365, 384, 388, 402, 404, 405, 406, 407, 408, 411, 413, 414, 415, 416, 421], "temperature_differ": [365, 388, 402, 411], "temperature_difference_across_mixed_lay": 415, "temperature_gradient_interior": 415, "temperature_gradient_mixed_lay": 415, "temperature_interior_restoring_r": 415, "temperature_max": 389, "temperature_piston_veloc": 415, "temperature_surface_restoring_valu": 415, "temperaturemax": 389, "templat": [0, 5, 6, 7, 28, 29, 30, 64, 120, 131, 135, 142, 145, 155, 160, 163, 166, 168, 189, 195, 214, 231, 251, 275, 349, 350, 351, 358, 359, 387, 388, 389], "template_replac": [14, 28, 29, 145], "tempor": [410, 412], "temporari": [6, 142], "temporarili": 369, "ten": 408, "tendenc": [145, 405, 412], "term": [40, 386, 388, 403, 410, 412], "termin": [6, 8, 142, 365, 369, 388], "terrain": [325, 399], "test": [5, 7, 8, 9, 19, 51, 52, 57, 66, 96, 97, 98, 117, 125, 142, 146, 147, 153, 155, 158, 159, 160, 162, 164, 184, 186, 187, 193, 194, 196, 197, 198, 199, 201, 206, 207, 208, 215, 219, 220, 221, 222, 224, 225, 226, 229, 230, 234, 235, 236, 237, 238, 239, 242, 243, 245, 246, 247, 248, 257, 258, 259, 260, 262, 265, 267, 268, 269, 270, 271, 272, 273, 276, 277, 278, 279, 281, 282, 283, 284, 285, 286, 288, 291, 293, 294, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 311, 312, 313, 314, 316, 317, 318, 319, 320, 347, 348, 349, 350, 351, 352, 353, 355, 356, 357, 358, 359, 360, 361, 362, 363, 365, 366, 367, 368, 369, 372, 373, 374, 377, 378, 379, 380, 381, 384, 386, 387, 393, 395, 396, 399, 402, 403, 404, 405, 406, 407, 408, 410, 411, 412, 413, 414, 415, 416, 417, 418, 421, 422], "test_20210616": 18, "test_20230202": 6, "test_cas": 282, "test_group": 388, "test_nam": 206, "test_nightly_latest": 18, "test_subdir": 417, "test_suit": [5, 117, 365], "testcas": [217, 244, 282, 388, 389, 402, 408, 415, 417], "testgroup": 388, "tet": 388, "text": [7, 8, 64, 402, 405, 407, 415], "textrm": 407, "than": [1, 5, 6, 8, 9, 11, 13, 14, 40, 42, 47, 59, 142, 145, 166, 187, 212, 249, 273, 300, 347, 365, 366, 368, 369, 385, 388, 399, 402, 403], "thank": 19, "thei": [1, 2, 5, 6, 7, 8, 12, 13, 14, 19, 40, 41, 42, 53, 59, 78, 115, 132, 142, 145, 182, 339, 344, 347, 353, 361, 364, 365, 367, 368, 369, 382, 386, 387, 388, 389, 395, 399, 402, 404, 405, 406, 407, 408, 413, 414, 417], "them": [1, 7, 8, 9, 14, 17, 18, 25, 39, 63, 142, 145, 176, 349, 350, 351, 352, 358, 359, 362, 363, 365, 367, 368, 369, 386, 388, 393, 395, 401, 417, 423], "themselv": [14, 368, 387, 407], "theoret": 368, "theori": 368, "therefor": [365, 386, 388], "theta": [404, 406, 407, 413], "thhe": 413, "thi": [1, 2, 3, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 17, 18, 19, 24, 25, 30, 31, 32, 33, 37, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 57, 59, 66, 70, 72, 75, 76, 79, 80, 81, 85, 97, 98, 100, 101, 107, 112, 115, 125, 137, 138, 139, 140, 141, 142, 143, 145, 147, 153, 157, 158, 159, 162, 163, 164, 166, 168, 176, 185, 186, 187, 189, 191, 192, 193, 195, 196, 197, 199, 200, 201, 205, 206, 211, 212, 214, 218, 219, 222, 224, 225, 227, 229, 230, 231, 235, 236, 239, 244, 246, 248, 249, 251, 253, 257, 258, 260, 268, 269, 270, 272, 273, 275, 277, 278, 279, 281, 282, 283, 284, 286, 294, 296, 297, 299, 300, 301, 302, 303, 304, 305, 306, 309, 311, 312, 315, 316, 317, 319, 335, 337, 338, 341, 344, 347, 348, 349, 350, 351, 353, 355, 356, 357, 358, 359, 361, 362, 363, 365, 366, 367, 368, 369, 380, 381, 385, 386, 387, 388, 389, 391, 394, 395, 396, 399, 402, 403, 404, 405, 406, 407, 408, 410, 411, 412, 413, 414, 415, 416, 417, 421, 422], "thick": [322, 325, 326, 327, 329, 330, 331, 332, 333, 334, 335, 341, 347, 349, 351, 352, 353, 356, 358, 359, 360, 382, 388, 389, 399, 402, 404, 406, 407, 408, 410, 413, 414, 420], "thing": [5, 137, 138, 139, 140, 141, 142, 143, 145, 361, 365, 368, 387, 422], "think": [1, 5, 388], "third": 388, "those": [9, 14, 51, 125, 145, 347, 356, 367, 368, 369, 387, 388, 404, 405, 406, 407, 408, 413, 414, 416, 421, 422], "though": [1, 11, 40, 367, 368, 388], "thought": 388, "thread": [14, 25, 37, 40, 46, 47, 51, 98, 166, 176, 187, 212, 249, 273, 300, 362, 365, 366, 386, 388, 389, 391, 394, 396, 417, 422], "threads_per_cor": [391, 394, 396], "threads_test": 18, "three": [145, 395, 404, 406, 407, 408, 413, 414, 423], "threshold": [18, 145, 358, 404, 405, 406, 407, 410, 412, 413, 414], "through": [1, 2, 19, 119, 145, 256, 282, 368, 369, 382, 388, 411], "throughout": [360, 402, 411, 415], "thu": [1, 2, 7, 14, 369, 388, 404, 405, 406, 413, 414], "thumb": 73, "ti": 388, "tick": [19, 126, 405], "tidal": [248, 249, 353, 408], "tidal_forc": [249, 346], "tide": 388, "tidx": 335, "time": [1, 6, 7, 8, 14, 18, 19, 40, 51, 65, 91, 125, 128, 142, 147, 148, 150, 151, 155, 157, 158, 159, 160, 166, 182, 183, 187, 196, 212, 215, 219, 222, 223, 224, 225, 229, 230, 236, 239, 240, 241, 242, 258, 260, 261, 263, 264, 265, 269, 273, 278, 284, 286, 287, 289, 290, 291, 296, 300, 306, 309, 313, 335, 346, 347, 348, 349, 350, 351, 352, 353, 355, 356, 357, 358, 359, 361, 365, 366, 367, 368, 369, 384, 385, 386, 389, 391, 394, 396, 397, 417, 422], "time_index": [15, 91], "time_index_from_xtim": 15, "time_integr": [14, 145, 388, 397, 404, 405, 406, 407, 408, 413, 414], "time_manag": [14, 145, 388], "time_slic": 361, "time_str": 182, "timelin": 2, "timer": [5, 18, 40, 365, 366, 368], "timeseri": 420, "timestep": 145, "tip": [7, 369], "titl": [19, 126, 127, 128, 145, 147, 152, 336], "tmp": [6, 142], "tmpdir": [6, 142], "tn": 391, "toctre": 7, "todai": [5, 57], "togeth": [14, 18, 142, 145, 361, 386, 388, 422], "toler": 125, "too": [13, 14, 25, 37, 40, 47, 97, 98, 176, 361, 365, 368, 388], "tool": [5, 6, 9, 12, 14, 17, 344, 362, 365, 369, 381, 387, 388, 389], "top": [5, 19, 128, 322, 323, 324, 325, 328, 329, 330, 331, 333, 336, 346, 353, 363, 388, 399, 411], "topographi": [11, 328, 361, 365, 388, 399, 402, 403, 404, 405, 406, 407, 408, 410, 411, 412, 413, 414, 415, 416, 423], "total": [96, 365, 366, 368, 388, 389, 391, 417], "total_area": 15, "touch": [142, 337, 338, 369], "tour": 6, "toward": 415, "tracer": [14, 19, 219, 228, 301, 302, 304, 306, 347, 349, 350, 351, 352, 355, 356, 357, 358, 359, 360, 388, 400, 405, 406, 409, 410, 412, 413, 414, 415], "tracer1": [19, 145, 233, 404, 406, 413, 414], "tracer2": [404, 406, 413, 414], "tracer3": [404, 406, 413, 414], "track": [9, 25, 365, 367, 369], "transect": [128, 145, 335, 336, 389], "transect_color": 128, "transect_end": 128, "transect_i": 128, "transect_linewidth": 128, "transect_markers": 128, "transect_start": 128, "transect_x": 128, "transectindicesonhoriznod": [337, 338], "transectvalu": [337, 338], "transectweightsonhoriznod": [337, 338], "transectz": 341, "transfer": 365, "transient": 408, "transit": [399, 404, 405, 406, 413, 414], "transition_level": 399, "translat": [5, 31, 32, 33], "transport": [308, 309, 311, 313, 316, 349, 351, 358, 359, 404, 405, 406, 413, 414], "transpos": [365, 388], "treat": [14, 366, 368], "tree": [1, 7, 120, 122, 136, 337, 338, 339, 367, 418], "tri": [145, 368], "triangl": [337, 338, 339, 340, 341], "triangles_filenam": 13, "tricellindic": 340, "trick": [12, 365], "tricki": 388, "trilino": [6, 369], "triplot": 349, "troubl": [369, 388], "troubleshoot": 387, "true": [1, 6, 7, 9, 13, 14, 18, 19, 25, 52, 61, 62, 63, 90, 125, 126, 127, 128, 132, 137, 138, 139, 140, 141, 142, 143, 145, 176, 249, 301, 336, 338, 346, 361, 365, 388, 389, 390, 391, 392, 394, 395, 396, 402, 417, 423], "truncat": [14, 145, 388], "try": [6, 14, 62, 142, 368, 369, 385, 388, 389, 391, 396, 417], "tupl": [9, 127, 128, 336], "turn": [40, 58, 362, 365, 385, 388, 412, 415], "turquois": [70, 391], "tutori": [368, 369], "twice": [6, 337, 338, 388], "two": [1, 5, 6, 10, 18, 125, 145, 193, 203, 229, 233, 255, 337, 338, 347, 348, 349, 350, 353, 356, 360, 361, 362, 365, 366, 368, 369, 374, 376, 388, 402, 404, 405, 406, 408, 410, 411, 412, 413, 414, 420], "txt": [6, 8, 124, 366, 385], "type": [7, 14, 17, 18, 19, 26, 103, 110, 136, 142, 145, 147, 148, 155, 158, 159, 160, 209, 219, 224, 225, 228, 229, 230, 236, 242, 265, 269, 291, 296, 299, 301, 306, 309, 313, 336, 349, 350, 351, 358, 359, 361, 365, 367, 368, 369, 381, 385, 386, 388, 389, 402, 403, 404, 405, 406, 407, 408, 410, 411, 412, 413, 414, 415, 416, 422], "typic": [5, 6, 7, 9, 11, 13, 14, 17, 18, 19, 40, 52, 115, 142, 145, 336, 337, 338, 361, 362, 363, 365, 367, 369, 386, 388, 389, 395, 397, 399, 415, 417, 423], "u": [6, 11, 365, 388, 395, 396, 404, 406, 407, 410, 412, 413], "u1": 396, "u_0": [405, 406, 407, 413], "ubuntu": 142, "ubuntu20": 142, "ubuntu22": 142, "ugetvbp": 142, "unaffect": 6, "uncach": 57, "uncoupl": 387, "under": [2, 17, 40, 41, 142, 145, 346, 365, 366, 369, 387, 399, 408, 423], "under_color": [349, 351, 358, 359], "underli": 5, "underscor": [7, 388], "understand": [368, 389], "undesir": 368, "unexpect": [369, 386, 388], "unexpectedli": 407, "unifi": [6, 142, 369, 396], "uniform": [78, 83, 160, 219, 224, 229, 347, 349, 350, 351, 352, 353, 355, 356, 357, 358, 359, 361, 367, 388, 389, 402, 403, 404, 405, 406, 407, 408, 410, 411, 412, 413, 414, 415, 416, 421], "uniqu": [6, 7, 14, 142, 367, 388], "unit": [40, 102, 106, 109, 365, 386, 402, 423], "univers": 362, "unix": [368, 387], "unknown": [5, 142, 368, 395], "unless": [62, 115, 369], "unlik": [14, 388], "unneed": 369, "unpickl": [117, 365], "unset": 385, "unstretch": 330, "unsupport": 369, "until": [40, 41, 365, 367, 417], "unus": 369, "unusu": 388, "unwant": 365, "up": [4, 5, 6, 7, 8, 9, 10, 11, 14, 17, 26, 27, 28, 29, 40, 49, 51, 64, 85, 100, 112, 113, 116, 118, 119, 124, 125, 137, 138, 139, 140, 141, 142, 143, 145, 174, 192, 200, 218, 295, 337, 338, 339, 341, 344, 347, 348, 349, 350, 351, 352, 353, 355, 356, 357, 358, 359, 360, 364, 365, 367, 368, 381, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 396, 397, 403, 404, 405, 406, 408, 413, 414, 416, 421, 422, 423], "updat": [5, 7, 8, 11, 25, 27, 29, 36, 37, 46, 47, 63, 121, 140, 142, 145, 178, 300, 326, 327, 332, 334, 344, 347, 348, 349, 350, 351, 355, 356, 357, 358, 359, 365, 381, 385, 387, 388, 417], "update_cach": 8, "update_jigsaw": 369, "update_layer_thick": 145, "update_namelist_pio": 14, "update_permiss": 11, "update_pio": [14, 25, 176], "update_spack": [6, 142, 369], "upper": 128, "uppersurfac": 388, "ureconstructi": 388, "ureconstructx": 388, "url": [11, 42, 61, 365, 385, 389], "us": [5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 25, 30, 31, 32, 33, 37, 40, 41, 42, 46, 47, 51, 52, 57, 59, 61, 66, 79, 88, 90, 94, 97, 98, 101, 107, 114, 125, 126, 127, 128, 129, 130, 131, 136, 137, 141, 142, 143, 145, 147, 148, 149, 150, 152, 155, 156, 160, 161, 163, 166, 167, 168, 176, 177, 178, 179, 180, 181, 182, 187, 188, 189, 195, 202, 209, 212, 213, 214, 223, 231, 232, 236, 240, 249, 250, 251, 256, 261, 266, 273, 274, 275, 284, 285, 287, 292, 300, 306, 310, 311, 316, 320, 322, 323, 324, 325, 326, 327, 331, 332, 333, 334, 335, 336, 337, 338, 340, 341, 344, 346, 347, 348, 349, 350, 351, 352, 353, 355, 356, 357, 358, 359, 360, 361, 362, 363, 365, 367, 368, 369, 375, 381, 382, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 399, 401, 402, 403, 404, 405, 406, 407, 408, 410, 411, 412, 413, 414, 415, 416, 417, 420, 422, 423], "usabl": 5, "usag": [5, 15, 19, 367, 389, 391, 396], "use_dist": [365, 388, 402, 411], "use_e3sm_hdf5_netcdf": [142, 390, 391, 392, 393, 394, 395, 396], "use_mplstyl": 19, "user": [5, 6, 7, 8, 9, 11, 14, 17, 40, 51, 52, 59, 66, 100, 142, 145, 154, 347, 348, 349, 350, 351, 352, 353, 355, 356, 357, 358, 359, 360, 365, 366, 367, 385, 386, 388, 390, 391, 392, 393, 394, 395, 396, 400, 402, 403, 404, 405, 406, 407, 408, 413, 414, 418], "usernam": [385, 388, 391, 394, 396], "users_guid": 388, "usr": [70, 142, 391, 417], "usual": [365, 367, 369, 388, 417], "util": [6, 368, 369, 412], "v": [5, 369, 388, 404, 406, 407, 410, 412, 413, 422], "v0": 6, "v1": [14, 399], "v2": [14, 389, 399], "v3": 399, "vadv_method": [272, 273, 278], "valid": [5, 10, 19, 25, 40, 43, 50, 90, 128, 145, 155, 160, 248, 322, 323, 324, 325, 328, 329, 330, 331, 333, 341, 348, 355, 357, 360, 365, 368, 387, 399, 402, 408], "validate_var": [18, 40, 43, 145, 155, 160, 300, 365], "validcel": 341, "validnod": 341, "valu": [5, 7, 9, 14, 15, 18, 19, 26, 31, 32, 33, 91, 125, 126, 128, 132, 145, 147, 155, 160, 179, 180, 196, 228, 269, 278, 296, 336, 337, 338, 341, 347, 356, 358, 362, 365, 367, 368, 387, 388, 389, 399, 402, 403, 404, 405, 406, 407, 411, 413, 414, 415], "valueerror": [18, 368], "var": [14, 121, 381, 388], "var_arrai": [14, 381], "var_struct": [14, 381], "vari": [346, 349, 350, 351, 352, 358, 359, 365, 385, 395, 399, 405, 407, 408], "variabl": [2, 5, 11, 13, 19, 20, 25, 40, 43, 50, 51, 59, 71, 78, 84, 88, 101, 102, 106, 109, 125, 128, 130, 131, 136, 142, 145, 147, 148, 149, 150, 151, 152, 155, 160, 162, 166, 170, 171, 172, 173, 174, 175, 176, 183, 187, 190, 196, 198, 202, 209, 212, 216, 219, 223, 225, 232, 234, 236, 240, 241, 245, 249, 252, 254, 260, 261, 262, 265, 267, 269, 273, 278, 280, 287, 288, 291, 293, 295, 296, 300, 306, 309, 310, 311, 316, 318, 322, 325, 326, 327, 331, 332, 333, 334, 340, 341, 346, 353, 360, 365, 368, 369, 375, 376, 381, 385, 388, 395, 397, 400, 402, 408, 416, 417, 418, 421], "variable_nam": [148, 152, 209], "variable_resolut": [361, 365, 417], "variant": [57, 221, 238, 306, 308, 347, 353, 356, 361, 366, 368, 369, 388, 395, 399, 402, 403, 404, 405, 406, 411, 413, 414], "variat": [402, 407], "varieti": 19, "variou": [142, 298, 365, 369, 373], "ve": [137, 138, 139, 140, 141, 143, 369, 388], "vector": 414, "vel_amp": [404, 406, 413], "vel_pd": [404, 405, 406, 413, 414], "vel_period": 407, "veldifftendencyen": 145, "velhyperdifftendencyen": 145, "velo_solv": 367, "veloc": [263, 289, 346, 347, 352, 353, 355, 356, 357, 367, 388, 403, 404, 405, 406, 407, 408, 413, 414, 415, 417], "verbos": [1, 5, 6, 67, 69, 142, 365, 388, 422], "veri": [145, 353, 362, 365, 368, 369, 381, 388, 407, 408, 415], "verifi": [10, 350, 366, 389, 403, 405], "verison": 344, "versa": 368, "version": [5, 6, 16, 35, 59, 100, 125, 142, 344, 347, 356, 361, 362, 363, 365, 367, 368, 369, 381, 387, 388, 389, 395, 396, 400, 402, 405, 408, 410, 412, 417, 418], "vert": 335, "vert_dim": 128, "vert_level": [388, 389, 399, 402, 403, 404, 405, 406, 408, 410, 411, 412, 413, 414, 415, 416], "vertcoordmovementweight": [322, 325, 331, 333, 388], "vertex": [103, 110, 209], "vertic": [7, 15, 19, 89, 128, 150, 151, 223, 240, 241, 261, 272, 273, 278, 287, 299, 335, 336, 337, 338, 340, 341, 346, 347, 348, 349, 350, 351, 352, 353, 355, 356, 357, 358, 359, 360, 365, 389, 398, 400], "vertical_grid": [145, 320, 322, 325, 331, 333, 361, 365, 388, 389, 399, 402, 403, 404, 405, 406, 408, 410, 411, 412, 413, 414, 415, 416], "vi": 388, "via": [2, 5, 6, 14, 365, 369, 395, 403], "view": [4, 355, 357, 369, 410, 412], "vim": [368, 388], "violat": 368, "viridi": [19, 349, 350, 351, 358, 359, 388, 404, 405, 406, 413, 414], "virtu": 415, "visa": 368, "viscos": [9, 14, 187, 196, 198, 273, 278, 280, 347, 348, 356, 365, 368, 388, 402, 403, 411, 412], "visibl": 128, "visoc": 403, "visual": [1, 10, 13, 17, 248, 256, 269, 282, 296, 349, 350, 351, 352, 353, 355, 357, 358, 359, 361, 365, 367, 386, 387, 404, 405, 406, 407, 408, 410, 412, 413, 414, 416, 421], "viz": [1, 5, 19, 145, 219, 236, 248, 306, 365, 367, 404, 405, 406, 407, 413, 414], "viz_map": 367, "vizmap": [17, 219, 236, 248, 306, 367], "vlr": [272, 273, 278, 356, 411], "vmax": [19, 128, 336, 388, 405], "vmin": [19, 128, 336, 388, 405], "volum": 384, "vpn": 385, "vtk": 13, "vtk_dir": 13, "vtk_lat_lon": 13, "w": [5, 6, 369, 386, 388, 417], "wa": [6, 8, 50, 61, 125, 142, 365, 367, 368, 369, 385, 386, 388, 389, 399, 408, 417], "wai": [1, 5, 7, 13, 14, 40, 75, 80, 142, 145, 365, 367, 368, 369, 385, 387, 388, 395, 399, 407, 415], "wall": [65, 417], "wall_tim": [65, 417], "want": [2, 5, 6, 11, 14, 17, 18, 53, 90, 142, 145, 365, 367, 369, 385, 388, 389, 395, 396, 415, 417, 423], "warmer": 402, "warn": 6, "warrant": 416, "wasn": 388, "wast": 14, "water": [19, 352, 355, 388, 399, 402, 404, 405, 406, 407, 408, 410, 411, 412, 413, 414, 415, 416], "wave": [206, 207, 258, 259, 260, 262, 265, 267, 269, 271, 272, 273, 276, 278, 280, 282, 288, 355, 356, 365, 367, 388, 400, 402, 409, 412], "wavelength": [410, 412], "wc": 389, "wc14": 417, "we": [1, 2, 5, 7, 9, 11, 13, 14, 17, 18, 19, 90, 140, 142, 145, 149, 150, 151, 181, 223, 240, 241, 261, 287, 310, 347, 353, 356, 360, 361, 364, 365, 367, 368, 369, 384, 387, 388, 389, 391, 393, 394, 395, 396, 399, 403, 405, 407, 408, 417, 422], "web": [11, 365, 389], "websit": [400, 418], "weight": [14, 15, 17, 88, 164, 322, 325, 331, 333, 337, 338, 340, 341, 388, 399], "weight_field": [14, 88], "welcom": [416, 421], "well": [2, 6, 9, 12, 13, 19, 142, 145, 328, 340, 347, 348, 349, 350, 351, 352, 355, 356, 357, 358, 359, 360, 365, 369, 386, 388, 389, 405, 417, 423], "were": [1, 50, 63, 142, 300, 342, 343, 365, 368, 386, 388, 389, 393, 399], "western": 403, "wet": 366, "what": [1, 2, 6, 11, 13, 17, 19, 142, 306, 367, 368, 388, 396, 416, 417, 421], "whatev": [342, 343, 369, 417], "when": [1, 5, 6, 12, 14, 17, 18, 26, 27, 28, 29, 31, 32, 33, 40, 41, 46, 51, 52, 59, 61, 62, 67, 114, 125, 142, 145, 330, 337, 338, 347, 348, 349, 350, 351, 352, 355, 356, 357, 358, 359, 360, 361, 365, 367, 368, 369, 387, 388, 390, 391, 392, 393, 394, 396, 399, 402, 403, 405, 407, 415, 417, 423], "whenev": [11, 365, 388], "where": [1, 5, 7, 9, 14, 18, 40, 42, 51, 59, 61, 63, 66, 100, 116, 119, 124, 126, 128, 142, 145, 166, 322, 325, 328, 331, 333, 337, 338, 344, 353, 362, 364, 365, 367, 369, 381, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 399, 402, 403, 404, 405, 406, 407, 408, 413, 415, 416, 417, 421, 422], "wherea": [5, 12, 365, 386, 388, 408, 423], "whether": [5, 8, 13, 14, 17, 19, 25, 30, 40, 42, 50, 51, 52, 57, 61, 62, 63, 67, 114, 115, 119, 124, 125, 126, 127, 128, 132, 142, 145, 157, 158, 159, 168, 169, 176, 189, 195, 214, 222, 225, 230, 231, 236, 239, 251, 258, 260, 275, 284, 286, 291, 300, 302, 304, 306, 311, 316, 335, 336, 338, 355, 357, 361, 365, 367, 369, 385, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 399, 402, 403, 404, 405, 406, 408, 410, 411, 412, 413, 414, 415, 416, 417, 421], "which": [1, 2, 5, 6, 7, 8, 9, 11, 13, 14, 15, 17, 18, 19, 25, 28, 29, 31, 32, 33, 40, 42, 51, 58, 89, 101, 103, 110, 118, 119, 120, 124, 128, 131, 142, 145, 147, 148, 149, 150, 151, 152, 154, 158, 159, 163, 164, 166, 176, 185, 186, 187, 190, 193, 194, 196, 198, 201, 202, 204, 208, 209, 212, 223, 224, 225, 229, 230, 232, 240, 241, 242, 248, 249, 252, 254, 256, 261, 263, 264, 265, 269, 272, 273, 276, 278, 280, 287, 289, 290, 291, 296, 300, 306, 310, 313, 336, 337, 338, 340, 341, 344, 346, 349, 351, 358, 359, 361, 362, 364, 365, 367, 369, 374, 375, 377, 379, 387, 388, 389, 391, 395, 399, 402, 403, 404, 405, 406, 407, 408, 410, 412, 413, 414, 415, 416, 417], "whichev": [6, 344, 369, 381, 399], "while": [10, 17, 19, 346, 347, 365, 385, 388, 405, 408], "whitespac": 64, "who": [7, 369, 388, 389, 396], "whole": [8, 51, 183, 361, 367, 368, 388, 408, 417], "whose": [5, 48, 55, 89, 365], "why": 368, "wide": [385, 408], "width": [13, 71, 72, 73, 78, 79, 80, 86, 128, 336, 388, 402, 403, 408, 411], "wiki": 417, "wildcard": 368, "william": 407, "williamson": [405, 407], "wind": [340, 348, 403, 407, 415], "wind_stress_meridion": 415, "wind_stress_zon": 415, "window": 8, "wish": [5, 7, 14, 52, 337, 338, 365, 369, 388, 417], "with_albani": [6, 369], "with_ice_shelf_cav": 365, "with_netlib_lapack": 369, "with_petsc": [6, 369], "with_restart": [353, 408], "with_viz": [1, 349, 350, 351, 352, 358, 359, 367, 401, 404, 405, 406, 407, 413, 414], "with_viz_dir": 367, "within": [1, 5, 7, 9, 10, 11, 12, 14, 20, 37, 40, 42, 43, 47, 51, 52, 59, 116, 124, 125, 142, 145, 337, 338, 340, 347, 355, 357, 361, 362, 363, 365, 366, 367, 369, 382, 386, 388, 389, 391, 395, 415, 416, 421], "without": [5, 42, 145, 336, 365, 368, 369, 387, 388, 389, 393, 395, 405, 410, 412, 416, 417], "wno": 369, "woa": 17, "woa23_decav_0": 17, "won": [12, 368, 388, 389], "word": 365, "work": [2, 5, 6, 8, 9, 11, 12, 14, 15, 16, 17, 40, 42, 43, 45, 48, 49, 51, 52, 55, 57, 59, 66, 100, 114, 116, 119, 124, 140, 142, 155, 160, 163, 164, 166, 176, 187, 192, 200, 211, 212, 218, 219, 224, 229, 234, 245, 318, 363, 364, 365, 366, 367, 368, 369, 385, 386, 388, 389, 395, 404, 405, 406, 407, 413, 414, 415, 417, 423], "work_dir": [5, 11, 40, 51, 66, 100, 118, 119, 124, 125, 365, 367, 388], "work_dir_target": [42, 365], "workdir": [369, 417], "workflow": [17, 365, 369], "workload": 395, "workstat": [142, 369], "worktre": [6, 387, 388], "world": 394, "worri": 14, "worth": [368, 388], "would": [1, 2, 5, 9, 11, 14, 18, 19, 25, 37, 40, 47, 52, 97, 98, 101, 142, 145, 166, 176, 187, 212, 249, 273, 300, 347, 363, 365, 367, 368, 369, 385, 387, 388, 395, 399, 403, 417], "wrapper": 19, "writabl": 11, "write": [8, 11, 12, 13, 16, 19, 63, 112, 130, 145, 170, 175, 321, 336, 365, 367, 369, 384, 388], "write_model_dataset": 145, "write_netcdf": [365, 388], "written": [7, 8, 9, 40, 51, 59, 66, 126, 127, 128, 155, 160, 365, 367, 388, 420], "wtrw": 391, "x": [13, 72, 79, 80, 83, 86, 105, 111, 128, 145, 183, 210, 262, 288, 335, 337, 348, 353, 365, 388, 402, 403, 408, 410, 412, 415], "x86_64": [6, 142], "x86_64_v4": 142, "x_cell": [365, 388], "x_difference_across_mixed_lay": 415, "x_gradient_interior": 415, "x_gradient_mixed_lay": 415, "x_max": [365, 388], "x_min": [365, 388], "x_perturb_max": [365, 388], "x_perturb_min": [365, 388], "x_transect": 337, "x_var": [105, 111], "xarrai": [7, 15, 17, 19, 89, 90, 125, 127, 128, 145, 150, 151, 171, 172, 173, 175, 209, 210, 223, 240, 241, 261, 287, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 365, 388], "xcartnod": 338, "xcarttransect": 338, "xcell": [262, 288, 365, 388], "xedg": [262, 288, 365, 388], "xml": [6, 14, 120, 122, 123, 136, 381], "xnode": [337, 340], "xr": [15, 19, 262, 263, 264, 288, 289, 290, 365, 388], "xtime": [14, 15, 91, 145, 388], "xtransect": 337, "xvertex": [365, 388], "xylar": [1, 6, 18, 142, 388, 389, 395], "y": [13, 14, 83, 105, 111, 128, 145, 210, 262, 288, 335, 337, 347, 348, 353, 355, 356, 357, 365, 388, 396, 402, 403, 408, 410, 411, 412], "y0_land_ice_height_above_float": 408, "y1": 408, "y1_water_column_thick": 408, "y2": 408, "y2_water_column_thick": 408, "y3": 408, "y_": 402, "y_cell": [365, 388], "y_max": [365, 388], "y_mid": [365, 388], "y_min": [365, 388], "y_offset": [365, 388], "y_transect": 337, "y_var": [105, 111], "yakl": 369, "yaml": [5, 9, 10, 25, 26, 29, 30, 31, 32, 33, 142, 155, 160, 163, 166, 168, 176, 179, 180, 181, 189, 195, 214, 231, 251, 275, 347, 348, 349, 350, 351, 352, 353, 355, 356, 357, 358, 359, 360, 361, 362, 365, 367, 387, 388, 391, 394, 396], "yaml_filenam": [145, 155, 160, 163, 166], "yaml_replac": [163, 166], "ycartnod": 338, "ycarttransect": 338, "ycell": [262, 288, 365, 388], "year": [348, 384, 400, 403, 420], "yedg": [262, 288], "yellow": 391, "yet": [6, 140, 142, 365, 368, 369, 388, 394], "yet_another_channel": 388, "yet_another_channel_test_cas": 388, "yetanotherchannel": 388, "yetanotherchanneltestcas": 388, "yml": 14, "ynode": [337, 340], "you": [2, 4, 5, 6, 7, 9, 11, 12, 13, 14, 17, 18, 19, 137, 138, 139, 140, 141, 142, 143, 145, 344, 362, 365, 367, 368, 369, 381, 385, 386, 388, 389, 390, 391, 392, 393, 394, 395, 396, 404, 405, 406, 407, 408, 413, 414, 417, 422, 423], "your": [2, 4, 5, 6, 11, 142, 344, 368, 369, 381, 385, 388, 389, 390, 391, 395, 396, 404, 405, 406, 413, 414, 417], "your_new_branch": 369, "yourself": [14, 388, 395], "ytransect": 337, "yymmdd": [57, 389], "yyyi": 2, "z": [145, 147, 148, 150, 151, 152, 209, 223, 240, 241, 261, 287, 323, 324, 328, 329, 330, 331, 332, 333, 334, 353, 388, 402, 403, 404, 405, 406, 408, 410, 411, 412, 413, 414, 415, 416], "z_": [399, 415], "z_0": 399, "z_1": 399, "z_2": 399, "z_b": 402, "z_index": 128, "z_k": 399, "zcartnod": 338, "zcarttransect": 338, "zcellboundari": 341, "zero": [18, 323, 324, 328, 329, 330, 335, 337, 338, 341, 346, 347, 353, 356, 360, 388, 404, 405, 406, 408, 413, 414, 415], "zeros_lik": [365, 388], "zidx": [145, 147, 148, 150, 151, 152, 209, 223, 240, 241, 261, 287], "zinterfaceseg": 341, "ziso": [399, 423], "zlib": 142, "zmid": [145, 322, 325, 331, 333, 388], "znode": 340, "zonal": [402, 403, 407, 411, 415], "zppy": 6, "zseafloor": 341, "zstash": 396, "ztransectnod": 341}, "titles": ["Design Documents", "Shared steps", "Template", "API reference", "Building the Documentation", "Command-line interface", "Deploying a new spack environment", "Documentation", "Modules for polaris commands", "Config files", "Framework", "IO", "Logging", "Mesh", "Model", "MPAS", "Provenance", "Remapping", "Validation", "Visualization", "polaris.Component", "polaris.Component.add_config", "polaris.Component.add_step", "polaris.Component.add_task", "polaris.Component.remove_step", "polaris.ModelStep", "polaris.ModelStep.add_model_config_options", "polaris.ModelStep.add_namelist_file", "polaris.ModelStep.add_streams_file", "polaris.ModelStep.add_yaml_file", "polaris.ModelStep.dynamic_model_config", "polaris.ModelStep.map_yaml_configs", "polaris.ModelStep.map_yaml_options", "polaris.ModelStep.map_yaml_to_namelist", "polaris.ModelStep.partition", "polaris.ModelStep.process_inputs_and_outputs", "polaris.ModelStep.runtime_setup", "polaris.ModelStep.set_model_resources", "polaris.ModelStep.setup", "polaris.ModelStep.update_namelist_pio", "polaris.Step", "polaris.Step.add_dependency", "polaris.Step.add_input_file", "polaris.Step.add_output_file", "polaris.Step.constrain_resources", "polaris.Step.run", "polaris.Step.runtime_setup", "polaris.Step.set_resources", "polaris.Step.set_shared_config", "polaris.Step.setup", "polaris.Step.validate_baselines", "polaris.Task", "polaris.Task.add_step", "polaris.Task.configure", "polaris.Task.remove_step", "polaris.Task.set_shared_config", "polaris.__main__.main", "polaris.cache.update_cache", "polaris.components.get_components", "polaris.config.PolarisConfigParser", "polaris.config.PolarisConfigParser.setup", "polaris.io.download", "polaris.io.symlink", "polaris.io.update_permissions", "polaris.job.clean_up_whitespace", "polaris.job.get_slurm_options", "polaris.job.write_job_script", "polaris.list.list_cases", "polaris.list.list_machines", "polaris.list.list_suites", "polaris.logging.log_method_call", "polaris.mesh.IcosahedralMeshStep", "polaris.mesh.IcosahedralMeshStep.build_subdivisions_cell_width_lat_lon", "polaris.mesh.IcosahedralMeshStep.get_cell_width", "polaris.mesh.IcosahedralMeshStep.get_subdivisions", "polaris.mesh.IcosahedralMeshStep.make_jigsaw_mesh", "polaris.mesh.IcosahedralMeshStep.run", "polaris.mesh.IcosahedralMeshStep.setup", "polaris.mesh.QuasiUniformSphericalMeshStep", "polaris.mesh.QuasiUniformSphericalMeshStep.build_cell_width_lat_lon", "polaris.mesh.QuasiUniformSphericalMeshStep.make_jigsaw_mesh", "polaris.mesh.QuasiUniformSphericalMeshStep.run", "polaris.mesh.QuasiUniformSphericalMeshStep.setup", "polaris.mesh.planar.compute_planar_hex_nx_ny", "polaris.mesh.spherical.SphericalBaseStep", "polaris.mesh.spherical.SphericalBaseStep.run", "polaris.mesh.spherical.SphericalBaseStep.save_and_plot_cell_width", "polaris.mesh.spherical.SphericalBaseStep.setup", "polaris.model_step.make_graph_file", "polaris.mpas.area_for_field", "polaris.mpas.cell_mask_to_edge_mask", "polaris.mpas.time_index_from_xtime", "polaris.namelist.ingest", "polaris.namelist.parse_replacements", "polaris.namelist.replace", "polaris.namelist.write", "polaris.parallel.get_available_parallel_resources", "polaris.parallel.get_parallel_command", "polaris.parallel.run_command", "polaris.parallel.set_cores_per_node", "polaris.provenance.write", "polaris.remap.MappingFileStep", "polaris.remap.MappingFileStep.dst_from_lon_lat", "polaris.remap.MappingFileStep.dst_from_mpas", "polaris.remap.MappingFileStep.dst_from_points", "polaris.remap.MappingFileStep.dst_from_proj", "polaris.remap.MappingFileStep.dst_global_lon_lat", "polaris.remap.MappingFileStep.get_remapper", "polaris.remap.MappingFileStep.runtime_setup", "polaris.remap.MappingFileStep.src_from_lon_lat", "polaris.remap.MappingFileStep.src_from_mpas", "polaris.remap.MappingFileStep.src_from_proj", "polaris.run.complete_step_run", "polaris.run.load_dependencies", "polaris.run.serial.run_single_step", "polaris.run.serial.run_tasks", "polaris.run.setup_config", "polaris.run.unpickle_suite", "polaris.setup.setup_task", "polaris.setup.setup_tasks", "polaris.streams.read", "polaris.streams.update_defaults", "polaris.streams.update_tree", "polaris.streams.write", "polaris.suite.setup_suite", "polaris.validate.compare_variables", "polaris.viz.plot_global_lat_lon_field", "polaris.viz.plot_global_mpas_field", "polaris.viz.plot_horiz_field", "polaris.viz.use_mplstyle", "polaris.yaml.PolarisYaml", "polaris.yaml.PolarisYaml.read", "polaris.yaml.PolarisYaml.update", "polaris.yaml.PolarisYaml.write", "polaris.yaml.main_mpas_to_yaml", "polaris.yaml.mpas_namelist_and_streams_to_yaml", "polaris.yaml.yaml_to_mpas_streams", "Anvil", "Chicoma", "Chrysalis", "CompyMcNodeFace", "Frontier", "Machines", "Perlmutter", "ocean", "Ocean framework", "polaris.ocean.Ocean", "polaris.ocean.convergence.analysis.ConvergenceAnalysis", "polaris.ocean.convergence.analysis.ConvergenceAnalysis.compute_error", "polaris.ocean.convergence.analysis.ConvergenceAnalysis.convergence_parameters", "polaris.ocean.convergence.analysis.ConvergenceAnalysis.exact_solution", "polaris.ocean.convergence.analysis.ConvergenceAnalysis.get_output_field", "polaris.ocean.convergence.analysis.ConvergenceAnalysis.plot_convergence", "polaris.ocean.convergence.analysis.ConvergenceAnalysis.run", "polaris.ocean.convergence.analysis.ConvergenceAnalysis.setup", "polaris.ocean.convergence.forward.ConvergenceForward", "polaris.ocean.convergence.forward.ConvergenceForward.compute_cell_count", "polaris.ocean.convergence.forward.ConvergenceForward.dynamic_model_config", "polaris.ocean.convergence.get_resolution_for_task", "polaris.ocean.convergence.get_timestep_for_task", "polaris.ocean.convergence.spherical.SphericalConvergenceForward", "polaris.ocean.convergence.spherical.SphericalConvergenceForward.compute_cell_count", "polaris.ocean.ice_shelf.IceShelfTask", "polaris.ocean.ice_shelf.IceShelfTask.setup_ssh_adjustment_steps", "polaris.ocean.ice_shelf.SshAdjustment", "polaris.ocean.ice_shelf.SshAdjustment.run", "polaris.ocean.ice_shelf.SshForward", "polaris.ocean.ice_shelf.SshForward.compute_cell_count", "polaris.ocean.ice_shelf.SshForward.dynamic_model_config", "polaris.ocean.mesh.spherical.add_spherical_base_mesh_step", "polaris.ocean.model.OceanIOStep", "polaris.ocean.model.OceanIOStep.map_from_native_model_vars", "polaris.ocean.model.OceanIOStep.map_to_native_model_vars", "polaris.ocean.model.OceanIOStep.open_model_dataset", "polaris.ocean.model.OceanIOStep.setup", "polaris.ocean.model.OceanIOStep.write_model_dataset", "polaris.ocean.model.OceanModelStep", "polaris.ocean.model.OceanModelStep.compute_cell_count", "polaris.ocean.model.OceanModelStep.constrain_resources", "polaris.ocean.model.OceanModelStep.map_yaml_configs", "polaris.ocean.model.OceanModelStep.map_yaml_options", "polaris.ocean.model.OceanModelStep.setup", "polaris.ocean.model.get_time_interval_string", "polaris.ocean.rpe.compute_rpe", "polaris.ocean.tasks.baroclinic_channel.add_baroclinic_channel_tasks", "polaris.ocean.tasks.baroclinic_channel.decomp.Decomp", "polaris.ocean.tasks.baroclinic_channel.default.Default", "polaris.ocean.tasks.baroclinic_channel.forward.Forward", "polaris.ocean.tasks.baroclinic_channel.forward.Forward.compute_cell_count", "polaris.ocean.tasks.baroclinic_channel.forward.Forward.dynamic_model_config", "polaris.ocean.tasks.baroclinic_channel.init.Init", "polaris.ocean.tasks.baroclinic_channel.init.Init.run", "polaris.ocean.tasks.baroclinic_channel.init.Init.setup", "polaris.ocean.tasks.baroclinic_channel.restart.Restart", "polaris.ocean.tasks.baroclinic_channel.restart.restart_step.RestartStep", "polaris.ocean.tasks.baroclinic_channel.restart.restart_step.RestartStep.dynamic_model_config", "polaris.ocean.tasks.baroclinic_channel.rpe.Rpe", "polaris.ocean.tasks.baroclinic_channel.rpe.Rpe.configure", "polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis", "polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis.run", "polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis.setup", "polaris.ocean.tasks.baroclinic_channel.threads.Threads", "polaris.ocean.tasks.baroclinic_channel.validate.Validate", "polaris.ocean.tasks.baroclinic_channel.validate.Validate.run", "polaris.ocean.tasks.baroclinic_channel.viz.Viz", "polaris.ocean.tasks.baroclinic_channel.viz.Viz.run", "polaris.ocean.tasks.barotropic_gyre.BarotropicGyre", "polaris.ocean.tasks.barotropic_gyre.add_barotropic_gyre_tasks", "polaris.ocean.tasks.barotropic_gyre.analysis.Analysis", "polaris.ocean.tasks.barotropic_gyre.analysis.Analysis.compute_error", "polaris.ocean.tasks.barotropic_gyre.analysis.Analysis.exact_solution", "polaris.ocean.tasks.barotropic_gyre.analysis.Analysis.run", "polaris.ocean.tasks.barotropic_gyre.forward.Forward", "polaris.ocean.tasks.barotropic_gyre.forward.Forward.compute_cell_count", "polaris.ocean.tasks.barotropic_gyre.forward.Forward.dynamic_model_config", "polaris.ocean.tasks.barotropic_gyre.forward.compute_max_time_step", "polaris.ocean.tasks.barotropic_gyre.init.Init", "polaris.ocean.tasks.barotropic_gyre.init.Init.run", "polaris.ocean.tasks.barotropic_gyre.init.Init.setup", "polaris.ocean.tasks.cosine_bell.CosineBell", "polaris.ocean.tasks.cosine_bell.CosineBell.configure", "polaris.ocean.tasks.cosine_bell.add_cosine_bell_tasks", "polaris.ocean.tasks.cosine_bell.analysis.Analysis", "polaris.ocean.tasks.cosine_bell.analysis.Analysis.exact_solution", "polaris.ocean.tasks.cosine_bell.decomp.Decomp", "polaris.ocean.tasks.cosine_bell.forward.Forward", "polaris.ocean.tasks.cosine_bell.init.Init", "polaris.ocean.tasks.cosine_bell.init.Init.run", "polaris.ocean.tasks.cosine_bell.init.cosine_bell", "polaris.ocean.tasks.cosine_bell.restart.Restart", "polaris.ocean.tasks.cosine_bell.restart.RestartStep", "polaris.ocean.tasks.cosine_bell.restart.RestartStep.dynamic_model_config", "polaris.ocean.tasks.cosine_bell.validate.Validate", "polaris.ocean.tasks.cosine_bell.validate.Validate.run", "polaris.ocean.tasks.cosine_bell.viz.Viz", "polaris.ocean.tasks.cosine_bell.viz.Viz.run", "polaris.ocean.tasks.geostrophic.Geostrophic", "polaris.ocean.tasks.geostrophic.Geostrophic.configure", "polaris.ocean.tasks.geostrophic.add_geostrophic_tasks", "polaris.ocean.tasks.geostrophic.analysis.Analysis", "polaris.ocean.tasks.geostrophic.analysis.Analysis.exact_solution", "polaris.ocean.tasks.geostrophic.analysis.Analysis.get_output_field", "polaris.ocean.tasks.geostrophic.forward.Forward", "polaris.ocean.tasks.geostrophic.init.Init", "polaris.ocean.tasks.geostrophic.init.Init.run", "polaris.ocean.tasks.geostrophic.viz.Viz", "polaris.ocean.tasks.geostrophic.viz.Viz.run", "polaris.ocean.tasks.ice_shelf_2d.add_ice_shelf_2d_tasks", "polaris.ocean.tasks.ice_shelf_2d.default.Default", "polaris.ocean.tasks.ice_shelf_2d.forward.Forward", "polaris.ocean.tasks.ice_shelf_2d.forward.Forward.compute_cell_count", "polaris.ocean.tasks.ice_shelf_2d.forward.Forward.dynamic_model_config", "polaris.ocean.tasks.ice_shelf_2d.init.Init", "polaris.ocean.tasks.ice_shelf_2d.init.Init.run", "polaris.ocean.tasks.ice_shelf_2d.validate.Validate", "polaris.ocean.tasks.ice_shelf_2d.validate.Validate.run", "polaris.ocean.tasks.ice_shelf_2d.viz.Viz", "polaris.ocean.tasks.ice_shelf_2d.viz.Viz.run", "polaris.ocean.tasks.inertial_gravity_wave.InertialGravityWave", "polaris.ocean.tasks.inertial_gravity_wave.add_inertial_gravity_wave_tasks", "polaris.ocean.tasks.inertial_gravity_wave.analysis.Analysis", "polaris.ocean.tasks.inertial_gravity_wave.analysis.Analysis.exact_solution", "polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution", "polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution.normal_velocity", "polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution.ssh", "polaris.ocean.tasks.inertial_gravity_wave.forward.Forward", "polaris.ocean.tasks.inertial_gravity_wave.forward.Forward.compute_cell_count", "polaris.ocean.tasks.inertial_gravity_wave.init.Init", "polaris.ocean.tasks.inertial_gravity_wave.init.Init.run", "polaris.ocean.tasks.inertial_gravity_wave.viz.Viz", "polaris.ocean.tasks.inertial_gravity_wave.viz.Viz.run", "polaris.ocean.tasks.internal_wave.add_internal_wave_tasks", "polaris.ocean.tasks.internal_wave.default.Default", "polaris.ocean.tasks.internal_wave.forward.Forward", "polaris.ocean.tasks.internal_wave.forward.Forward.compute_cell_count", "polaris.ocean.tasks.internal_wave.forward.Forward.dynamic_model_config", "polaris.ocean.tasks.internal_wave.init.Init", "polaris.ocean.tasks.internal_wave.init.Init.run", "polaris.ocean.tasks.internal_wave.rpe.Rpe", "polaris.ocean.tasks.internal_wave.rpe.Rpe.configure", "polaris.ocean.tasks.internal_wave.rpe.analysis.Analysis", "polaris.ocean.tasks.internal_wave.rpe.analysis.Analysis.run", "polaris.ocean.tasks.internal_wave.viz.Viz", "polaris.ocean.tasks.internal_wave.viz.Viz.run", "polaris.ocean.tasks.manufactured_solution.ManufacturedSolution", "polaris.ocean.tasks.manufactured_solution.add_manufactured_solution_tasks", "polaris.ocean.tasks.manufactured_solution.analysis.Analysis", "polaris.ocean.tasks.manufactured_solution.analysis.Analysis.exact_solution", "polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution", "polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution.normal_velocity", "polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution.ssh", "polaris.ocean.tasks.manufactured_solution.forward.Forward", "polaris.ocean.tasks.manufactured_solution.forward.Forward.compute_cell_count", "polaris.ocean.tasks.manufactured_solution.init.Init", "polaris.ocean.tasks.manufactured_solution.init.Init.run", "polaris.ocean.tasks.manufactured_solution.init.Init.setup", "polaris.ocean.tasks.manufactured_solution.viz.Viz", "polaris.ocean.tasks.manufactured_solution.viz.Viz.run", "polaris.ocean.tasks.single_column.add_single_column_tasks", "polaris.ocean.tasks.single_column.cvmix.CVMix", "polaris.ocean.tasks.single_column.forward.Forward", "polaris.ocean.tasks.single_column.ideal_age.IdealAge", "polaris.ocean.tasks.single_column.init.Init", "polaris.ocean.tasks.single_column.init.Init.run", "polaris.ocean.tasks.single_column.viz.Viz", "polaris.ocean.tasks.single_column.viz.Viz.run", "polaris.ocean.tasks.sphere_transport.SphereTransport", "polaris.ocean.tasks.sphere_transport.SphereTransport.configure", "polaris.ocean.tasks.sphere_transport.add_sphere_transport_tasks", "polaris.ocean.tasks.sphere_transport.analysis.Analysis", "polaris.ocean.tasks.sphere_transport.analysis.Analysis.convergence_parameters", "polaris.ocean.tasks.sphere_transport.filament_analysis.FilamentAnalysis", "polaris.ocean.tasks.sphere_transport.filament_analysis.FilamentAnalysis.run", "polaris.ocean.tasks.sphere_transport.forward.Forward", "polaris.ocean.tasks.sphere_transport.init.Init", "polaris.ocean.tasks.sphere_transport.init.Init.run", "polaris.ocean.tasks.sphere_transport.mixing_analysis.MixingAnalysis", "polaris.ocean.tasks.sphere_transport.mixing_analysis.MixingAnalysis.run", "polaris.ocean.tasks.sphere_transport.viz.Viz", "polaris.ocean.tasks.sphere_transport.viz.Viz.run", "polaris.ocean.vertical.grid_1d.generate_1d_grid", "polaris.ocean.vertical.grid_1d.write_1d_grid", "polaris.ocean.vertical.init_vertical_coord", "polaris.ocean.vertical.partial_cells.alter_bottom_depth", "polaris.ocean.vertical.partial_cells.alter_ssh", "polaris.ocean.vertical.sigma.init_sigma_vertical_coord", "polaris.ocean.vertical.sigma.update_sigma_layer_thickness", "polaris.ocean.vertical.update_layer_thickness", "polaris.ocean.vertical.zlevel.compute_min_max_level_cell", "polaris.ocean.vertical.zlevel.compute_z_level_layer_thickness", "polaris.ocean.vertical.zlevel.compute_z_level_resting_thickness", "polaris.ocean.vertical.zlevel.init_z_level_vertical_coord", "polaris.ocean.vertical.zlevel.update_z_level_layer_thickness", "polaris.ocean.vertical.zstar.init_z_star_vertical_coord", "polaris.ocean.vertical.zstar.update_z_star_layer_thickness", "polaris.ocean.viz.compute_transect", "polaris.ocean.viz.plot_transect", "polaris.ocean.viz.transect.horiz.find_planar_transect_cells_and_weights", "polaris.ocean.viz.transect.horiz.find_spherical_transect_cells_and_weights", "polaris.ocean.viz.transect.horiz.make_triangle_tree", "polaris.ocean.viz.transect.horiz.mesh_to_triangles", "polaris.ocean.viz.transect.vert.find_transect_levels_and_weights", "polaris.ocean.viz.transect.vert.interp_mpas_to_transect_cells", "polaris.ocean.viz.transect.vert.interp_mpas_to_transect_nodes", "Ocean component", "Models", "MPAS-Ocean", "baroclinic_channel", "barotropic_gyre", "correlated_tracers_2d", "cosine_bell", "divergent_2d", "geostrophic", "ice_shelf_2d", "Tasks", "inertial_gravity_wave", "internal_wave", "manufactured_solution", "nondivergent_2d", "rotation_2d", "single_column", "Categories of tasks", "Components", "Directory structure", "Organization of Tasks", "Steps", "Suites", "Tasks", "Overview", "Quick Start for Developers", "seaice", "SeaIce framework", "polaris.seaice.SeaIce", "polaris.seaice.tasks.single_column.add_single_column_tasks", "polaris.seaice.tasks.single_column.exact_restart.ExactRestart", "polaris.seaice.tasks.single_column.exact_restart.validate.Validate", "polaris.seaice.tasks.single_column.exact_restart.validate.Validate.run", "polaris.seaice.tasks.single_column.forward.Forward", "polaris.seaice.tasks.single_column.standard_physics.StandardPhysics", "polaris.seaice.tasks.single_column.standard_physics.viz.Viz", "polaris.seaice.tasks.single_column.standard_physics.viz.Viz.run", "SeaIce component", "Supported Model: MPAS-Seaice", "Tasks", "single_column", "Troubleshooting", "Glossary", "Polaris", "Developer Tutorial: Adding a new test group", "Config Files", "Anvil", "Chicoma", "Chrysalis", "CompyMcNodeFace", "Frontier", "Machines", "Perlmutter", "Ice shelf", "Framework", "Vertical coordinate", "Ocean component", "Suites", "baroclinic channel", "barotropic gyre", "correlated tracers 2-d", "cosine bell", "divergent 2-d", "geostrophic", "ice shelf 2d", "Tasks", "inertial gravity wave", "internal wave", "manufactured solution", "nondivergent 2-d", "rotation 2-d", "single column", "<Category of task>", "Quick Start for Users", "Sea ice component", "Tasks", "single column", "<Category of task>", "Suites", "Tasks"], "titleterms": {"": 387, "100layere3smv1": 399, "1d": 399, "2": [404, 406, 413, 414], "2d": 408, "3d": 399, "60layerphc": 399, "80layere3smv1": 399, "A": 389, "And": 1, "No": 395, "The": 1, "__main__": 56, "activ": 369, "ad": [14, 142, 365, 388], "add_baroclinic_channel_task": 184, "add_barotropic_gyre_task": 207, "add_config": 21, "add_cosine_bell_task": 221, "add_depend": 41, "add_geostrophic_task": 238, "add_ice_shelf_2d_task": 247, "add_inertial_gravity_wave_task": 259, "add_input_fil": 42, "add_internal_wave_task": 271, "add_manufactured_solution_task": 285, "add_model_config_opt": 26, "add_namelist_fil": 27, "add_output_fil": 43, "add_single_column_task": [298, 373], "add_sphere_transport_task": 308, "add_spherical_base_mesh_step": 169, "add_step": [22, 52], "add_streams_fil": 28, "add_task": 23, "add_yaml_fil": 29, "adjust": 397, "advanc": 369, "ag": [360, 415], "again": 388, "against": 18, "albani": [6, 369], "algorithm": 2, "alter_bottom_depth": 323, "alter_ssh": 324, "an": [14, 145, 388], "analysi": [147, 148, 149, 150, 151, 152, 153, 154, 198, 199, 200, 208, 209, 210, 211, 222, 223, 239, 240, 241, 260, 261, 280, 281, 286, 287, 309, 310, 348, 349, 350, 351, 352, 355, 357, 358, 359, 388, 407], "anvil": [137, 390], "api": 3, "ar": 1, "area": 15, "area_for_field": 89, "attribut": [365, 367], "baroclin": 402, "baroclinic_channel": [144, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 347], "barotrop": 403, "barotropic_gyr": [144, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 348], "barotropicgyr": 206, "base": [3, 144], "base_mesh": [349, 350, 351, 352, 358, 359], "baselin": 18, "befor": 1, "beginn": 369, "bell": 405, "between": [369, 388], "boundari": 346, "branch": 6, "build": [4, 142, 369, 417], "build_cell_width_lat_lon": 79, "build_subdivisions_cell_width_lat_lon": 72, "cach": [3, 5, 8, 57, 365], "case": 389, "categori": [361, 416, 421], "cell": 388, "cell_mask_to_edge_mask": 90, "channel": 402, "chicoma": [138, 391], "chrysali": [139, 392], "class": [3, 368], "clean_up_whitespac": 64, "code": [368, 369, 388], "column": [415, 420], "command": [3, 5, 8], "comment": 9, "common": 19, "compare_vari": 125, "compass": 387, "compil": 369, "complete_step_run": 112, "compon": [3, 14, 20, 21, 22, 23, 24, 58, 145, 344, 362, 368, 369, 381, 400, 417, 418], "comput": 388, "compute_cell_count": [156, 161, 167, 177, 188, 213, 250, 266, 274, 292], "compute_error": [148, 209], "compute_max_time_step": 215, "compute_min_max_level_cel": 328, "compute_planar_hex_nx_ni": 83, "compute_rp": 183, "compute_transect": 335, "compute_z_level_layer_thick": 329, "compute_z_level_resting_thick": 330, "compymcnodefac": [140, 393], "conda": [6, 369, 385, 395, 417], "condit": [346, 382, 388, 402, 403, 404, 405, 406, 407, 408, 410, 411, 412, 413, 414, 415, 416, 420, 421], "config": [3, 6, 9, 14, 59, 60, 142, 145, 362, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 402, 403, 404, 405, 406, 407, 408, 410, 411, 412, 413, 414, 415, 416, 420, 421], "configur": [53, 197, 220, 237, 279, 307, 367, 385], "constrain_resourc": [44, 178, 365], "constructor": [362, 365, 367], "converg": [144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161], "convergence_paramet": [149, 310], "convergenceanalysi": [147, 148, 149, 150, 151, 152, 153, 154], "convergenceforward": [155, 156, 157], "coordin": [144, 145, 388, 399], "copi": 365, "core": [402, 403, 404, 405, 406, 407, 408, 410, 411, 412, 413, 414, 415, 416, 420, 421], "correl": 404, "correlated_tracers_2d": 349, "cosin": 405, "cosine_bel": [144, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 350, 401], "cosinebel": [219, 220], "count": 388, "cpu": [138, 143, 391, 396], "crayclang": 141, "creat": [6, 369, 388], "cvmix": [299, 360, 415], "d": [404, 406, 413, 414], "data": [388, 396], "dataset": 18, "daughter": 1, "decomp": [185, 224, 347, 350, 402], "default": [186, 248, 272, 347, 348, 353, 356, 388, 402, 403, 408, 411, 412], "default_tidal_forc": 408, "default_with_restart": 408, "defin": 388, "del2": 412, "del4": 412, "depend": [1, 6, 365], "deploi": 6, "describ": [6, 142], "descript": [402, 403, 404, 405, 406, 407, 408, 410, 411, 412, 413, 414, 415, 416, 420, 421], "design": [0, 2], "develop": [369, 387, 388], "differ": 369, "directori": [1, 363], "discover": 1, "diverg": 406, "divergent_2d": 351, "do": [1, 6], "docstr": 7, "document": [0, 4, 7, 388], "doe": 369, "download": [11, 61, 365], "dst_from_lon_lat": 102, "dst_from_mpa": 103, "dst_from_point": 104, "dst_from_proj": 105, "dst_global_lon_lat": 106, "durat": [402, 403, 404, 405, 406, 407, 408, 410, 411, 412, 413, 414, 415, 416, 420, 421], "dynam": [14, 388], "dynamic_model_config": [30, 157, 168, 189, 195, 214, 231, 251, 275], "e3sm": [6, 14, 145, 369, 417], "easili": 1, "energi": [144, 145], "enhanc": 388, "env": 6, "environ": [6, 142, 369, 385, 417], "error": 385, "etc": 6, "exact": 420, "exact_restart": [374, 375, 376], "exact_restart_test": 384, "exact_solut": [150, 210, 223, 240, 261, 262, 263, 264, 287, 288, 289, 290, 355, 357], "exactrestart": 374, "exactsolut": [262, 263, 264, 288, 289, 290], "fail": 385, "field": 19, "filament_analysi": [311, 312, 358], "filamentanalysi": [311, 312], "file": [9, 14, 142, 145, 362, 365, 388, 389], "find_planar_transect_cells_and_weight": 337, "find_spherical_transect_cells_and_weight": 338, "find_transect_levels_and_weight": 341, "flag": 369, "forc": [346, 382, 402, 403, 404, 405, 406, 407, 408, 410, 411, 412, 413, 414, 415, 416, 420, 421], "forg": 395, "forward": [155, 156, 157, 187, 188, 189, 212, 213, 214, 215, 225, 242, 249, 250, 251, 265, 266, 273, 274, 275, 291, 292, 300, 313, 347, 348, 349, 350, 351, 352, 353, 355, 356, 357, 358, 359, 360, 377, 384, 388], "framework": [3, 10, 144, 145, 347, 348, 349, 350, 351, 352, 353, 355, 356, 357, 358, 359, 360, 368, 371, 384, 398], "from": [1, 6, 19, 145, 365, 369, 395], "frontier": [141, 394], "gener": 13, "generate_1d_grid": 320, "geostroph": [144, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 352, 407], "get": 388, "get_available_parallel_resourc": 96, "get_cell_width": 73, "get_compon": 58, "get_output_field": [151, 241], "get_parallel_command": 97, "get_remapp": 107, "get_resolution_for_task": 158, "get_slurm_opt": 65, "get_subdivis": 74, "get_time_interval_str": 182, "get_timestep_for_task": 159, "gethostbynam": 385, "global": 19, "glossari": [386, 387], "gnu": [137, 138, 139, 140, 141, 143], "graph": 14, "graviti": 410, "grid": [19, 399, 402, 403, 404, 405, 406, 407, 408, 410, 411, 412, 413, 414, 415, 416], "grid_1d": [320, 321], "group": [368, 388], "guid": 387, "gyre": 403, "here": 2, "horiz": [337, 338, 339, 340], "horizont": [19, 388], "how": 388, "i": [1, 417], "ic": [144, 145, 397, 408, 418], "ice_shelf": [162, 163, 164, 165, 166, 167, 168], "ice_shelf_2d": [144, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 353], "iceshelftask": [162, 163], "icosahedr": 145, "icosahedralmeshstep": [71, 72, 73, 74, 75, 76, 77], "ideal": [360, 415], "ideal_ag": 301, "idealag": 301, "identifi": 6, "implement": [1, 2], "index_tanh_dz": 399, "inerti": 410, "inertial_gravity_wav": [144, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 355], "inertialgravitywav": 258, "ingest": 92, "init": [190, 191, 192, 216, 217, 218, 226, 227, 228, 243, 244, 252, 253, 267, 268, 276, 277, 293, 294, 295, 302, 303, 314, 315, 347, 348, 349, 350, 351, 352, 353, 355, 356, 357, 358, 359, 360, 388], "init_sigma_vertical_coord": 325, "init_vertical_coord": 322, "init_z_level_vertical_coord": 331, "init_z_star_vertical_coord": 333, "initi": [346, 382, 388, 402, 403, 404, 405, 406, 407, 408, 410, 411, 412, 413, 414, 415, 416, 420, 421], "input": [14, 145, 365], "intel": [137, 139, 140, 143], "interfac": [3, 5], "intern": 411, "internal_wav": [144, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 356], "interp_mpas_to_transect_cel": 342, "interp_mpas_to_transect_nod": 343, "interv": 145, "intuit": 1, "io": [3, 11, 61, 62, 63], "job": [3, 64, 65, 66, 395, 417], "jupyt": 396, "lanl": 385, "lapack": [6, 369], "lat": 19, "level": 399, "line": [3, 5], "list": [3, 5, 8, 67, 68, 69], "list_cas": 67, "list_machin": 68, "list_suit": 69, "load": [390, 391, 392, 393, 394, 396, 417], "load_depend": 113, "log": [3, 12, 70], "log_method_cal": 70, "lon": 19, "mac": 385, "mach": 6, "machin": [6, 142, 369, 395, 417], "mai": 1, "main": 56, "main_mpas_to_yaml": 134, "make": [14, 388], "make_graph_fil": 88, "make_jigsaw_mesh": [75, 80], "make_triangle_tre": 339, "mali": 6, "manufactur": 412, "manufactured_solut": [144, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 357], "manufacturedsolut": 284, "map": 145, "map_from_native_model_var": 171, "map_to_native_model_var": 172, "map_yaml_config": [31, 179], "map_yaml_opt": [32, 180], "map_yaml_to_namelist": 33, "mappingfilestep": [101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111], "matplotlib": 19, "mesh": [3, 13, 14, 19, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 144, 145, 169, 388, 402, 403, 404, 405, 406, 407, 408, 410, 411, 412, 413, 414, 415, 416, 420, 421], "mesh_to_triangl": 340, "mixing_analysi": [316, 317, 349], "mixinganalysi": [316, 317], "model": [14, 144, 145, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 345, 382, 388, 402, 403, 404, 405, 406, 407, 408, 410, 411, 412, 413, 414, 415, 416, 417], "model_step": [3, 88], "modelstep": [3, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39], "modul": [6, 8, 368, 369], "more": 388, "mpa": [3, 6, 15, 19, 89, 90, 91, 142, 145, 346, 369, 382], "mpas_namelist_and_streams_to_yaml": 135, "mpas_to_yaml": [3, 5], "mpi": [145, 395], "mpich": 395, "multipl": 1, "name": 2, "namelist": [3, 14, 92, 93, 94, 95, 145], "netlib": [6, 369], "new": [6, 142, 388], "nightli": 366, "nondiverg": 413, "nondivergent_2d": 358, "norm": 18, "normal_veloc": [263, 289], "notebook": 396, "ocean": [6, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 346, 369, 400], "oceaniostep": [170, 171, 172, 173, 174, 175], "oceanmodelstep": [176, 177, 178, 179, 180, 181], "omega": [142, 145, 369], "onc": 1, "one": 388, "onli": 369, "open_model_dataset": 173, "openmpi": 395, "option": [2, 6, 14, 145, 369, 388, 390, 391, 392, 393, 394, 395, 396, 397, 402, 403, 404, 405, 406, 407, 408, 410, 411, 412, 413, 414, 415, 416, 420, 421], "organ": 364, "other": [1, 142, 365, 388, 395, 417], "out": 388, "output": [1, 145, 365, 388], "overview": 368, "packag": 368, "parallel": [3, 96, 97, 98, 99], "paramet": 388, "parse_replac": 93, "partial_cel": [323, 324], "partit": [14, 34], "pass": 388, "path": 1, "perlmutt": [143, 396], "permiss": 11, "petsc": [6, 369], "physic": 420, "pio": 14, "planar": [13, 19, 83], "plot": [19, 388], "plot_converg": 152, "plot_global_lat_lon_field": 126, "plot_global_mpas_field": 127, "plot_horiz_field": 128, "plot_transect": 336, "pm": 143, "polari": [3, 5, 6, 8, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 365, 368, 369, 372, 373, 374, 375, 376, 377, 378, 379, 380, 387, 390, 391, 392, 393, 394, 396, 417], "polarisconfigpars": [59, 60], "polarisyaml": [130, 131, 132, 133], "potenti": [144, 145], "pr": 366, "process_inputs_and_output": 35, "proven": [3, 16, 100], "proxi": 385, "pull": 366, "quasi": 145, "quasiuniformsphericalmeshstep": [78, 79, 80, 81, 82], "queue": 395, "quick": [369, 417], "read": [120, 131], "refer": [3, 144, 145], "relat": 368, "reli": 1, "remap": [3, 17, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111], "remot": [6, 396], "remove_step": [24, 54], "replac": 94, "repo": 369, "repositori": 369, "request": 366, "requir": [1, 2], "resolut": 388, "resourc": 145, "rest": 145, "restart": [193, 194, 195, 229, 230, 231, 347, 350, 402, 420], "restart_step": [194, 195, 350], "restartstep": [194, 195, 230, 231], "rotat": 414, "rotation_2d": 359, "rpe": [144, 145, 183, 196, 197, 198, 199, 200, 278, 279, 280, 281, 347, 356, 402, 411], "run": [1, 3, 8, 14, 45, 76, 81, 85, 112, 113, 114, 115, 116, 117, 145, 153, 165, 191, 199, 203, 205, 211, 217, 227, 233, 235, 244, 246, 253, 255, 257, 268, 270, 277, 281, 283, 294, 297, 303, 305, 312, 315, 317, 319, 365, 369, 376, 380, 390, 391, 392, 393, 394, 396, 402, 403, 404, 405, 406, 407, 408, 410, 411, 412, 413, 414, 415, 416, 417, 420, 421], "run_command": 98, "run_single_step": 114, "run_task": 115, "runtime_setup": [36, 46, 108, 365], "same": 2, "save_and_plot_cell_width": 86, "script": [369, 417], "sea": 418, "seaic": [142, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382], "second": 388, "serial": [5, 8, 114, 115], "set": [1, 145, 369, 417], "set_cores_per_nod": 99, "set_model_resourc": 37, "set_resourc": 47, "set_shared_config": [48, 55], "setup": [3, 5, 8, 38, 49, 60, 77, 82, 87, 118, 119, 154, 174, 181, 192, 200, 218, 295, 365], "setup_config": 116, "setup_ssh_adjustment_step": 163, "setup_suit": 124, "setup_task": [118, 119], "share": [1, 6, 9, 368, 388], "shelf": [144, 145, 397, 408], "shell": 369, "sigma": [325, 326, 399], "singl": [415, 420], "single_column": [144, 298, 299, 300, 301, 302, 303, 304, 305, 360, 370, 373, 374, 375, 376, 377, 378, 379, 380, 384], "slurm": 395, "solut": 412, "solver": 385, "spack": [6, 142, 369, 417], "sphere_transport": [144, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319], "spheretransport": [306, 307], "spheric": [13, 19, 84, 85, 86, 87, 144, 145, 160, 161, 169], "sphericalbasestep": [84, 85, 86, 87], "sphericalconvergenceforward": [160, 161], "src_from_lon_lat": 109, "src_from_mpa": 110, "src_from_proj": 111, "ssh": [264, 290, 397], "sshadjust": [164, 165], "sshforward": [166, 167, 168], "standalon": 417, "standard": 420, "standard_phys": [378, 379, 380], "standard_physics_test": 384, "standardphys": 378, "star": 399, "start": [369, 388, 417], "step": [1, 3, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 144, 365, 388, 397, 402, 403, 404, 405, 406, 407, 408, 410, 411, 412, 413, 414, 415, 416, 421], "stream": [3, 14, 120, 121, 122, 123, 145, 388], "structur": [1, 363], "studi": 388, "style": [19, 368, 369], "suit": [3, 5, 8, 124, 366, 401, 417, 422], "summari": [1, 2], "superclass": 388, "support": [142, 345, 369, 382, 395, 403, 417], "suppport": [402, 404, 405, 406, 407, 408, 410, 411, 412, 413, 414, 415, 416], "switch": 369, "symlink": [11, 62, 365], "system": 369, "tanh_dz": 399, "task": [1, 3, 51, 52, 53, 54, 55, 144, 145, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 354, 361, 364, 367, 368, 370, 373, 374, 375, 376, 377, 378, 379, 380, 383, 388, 409, 411, 416, 417, 419, 421, 423], "task_nam": [416, 421], "templat": [2, 14], "test": [1, 2, 6, 144, 145, 388, 389, 420], "thing": 388, "thread": [201, 347, 402], "time": [15, 145, 388, 402, 403, 404, 405, 406, 407, 408, 410, 411, 412, 413, 414, 415, 416, 421], "time_index_from_xtim": 91, "timestep": 420, "topic": 2, "tracer": 404, "transect": [337, 338, 339, 340, 341, 342, 343], "troubleshoot": [6, 369, 385], "tutori": [387, 388], "type": 399, "uniform": [13, 145, 399], "unix": 369, "unknown": 369, "unpickle_suit": 117, "up": [1, 369, 417], "updat": [6, 14, 132, 369], "update_cach": 57, "update_default": 121, "update_layer_thick": 327, "update_namelist_pio": 39, "update_permiss": 63, "update_sigma_layer_thick": 326, "update_tre": 122, "update_z_level_layer_thick": 332, "update_z_star_layer_thick": 334, "us": 1, "use_mplstyl": 129, "user": [1, 369, 387, 389, 417], "v": 145, "valid": [1, 2, 3, 18, 125, 202, 203, 232, 233, 254, 255, 347, 350, 353, 356, 375, 376, 388, 417], "validate_baselin": 50, "vari": 388, "variabl": [6, 18], "vert": [341, 342, 343], "vertic": [144, 145, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 388, 399, 402, 403, 404, 405, 406, 407, 408, 410, 411, 412, 413, 414, 415, 416], "visual": [19, 144, 145, 388, 420], "viz": [3, 126, 127, 128, 129, 204, 205, 234, 235, 245, 246, 256, 257, 269, 270, 282, 283, 296, 297, 304, 305, 318, 319, 335, 336, 337, 338, 339, 340, 341, 342, 343, 349, 350, 351, 352, 353, 355, 357, 358, 359, 360, 379, 380, 384, 388], "wave": [410, 411], "we": 6, "what": 369, "when": 385, "where": 6, "within": 368, "without": 6, "work": 1, "worktre": 369, "write": [95, 100, 123, 133], "write_1d_grid": 321, "write_job_script": 66, "write_model_dataset": 175, "yaml": [3, 14, 130, 131, 132, 133, 134, 135, 136, 145], "yaml_to_mpas_stream": 136, "yet": 417, "z": 399, "zlevel": [328, 329, 330, 331, 332], "zstar": [333, 334]}})