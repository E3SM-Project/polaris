Search.setIndex({"docnames": ["design_docs/index", "design_docs/template", "developers_guide/api", "developers_guide/building_docs", "developers_guide/command_line", "developers_guide/docs", "developers_guide/framework/commands", "developers_guide/framework/config", "developers_guide/framework/index", "developers_guide/framework/io", "developers_guide/framework/logging", "developers_guide/framework/mesh", "developers_guide/framework/model", "developers_guide/framework/provenance", "developers_guide/framework/remapping", "developers_guide/framework/validation", "developers_guide/framework/visualization", "developers_guide/generated/polaris.Component", "developers_guide/generated/polaris.Component.add_test_group", "developers_guide/generated/polaris.ModelStep", "developers_guide/generated/polaris.ModelStep.add_model_config_options", "developers_guide/generated/polaris.ModelStep.add_namelist_file", "developers_guide/generated/polaris.ModelStep.add_streams_file", "developers_guide/generated/polaris.ModelStep.add_yaml_file", "developers_guide/generated/polaris.ModelStep.dynamic_model_config", "developers_guide/generated/polaris.ModelStep.map_yaml_to_namelist", "developers_guide/generated/polaris.ModelStep.partition", "developers_guide/generated/polaris.ModelStep.process_inputs_and_outputs", "developers_guide/generated/polaris.ModelStep.runtime_setup", "developers_guide/generated/polaris.ModelStep.set_model_resources", "developers_guide/generated/polaris.ModelStep.setup", "developers_guide/generated/polaris.ModelStep.update_namelist_pio", "developers_guide/generated/polaris.Step", "developers_guide/generated/polaris.Step.add_dependency", "developers_guide/generated/polaris.Step.add_input_file", "developers_guide/generated/polaris.Step.add_output_file", "developers_guide/generated/polaris.Step.constrain_resources", "developers_guide/generated/polaris.Step.run", "developers_guide/generated/polaris.Step.runtime_setup", "developers_guide/generated/polaris.Step.set_resources", "developers_guide/generated/polaris.Step.setup", "developers_guide/generated/polaris.TestCase", "developers_guide/generated/polaris.TestCase.add_step", "developers_guide/generated/polaris.TestCase.configure", "developers_guide/generated/polaris.TestCase.validate", "developers_guide/generated/polaris.TestGroup", "developers_guide/generated/polaris.TestGroup.add_test_case", "developers_guide/generated/polaris.__main__.main", "developers_guide/generated/polaris.cache.update_cache", "developers_guide/generated/polaris.components.get_components", "developers_guide/generated/polaris.config.PolarisConfigParser", "developers_guide/generated/polaris.io.download", "developers_guide/generated/polaris.io.imp_res", "developers_guide/generated/polaris.io.symlink", "developers_guide/generated/polaris.job.get_slurm_options", "developers_guide/generated/polaris.job.write_job_script", "developers_guide/generated/polaris.list.list_cases", "developers_guide/generated/polaris.list.list_machines", "developers_guide/generated/polaris.list.list_suites", "developers_guide/generated/polaris.logging.log_method_call", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.build_subdivisions_cell_width_lat_lon", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.get_cell_width", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.get_subdivisions", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.make_jigsaw_mesh", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.run", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.setup", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep.build_cell_width_lat_lon", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep.make_jigsaw_mesh", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep.run", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep.setup", "developers_guide/generated/polaris.mesh.planar.compute_planar_hex_nx_ny", "developers_guide/generated/polaris.mesh.spherical.SphericalBaseStep", "developers_guide/generated/polaris.mesh.spherical.SphericalBaseStep.run", "developers_guide/generated/polaris.mesh.spherical.SphericalBaseStep.save_and_plot_cell_width", "developers_guide/generated/polaris.mesh.spherical.SphericalBaseStep.setup", "developers_guide/generated/polaris.model_step.make_graph_file", "developers_guide/generated/polaris.namelist.ingest", "developers_guide/generated/polaris.namelist.parse_replacements", "developers_guide/generated/polaris.namelist.replace", "developers_guide/generated/polaris.namelist.write", "developers_guide/generated/polaris.parallel.get_available_parallel_resources", "developers_guide/generated/polaris.parallel.get_parallel_command", "developers_guide/generated/polaris.parallel.run_command", "developers_guide/generated/polaris.parallel.set_cores_per_node", "developers_guide/generated/polaris.provenance.write", "developers_guide/generated/polaris.remap.MappingFileStep", "developers_guide/generated/polaris.remap.MappingFileStep.dst_from_lon_lat", "developers_guide/generated/polaris.remap.MappingFileStep.dst_from_mpas", "developers_guide/generated/polaris.remap.MappingFileStep.dst_from_points", "developers_guide/generated/polaris.remap.MappingFileStep.dst_from_proj", "developers_guide/generated/polaris.remap.MappingFileStep.dst_global_lon_lat", "developers_guide/generated/polaris.remap.MappingFileStep.get_remapper", "developers_guide/generated/polaris.remap.MappingFileStep.runtime_setup", "developers_guide/generated/polaris.remap.MappingFileStep.src_from_lon_lat", "developers_guide/generated/polaris.remap.MappingFileStep.src_from_mpas", "developers_guide/generated/polaris.remap.MappingFileStep.src_from_proj", "developers_guide/generated/polaris.run.serial.run_single_step", "developers_guide/generated/polaris.run.serial.run_tests", "developers_guide/generated/polaris.run.setup_config", "developers_guide/generated/polaris.run.unpickle_suite", "developers_guide/generated/polaris.setup.setup_case", "developers_guide/generated/polaris.setup.setup_cases", "developers_guide/generated/polaris.streams.read", "developers_guide/generated/polaris.streams.update_defaults", "developers_guide/generated/polaris.streams.update_tree", "developers_guide/generated/polaris.streams.write", "developers_guide/generated/polaris.suite.setup_suite", "developers_guide/generated/polaris.validate.compare_timers", "developers_guide/generated/polaris.validate.compare_variables", "developers_guide/generated/polaris.viz.globe.plot_global", "developers_guide/generated/polaris.viz.plot_horiz_field", "developers_guide/generated/polaris.yaml.PolarisYaml", "developers_guide/generated/polaris.yaml.PolarisYaml.read", "developers_guide/generated/polaris.yaml.PolarisYaml.update", "developers_guide/generated/polaris.yaml.PolarisYaml.write", "developers_guide/generated/polaris.yaml.main_mpas_to_yaml", "developers_guide/generated/polaris.yaml.mpas_namelist_and_streams_to_yaml", "developers_guide/generated/polaris.yaml.yaml_to_mpas_streams", "developers_guide/machines/anvil", "developers_guide/machines/chicoma", "developers_guide/machines/chrysalis", "developers_guide/machines/compy", "developers_guide/machines/index", "developers_guide/machines/perlmutter", "developers_guide/ocean/api", "developers_guide/ocean/framework", "developers_guide/ocean/generated/polaris.ocean.Ocean", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.compute_cell_count", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.constrain_resources", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.map_yaml_to_namelist", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.setup", "developers_guide/ocean/generated/polaris.ocean.rpe.compute_rpe", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.BaroclinicChannel", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.BaroclinicChannelTestCase", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.BaroclinicChannelTestCase.validate", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.decomp_test.DecompTest", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.decomp_test.DecompTest.validate", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.default.Default", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.default.Default.validate", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.forward.Forward", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.forward.Forward.compute_cell_count", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.forward.Forward.dynamic_model_config", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.initial_state.InitialState", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.initial_state.InitialState.run", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.initial_state.InitialState.setup", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.restart_test.RestartTest", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.restart_test.RestartTest.validate", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.restart_test.restart_step.RestartStep", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.restart_test.restart_step.RestartStep.dynamic_model_config", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.rpe_test.RpeTest", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.rpe_test.RpeTest.configure", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.rpe_test.RpeTest.validate", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.rpe_test.analysis.Analysis", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.rpe_test.analysis.Analysis.run", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.rpe_test.analysis.Analysis.setup", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.threads_test.ThreadsTest", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.threads_test.ThreadsTest.validate", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.viz.Viz", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.viz.Viz.run", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.GlobalConvergence", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.CosineBell", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.CosineBell.configure", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.CosineBell.validate", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.analysis.Analysis", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.analysis.Analysis.rmse", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.analysis.Analysis.run", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.forward.Forward", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.forward.Forward.compute_cell_count", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.forward.Forward.dynamic_model_config", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.init.Init", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.init.Init.run", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.viz.Viz", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.viz.Viz.run", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.viz.VizMap", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.viz.VizMap.run", "developers_guide/ocean/generated/polaris.ocean.tests.inertial_gravity_wave.InertialGravityWave", "developers_guide/ocean/generated/polaris.ocean.tests.inertial_gravity_wave.analysis.Analysis", "developers_guide/ocean/generated/polaris.ocean.tests.inertial_gravity_wave.analysis.Analysis.run", "developers_guide/ocean/generated/polaris.ocean.tests.inertial_gravity_wave.convergence.Convergence", "developers_guide/ocean/generated/polaris.ocean.tests.inertial_gravity_wave.convergence.Convergence.validate", "developers_guide/ocean/generated/polaris.ocean.tests.inertial_gravity_wave.exact_solution.ExactSolution", "developers_guide/ocean/generated/polaris.ocean.tests.inertial_gravity_wave.exact_solution.ExactSolution.ssh", "developers_guide/ocean/generated/polaris.ocean.tests.inertial_gravity_wave.forward.Forward", "developers_guide/ocean/generated/polaris.ocean.tests.inertial_gravity_wave.forward.Forward.compute_cell_count", "developers_guide/ocean/generated/polaris.ocean.tests.inertial_gravity_wave.forward.Forward.dynamic_model_config", "developers_guide/ocean/generated/polaris.ocean.tests.inertial_gravity_wave.initial_state.InitialState", "developers_guide/ocean/generated/polaris.ocean.tests.inertial_gravity_wave.initial_state.InitialState.run", "developers_guide/ocean/generated/polaris.ocean.tests.inertial_gravity_wave.viz.Viz", "developers_guide/ocean/generated/polaris.ocean.tests.inertial_gravity_wave.viz.Viz.run", "developers_guide/ocean/generated/polaris.ocean.tests.manufactured_solution.ManufacturedSolution", "developers_guide/ocean/generated/polaris.ocean.tests.manufactured_solution.analysis.Analysis", "developers_guide/ocean/generated/polaris.ocean.tests.manufactured_solution.analysis.Analysis.run", "developers_guide/ocean/generated/polaris.ocean.tests.manufactured_solution.convergence.Convergence", "developers_guide/ocean/generated/polaris.ocean.tests.manufactured_solution.convergence.Convergence.validate", "developers_guide/ocean/generated/polaris.ocean.tests.manufactured_solution.exact_solution.ExactSolution", "developers_guide/ocean/generated/polaris.ocean.tests.manufactured_solution.exact_solution.ExactSolution.ssh", "developers_guide/ocean/generated/polaris.ocean.tests.manufactured_solution.forward.Forward", "developers_guide/ocean/generated/polaris.ocean.tests.manufactured_solution.forward.Forward.compute_cell_count", "developers_guide/ocean/generated/polaris.ocean.tests.manufactured_solution.forward.Forward.dynamic_model_config", "developers_guide/ocean/generated/polaris.ocean.tests.manufactured_solution.initial_state.InitialState", "developers_guide/ocean/generated/polaris.ocean.tests.manufactured_solution.initial_state.InitialState.run", "developers_guide/ocean/generated/polaris.ocean.tests.manufactured_solution.viz.Viz", "developers_guide/ocean/generated/polaris.ocean.tests.manufactured_solution.viz.Viz.run", "developers_guide/ocean/generated/polaris.ocean.tests.single_column.SingleColumn", "developers_guide/ocean/generated/polaris.ocean.tests.single_column.cvmix.CVMix", "developers_guide/ocean/generated/polaris.ocean.tests.single_column.cvmix.CVMix.validate", "developers_guide/ocean/generated/polaris.ocean.tests.single_column.forward.Forward", "developers_guide/ocean/generated/polaris.ocean.tests.single_column.ideal_age.IdealAge", "developers_guide/ocean/generated/polaris.ocean.tests.single_column.ideal_age.IdealAge.validate", "developers_guide/ocean/generated/polaris.ocean.tests.single_column.initial_state.InitialState", "developers_guide/ocean/generated/polaris.ocean.tests.single_column.initial_state.InitialState.run", "developers_guide/ocean/generated/polaris.ocean.tests.single_column.viz.Viz", "developers_guide/ocean/generated/polaris.ocean.tests.single_column.viz.Viz.run", "developers_guide/ocean/generated/polaris.ocean.vertical.grid_1d.generate_1d_grid", "developers_guide/ocean/generated/polaris.ocean.vertical.grid_1d.write_1d_grid", "developers_guide/ocean/generated/polaris.ocean.vertical.init_vertical_coord", "developers_guide/ocean/generated/polaris.ocean.vertical.partial_cells.alter_bottom_depth", "developers_guide/ocean/generated/polaris.ocean.vertical.partial_cells.alter_ssh", "developers_guide/ocean/generated/polaris.ocean.vertical.zlevel.compute_min_max_level_cell", "developers_guide/ocean/generated/polaris.ocean.vertical.zlevel.compute_z_level_layer_thickness", "developers_guide/ocean/generated/polaris.ocean.vertical.zlevel.compute_z_level_resting_thickness", "developers_guide/ocean/generated/polaris.ocean.vertical.zlevel.init_z_level_vertical_coord", "developers_guide/ocean/generated/polaris.ocean.vertical.zstar.init_z_star_vertical_coord", "developers_guide/ocean/index", "developers_guide/ocean/models/index", "developers_guide/ocean/models/mpas_ocean", "developers_guide/ocean/test_groups/baroclinic_channel", "developers_guide/ocean/test_groups/global_convergence", "developers_guide/ocean/test_groups/index", "developers_guide/ocean/test_groups/inertial_gravity_wave", "developers_guide/ocean/test_groups/manufactured_solution", "developers_guide/ocean/test_groups/single_column", "developers_guide/organization/components", "developers_guide/organization/directories", "developers_guide/organization/index", "developers_guide/organization/steps", "developers_guide/organization/suites", "developers_guide/organization/test_cases", "developers_guide/organization/test_groups", "developers_guide/overview", "developers_guide/quick_start", "developers_guide/troubleshooting", "glossary", "index", "tutorials/dev_add_test_group", "users_guide/config_files", "users_guide/machines/anvil", "users_guide/machines/chicoma", "users_guide/machines/chrysalis", "users_guide/machines/compy", "users_guide/machines/index", "users_guide/machines/perlmutter", "users_guide/ocean/framework/index", "users_guide/ocean/framework/vertical", "users_guide/ocean/index", "users_guide/ocean/suites", "users_guide/ocean/test_groups/baroclinic_channel", "users_guide/ocean/test_groups/global_convergence", "users_guide/ocean/test_groups/index", "users_guide/ocean/test_groups/inertial_gravity_wave", "users_guide/ocean/test_groups/manufactured_solution", "users_guide/ocean/test_groups/single_column", "users_guide/ocean/test_groups/template", "users_guide/quick_start", "users_guide/test_cases", "users_guide/test_suites"], "filenames": ["design_docs/index.md", "design_docs/template.md", "developers_guide/api.md", "developers_guide/building_docs.md", "developers_guide/command_line.md", "developers_guide/docs.md", "developers_guide/framework/commands.md", "developers_guide/framework/config.md", "developers_guide/framework/index.md", "developers_guide/framework/io.md", "developers_guide/framework/logging.md", "developers_guide/framework/mesh.md", "developers_guide/framework/model.md", "developers_guide/framework/provenance.md", "developers_guide/framework/remapping.md", "developers_guide/framework/validation.md", "developers_guide/framework/visualization.md", "developers_guide/generated/polaris.Component.rst", "developers_guide/generated/polaris.Component.add_test_group.rst", "developers_guide/generated/polaris.ModelStep.rst", "developers_guide/generated/polaris.ModelStep.add_model_config_options.rst", "developers_guide/generated/polaris.ModelStep.add_namelist_file.rst", "developers_guide/generated/polaris.ModelStep.add_streams_file.rst", "developers_guide/generated/polaris.ModelStep.add_yaml_file.rst", "developers_guide/generated/polaris.ModelStep.dynamic_model_config.rst", "developers_guide/generated/polaris.ModelStep.map_yaml_to_namelist.rst", "developers_guide/generated/polaris.ModelStep.partition.rst", "developers_guide/generated/polaris.ModelStep.process_inputs_and_outputs.rst", "developers_guide/generated/polaris.ModelStep.runtime_setup.rst", "developers_guide/generated/polaris.ModelStep.set_model_resources.rst", "developers_guide/generated/polaris.ModelStep.setup.rst", "developers_guide/generated/polaris.ModelStep.update_namelist_pio.rst", "developers_guide/generated/polaris.Step.rst", "developers_guide/generated/polaris.Step.add_dependency.rst", "developers_guide/generated/polaris.Step.add_input_file.rst", "developers_guide/generated/polaris.Step.add_output_file.rst", "developers_guide/generated/polaris.Step.constrain_resources.rst", "developers_guide/generated/polaris.Step.run.rst", "developers_guide/generated/polaris.Step.runtime_setup.rst", "developers_guide/generated/polaris.Step.set_resources.rst", "developers_guide/generated/polaris.Step.setup.rst", "developers_guide/generated/polaris.TestCase.rst", "developers_guide/generated/polaris.TestCase.add_step.rst", "developers_guide/generated/polaris.TestCase.configure.rst", "developers_guide/generated/polaris.TestCase.validate.rst", "developers_guide/generated/polaris.TestGroup.rst", "developers_guide/generated/polaris.TestGroup.add_test_case.rst", "developers_guide/generated/polaris.__main__.main.rst", "developers_guide/generated/polaris.cache.update_cache.rst", "developers_guide/generated/polaris.components.get_components.rst", "developers_guide/generated/polaris.config.PolarisConfigParser.rst", "developers_guide/generated/polaris.io.download.rst", "developers_guide/generated/polaris.io.imp_res.rst", "developers_guide/generated/polaris.io.symlink.rst", "developers_guide/generated/polaris.job.get_slurm_options.rst", "developers_guide/generated/polaris.job.write_job_script.rst", "developers_guide/generated/polaris.list.list_cases.rst", "developers_guide/generated/polaris.list.list_machines.rst", "developers_guide/generated/polaris.list.list_suites.rst", "developers_guide/generated/polaris.logging.log_method_call.rst", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.rst", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.build_subdivisions_cell_width_lat_lon.rst", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.get_cell_width.rst", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.get_subdivisions.rst", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.make_jigsaw_mesh.rst", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.run.rst", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.setup.rst", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep.rst", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep.build_cell_width_lat_lon.rst", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep.make_jigsaw_mesh.rst", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep.run.rst", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep.setup.rst", "developers_guide/generated/polaris.mesh.planar.compute_planar_hex_nx_ny.rst", "developers_guide/generated/polaris.mesh.spherical.SphericalBaseStep.rst", "developers_guide/generated/polaris.mesh.spherical.SphericalBaseStep.run.rst", "developers_guide/generated/polaris.mesh.spherical.SphericalBaseStep.save_and_plot_cell_width.rst", "developers_guide/generated/polaris.mesh.spherical.SphericalBaseStep.setup.rst", "developers_guide/generated/polaris.model_step.make_graph_file.rst", "developers_guide/generated/polaris.namelist.ingest.rst", "developers_guide/generated/polaris.namelist.parse_replacements.rst", "developers_guide/generated/polaris.namelist.replace.rst", "developers_guide/generated/polaris.namelist.write.rst", "developers_guide/generated/polaris.parallel.get_available_parallel_resources.rst", "developers_guide/generated/polaris.parallel.get_parallel_command.rst", "developers_guide/generated/polaris.parallel.run_command.rst", "developers_guide/generated/polaris.parallel.set_cores_per_node.rst", "developers_guide/generated/polaris.provenance.write.rst", "developers_guide/generated/polaris.remap.MappingFileStep.rst", "developers_guide/generated/polaris.remap.MappingFileStep.dst_from_lon_lat.rst", "developers_guide/generated/polaris.remap.MappingFileStep.dst_from_mpas.rst", "developers_guide/generated/polaris.remap.MappingFileStep.dst_from_points.rst", "developers_guide/generated/polaris.remap.MappingFileStep.dst_from_proj.rst", "developers_guide/generated/polaris.remap.MappingFileStep.dst_global_lon_lat.rst", "developers_guide/generated/polaris.remap.MappingFileStep.get_remapper.rst", "developers_guide/generated/polaris.remap.MappingFileStep.runtime_setup.rst", "developers_guide/generated/polaris.remap.MappingFileStep.src_from_lon_lat.rst", "developers_guide/generated/polaris.remap.MappingFileStep.src_from_mpas.rst", "developers_guide/generated/polaris.remap.MappingFileStep.src_from_proj.rst", "developers_guide/generated/polaris.run.serial.run_single_step.rst", "developers_guide/generated/polaris.run.serial.run_tests.rst", "developers_guide/generated/polaris.run.setup_config.rst", "developers_guide/generated/polaris.run.unpickle_suite.rst", "developers_guide/generated/polaris.setup.setup_case.rst", "developers_guide/generated/polaris.setup.setup_cases.rst", "developers_guide/generated/polaris.streams.read.rst", "developers_guide/generated/polaris.streams.update_defaults.rst", "developers_guide/generated/polaris.streams.update_tree.rst", "developers_guide/generated/polaris.streams.write.rst", "developers_guide/generated/polaris.suite.setup_suite.rst", "developers_guide/generated/polaris.validate.compare_timers.rst", "developers_guide/generated/polaris.validate.compare_variables.rst", "developers_guide/generated/polaris.viz.globe.plot_global.rst", "developers_guide/generated/polaris.viz.plot_horiz_field.rst", "developers_guide/generated/polaris.yaml.PolarisYaml.rst", "developers_guide/generated/polaris.yaml.PolarisYaml.read.rst", "developers_guide/generated/polaris.yaml.PolarisYaml.update.rst", "developers_guide/generated/polaris.yaml.PolarisYaml.write.rst", "developers_guide/generated/polaris.yaml.main_mpas_to_yaml.rst", "developers_guide/generated/polaris.yaml.mpas_namelist_and_streams_to_yaml.rst", "developers_guide/generated/polaris.yaml.yaml_to_mpas_streams.rst", "developers_guide/machines/anvil.md", "developers_guide/machines/chicoma.md", "developers_guide/machines/chrysalis.md", "developers_guide/machines/compy.md", "developers_guide/machines/index.md", "developers_guide/machines/perlmutter.md", "developers_guide/ocean/api.md", "developers_guide/ocean/framework.md", "developers_guide/ocean/generated/polaris.ocean.Ocean.rst", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.rst", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.compute_cell_count.rst", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.constrain_resources.rst", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.map_yaml_to_namelist.rst", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.setup.rst", "developers_guide/ocean/generated/polaris.ocean.rpe.compute_rpe.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.BaroclinicChannel.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.BaroclinicChannelTestCase.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.BaroclinicChannelTestCase.validate.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.decomp_test.DecompTest.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.decomp_test.DecompTest.validate.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.default.Default.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.default.Default.validate.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.forward.Forward.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.forward.Forward.compute_cell_count.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.forward.Forward.dynamic_model_config.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.initial_state.InitialState.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.initial_state.InitialState.run.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.initial_state.InitialState.setup.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.restart_test.RestartTest.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.restart_test.RestartTest.validate.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.restart_test.restart_step.RestartStep.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.restart_test.restart_step.RestartStep.dynamic_model_config.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.rpe_test.RpeTest.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.rpe_test.RpeTest.configure.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.rpe_test.RpeTest.validate.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.rpe_test.analysis.Analysis.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.rpe_test.analysis.Analysis.run.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.rpe_test.analysis.Analysis.setup.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.threads_test.ThreadsTest.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.threads_test.ThreadsTest.validate.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.viz.Viz.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.viz.Viz.run.rst", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.GlobalConvergence.rst", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.CosineBell.rst", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.CosineBell.configure.rst", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.CosineBell.validate.rst", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.analysis.Analysis.rst", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.analysis.Analysis.rmse.rst", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.analysis.Analysis.run.rst", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.forward.Forward.rst", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.forward.Forward.compute_cell_count.rst", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.forward.Forward.dynamic_model_config.rst", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.init.Init.rst", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.init.Init.run.rst", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.viz.Viz.rst", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.viz.Viz.run.rst", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.viz.VizMap.rst", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.viz.VizMap.run.rst", "developers_guide/ocean/generated/polaris.ocean.tests.inertial_gravity_wave.InertialGravityWave.rst", "developers_guide/ocean/generated/polaris.ocean.tests.inertial_gravity_wave.analysis.Analysis.rst", "developers_guide/ocean/generated/polaris.ocean.tests.inertial_gravity_wave.analysis.Analysis.run.rst", "developers_guide/ocean/generated/polaris.ocean.tests.inertial_gravity_wave.convergence.Convergence.rst", "developers_guide/ocean/generated/polaris.ocean.tests.inertial_gravity_wave.convergence.Convergence.validate.rst", "developers_guide/ocean/generated/polaris.ocean.tests.inertial_gravity_wave.exact_solution.ExactSolution.rst", "developers_guide/ocean/generated/polaris.ocean.tests.inertial_gravity_wave.exact_solution.ExactSolution.ssh.rst", "developers_guide/ocean/generated/polaris.ocean.tests.inertial_gravity_wave.forward.Forward.rst", "developers_guide/ocean/generated/polaris.ocean.tests.inertial_gravity_wave.forward.Forward.compute_cell_count.rst", "developers_guide/ocean/generated/polaris.ocean.tests.inertial_gravity_wave.forward.Forward.dynamic_model_config.rst", "developers_guide/ocean/generated/polaris.ocean.tests.inertial_gravity_wave.initial_state.InitialState.rst", "developers_guide/ocean/generated/polaris.ocean.tests.inertial_gravity_wave.initial_state.InitialState.run.rst", "developers_guide/ocean/generated/polaris.ocean.tests.inertial_gravity_wave.viz.Viz.rst", "developers_guide/ocean/generated/polaris.ocean.tests.inertial_gravity_wave.viz.Viz.run.rst", "developers_guide/ocean/generated/polaris.ocean.tests.manufactured_solution.ManufacturedSolution.rst", "developers_guide/ocean/generated/polaris.ocean.tests.manufactured_solution.analysis.Analysis.rst", "developers_guide/ocean/generated/polaris.ocean.tests.manufactured_solution.analysis.Analysis.run.rst", "developers_guide/ocean/generated/polaris.ocean.tests.manufactured_solution.convergence.Convergence.rst", "developers_guide/ocean/generated/polaris.ocean.tests.manufactured_solution.convergence.Convergence.validate.rst", "developers_guide/ocean/generated/polaris.ocean.tests.manufactured_solution.exact_solution.ExactSolution.rst", "developers_guide/ocean/generated/polaris.ocean.tests.manufactured_solution.exact_solution.ExactSolution.ssh.rst", "developers_guide/ocean/generated/polaris.ocean.tests.manufactured_solution.forward.Forward.rst", "developers_guide/ocean/generated/polaris.ocean.tests.manufactured_solution.forward.Forward.compute_cell_count.rst", "developers_guide/ocean/generated/polaris.ocean.tests.manufactured_solution.forward.Forward.dynamic_model_config.rst", "developers_guide/ocean/generated/polaris.ocean.tests.manufactured_solution.initial_state.InitialState.rst", "developers_guide/ocean/generated/polaris.ocean.tests.manufactured_solution.initial_state.InitialState.run.rst", "developers_guide/ocean/generated/polaris.ocean.tests.manufactured_solution.viz.Viz.rst", "developers_guide/ocean/generated/polaris.ocean.tests.manufactured_solution.viz.Viz.run.rst", "developers_guide/ocean/generated/polaris.ocean.tests.single_column.SingleColumn.rst", "developers_guide/ocean/generated/polaris.ocean.tests.single_column.cvmix.CVMix.rst", "developers_guide/ocean/generated/polaris.ocean.tests.single_column.cvmix.CVMix.validate.rst", "developers_guide/ocean/generated/polaris.ocean.tests.single_column.forward.Forward.rst", "developers_guide/ocean/generated/polaris.ocean.tests.single_column.ideal_age.IdealAge.rst", "developers_guide/ocean/generated/polaris.ocean.tests.single_column.ideal_age.IdealAge.validate.rst", "developers_guide/ocean/generated/polaris.ocean.tests.single_column.initial_state.InitialState.rst", "developers_guide/ocean/generated/polaris.ocean.tests.single_column.initial_state.InitialState.run.rst", "developers_guide/ocean/generated/polaris.ocean.tests.single_column.viz.Viz.rst", "developers_guide/ocean/generated/polaris.ocean.tests.single_column.viz.Viz.run.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.grid_1d.generate_1d_grid.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.grid_1d.write_1d_grid.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.init_vertical_coord.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.partial_cells.alter_bottom_depth.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.partial_cells.alter_ssh.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.zlevel.compute_min_max_level_cell.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.zlevel.compute_z_level_layer_thickness.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.zlevel.compute_z_level_resting_thickness.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.zlevel.init_z_level_vertical_coord.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.zstar.init_z_star_vertical_coord.rst", "developers_guide/ocean/index.md", "developers_guide/ocean/models/index.md", "developers_guide/ocean/models/mpas_ocean.md", "developers_guide/ocean/test_groups/baroclinic_channel.md", "developers_guide/ocean/test_groups/global_convergence.md", "developers_guide/ocean/test_groups/index.md", "developers_guide/ocean/test_groups/inertial_gravity_wave.md", "developers_guide/ocean/test_groups/manufactured_solution.md", "developers_guide/ocean/test_groups/single_column.md", "developers_guide/organization/components.md", "developers_guide/organization/directories.md", "developers_guide/organization/index.md", "developers_guide/organization/steps.md", "developers_guide/organization/suites.md", "developers_guide/organization/test_cases.md", "developers_guide/organization/test_groups.md", "developers_guide/overview.md", "developers_guide/quick_start.md", "developers_guide/troubleshooting.md", "glossary.md", "index.md", "tutorials/dev_add_test_group.md", "users_guide/config_files.md", "users_guide/machines/anvil.md", "users_guide/machines/chicoma.md", "users_guide/machines/chrysalis.md", "users_guide/machines/compy.md", "users_guide/machines/index.md", "users_guide/machines/perlmutter.md", "users_guide/ocean/framework/index.md", "users_guide/ocean/framework/vertical.md", "users_guide/ocean/index.md", "users_guide/ocean/suites.md", "users_guide/ocean/test_groups/baroclinic_channel.md", "users_guide/ocean/test_groups/global_convergence.md", "users_guide/ocean/test_groups/index.md", "users_guide/ocean/test_groups/inertial_gravity_wave.md", "users_guide/ocean/test_groups/manufactured_solution.md", "users_guide/ocean/test_groups/single_column.md", "users_guide/ocean/test_groups/template.md", "users_guide/quick_start.md", "users_guide/test_cases.md", "users_guide/test_suites.md"], "titles": ["Design Documents", "Template", "API reference", "Building the Documentation", "Command-line interface", "Documentation", "Modules for polaris commands", "Config files", "Framework", "IO", "Logging", "Mesh", "Model", "Provenance", "Remapping", "Validation", "Visualization", "polaris.Component", "polaris.Component.add_test_group", "polaris.ModelStep", "polaris.ModelStep.add_model_config_options", "polaris.ModelStep.add_namelist_file", "polaris.ModelStep.add_streams_file", "polaris.ModelStep.add_yaml_file", "polaris.ModelStep.dynamic_model_config", "polaris.ModelStep.map_yaml_to_namelist", "polaris.ModelStep.partition", "polaris.ModelStep.process_inputs_and_outputs", "polaris.ModelStep.runtime_setup", "polaris.ModelStep.set_model_resources", "polaris.ModelStep.setup", "polaris.ModelStep.update_namelist_pio", "polaris.Step", "polaris.Step.add_dependency", "polaris.Step.add_input_file", "polaris.Step.add_output_file", "polaris.Step.constrain_resources", "polaris.Step.run", "polaris.Step.runtime_setup", "polaris.Step.set_resources", "polaris.Step.setup", "polaris.TestCase", "polaris.TestCase.add_step", "polaris.TestCase.configure", "polaris.TestCase.validate", "polaris.TestGroup", "polaris.TestGroup.add_test_case", "polaris.__main__.main", "polaris.cache.update_cache", "polaris.components.get_components", "polaris.config.PolarisConfigParser", "polaris.io.download", "polaris.io.imp_res", "polaris.io.symlink", "polaris.job.get_slurm_options", "polaris.job.write_job_script", "polaris.list.list_cases", "polaris.list.list_machines", "polaris.list.list_suites", "polaris.logging.log_method_call", "polaris.mesh.IcosahedralMeshStep", "polaris.mesh.IcosahedralMeshStep.build_subdivisions_cell_width_lat_lon", "polaris.mesh.IcosahedralMeshStep.get_cell_width", "polaris.mesh.IcosahedralMeshStep.get_subdivisions", "polaris.mesh.IcosahedralMeshStep.make_jigsaw_mesh", "polaris.mesh.IcosahedralMeshStep.run", "polaris.mesh.IcosahedralMeshStep.setup", "polaris.mesh.QuasiUniformSphericalMeshStep", "polaris.mesh.QuasiUniformSphericalMeshStep.build_cell_width_lat_lon", "polaris.mesh.QuasiUniformSphericalMeshStep.make_jigsaw_mesh", "polaris.mesh.QuasiUniformSphericalMeshStep.run", "polaris.mesh.QuasiUniformSphericalMeshStep.setup", "polaris.mesh.planar.compute_planar_hex_nx_ny", "polaris.mesh.spherical.SphericalBaseStep", "polaris.mesh.spherical.SphericalBaseStep.run", "polaris.mesh.spherical.SphericalBaseStep.save_and_plot_cell_width", "polaris.mesh.spherical.SphericalBaseStep.setup", "polaris.model_step.make_graph_file", "polaris.namelist.ingest", "polaris.namelist.parse_replacements", "polaris.namelist.replace", "polaris.namelist.write", "polaris.parallel.get_available_parallel_resources", "polaris.parallel.get_parallel_command", "polaris.parallel.run_command", "polaris.parallel.set_cores_per_node", "polaris.provenance.write", "polaris.remap.MappingFileStep", "polaris.remap.MappingFileStep.dst_from_lon_lat", "polaris.remap.MappingFileStep.dst_from_mpas", "polaris.remap.MappingFileStep.dst_from_points", "polaris.remap.MappingFileStep.dst_from_proj", "polaris.remap.MappingFileStep.dst_global_lon_lat", "polaris.remap.MappingFileStep.get_remapper", "polaris.remap.MappingFileStep.runtime_setup", "polaris.remap.MappingFileStep.src_from_lon_lat", "polaris.remap.MappingFileStep.src_from_mpas", "polaris.remap.MappingFileStep.src_from_proj", "polaris.run.serial.run_single_step", "polaris.run.serial.run_tests", "polaris.run.setup_config", "polaris.run.unpickle_suite", "polaris.setup.setup_case", "polaris.setup.setup_cases", "polaris.streams.read", "polaris.streams.update_defaults", "polaris.streams.update_tree", "polaris.streams.write", "polaris.suite.setup_suite", "polaris.validate.compare_timers", "polaris.validate.compare_variables", "polaris.viz.globe.plot_global", "polaris.viz.plot_horiz_field", "polaris.yaml.PolarisYaml", "polaris.yaml.PolarisYaml.read", "polaris.yaml.PolarisYaml.update", "polaris.yaml.PolarisYaml.write", "polaris.yaml.main_mpas_to_yaml", "polaris.yaml.mpas_namelist_and_streams_to_yaml", "polaris.yaml.yaml_to_mpas_streams", "Anvil", "Chicoma", "Chrysalis", "CompyMcNodeFace", "Machines", "Perlmutter", "ocean", "Ocean framework", "polaris.ocean.Ocean", "polaris.ocean.model.OceanModelStep", "polaris.ocean.model.OceanModelStep.compute_cell_count", "polaris.ocean.model.OceanModelStep.constrain_resources", "polaris.ocean.model.OceanModelStep.map_yaml_to_namelist", "polaris.ocean.model.OceanModelStep.setup", "polaris.ocean.rpe.compute_rpe", "polaris.ocean.tests.baroclinic_channel.BaroclinicChannel", "polaris.ocean.tests.baroclinic_channel.BaroclinicChannelTestCase", "polaris.ocean.tests.baroclinic_channel.BaroclinicChannelTestCase.validate", "polaris.ocean.tests.baroclinic_channel.decomp_test.DecompTest", "polaris.ocean.tests.baroclinic_channel.decomp_test.DecompTest.validate", "polaris.ocean.tests.baroclinic_channel.default.Default", "polaris.ocean.tests.baroclinic_channel.default.Default.validate", "polaris.ocean.tests.baroclinic_channel.forward.Forward", "polaris.ocean.tests.baroclinic_channel.forward.Forward.compute_cell_count", "polaris.ocean.tests.baroclinic_channel.forward.Forward.dynamic_model_config", "polaris.ocean.tests.baroclinic_channel.initial_state.InitialState", "polaris.ocean.tests.baroclinic_channel.initial_state.InitialState.run", "polaris.ocean.tests.baroclinic_channel.initial_state.InitialState.setup", "polaris.ocean.tests.baroclinic_channel.restart_test.RestartTest", "polaris.ocean.tests.baroclinic_channel.restart_test.RestartTest.validate", "polaris.ocean.tests.baroclinic_channel.restart_test.restart_step.RestartStep", "polaris.ocean.tests.baroclinic_channel.restart_test.restart_step.RestartStep.dynamic_model_config", "polaris.ocean.tests.baroclinic_channel.rpe_test.RpeTest", "polaris.ocean.tests.baroclinic_channel.rpe_test.RpeTest.configure", "polaris.ocean.tests.baroclinic_channel.rpe_test.RpeTest.validate", "polaris.ocean.tests.baroclinic_channel.rpe_test.analysis.Analysis", "polaris.ocean.tests.baroclinic_channel.rpe_test.analysis.Analysis.run", "polaris.ocean.tests.baroclinic_channel.rpe_test.analysis.Analysis.setup", "polaris.ocean.tests.baroclinic_channel.threads_test.ThreadsTest", "polaris.ocean.tests.baroclinic_channel.threads_test.ThreadsTest.validate", "polaris.ocean.tests.baroclinic_channel.viz.Viz", "polaris.ocean.tests.baroclinic_channel.viz.Viz.run", "polaris.ocean.tests.global_convergence.GlobalConvergence", "polaris.ocean.tests.global_convergence.cosine_bell.CosineBell", "polaris.ocean.tests.global_convergence.cosine_bell.CosineBell.configure", "polaris.ocean.tests.global_convergence.cosine_bell.CosineBell.validate", "polaris.ocean.tests.global_convergence.cosine_bell.analysis.Analysis", "polaris.ocean.tests.global_convergence.cosine_bell.analysis.Analysis.rmse", "polaris.ocean.tests.global_convergence.cosine_bell.analysis.Analysis.run", "polaris.ocean.tests.global_convergence.cosine_bell.forward.Forward", "polaris.ocean.tests.global_convergence.cosine_bell.forward.Forward.compute_cell_count", "polaris.ocean.tests.global_convergence.cosine_bell.forward.Forward.dynamic_model_config", "polaris.ocean.tests.global_convergence.cosine_bell.init.Init", "polaris.ocean.tests.global_convergence.cosine_bell.init.Init.run", "polaris.ocean.tests.global_convergence.cosine_bell.viz.Viz", "polaris.ocean.tests.global_convergence.cosine_bell.viz.Viz.run", "polaris.ocean.tests.global_convergence.cosine_bell.viz.VizMap", "polaris.ocean.tests.global_convergence.cosine_bell.viz.VizMap.run", "polaris.ocean.tests.inertial_gravity_wave.InertialGravityWave", "polaris.ocean.tests.inertial_gravity_wave.analysis.Analysis", "polaris.ocean.tests.inertial_gravity_wave.analysis.Analysis.run", "polaris.ocean.tests.inertial_gravity_wave.convergence.Convergence", "polaris.ocean.tests.inertial_gravity_wave.convergence.Convergence.validate", "polaris.ocean.tests.inertial_gravity_wave.exact_solution.ExactSolution", "polaris.ocean.tests.inertial_gravity_wave.exact_solution.ExactSolution.ssh", "polaris.ocean.tests.inertial_gravity_wave.forward.Forward", "polaris.ocean.tests.inertial_gravity_wave.forward.Forward.compute_cell_count", "polaris.ocean.tests.inertial_gravity_wave.forward.Forward.dynamic_model_config", "polaris.ocean.tests.inertial_gravity_wave.initial_state.InitialState", "polaris.ocean.tests.inertial_gravity_wave.initial_state.InitialState.run", "polaris.ocean.tests.inertial_gravity_wave.viz.Viz", "polaris.ocean.tests.inertial_gravity_wave.viz.Viz.run", "polaris.ocean.tests.manufactured_solution.ManufacturedSolution", "polaris.ocean.tests.manufactured_solution.analysis.Analysis", "polaris.ocean.tests.manufactured_solution.analysis.Analysis.run", "polaris.ocean.tests.manufactured_solution.convergence.Convergence", "polaris.ocean.tests.manufactured_solution.convergence.Convergence.validate", "polaris.ocean.tests.manufactured_solution.exact_solution.ExactSolution", "polaris.ocean.tests.manufactured_solution.exact_solution.ExactSolution.ssh", "polaris.ocean.tests.manufactured_solution.forward.Forward", "polaris.ocean.tests.manufactured_solution.forward.Forward.compute_cell_count", "polaris.ocean.tests.manufactured_solution.forward.Forward.dynamic_model_config", "polaris.ocean.tests.manufactured_solution.initial_state.InitialState", "polaris.ocean.tests.manufactured_solution.initial_state.InitialState.run", "polaris.ocean.tests.manufactured_solution.viz.Viz", "polaris.ocean.tests.manufactured_solution.viz.Viz.run", "polaris.ocean.tests.single_column.SingleColumn", "polaris.ocean.tests.single_column.cvmix.CVMix", "polaris.ocean.tests.single_column.cvmix.CVMix.validate", "polaris.ocean.tests.single_column.forward.Forward", "polaris.ocean.tests.single_column.ideal_age.IdealAge", "polaris.ocean.tests.single_column.ideal_age.IdealAge.validate", "polaris.ocean.tests.single_column.initial_state.InitialState", "polaris.ocean.tests.single_column.initial_state.InitialState.run", "polaris.ocean.tests.single_column.viz.Viz", "polaris.ocean.tests.single_column.viz.Viz.run", "polaris.ocean.vertical.grid_1d.generate_1d_grid", "polaris.ocean.vertical.grid_1d.write_1d_grid", "polaris.ocean.vertical.init_vertical_coord", "polaris.ocean.vertical.partial_cells.alter_bottom_depth", "polaris.ocean.vertical.partial_cells.alter_ssh", "polaris.ocean.vertical.zlevel.compute_min_max_level_cell", "polaris.ocean.vertical.zlevel.compute_z_level_layer_thickness", "polaris.ocean.vertical.zlevel.compute_z_level_resting_thickness", "polaris.ocean.vertical.zlevel.init_z_level_vertical_coord", "polaris.ocean.vertical.zstar.init_z_star_vertical_coord", "Ocean component", "Models", "MPAS-Ocean", "baroclinic_channel", "global_convergence", "Test groups", "inertial_gravity_wave", "manufactured_solution", "single_column", "Components", "Directory structure", "Organization of Tests", "Steps", "Test Suites", "Test cases", "Test Groups", "Overview", "Quick Start for Developers", "Troubleshooting", "Glossary", "Polaris", "Developer Tutorial: Adding a new test group", "Config Files", "Anvil", "Chicoma", "Chrysalis", "CompyMcNodeFace", "Machines", "Perlmutter", "Framework", "Vertical coordinate", "Ocean component", "Test suites", "baroclinic_channel", "global_convergence", "Test groups", "inertial gravity wave", "manufactured_solution", "single_column", "test_group_name", "Quick Start for Users", "Test Cases", "Test Suites"], "terms": {"templat": [0, 4, 5, 22, 23, 24, 104, 114, 118, 144, 151, 246, 247, 248], "date": [1, 4, 48, 226, 243, 248], "yyyi": 1, "mm": 1, "dd": 1, "contributor": 1, "The": [1, 4, 5, 6, 7, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 26, 32, 33, 34, 35, 38, 40, 41, 42, 45, 46, 48, 50, 51, 53, 55, 56, 59, 60, 61, 62, 63, 64, 67, 68, 72, 73, 77, 79, 83, 84, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 99, 100, 101, 102, 103, 104, 108, 109, 110, 111, 112, 113, 114, 118, 119, 124, 127, 128, 129, 130, 136, 138, 140, 142, 143, 145, 147, 148, 150, 152, 155, 157, 158, 160, 163, 166, 167, 169, 170, 172, 174, 176, 179, 181, 185, 186, 188, 190, 193, 195, 199, 200, 202, 204, 207, 209, 210, 212, 214, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 232, 233, 234, 235, 236, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267], "purpos": [1, 45, 241, 242, 245, 247, 267], "thi": [1, 2, 4, 5, 6, 7, 9, 10, 11, 12, 14, 15, 19, 24, 25, 29, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 48, 50, 55, 59, 60, 61, 64, 65, 67, 68, 69, 70, 73, 74, 83, 84, 86, 87, 93, 99, 109, 110, 120, 121, 122, 123, 124, 125, 127, 129, 130, 132, 135, 136, 138, 140, 142, 143, 144, 145, 146, 147, 148, 150, 151, 152, 153, 155, 156, 157, 158, 160, 161, 162, 163, 166, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 210, 212, 213, 214, 215, 226, 229, 230, 232, 233, 234, 235, 236, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 253, 254, 256, 259, 260, 262, 263, 264, 265, 266, 268], "section": [1, 2, 4, 5, 7, 10, 12, 14, 19, 25, 68, 111, 115, 127, 129, 132, 216, 218, 224, 225, 226, 234, 235, 238, 239, 241, 242, 243, 244, 247, 248, 249, 250, 251, 252, 253, 254, 256, 260, 264, 265, 266], "i": [1, 4, 5, 6, 7, 9, 10, 11, 12, 14, 15, 16, 19, 24, 29, 32, 33, 34, 38, 39, 41, 48, 51, 53, 67, 68, 73, 83, 84, 87, 91, 97, 98, 99, 102, 104, 106, 109, 110, 112, 114, 119, 120, 122, 123, 124, 127, 129, 130, 142, 143, 144, 151, 170, 171, 185, 186, 187, 199, 200, 201, 209, 218, 224, 225, 226, 227, 228, 229, 230, 232, 233, 234, 235, 236, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 259, 260, 262, 263, 264, 265, 267, 268], "summar": 1, "what": [1, 9, 11, 14, 124, 242, 247, 254, 265, 266], "capabl": [1, 14, 124, 238, 242, 247, 253, 266], "ad": [1, 4, 5, 7, 8, 9, 14, 15, 33, 34, 40, 43, 50, 110, 136, 147, 157, 218, 224, 225, 240, 241, 243, 246, 249, 250, 251, 252, 254, 266], "polari": [1, 3, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 120, 122, 123, 124, 127, 226, 227, 229, 230, 232, 233, 234, 235, 236, 237, 239, 240, 241, 244, 245, 247, 248, 249, 250, 251, 252, 253, 254, 257, 258, 267, 268], "through": [1, 103, 242, 243, 247], "process": [1, 6, 12, 27, 83, 84, 119, 238, 242, 243, 245, 246, 247], "It": [1, 4, 12, 14, 32, 38, 111, 229, 232, 233, 238, 239, 240, 241, 242, 243, 245, 247, 248, 253, 262, 263], "should": [1, 4, 5, 7, 10, 12, 15, 20, 25, 33, 34, 40, 41, 43, 51, 55, 68, 102, 103, 110, 111, 112, 120, 121, 122, 123, 124, 125, 127, 132, 147, 157, 226, 235, 238, 239, 240, 241, 243, 244, 247, 248, 259, 260, 264, 265, 266], "clear": [1, 242, 247], "new": [1, 4, 12, 17, 20, 32, 41, 45, 50, 53, 60, 67, 73, 87, 105, 106, 142, 150, 169, 183, 185, 197, 199, 209, 218, 224, 225, 238, 242, 243, 244, 245, 246, 266], "code": [1, 4, 5, 7, 10, 12, 32, 127, 226, 235, 238, 239, 240, 245, 246, 248, 255, 259, 264, 266], "do": [1, 4, 7, 9, 12, 14, 15, 114, 238, 240, 243, 244, 245, 247, 253, 260, 266], "current": [1, 4, 6, 9, 19, 29, 32, 39, 109, 110, 124, 129, 209, 226, 230, 234, 235, 238, 242, 243, 245, 246, 247, 248, 253, 256, 259, 260, 262, 263, 264, 266, 267, 268], "doe": [1, 7, 10, 12, 238, 246, 247, 253], "primari": [1, 4, 7, 247, 268], "challeng": 1, "respect": [1, 6, 7, 12, 16, 127, 238, 242, 260, 265], "softwar": [1, 77, 254, 266], "also": [1, 4, 5, 7, 11, 12, 15, 16, 27, 38, 50, 109, 110, 111, 127, 174, 218, 224, 225, 226, 232, 233, 234, 235, 236, 238, 240, 241, 242, 243, 247, 248, 253, 254, 256, 260, 262, 263, 265, 266, 267], "appropri": [1, 4, 12, 20, 72, 124, 226, 229, 232, 233, 234, 235, 238, 241, 243, 246, 247, 248, 249, 250, 251, 252, 253, 254, 265, 266], "final": [1, 5, 229, 230, 232, 233, 234, 236, 238, 240, 247, 260], "statement": [1, 10, 238, 245], "contain": [1, 4, 5, 6, 7, 14, 16, 17, 21, 22, 23, 36, 49, 52, 79, 82, 88, 89, 90, 91, 95, 96, 97, 104, 112, 113, 127, 134, 218, 224, 225, 235, 236, 237, 238, 242, 243, 245, 247, 248, 253, 257, 262, 263, 265, 266], "gener": [1, 2, 3, 5, 6, 10, 12, 15, 16, 20, 21, 22, 23, 27, 40, 67, 110, 127, 147, 157, 216, 226, 228, 229, 230, 232, 233, 234, 235, 238, 243, 247, 248, 253, 260, 262, 263, 266], "regard": 1, "success": [1, 51, 226, 235, 247, 248], "last": [1, 239, 243, 259, 266], "modifi": [1, 6, 7, 11, 12, 19, 31, 43, 104, 106, 129, 153, 229, 232, 233, 238, 240, 241, 243, 246, 247, 248, 259, 266], "add": [1, 4, 5, 7, 11, 12, 18, 20, 21, 22, 23, 24, 33, 34, 35, 42, 43, 46, 66, 71, 76, 104, 105, 106, 114, 115, 118, 119, 144, 151, 229, 235, 238, 240, 241, 242, 243, 245, 247, 248, 254, 260], "your": [1, 3, 4, 9, 124, 226, 242, 243, 244, 247, 248, 249, 250, 253, 254, 260, 266], "list": [1, 5, 7, 12, 15, 19, 32, 41, 42, 48, 49, 83, 84, 99, 102, 103, 108, 109, 110, 134, 155, 163, 166, 179, 190, 193, 195, 204, 238, 239, 240, 241, 242, 243, 245, 246, 247, 248, 250, 253, 254, 260, 266, 267, 268], "appear": [1, 124, 238, 247], "each": [1, 4, 5, 6, 10, 11, 12, 14, 15, 38, 41, 56, 62, 63, 72, 103, 119, 124, 127, 139, 149, 159, 163, 218, 219, 220, 221, 222, 223, 224, 225, 228, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 245, 247, 248, 253, 256, 259, 260, 262, 263, 265, 266, 268], "under": [1, 14, 32, 33, 109, 124, 127, 228, 238, 239, 243, 246, 256, 267], "head": [1, 228, 250], "one": [1, 4, 5, 8, 12, 14, 15, 16, 19, 31, 32, 34, 41, 48, 53, 102, 103, 108, 110, 127, 129, 137, 139, 141, 148, 149, 154, 159, 182, 196, 208, 211, 226, 229, 232, 233, 234, 238, 240, 241, 242, 243, 244, 245, 246, 248, 253, 254, 256, 259, 260, 262, 263, 265, 266, 267, 268], "correspond": [1, 5, 15, 109, 110, 127, 226, 238, 243, 259], "between": [1, 4, 6, 10, 11, 12, 14, 15, 19, 31, 34, 61, 68, 69, 72, 75, 87, 93, 109, 110, 129, 148, 183, 197, 218, 224, 225, 230, 235, 238, 241, 242, 253, 256, 259, 262, 263], "propos": 1, "discuss": [1, 127, 238, 240, 241, 242, 247, 259, 260], "technic": [1, 5], "issu": [1, 238, 239, 243, 260, 262, 263], "rather": [1, 6, 7, 9, 11, 12, 32, 34, 50, 124, 229, 238, 240, 241, 243, 244, 247, 256], "focu": [1, 247], "model": [1, 4, 8, 19, 20, 24, 25, 27, 32, 34, 102, 103, 108, 113, 118, 120, 121, 122, 123, 124, 125, 138, 142, 144, 148, 150, 151, 152, 158, 171, 187, 201, 209, 226, 229, 232, 233, 234, 235, 239, 240, 242, 243, 244, 245, 246, 248, 249, 250, 251, 252, 253, 254, 259, 262, 263, 265], "To": [1, 4, 10, 14, 15, 110, 124, 127, 226, 238, 242, 243, 247, 249, 250, 251, 252, 253, 254, 256, 260, 266], "extent": [1, 11, 14, 247, 259], "possibl": [1, 6, 9, 63, 127, 228, 238, 239, 242, 247, 256], "rel": [1, 4, 7, 14, 15, 34, 35, 48, 50, 102, 103, 108, 109, 110, 226, 235, 238, 242, 243, 245, 247, 259, 266, 267], "independ": [1, 4, 239, 245], "other": [1, 4, 5, 6, 7, 8, 11, 14, 16, 32, 33, 35, 50, 120, 139, 149, 159, 230, 234, 235, 236, 240, 241, 242, 243, 244, 245, 246, 248, 249, 259, 267], "thu": [1, 5, 12, 247], "allow": [1, 6, 14, 15, 19, 29, 32, 39, 50, 110, 127, 129, 238, 241, 245, 247, 248, 253, 256, 260, 267], "clean": [1, 238, 240, 243], "plan": [1, 11, 226, 232, 233, 238, 245, 262, 263, 267], "For": [1, 2, 4, 5, 10, 12, 14, 16, 103, 120, 228, 229, 232, 233, 234, 238, 242, 243, 245, 247, 248, 249, 257, 260, 262, 263, 266, 267], "you": [1, 3, 4, 5, 7, 9, 10, 11, 12, 14, 15, 16, 120, 121, 122, 123, 124, 125, 226, 235, 238, 240, 242, 243, 244, 245, 247, 248, 249, 250, 251, 252, 253, 254, 260, 266, 267, 268], "can": [1, 3, 4, 5, 6, 7, 9, 10, 11, 12, 14, 15, 16, 29, 32, 33, 34, 39, 41, 44, 64, 67, 69, 88, 92, 93, 95, 102, 103, 108, 110, 120, 121, 122, 123, 124, 125, 127, 226, 229, 232, 233, 235, 236, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 258, 259, 260, 262, 263, 266, 267, 268], "provid": [1, 2, 4, 6, 7, 12, 14, 15, 16, 34, 91, 97, 109, 110, 114, 127, 137, 139, 141, 149, 154, 159, 182, 196, 208, 211, 226, 229, 230, 232, 233, 234, 235, 236, 238, 239, 241, 242, 243, 244, 245, 246, 247, 248, 253, 257, 260, 265, 266], "an": [1, 2, 4, 5, 7, 9, 11, 14, 15, 16, 19, 27, 32, 33, 34, 35, 53, 60, 62, 63, 89, 96, 104, 106, 109, 110, 111, 118, 124, 129, 172, 229, 234, 235, 236, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 250, 253, 256, 262, 266, 267, 268], "intend": [1, 6, 7, 239, 248, 263, 267], "meet": 1, "includ": [1, 4, 5, 6, 7, 11, 12, 15, 16, 34, 40, 41, 51, 99, 111, 124, 127, 136, 147, 157, 163, 229, 230, 234, 236, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 255, 256, 257, 258, 259, 260, 262, 264, 265, 266, 267, 268], "detail": [1, 2, 4, 5, 7, 9, 10, 11, 56, 110, 228, 230, 236, 238, 240, 242, 243, 244, 247, 260, 266], "pde": 1, "solver": [1, 240, 243, 246, 266], "similar": [1, 4, 6, 7, 10, 11, 12, 15, 121, 124, 125, 236, 240, 241, 242, 243, 247, 266], "well": [1, 6, 7, 10, 11, 127, 221, 229, 232, 233, 234, 238, 243, 245, 247, 248, 260, 266, 267], "perform": [1, 4, 6, 12, 14, 15, 37, 38, 40, 44, 60, 109, 110, 140, 142, 147, 152, 157, 162, 169, 177, 185, 199, 207, 209, 210, 226, 229, 230, 232, 233, 234, 238, 239, 240, 245, 246, 247, 248, 253, 259, 268], "In": [1, 5, 6, 7, 9, 12, 14, 15, 32, 127, 230, 236, 238, 239, 240, 241, 242, 243, 246, 247, 248, 253, 256, 260, 262, 265, 266, 267, 268], "steer": 1, "awai": 1, "from": [1, 4, 5, 6, 7, 9, 10, 11, 12, 14, 15, 17, 19, 21, 22, 25, 32, 33, 34, 41, 43, 48, 51, 53, 77, 79, 84, 88, 89, 90, 91, 92, 95, 96, 97, 99, 100, 103, 104, 105, 106, 109, 110, 112, 114, 115, 118, 119, 124, 129, 132, 137, 142, 166, 171, 174, 179, 187, 190, 193, 201, 204, 222, 226, 228, 229, 230, 232, 233, 234, 235, 240, 241, 242, 244, 245, 246, 247, 248, 249, 250, 251, 252, 254, 256, 258, 259, 260, 262, 263, 265, 266, 267, 268], "low": [1, 112], "level": [1, 9, 10, 11, 15, 16, 127, 218, 219, 220, 221, 222, 223, 224, 225, 229, 236, 237, 238, 240, 241, 247, 248, 259, 260, 262, 263, 264, 265, 268], "variabl": [1, 4, 11, 16, 17, 19, 32, 41, 44, 45, 60, 67, 73, 77, 87, 88, 92, 95, 109, 110, 112, 113, 114, 119, 124, 127, 129, 136, 142, 145, 155, 163, 165, 166, 169, 174, 176, 179, 183, 185, 188, 190, 193, 195, 197, 199, 202, 204, 209, 210, 218, 224, 225, 228, 234, 240, 242, 243, 244, 247, 249, 250, 251, 252, 253, 254, 257, 259, 265, 266], "declar": [1, 5], "interfac": [1, 8, 216, 217, 218, 224, 225, 238, 242, 243, 246, 247, 256], "sequenc": [1, 4, 12, 237, 238, 242, 245, 247, 266, 267, 268], "If": [1, 4, 5, 6, 7, 10, 12, 15, 16, 19, 29, 32, 34, 39, 42, 43, 53, 83, 84, 85, 102, 109, 110, 112, 120, 121, 122, 123, 124, 125, 129, 142, 185, 199, 209, 229, 238, 240, 241, 242, 243, 244, 245, 247, 248, 253, 254, 256, 260, 265, 266], "want": [1, 4, 9, 12, 14, 15, 43, 127, 238, 241, 243, 244, 247, 248, 253, 254, 264, 266, 267], "math": 1, "syntax": [1, 247], "almost": [1, 7], "ident": [1, 4, 15, 138, 148, 158, 229, 239, 242, 247, 259], "latex": 1, "b": [1, 4, 243, 245, 247, 266], "2": [1, 11, 12, 15, 33, 158, 228, 229, 236, 239, 243, 247, 248, 250, 253, 256, 259, 260, 262, 263, 266], "2ab": 1, "imag": [1, 5, 16, 111, 112, 241, 247, 265], "keep": [1, 4, 7, 12, 19, 50, 238, 240, 243, 247, 265], "mind": [1, 4, 247], "quit": [1, 236, 238, 240, 247], "small": [1, 7, 38, 238, 241, 247, 249, 250, 255, 256, 264, 266], "jpeg": 1, "ar": [1, 4, 5, 6, 7, 8, 9, 10, 11, 12, 15, 16, 17, 19, 28, 29, 32, 34, 38, 39, 41, 45, 50, 72, 83, 84, 99, 103, 110, 115, 124, 127, 129, 142, 185, 199, 209, 218, 221, 224, 225, 226, 228, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 256, 259, 260, 262, 263, 264, 265, 266, 267, 268], "prefer": [1, 238, 239, 247, 248], "png": [1, 11, 16, 230, 247], "okai": [1, 238, 247], "size": [1, 11, 62, 63, 72, 127, 131, 133, 134, 229, 241, 247, 248, 259, 260, 262, 263, 264, 265], "repo": [1, 4, 226, 246, 247], "exampl": [1, 2, 4, 5, 7, 9, 10, 11, 12, 14, 15, 16, 235, 236, 238, 239, 240, 241, 242, 243, 244, 245, 247, 248, 250, 256, 265, 266, 267, 268], "centric": 1, "pseudo": 1, "link": [1, 5, 9, 12, 34, 53, 124, 238, 241, 243, 247, 253, 257, 266], "actual": [1, 4, 10, 238, 240, 243, 247], "sourc": [1, 5, 14, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 238, 243, 247, 248, 249, 250, 251, 252, 253, 254, 266], "project": [1, 4, 5, 59, 91, 97, 226, 242, 243, 247, 248, 249, 250, 253, 266], "manag": [1, 244, 253], "item": [1, 247], "git": [1, 13, 86, 226, 243, 247, 248, 266], "branch": [1, 4, 124, 226, 235, 238, 243, 247, 266], "timelin": 1, "staf": 1, "via": [1, 4, 12, 238, 243, 253], "block": [1, 240], "like": [1, 4, 5, 6, 7, 8, 9, 12, 15, 88, 92, 95, 127, 236, 238, 241, 242, 243, 244, 246, 247, 248, 253, 259, 260, 266, 267], "def": [1, 5, 7, 9, 10, 14, 16, 235, 238, 240, 241, 242, 247], "example_funct": 1, "foo": [1, 242], "return": [1, 5, 25, 49, 51, 54, 61, 62, 63, 68, 72, 79, 82, 83, 93, 100, 101, 103, 104, 106, 114, 118, 119, 127, 130, 132, 134, 143, 167, 170, 184, 186, 198, 200, 216, 219, 220, 221, 222, 223, 242, 247, 260], "0": [1, 4, 5, 11, 12, 14, 15, 16, 62, 88, 92, 95, 110, 112, 120, 121, 122, 123, 124, 125, 127, 218, 223, 224, 225, 228, 230, 238, 241, 242, 244, 247, 248, 250, 253, 256, 257, 259, 260, 262, 263, 264, 265, 266], "how": [1, 4, 10, 12, 67, 127, 237, 238, 240, 242, 243, 248, 253, 254], "show": [1, 5, 11, 238, 247, 253, 254, 259, 260, 265], "we": [1, 4, 5, 7, 9, 11, 12, 14, 15, 16, 123, 124, 127, 133, 229, 230, 232, 233, 234, 237, 238, 240, 241, 242, 243, 247, 248, 250, 252, 253, 254, 256, 260, 264, 266, 268], "have": [1, 3, 4, 5, 7, 9, 10, 12, 14, 15, 25, 32, 33, 102, 103, 108, 123, 124, 127, 132, 166, 179, 190, 193, 204, 226, 229, 232, 233, 236, 238, 239, 240, 241, 242, 243, 244, 245, 247, 248, 249, 250, 251, 252, 253, 254, 256, 258, 259, 260, 266, 267, 268], "met": 1, "which": [1, 4, 5, 6, 7, 11, 12, 14, 15, 16, 22, 23, 25, 34, 45, 49, 89, 96, 102, 103, 104, 108, 110, 112, 114, 127, 132, 138, 148, 158, 184, 198, 226, 228, 235, 237, 238, 240, 241, 242, 243, 247, 248, 250, 253, 256, 259, 260, 262, 263, 264, 265, 266, 267, 268], "regress": [1, 162, 229, 230, 239, 245, 246, 247, 259, 260, 266, 268], "suit": [1, 5, 10, 15, 32, 41, 55, 56, 98, 99, 101, 103, 124, 229, 237, 238, 240, 243, 245, 246, 247, 248, 249, 250, 251, 252, 254, 257, 259], "would": [1, 4, 7, 12, 15, 19, 29, 32, 39, 42, 83, 84, 87, 110, 127, 129, 142, 185, 199, 209, 229, 236, 238, 240, 241, 242, 243, 244, 247, 253, 256, 266], "thei": [1, 4, 5, 6, 10, 11, 12, 15, 16, 32, 33, 34, 43, 50, 67, 99, 115, 127, 226, 229, 230, 235, 237, 238, 240, 241, 242, 243, 245, 246, 247, 248, 253, 256, 259, 260, 266, 268], "need": [1, 3, 4, 5, 9, 10, 11, 12, 14, 24, 42, 50, 68, 127, 144, 151, 226, 235, 238, 240, 242, 243, 244, 246, 247, 248, 249, 253, 254, 256, 259, 260, 266, 268], "configur": [1, 4, 5, 7, 9, 12, 14, 29, 32, 39, 41, 51, 55, 82, 83, 84, 85, 86, 102, 103, 108, 124, 127, 216, 218, 219, 220, 224, 225, 229, 238, 241, 242, 246, 247, 248, 250, 253, 254, 256, 262, 263, 265, 266, 267], "work": [1, 4, 6, 9, 10, 12, 13, 14, 32, 34, 35, 37, 40, 41, 48, 55, 86, 98, 102, 103, 108, 123, 124, 147, 157, 174, 176, 177, 235, 236, 237, 238, 239, 240, 242, 243, 244, 245, 247, 248, 253, 260, 264, 266, 267], "properli": [1, 120, 122, 123, 247, 248, 266], "addit": [1, 5, 7, 32, 234, 235, 236, 238, 240, 241, 242, 243, 247], "modif": [1, 5, 238], "nightli": [1, 243, 266, 268], "anoth": [1, 5, 7, 8, 11, 14, 15, 32, 33, 34, 109, 110, 226, 238, 240, 241, 242, 243, 245, 247, 248, 259, 266, 267, 268], "might": [1, 9, 12, 14, 16, 238, 241, 243, 247, 248, 253, 266], "made": [1, 4, 14, 32, 35, 41, 110, 238, 240, 242, 245, 247, 267], "ensur": [1, 7, 12, 50, 229, 242, 243, 260, 264], "continu": [1, 238, 247], "expect": [1, 10, 14, 235, 238, 243, 247, 260, 264], "page": [2, 5, 249], "auto": 2, "summari": [2, 250], "more": [2, 4, 7, 9, 10, 11, 12, 14, 15, 32, 41, 48, 68, 102, 103, 127, 228, 229, 230, 236, 238, 239, 240, 242, 243, 245, 253, 257, 259, 260, 265, 266, 267], "relev": [2, 5, 7, 127, 232, 233, 247, 249, 250, 251, 252, 253, 254, 265, 266], "main": [2, 5, 7, 12, 37, 124, 177, 235, 241, 242, 243, 247, 267], "part": [2, 4, 5, 10, 12, 15, 16, 32, 41, 142, 169, 185, 199, 209, 229, 232, 233, 238, 239, 242, 243, 246, 247, 256], "document": [2, 7, 12, 238, 242, 246, 248, 266], "ocean": [2, 4, 5, 7, 8, 9, 11, 12, 15, 16, 17, 25, 34, 45, 108, 227, 229, 230, 232, 233, 234, 235, 237, 238, 240, 241, 242, 243, 245, 246, 247, 248, 253, 255, 256, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268], "As": [3, 4, 11, 15, 62, 127, 238, 239, 240, 241, 242, 243, 247, 248, 256, 260, 264, 268], "long": [3, 19, 29, 32, 39, 83, 84, 129, 142, 185, 199, 209, 238, 247, 259, 266], "follow": [3, 4, 5, 11, 12, 16, 59, 124, 218, 224, 225, 226, 228, 229, 238, 239, 240, 243, 244, 247, 248, 253, 254, 256, 258, 260, 262, 263, 264, 266], "procedur": [3, 124, 243, 247, 254], "conda": [3, 4, 13, 86, 120, 122, 123, 124, 226, 235, 242, 246, 247, 248, 249, 250, 251, 252, 254], "environ": [3, 4, 120, 122, 123, 124, 226, 235, 242, 246, 247, 248, 249, 250, 251, 252, 253, 254], "spack": [3, 4, 120, 122, 123, 124, 244, 246, 247, 249, 250, 251, 252, 253, 254], "compil": [3, 4, 12, 120, 121, 122, 123, 124, 125, 244, 246, 247, 249, 250, 251, 252, 253, 254, 266], "system": [3, 4, 19, 29, 32, 39, 83, 84, 85, 120, 122, 123, 124, 129, 142, 185, 199, 209, 238, 244, 246, 247, 248, 249, 250, 251, 252, 253, 254, 266], "modul": [3, 4, 7, 8, 10, 12, 13, 21, 22, 23, 59, 79, 104, 120, 122, 123, 124, 127, 235, 236, 238, 240, 241, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 258, 266], "set": [3, 4, 5, 6, 7, 8, 9, 12, 14, 15, 20, 21, 22, 23, 24, 32, 34, 40, 68, 85, 86, 88, 89, 90, 91, 92, 94, 95, 96, 97, 100, 102, 103, 104, 106, 108, 109, 110, 111, 112, 120, 121, 122, 123, 124, 125, 142, 144, 147, 151, 157, 162, 164, 171, 187, 201, 209, 218, 224, 225, 226, 228, 229, 230, 232, 233, 234, 237, 238, 240, 241, 242, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 258, 259, 260, 262, 263, 264, 265, 268], "up": [3, 4, 5, 6, 8, 9, 12, 14, 15, 20, 21, 22, 23, 32, 40, 41, 74, 86, 100, 102, 103, 108, 109, 110, 120, 121, 122, 123, 124, 125, 127, 147, 157, 162, 226, 229, 230, 232, 233, 234, 237, 238, 240, 242, 244, 245, 246, 247, 248, 249, 250, 251, 252, 254, 260, 265, 267], "alreadi": [3, 9, 12, 43, 53, 127, 142, 209, 240, 242, 243, 247, 248, 253, 256, 260, 266], "packag": [3, 4, 5, 7, 8, 11, 12, 13, 21, 22, 23, 34, 43, 52, 79, 86, 104, 108, 114, 124, 235, 236, 237, 238, 240, 241, 243, 244, 245, 246, 247, 249, 250, 251, 252, 253, 254, 266], "avail": [3, 4, 5, 9, 12, 15, 16, 19, 29, 32, 35, 36, 39, 49, 56, 82, 83, 84, 129, 142, 185, 199, 209, 230, 238, 240, 242, 243, 247, 249, 250, 251, 252, 254, 259, 266, 268], "Then": [3, 5, 9, 120, 121, 122, 123, 124, 125, 127, 226, 229, 232, 233, 234, 235, 238, 240, 241, 243, 247, 253, 259, 266], "run": [3, 4, 5, 8, 10, 14, 15, 16, 19, 24, 29, 32, 33, 35, 38, 39, 41, 42, 48, 59, 82, 83, 84, 93, 102, 103, 108, 110, 123, 124, 129, 130, 140, 142, 143, 144, 148, 151, 155, 160, 166, 169, 170, 171, 179, 185, 186, 187, 190, 193, 199, 200, 201, 204, 207, 209, 210, 214, 226, 229, 230, 232, 233, 234, 236, 237, 239, 240, 241, 242, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 258, 267, 268], "script": [3, 4, 10, 16, 47, 55, 121, 124, 125, 242, 245, 246, 247, 250, 253], "doc": [3, 5, 240, 247, 254], "cd": [3, 226, 243, 247, 250, 266], "rm": 3, "rf": 3, "developers_guid": [3, 247], "_build": 3, "make": [3, 4, 9, 10, 14, 15, 19, 28, 34, 50, 61, 62, 64, 77, 110, 120, 121, 122, 123, 124, 125, 129, 133, 138, 148, 158, 176, 218, 224, 225, 226, 229, 238, 240, 241, 242, 243, 245, 248, 249, 250, 251, 252, 253, 254, 259, 260, 266, 268], "html": [3, 257], "view": [3, 232, 233, 243, 262, 263], "open": [3, 243, 247], "index": [3, 15, 112, 218, 219, 220, 221, 222, 223, 224, 225, 240, 241, 247], "act": [4, 242, 256], "essenti": [4, 12], "4": [4, 5, 11, 12, 15, 138, 140, 207, 210, 229, 232, 233, 234, 238, 240, 247, 248, 253, 259, 262, 263, 264, 266], "These": [4, 6, 12, 15, 17, 32, 127, 226, 228, 235, 238, 240, 242, 243, 246, 247, 248, 253, 259, 266, 267, 268], "user": [4, 5, 6, 7, 9, 12, 14, 15, 32, 41, 42, 50, 55, 86, 110, 124, 127, 229, 232, 233, 234, 238, 239, 240, 241, 244, 245, 247, 250, 253, 254, 257, 259, 260], "describ": [4, 5, 12, 14, 86, 104, 106, 109, 110, 119, 124, 127, 229, 230, 232, 233, 234, 237, 238, 239, 240, 242, 243, 244, 247, 248, 249, 250, 251, 252, 253, 254, 256, 260, 266], "below": [4, 12, 19, 29, 32, 39, 83, 84, 124, 129, 142, 185, 199, 209, 226, 236, 238, 240, 241, 243, 247, 248, 253, 256, 260, 262, 263, 264, 266], "when": [4, 10, 12, 14, 15, 20, 21, 22, 23, 25, 32, 33, 38, 41, 42, 50, 51, 53, 56, 98, 109, 110, 124, 127, 132, 223, 229, 230, 232, 233, 234, 238, 240, 241, 242, 243, 246, 247, 249, 250, 251, 252, 254, 256, 259, 260, 264, 266, 267], "instal": [4, 243, 247, 253, 254, 266], "abov": [4, 5, 12, 15, 236, 238, 239, 240, 241, 242, 243, 247, 248, 260, 262, 263, 264, 266, 268], "develop": [4, 5, 6, 10, 11, 16, 124, 127, 226, 228, 235, 238, 239, 242, 244, 248, 253, 257, 266], "local": [4, 6, 9, 32, 34, 41, 226, 236, 238, 240, 243, 244, 247, 248, 253, 254, 256], "off": [4, 243, 244], "http": [4, 5, 9, 53, 238, 242, 244, 246, 247, 248, 254, 257, 266], "github": [4, 5, 242, 243, 246, 247, 248, 257, 266], "com": [4, 5, 53, 242, 243, 246, 247, 248, 266], "e3sm": [4, 5, 8, 9, 32, 113, 226, 235, 238, 239, 240, 242, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 256, 257], "creat": [4, 6, 9, 10, 11, 12, 13, 14, 17, 19, 32, 34, 38, 41, 45, 53, 60, 61, 67, 68, 73, 87, 94, 102, 103, 108, 113, 124, 127, 136, 138, 140, 142, 145, 148, 150, 152, 155, 158, 160, 163, 166, 169, 172, 174, 176, 179, 181, 183, 185, 188, 190, 193, 195, 197, 199, 202, 204, 207, 209, 210, 212, 214, 218, 224, 225, 230, 234, 235, 238, 239, 240, 241, 242, 244, 245, 246, 248, 249, 250, 251, 252, 253, 254, 260, 266], "see": [4, 5, 6, 7, 10, 11, 12, 14, 15, 120, 122, 123, 229, 230, 233, 238, 240, 243, 244, 247, 248, 253, 257, 258, 259, 264, 265, 266, 267, 268], "mode": [4, 12, 235, 243, 245, 246, 247, 266], "mean": [4, 15, 167, 230, 232, 233, 243, 247, 256, 259, 262, 263, 268], "chang": [4, 6, 12, 14, 15, 67, 226, 235, 238, 239, 240, 242, 243, 245, 247, 248, 250, 254, 256, 259, 266, 268], "reflect": [4, 243], "call": [4, 6, 8, 9, 10, 11, 12, 14, 15, 16, 19, 27, 32, 38, 41, 42, 43, 59, 93, 98, 124, 127, 229, 232, 233, 234, 235, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 253, 254, 266], "tool": [4, 7, 10, 12, 14, 226, 235, 238, 243, 246, 247, 248], "us": [4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 19, 24, 25, 29, 32, 33, 34, 38, 39, 41, 48, 51, 55, 68, 77, 80, 83, 84, 87, 93, 98, 110, 111, 112, 113, 114, 119, 120, 124, 127, 129, 130, 131, 132, 133, 142, 143, 144, 151, 163, 166, 170, 174, 185, 186, 199, 200, 209, 216, 218, 219, 220, 224, 225, 226, 228, 229, 230, 232, 233, 234, 235, 236, 238, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 256, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268], "test": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 29, 32, 35, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 55, 56, 59, 60, 65, 67, 70, 73, 82, 83, 84, 86, 87, 98, 99, 101, 102, 103, 108, 109, 110, 124, 127, 128, 129, 216, 226, 228, 229, 230, 232, 233, 234, 235, 236, 238, 243, 244, 245, 246, 249, 250, 251, 252, 253, 254, 255, 256, 257, 259, 260, 262, 263, 264, 265], "case": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 22, 23, 29, 32, 35, 39, 40, 41, 42, 43, 44, 45, 46, 48, 55, 56, 60, 65, 67, 70, 73, 82, 83, 84, 86, 87, 98, 99, 102, 103, 104, 108, 109, 110, 124, 127, 128, 129, 135, 136, 138, 140, 142, 145, 146, 147, 148, 150, 152, 153, 155, 156, 157, 158, 160, 161, 163, 164, 166, 168, 169, 172, 174, 175, 176, 178, 179, 180, 181, 183, 185, 188, 189, 190, 191, 192, 193, 194, 195, 197, 199, 202, 203, 204, 205, 206, 207, 209, 210, 212, 213, 214, 215, 216, 226, 228, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 241, 243, 245, 246, 249, 250, 251, 252, 253, 254, 256, 257, 258, 259, 260, 262, 263, 264, 265, 268], "support": [4, 6, 11, 14, 32, 127, 218, 224, 225, 228, 230, 238, 240, 241, 242, 246, 247, 248, 250, 254, 256, 259, 264, 267], "machin": [4, 6, 32, 34, 41, 54, 55, 86, 102, 103, 108, 226, 238, 240, 242, 246, 247, 248, 249, 250, 251, 252, 254], "option": [4, 5, 7, 11, 14, 15, 16, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 32, 33, 34, 39, 41, 42, 43, 48, 50, 51, 53, 54, 55, 56, 60, 66, 67, 68, 71, 73, 77, 79, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 95, 96, 97, 98, 99, 102, 103, 104, 108, 109, 110, 111, 112, 113, 114, 115, 116, 118, 119, 124, 129, 132, 142, 144, 151, 153, 164, 171, 183, 185, 187, 197, 199, 201, 209, 216, 218, 219, 220, 224, 225, 226, 229, 230, 232, 233, 234, 235, 238, 239, 240, 241, 242, 244, 246, 248, 256, 258, 266, 267], "h": [4, 12, 247], "t": [4, 5, 7, 9, 10, 12, 32, 33, 119, 127, 142, 184, 198, 209, 232, 233, 238, 240, 242, 243, 244, 247, 248, 250, 252, 253, 258, 259, 262, 263, 266, 267, 268], "n": [4, 61, 68, 69, 75, 238, 247, 250, 253, 254, 259, 260, 262, 263, 265, 266], "number": [4, 6, 11, 12, 19, 26, 29, 31, 32, 36, 38, 39, 54, 55, 56, 60, 61, 62, 63, 64, 72, 82, 83, 84, 87, 103, 127, 129, 130, 131, 133, 142, 143, 167, 170, 183, 185, 186, 197, 199, 200, 209, 226, 229, 232, 233, 238, 239, 240, 241, 242, 245, 247, 248, 253, 256, 258, 259, 260, 262, 263, 264, 265, 266], "v": [4, 243, 247, 262, 263, 268], "By": [4, 12, 15, 33, 34, 127, 226, 235, 240, 247, 248, 259, 264], "default": [4, 5, 7, 12, 15, 16, 19, 32, 33, 34, 41, 48, 55, 68, 73, 78, 86, 87, 88, 92, 95, 99, 102, 103, 105, 108, 112, 120, 122, 123, 127, 129, 142, 207, 209, 210, 226, 230, 232, 233, 234, 235, 238, 240, 241, 243, 246, 248, 249, 250, 251, 252, 253, 254, 256, 260, 264, 265, 266, 267, 268], "all": [4, 5, 6, 7, 8, 9, 10, 12, 14, 15, 17, 19, 32, 39, 41, 49, 83, 84, 86, 102, 103, 127, 128, 129, 136, 142, 185, 199, 209, 218, 224, 225, 226, 229, 235, 236, 238, 239, 240, 241, 242, 243, 245, 246, 247, 248, 253, 256, 257, 259, 260, 265, 266, 267], "testcas": [4, 6, 9, 14, 15, 19, 32, 46, 60, 67, 73, 87, 102, 103, 109, 110, 129, 142, 145, 150, 155, 160, 173, 174, 176, 179, 185, 188, 193, 199, 202, 209, 212, 214, 238, 242, 247, 248, 259, 264, 266], "example_compact": [4, 226, 235, 248], "1km": [4, 240, 241, 247, 259, 266], "test1": 4, "1": [4, 5, 11, 12, 14, 15, 16, 32, 62, 120, 121, 122, 123, 124, 125, 127, 138, 142, 158, 185, 199, 209, 218, 224, 225, 229, 230, 232, 233, 234, 236, 238, 240, 243, 244, 247, 248, 250, 253, 254, 256, 259, 260, 262, 263, 264, 265, 266], "test2": 4, "displai": [4, 6, 254], "path": [4, 7, 9, 12, 15, 32, 34, 35, 41, 48, 50, 51, 53, 56, 59, 86, 102, 103, 108, 109, 110, 112, 226, 235, 238, 240, 242, 243, 245, 247, 248, 249, 250, 251, 252, 253, 254, 266, 267], "directori": [4, 6, 9, 10, 12, 13, 15, 16, 32, 34, 35, 40, 41, 48, 53, 55, 86, 98, 102, 103, 108, 109, 110, 124, 147, 157, 174, 176, 226, 229, 235, 237, 238, 239, 240, 242, 243, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 260, 266, 267], "help": [4, 11, 236, 238, 243, 246, 247, 253, 257], "messag": [4, 6, 15, 238, 240, 244, 254], "test_expr": [4, 56], "flag": [4, 238, 242, 244, 245, 247, 248, 257, 259, 266], "suppli": [4, 5, 15, 119, 238, 243, 247], "substr": 4, "regular": [4, 16, 56, 61, 68, 163, 166, 247, 249, 252, 253, 254, 266], "express": [4, 56], "subset": 4, "think": [4, 247], "search": [4, 56, 250], "within": [4, 5, 6, 7, 8, 9, 10, 12, 15, 29, 32, 34, 35, 39, 41, 52, 108, 109, 110, 229, 232, 233, 235, 236, 238, 239, 240, 241, 243, 245, 247, 248, 250, 253, 260, 264, 265], "name": [4, 5, 6, 7, 11, 12, 14, 16, 17, 19, 21, 22, 23, 25, 26, 32, 33, 34, 41, 43, 45, 51, 53, 54, 55, 56, 60, 67, 73, 77, 79, 87, 88, 89, 90, 91, 92, 95, 96, 97, 99, 101, 102, 103, 104, 108, 109, 110, 111, 112, 113, 114, 118, 127, 129, 132, 134, 136, 142, 150, 167, 169, 172, 174, 176, 209, 217, 235, 238, 240, 241, 242, 243, 245, 247, 248, 254, 259, 266, 268], "singl": [4, 6, 16, 112, 206, 207, 210, 212, 234, 238, 240, 242, 245, 247, 253, 260, 262, 263, 264], "given": [4, 5, 6, 11, 12, 14, 15, 17, 19, 51, 62, 72, 79, 83, 84, 99, 104, 106, 109, 110, 114, 127, 129, 152, 167, 221, 229, 230, 234, 238, 240, 244, 246, 247, 248, 259, 260, 264, 265, 266, 268], "instead": [4, 10, 12, 19, 99, 120, 124, 238, 240, 242, 243, 247, 249, 266, 268], "pass": [4, 6, 10, 11, 12, 15, 41, 72, 110, 111, 235, 238, 240, 241, 242, 243, 245, 266], "similarli": [4, 6, 226, 238, 243, 253, 266], "compon": [4, 5, 6, 7, 8, 11, 19, 32, 34, 41, 45, 55, 58, 86, 108, 113, 129, 135, 142, 162, 169, 178, 185, 192, 199, 206, 209, 236, 237, 238, 239, 240, 241, 245, 246, 247, 248, 253, 255, 258, 267], "result": [4, 11, 15, 51, 63, 72, 109, 110, 124, 127, 138, 148, 155, 158, 160, 214, 229, 230, 238, 239, 242, 243, 245, 247, 248, 259, 260, 265, 268], "verbos": [4, 56, 58, 238, 247, 268], "about": [4, 5, 6, 10, 12, 15, 32, 87, 113, 127, 238, 240, 241, 242, 243, 247, 248, 250], "its": [4, 5, 6, 10, 14, 16, 32, 43, 93, 105, 235, 236, 238, 239, 240, 241, 242, 243, 245, 247, 248, 249, 260, 266, 267], "descript": [4, 5, 247, 248, 257], "short": [4, 140, 207, 210, 238, 239, 240, 242, 247, 259], "core": [4, 5, 6, 12, 19, 29, 31, 32, 34, 36, 38, 39, 41, 55, 82, 83, 84, 108, 127, 128, 129, 138, 140, 207, 210, 229, 234, 235, 236, 238, 239, 240, 241, 242, 245, 247, 248, 249, 250, 251, 252, 253, 254, 266, 268], "subdirectori": [4, 6, 11, 19, 32, 34, 41, 56, 60, 67, 73, 87, 129, 142, 174, 176, 209, 229, 236, 238, 240, 242, 247, 266, 267], "step": [4, 5, 6, 8, 9, 10, 11, 12, 14, 15, 16, 19, 20, 21, 22, 23, 24, 29, 41, 42, 48, 60, 65, 67, 70, 73, 74, 82, 84, 86, 87, 93, 98, 99, 102, 103, 110, 127, 129, 130, 134, 136, 139, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 154, 155, 156, 157, 159, 160, 161, 163, 166, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 179, 180, 182, 185, 186, 187, 188, 189, 190, 191, 193, 194, 196, 199, 200, 201, 202, 203, 204, 205, 208, 209, 211, 212, 213, 214, 215, 228, 229, 230, 232, 233, 234, 235, 236, 237, 240, 241, 242, 245, 246, 248, 254, 256, 267, 268], "tempat": 4, "subdir": [4, 14, 19, 32, 41, 60, 67, 73, 87, 129, 142, 174, 176, 209, 238, 240, 247], "step1": 4, "step2": 4, "underli": 4, "framework": [4, 5, 7, 10, 11, 12, 15, 41, 98, 110, 226, 235, 238, 240, 241, 245, 246, 247, 257], "must": [4, 5, 9, 12, 15, 16, 19, 22, 23, 32, 35, 37, 108, 111, 112, 127, 129, 177, 228, 238, 240, 241, 243, 247, 256, 267], "built": [4, 12, 102, 103, 108, 226, 235, 243, 246, 248, 253, 266], "execut": [4, 6, 12, 15, 19, 102, 103, 108, 129, 226, 235, 238, 243, 247, 248, 249, 250, 251, 252, 253, 254, 266], "standalon": [4, 12, 123, 235, 243, 245, 246, 253], "mpa": [4, 7, 9, 10, 11, 12, 14, 15, 16, 19, 25, 32, 34, 59, 77, 89, 96, 104, 106, 108, 118, 119, 120, 121, 122, 123, 124, 125, 128, 129, 132, 162, 163, 174, 183, 197, 217, 226, 227, 229, 230, 232, 233, 234, 235, 236, 238, 242, 243, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 257, 259, 262, 264, 265, 266, 267, 268], "befor": [4, 6, 12, 14, 38, 238, 241, 242, 243, 244, 247, 250, 254, 256, 260, 266], "w": [4, 243, 245, 247, 266], "num": 4, "f": [4, 7, 9, 12, 240, 242, 243, 247, 248, 254, 259, 262, 266], "file": [4, 5, 6, 8, 9, 10, 11, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 26, 27, 28, 32, 33, 34, 35, 38, 40, 41, 43, 48, 51, 53, 59, 76, 77, 78, 79, 86, 87, 88, 89, 90, 91, 92, 95, 96, 97, 100, 102, 103, 104, 106, 107, 108, 109, 110, 111, 113, 114, 116, 118, 119, 124, 129, 133, 134, 144, 147, 151, 157, 174, 176, 217, 226, 229, 230, 232, 233, 234, 235, 239, 240, 241, 242, 243, 244, 245, 246, 250, 253, 254, 256, 259, 260, 265, 266, 267], "m": [4, 12, 61, 68, 69, 75, 229, 234, 241, 243, 247, 249, 250, 251, 252, 254, 256, 259, 260, 264, 266], "mach": [4, 32, 249, 250, 251, 252, 253, 254, 266], "p": [4, 243, 247, 248, 266], "suite_nam": [4, 6, 99, 101, 103, 108, 266], "specifi": [4, 12, 14, 15, 16, 34, 228, 238, 243, 247, 248, 254, 259, 260, 265, 266], "either": [4, 5, 6, 10, 11, 12, 14, 62, 127, 226, 238, 243, 245, 247, 248, 256, 264, 266], "onli": [4, 5, 6, 12, 14, 15, 41, 124, 226, 228, 230, 234, 235, 238, 240, 242, 246, 247, 248, 250, 253, 254, 256, 258, 259, 260, 264, 266], "time": [4, 5, 6, 12, 15, 16, 32, 41, 54, 112, 127, 134, 142, 152, 171, 184, 187, 198, 201, 209, 228, 229, 230, 232, 233, 238, 239, 240, 241, 242, 243, 244, 245, 248, 250, 254, 266, 268], "wai": [4, 5, 11, 12, 32, 64, 69, 124, 127, 238, 240, 241, 242, 243, 244, 246, 247, 253, 256, 264], "altern": [4, 11, 266], "ani": [4, 5, 6, 7, 11, 12, 14, 15, 16, 28, 40, 102, 103, 147, 157, 235, 236, 238, 239, 240, 241, 242, 243, 247, 248, 253, 259, 260, 264, 265, 266], "case_numb": 4, "multipl": [4, 5, 12, 15, 227, 239, 242, 243, 247, 253, 259, 266], "separ": [4, 5, 7, 12, 14, 15, 238, 239, 245, 247, 260, 266], "space": [4, 5, 7, 11, 232, 233, 238, 243, 247, 250, 253, 266], "requir": [4, 6, 12, 19, 29, 32, 33, 39, 87, 129, 142, 185, 199, 209, 226, 235, 238, 239, 240, 241, 242, 243, 244, 246, 247, 248, 253, 256, 257, 265, 266, 267], "few": [4, 11, 12, 19, 29, 32, 39, 83, 84, 124, 129, 229, 232, 233, 234, 238, 242, 247, 248, 253], "basic": [4, 5, 248, 250, 253, 266], "piec": [4, 235, 247], "inform": [4, 5, 6, 32, 87, 110, 119, 183, 197, 238, 240, 243, 248, 250, 257, 266], "abl": [4, 120, 121, 122, 123, 125, 127, 238, 239, 241, 243, 247, 253, 266], "place": [4, 12, 15, 111, 238, 240, 247, 253], "download": [4, 6, 8, 32, 34, 40, 147, 157, 240, 242, 243, 248, 266, 268], "some": [4, 6, 7, 8, 9, 11, 12, 15, 41, 228, 229, 236, 238, 240, 241, 242, 243, 244, 247, 248, 249, 250, 251, 252, 253, 254, 256, 257, 266, 267, 268], "data": [4, 8, 11, 14, 15, 16, 20, 32, 33, 34, 93, 104, 106, 107, 111, 112, 113, 119, 124, 174, 218, 224, 225, 238, 243, 246, 248, 249, 250, 251, 252, 253, 266, 267, 268], "locat": [4, 12, 15, 16, 41, 102, 103, 108, 226, 238, 243, 245, 247, 248, 250, 253, 256, 259, 260, 266], "where": [4, 5, 12, 15, 32, 34, 41, 51, 55, 86, 102, 103, 108, 111, 127, 218, 221, 224, 225, 226, 235, 237, 238, 240, 243, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 256, 259, 260, 264, 265, 266, 268], "There": [4, 11, 218, 224, 225, 234, 236, 238, 242, 243, 244, 247, 248, 266], "r": [4, 254, 260], "tell": [4, 243], "re": [4, 238, 242, 243, 245, 247, 248, 253, 254, 260], "leav": [4, 16, 230, 240, 248, 260], "unknown": [4, 124, 242, 253], "component_path": [4, 102, 103, 108, 226, 235, 248, 266], "absolut": [4, 7, 32, 34, 50, 102, 103, 108, 226, 235, 238, 243, 266], "landic": [4, 8, 10, 17, 34, 59, 108, 235, 237, 238, 240, 241, 243, 245, 246, 247, 248, 266, 267, 268], "e3sm_submodul": [4, 226, 235, 243, 247], "mali": [4, 124, 235, 238, 243, 245, 247, 248, 266, 267], "dev": [4, 5, 235, 237, 238, 241, 242, 243, 246, 257, 266], "albani": [4, 120, 122, 123, 124, 235, 248, 249, 250, 251, 254, 266], "depend": [4, 6, 12, 14, 16, 32, 33, 40, 147, 157, 230, 240, 243, 245, 247, 248, 253, 254, 256, 260, 266, 267], "whether": [4, 6, 11, 15, 16, 19, 24, 32, 34, 41, 42, 48, 51, 53, 56, 98, 99, 102, 103, 108, 110, 111, 112, 115, 127, 129, 130, 142, 143, 144, 151, 163, 166, 170, 171, 186, 187, 200, 201, 209, 232, 233, 238, 241, 243, 244, 247, 248, 249, 250, 251, 252, 253, 254, 256, 259, 260, 262, 263, 264, 265, 266], "omega": [4, 25, 113, 129, 132, 183, 197, 226, 235, 242, 243, 245, 247, 257, 262, 263, 266], "config": [4, 5, 6, 8, 9, 10, 11, 14, 15, 16, 19, 20, 23, 24, 25, 32, 33, 34, 41, 43, 51, 54, 55, 66, 68, 71, 82, 83, 84, 85, 86, 100, 102, 103, 108, 110, 111, 113, 114, 115, 116, 118, 119, 124, 129, 132, 144, 151, 164, 171, 183, 187, 197, 201, 216, 218, 219, 220, 224, 225, 226, 229, 230, 232, 233, 234, 235, 238, 239, 240, 241, 242, 243, 244, 246, 256, 266, 267], "point": [4, 47, 53, 90, 226, 228, 235, 240, 241, 242, 243, 247, 248, 253, 266], "much": [4, 12, 238, 247], "config_fil": [4, 102, 103, 108], "work_dir": [4, 9, 15, 32, 41, 55, 86, 102, 103, 108, 109, 110, 238, 240, 247], "base": [4, 6, 11, 12, 13, 15, 17, 32, 34, 36, 41, 45, 48, 66, 71, 73, 102, 103, 108, 124, 131, 133, 218, 219, 220, 221, 222, 223, 224, 225, 226, 229, 230, 232, 233, 234, 235, 237, 238, 240, 241, 242, 243, 245, 247, 248, 249, 250, 251, 252, 253, 254, 256, 259, 267], "": [4, 5, 6, 9, 10, 12, 14, 15, 32, 34, 35, 41, 43, 48, 74, 98, 105, 108, 110, 127, 174, 176, 226, 229, 230, 232, 233, 234, 235, 236, 238, 239, 240, 241, 242, 243, 244, 245, 247, 248, 249, 250, 251, 252, 253, 254, 257, 259, 260, 262, 263, 265, 266], "recommend": [4, 5, 9, 16, 238, 239, 242, 243, 247, 253], "itself": [4, 5, 7, 32, 235, 237, 238, 240, 241, 243, 247, 266], "temp": 4, "scratch": [4, 243, 247, 250, 254, 266], "avoid": [4, 238, 247], "confus": [4, 12, 242, 243, 247], "output": [4, 5, 6, 8, 10, 11, 12, 15, 17, 19, 32, 33, 35, 40, 41, 48, 76, 77, 84, 87, 99, 110, 127, 129, 134, 147, 157, 166, 174, 179, 190, 193, 204, 217, 229, 232, 233, 234, 240, 245, 248, 254, 266, 268], "compar": [4, 8, 15, 41, 102, 103, 108, 109, 110, 137, 139, 141, 149, 154, 159, 182, 196, 208, 211, 230, 234, 239, 242, 243, 245, 247, 258, 259, 266, 268], "previou": [4, 15, 238, 243, 247, 258, 266, 268], "same": [4, 5, 7, 12, 15, 33, 34, 41, 109, 110, 127, 234, 236, 238, 239, 240, 241, 242, 243, 245, 247, 248, 249, 250, 251, 252, 253, 254, 256, 258, 259, 264, 266, 267, 268], "baseline_dir": [4, 41, 102, 103, 108], "mani": [4, 6, 7, 127, 236, 238, 240, 242, 243, 245, 246, 247, 259, 265], "valid": [4, 5, 6, 8, 41, 218, 219, 220, 221, 222, 223, 224, 225, 229, 232, 233, 234, 242, 243, 246, 256, 259], "sure": [4, 10, 14, 15, 110, 124, 138, 148, 158, 226, 229, 238, 242, 243, 245, 247, 248, 253, 254, 259, 260], "timer": [4, 41, 44, 109, 239, 240, 242], "ha": [4, 7, 12, 15, 19, 29, 32, 33, 35, 39, 41, 43, 85, 93, 110, 120, 122, 123, 129, 142, 185, 199, 209, 226, 229, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 243, 244, 245, 247, 248, 256, 259, 264, 266], "both": [4, 5, 6, 11, 12, 15, 24, 110, 127, 144, 151, 229, 237, 238, 241, 243, 246, 247, 248, 258, 262, 263, 264], "custom": [4, 6, 11, 14, 50, 51, 102, 103, 108, 226, 235, 243, 248, 254, 266], "order": [4, 6, 11, 12, 127, 230, 235, 238, 239, 243, 247, 260, 263, 264, 266], "give": [4, 12, 15, 238, 242, 243, 247, 248, 266], "predefin": 4, "so": [4, 5, 7, 10, 11, 12, 15, 16, 19, 31, 124, 127, 129, 218, 224, 225, 226, 229, 232, 233, 235, 238, 240, 242, 243, 245, 247, 248, 253, 254, 256, 259, 260, 264, 266, 268], "after": [4, 5, 12, 14, 16, 32, 34, 35, 74, 93, 124, 219, 220, 226, 235, 238, 240, 243, 247, 248, 250, 254, 266], "c": [4, 103, 124, 238, 243, 249, 250, 251, 252, 253, 254, 258, 266, 268], "argument": [4, 5, 7, 10, 12, 15, 16, 30, 32, 83, 84, 94, 111, 229, 238, 240, 242, 243, 247, 265, 268], "resid": [4, 34], "test_suit": [4, 101, 238], "build": [4, 8, 11, 12, 64, 69, 120, 121, 122, 123, 124, 125, 226, 230, 235, 240, 242, 244, 246, 247, 248, 249, 250, 251, 252, 253, 254], "mpas_model": [4, 248], "overrid": [4, 11, 12, 37, 38, 40, 43, 44, 50, 64, 67, 68, 69, 127, 147, 157, 177, 238, 240, 242, 247, 248, 254, 266], "mai": [4, 5, 6, 10, 11, 12, 15, 33, 35, 38, 111, 124, 127, 226, 228, 238, 239, 240, 241, 243, 244, 245, 247, 248, 254, 260, 264, 265, 266, 267], "baselin": [4, 6, 8, 15, 41, 102, 103, 108, 109, 110, 137, 139, 141, 149, 154, 159, 165, 182, 196, 208, 211, 229, 232, 233, 234, 239, 242, 245, 247, 258, 266], "comparison": [4, 15, 41, 109, 110, 240, 247, 248], "against": [4, 6, 8, 15, 110, 165, 229, 232, 233, 234, 238, 247, 258], "oppos": [4, 24, 130, 143, 144, 151, 163, 166, 170, 171, 186, 187, 200, 201, 247], "task": [4, 6, 8, 9, 12, 14, 19, 26, 29, 31, 32, 36, 38, 39, 82, 83, 84, 87, 127, 129, 131, 133, 142, 185, 199, 209, 229, 232, 233, 238, 242, 245, 246, 247, 249, 250, 251, 252, 253, 254], "parallel": [4, 14, 19, 29, 32, 38, 39, 129, 238, 242, 243, 244, 245, 247, 248, 249, 250, 251, 252, 253, 254, 266, 267], "been": [4, 12, 15, 32, 41, 43, 93, 102, 103, 108, 120, 122, 123, 127, 166, 179, 190, 193, 204, 226, 235, 238, 240, 242, 243, 244, 247, 248, 249, 250, 251, 252, 253, 254, 256, 258, 259, 266], "skip_step": 4, "wherea": [4, 10, 238, 247, 258, 267], "typic": [4, 5, 7, 11, 12, 14, 15, 16, 32, 99, 127, 235, 236, 238, 241, 243, 245, 247, 248, 253, 256, 264, 266, 267], "clone": [4, 226, 236, 243, 247, 266], "than": [4, 6, 7, 9, 11, 12, 32, 34, 39, 50, 124, 142, 185, 199, 209, 229, 238, 239, 242, 243, 244, 247, 256, 259, 264, 268], "just": [4, 12, 19, 29, 32, 39, 56, 124, 129, 238, 242, 243, 245, 247, 250, 254], "pickl": [4, 6, 238, 247, 266], "latter": [4, 41, 124], "conveni": [4, 14, 218, 224, 225, 238, 245, 247, 248, 266], "tab": [4, 266], "complet": [4, 6, 21, 22, 23, 247, 266], "explicitli": [4, 5, 15, 127, 229, 232, 233, 238, 243, 247, 248, 266], "select": [4, 6, 112, 238, 243, 247], "two": [4, 8, 148, 229, 230, 232, 233, 234, 235, 238, 239, 241, 242, 243, 247, 259, 260, 262, 263, 267], "edit": [4, 5, 110, 243, 247, 266], "steps_to_run": [4, 15, 41, 99, 110, 238, 240, 247, 248], "test_cas": [4, 6, 7, 14, 19, 32, 45, 46, 60, 67, 73, 86, 87, 102, 103, 109, 110, 129, 142, 145, 150, 155, 160, 166, 169, 172, 174, 176, 179, 185, 188, 190, 193, 199, 202, 204, 209, 212, 214, 238, 240, 247, 248, 266], "initial_st": [4, 5, 16, 136, 228, 230, 238, 240, 242, 248, 259, 260, 262, 263], "full_run": [4, 149, 259], "restart_run": [4, 149, 259], "Or": [4, 238, 248], "accomplish": [4, 238, 242], "thing": [4, 120, 121, 122, 123, 124, 125, 127, 238, 242, 246], "skip": [4, 6, 15, 110, 240, 268], "take": [4, 5, 9, 11, 12, 15, 50, 238, 239, 241, 243, 247, 260, 268], "preced": [4, 50], "over": [4, 7, 12, 50, 111, 238, 242, 246, 247, 256, 259, 264, 266], "special": [4, 245, 265], "databas": [4, 6, 9, 14, 17, 19, 32, 34, 129, 238, 253], "polaris_cach": [4, 6, 17, 238], "symlink": [4, 6, 12, 32, 34, 240, 242, 243], "input": [4, 6, 8, 9, 14, 27, 32, 33, 34, 35, 40, 77, 147, 157, 229, 232, 233, 234, 247, 264], "structur": [4, 11, 25, 132, 237, 240, 246, 247], "without": [4, 15, 34, 238, 242, 243, 247, 248, 252, 253, 262, 263, 265, 266], "redund": [4, 218, 224, 225, 229, 247], "stamp": 4, "revis": [4, 247, 248], "remov": [4, 12, 15, 99, 229, 232, 233, 243, 247], "older": 4, "ones": [4, 218, 224, 225, 242, 247], "version": [4, 13, 27, 50, 86, 109, 110, 226, 229, 235, 236, 238, 241, 242, 243, 246, 247, 248, 253, 254, 257, 259, 260, 266], "A": [4, 5, 6, 9, 11, 12, 14, 16, 17, 20, 22, 23, 25, 32, 33, 34, 36, 41, 45, 49, 50, 56, 60, 61, 64, 67, 68, 69, 73, 79, 82, 84, 86, 87, 88, 89, 90, 91, 95, 96, 97, 99, 102, 103, 104, 106, 108, 109, 110, 111, 112, 113, 114, 115, 116, 118, 119, 132, 135, 138, 142, 145, 148, 150, 155, 158, 160, 162, 163, 166, 169, 172, 174, 176, 178, 179, 185, 188, 190, 192, 193, 199, 202, 204, 206, 209, 212, 214, 216, 217, 218, 219, 220, 221, 222, 224, 225, 229, 230, 232, 233, 234, 235, 238, 239, 240, 241, 242, 243, 245, 246, 247, 249, 250, 251, 252, 253, 254, 259, 260, 262, 263, 265, 266], "aid": 4, "updat": [4, 5, 6, 19, 21, 23, 28, 29, 38, 39, 105, 123, 131, 142, 209, 226, 229, 232, 233, 238, 244, 246, 247, 266], "cached_fil": [4, 17, 238], "json": [4, 6, 17, 48, 238, 254], "anvil": [4, 124, 238, 248, 253, 266], "chrysali": [4, 124, 238, 247, 248, 253, 266], "sinc": [4, 12, 15, 119, 127, 229, 238, 240, 242, 243, 247, 259, 260, 262, 263, 265], "copi": [4, 6, 34, 48, 102, 103, 108, 247, 250, 266], "onto": [4, 243], "lcrc": [4, 6, 9, 48, 238, 242, 248, 249, 251, 253, 266], "server": [4, 6, 34, 48, 238, 242, 248, 254], "whose": [4, 238], "global_ocean": [4, 7, 9, 12, 235, 238, 240, 242, 243, 248, 266, 268], "qu240": [4, 12, 238, 242, 243, 248, 266, 268], "mesh": [4, 5, 8, 14, 19, 32, 77, 89, 96, 112, 127, 129, 130, 131, 133, 140, 143, 145, 163, 166, 167, 169, 170, 172, 174, 176, 179, 183, 186, 188, 190, 193, 197, 200, 202, 204, 207, 210, 212, 218, 224, 225, 228, 229, 232, 233, 234, 236, 238, 240, 241, 242, 243, 245, 246, 248, 256, 258, 266, 268], "phc": [4, 238, 256, 268], "init": [4, 12, 16, 29, 39, 226, 235, 238, 240, 242, 243, 247, 248, 266, 268], "ocean_cached_fil": 4, "pr": [4, 266, 268], "look": [4, 5, 9, 15, 241, 242, 247, 248], "someth": [4, 5, 88, 92, 95, 243, 247], "culled_mesh": [4, 238, 247], "nc": [4, 9, 10, 11, 12, 14, 15, 16, 87, 238, 240, 242, 247], "210803": 4, "culled_graph": [4, 238, 247], "info": [4, 10, 12, 19, 26, 77, 129, 238, 247], "critical_passages_mask_fin": 4, "init_mode_forcing_data": [4, 238], "date_str": [4, 48], "let": [4, 238, 243, 245, 247, 248, 254], "string": [4, 7, 12, 34, 91, 97, 243], "choos": [4, 238, 242, 243, 247, 249, 250, 251, 252, 254, 267], "todai": [4, 48], "dry_run": [4, 48], "saniti": [4, 247], "check": [4, 15, 110, 243, 245, 247, 248, 250, 254, 266, 268], "print": [4, 10, 15, 56, 110, 115, 238, 242, 268], "stdout": [4, 10, 32, 41, 238], "translat": [4, 25, 127, 132], "compass": [4, 87, 226, 238, 242, 245, 247], "convert": [4, 7, 11, 12, 127, 238, 247], "namelist": [4, 5, 6, 8, 19, 20, 21, 24, 25, 27, 28, 31, 40, 102, 103, 108, 118, 119, 129, 132, 133, 144, 147, 151, 157, 226, 229, 230, 232, 233, 235, 238, 240, 241, 242, 246, 247, 248, 264], "stream": [4, 5, 6, 8, 19, 22, 24, 27, 40, 113, 118, 119, 133, 144, 147, 151, 157, 226, 228, 229, 232, 233, 234, 235, 238, 240, 241, 242, 248, 265], "yaml": [4, 8, 19, 20, 23, 24, 25, 129, 132, 133, 144, 151, 229, 232, 233, 234, 238, 246, 247, 250, 254], "e": [4, 5, 9, 12, 25, 32, 33, 43, 45, 59, 113, 124, 127, 132, 226, 236, 238, 239, 241, 242, 243, 244, 245, 246, 247, 248, 254, 256, 259, 260, 262, 263, 264, 265, 266, 267, 268], "g": [4, 5, 9, 12, 25, 32, 33, 43, 45, 59, 113, 124, 127, 132, 226, 236, 238, 239, 241, 242, 243, 244, 245, 246, 247, 248, 256, 259, 260, 262, 263, 264, 265, 266, 268], "forward": [4, 5, 12, 15, 32, 134, 140, 141, 150, 152, 154, 182, 196, 207, 208, 210, 211, 226, 235, 238, 240, 242, 248, 259, 260, 262, 263, 265], "becaus": [4, 5, 9, 10, 11, 12, 15, 32, 33, 228, 238, 240, 242, 243, 247, 250, 252, 254, 266], "don": [4, 5, 12, 127, 238, 240, 242, 243, 247, 252, 266, 267], "format": [4, 5, 9, 11, 12, 113, 119, 238, 239, 240, 241, 243, 247, 248, 250], "note": [4, 5, 14, 15, 209, 247, 254], "keyword": [4, 5, 12, 15, 16, 230, 238, 240, 260], "top": [4, 16, 218, 219, 220, 221, 222, 223, 224, 225, 228, 236, 247, 256], "ignor": [4, 91, 97], "get": [4, 5, 7, 9, 10, 12, 14, 19, 20, 21, 22, 23, 32, 41, 42, 49, 54, 62, 82, 93, 98, 124, 127, 129, 237, 238, 240, 241, 242, 243, 245, 248, 256, 266], "pars": [4, 7, 12, 20, 21, 22, 23, 79, 104, 106], "valu": [4, 5, 7, 12, 15, 16, 20, 25, 110, 111, 112, 115, 132, 152, 229, 235, 238, 240, 241, 242, 246, 247, 248, 256, 259, 260, 264], "doesn": [4, 7, 119, 238, 240, 247, 248, 253, 266], "matter": [4, 247], "usabl": 4, "sphinx": 5, "written": [5, 6, 32, 41, 55, 111, 112, 238, 240, 247], "myst": [5, 247], "tip": [5, 243], "easi": [5, 34, 242, 247], "start": [5, 6, 12, 105, 228, 229, 239, 241, 242, 246, 250, 253, 254, 257], "exist": [5, 7, 25, 32, 35, 53, 104, 106, 108, 132, 229, 238, 242, 243, 244, 247, 253, 268], "tree": [5, 104, 106, 119], "group": [5, 7, 12, 17, 18, 32, 41, 45, 46, 49, 135, 136, 138, 140, 142, 148, 152, 155, 158, 160, 162, 163, 178, 181, 192, 195, 206, 207, 210, 214, 226, 229, 230, 232, 233, 234, 235, 236, 237, 238, 240, 245, 246, 248, 249, 251, 253, 254, 255, 256, 257, 259, 260, 262, 263, 264, 265, 266, 267, 268], "pull": [5, 242, 243, 247, 248], "request": [5, 12, 19, 26, 28, 129, 219, 220, 238, 242, 243, 244, 247, 248, 260], "guid": [5, 127, 229, 232, 233, 234, 239, 242, 247, 250, 253, 257], "baroclinic_channel": [5, 12, 15, 226, 231, 235, 238, 240, 241, 242, 245, 247, 257, 261, 266, 267, 268], "label": [5, 111, 253, 266], "prepend": 5, "them": [5, 6, 12, 14, 15, 19, 31, 124, 129, 230, 235, 238, 240, 241, 242, 243, 245, 247, 252, 253, 258, 266, 267], "baroclin": [5, 45, 135, 136, 138, 140, 142, 145, 148, 152, 155, 158, 160, 209, 214, 229, 238, 240, 241, 247, 259], "channel": [5, 45, 135, 136, 138, 140, 142, 145, 148, 152, 155, 158, 160, 209, 214, 229, 238, 240, 244, 247, 259], "And": [5, 12, 243, 247], "becom": [5, 238, 240, 247], "who": [5, 243, 247, 248, 254], "citat": 5, "defin": [5, 6, 7, 11, 12, 13, 16, 32, 41, 67, 91, 97, 102, 103, 108, 124, 226, 228, 229, 230, 232, 233, 234, 235, 236, 238, 239, 240, 241, 242, 243, 245, 246, 248, 253, 256, 259, 260, 264, 267, 268], "brief": [5, 247], "overview": [5, 246, 250, 254], "comment": [5, 239, 248], "appli": [5, 11, 12, 56, 228, 241, 247, 259, 264, 265], "vertic": [5, 16, 228, 229, 232, 233, 234, 238, 248, 255, 257], "grid": [5, 11, 14, 61, 68, 72, 75, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 127, 174, 216, 217, 218, 219, 220, 221, 224, 225, 229, 230, 232, 233, 234, 238, 247, 248], "initi": [5, 6, 32, 112, 134, 137, 140, 145, 162, 172, 188, 202, 207, 210, 212, 229, 230, 232, 233, 234, 238, 240, 241, 242, 244, 245, 246, 248, 256, 258, 267], "condit": [5, 32, 137, 140, 145, 162, 172, 188, 202, 207, 210, 212, 229, 230, 232, 233, 234, 238, 239, 240, 241, 242, 245, 246, 248, 258, 267], "forc": [5, 15, 234, 247, 267], "common": [5, 7, 10, 38, 41, 45, 229, 230, 232, 233, 234, 238, 239, 240, 241, 242, 244, 245, 247, 248, 253, 254, 266, 267, 268], "refer": [5, 12, 32, 134, 152, 218, 221, 224, 225, 238, 240, 242, 243, 245, 246, 247, 256, 259, 266], "awar": [5, 124, 235, 247, 253], "wish": [5, 12, 238, 243, 247, 266, 268], "test_group_nam": 5, "specif": [5, 7, 12, 43, 124, 226, 235, 236, 241, 246, 247, 248, 250, 253, 259, 265, 266, 268], "share": [5, 16, 127, 136, 226, 229, 232, 233, 234, 235, 236, 238, 240, 241, 243, 246, 249, 250, 251, 252, 253, 254, 255, 259, 265, 266], "function": [5, 6, 7, 9, 10, 11, 12, 13, 15, 16, 40, 61, 68, 124, 127, 136, 147, 157, 238, 240, 241, 242, 246, 247, 260, 267], "public": [5, 9, 238, 247, 248], "api": [5, 10, 246, 247], "underscor": [5, 247], "md": [5, 247], "eval": 5, "rst": [5, 12, 247], "currentmodul": 5, "autosummari": 5, "toctre": 5, "baroclinicchannel": [5, 136, 138, 140, 148, 152, 158, 229, 235, 240, 247], "baroclinicchanneltestcas": [5, 229], "compute_cell_count": [5, 127, 229, 232, 233, 247], "dynamic_model_config": [5, 229, 232, 233, 247], "initialst": [5, 229, 232, 233, 234, 238, 240, 247], "setup": [5, 7, 9, 12, 15, 24, 29, 32, 33, 39, 41, 127, 130, 143, 144, 151, 170, 171, 186, 187, 200, 201, 229, 232, 233, 234, 240, 242, 243, 245, 246, 247, 248, 260, 266, 267], "across": [5, 12, 16, 229, 238, 239, 240, 241, 242, 243, 245, 247, 255, 259, 260], "ot": [5, 247], "automat": [5, 7, 10, 12, 16, 127, 238, 240, 242, 243, 247, 248, 249, 251, 252, 253, 254, 266], "python": [5, 6, 7, 20, 38, 43, 236, 238, 240, 241, 242, 243, 245, 246, 247, 248, 253, 254, 266], "begin": [5, 15, 229, 238, 243, 246, 247, 253, 259, 260, 264], "numpydoc": [5, 247], "text": [5, 6, 259, 260, 264], "restructuredtext": 5, "compute_land_ice_pressure_and_draft": 5, "ssh": [5, 127, 218, 220, 221, 222, 223, 224, 225, 226, 232, 233, 240, 247, 248, 250, 254, 262, 263], "modifysshmask": 5, "ref_dens": 5, "comput": [5, 11, 72, 124, 127, 129, 130, 134, 143, 167, 170, 183, 186, 197, 200, 221, 222, 223, 229, 230, 232, 233, 234, 238, 243, 250, 251, 253, 254, 259, 262, 263, 266], "pressur": [5, 226, 248, 262, 263], "overli": [5, 247], "ic": [5, 127, 226, 242, 243, 246, 247, 248, 250, 256, 267], "shelf": [5, 127, 241, 242, 247, 248, 256], "draft": [5, 256], "paramet": [5, 11, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 32, 33, 34, 35, 36, 39, 41, 42, 45, 46, 48, 51, 53, 54, 55, 56, 59, 60, 62, 63, 64, 67, 72, 73, 75, 77, 79, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 106, 108, 109, 110, 111, 112, 114, 115, 116, 118, 119, 127, 129, 130, 132, 134, 136, 138, 140, 142, 143, 144, 145, 148, 150, 151, 152, 155, 158, 160, 163, 166, 167, 169, 170, 171, 172, 174, 176, 179, 181, 183, 184, 185, 186, 187, 188, 190, 193, 195, 197, 198, 199, 200, 201, 202, 204, 209, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 232, 233, 238, 240, 241, 259, 260, 262, 263, 264], "xarrai": [5, 14, 16, 112, 218, 219, 220, 221, 222, 223, 224, 225, 238, 247], "dataarrai": [5, 183, 184, 197, 198, 219, 220, 221, 222, 223, 238], "sea": [5, 127, 183, 184, 197, 198, 220, 221, 222, 223, 226, 247, 248, 256, 262, 263], "surfac": [5, 127, 183, 184, 197, 198, 220, 221, 222, 223, 226, 228, 234, 247, 248, 256, 259, 262, 263, 264], "height": [5, 127, 183, 184, 197, 198, 220, 221, 222, 223, 226, 247, 248, 256, 262, 263], "mask": [5, 218, 221, 224, 225, 238, 247, 248, 256], "landicepressur": [5, 240], "deviat": 5, "float": [5, 7, 12, 20, 60, 62, 63, 67, 72, 92, 110, 112, 136, 138, 140, 142, 145, 148, 152, 155, 158, 167, 183, 184, 185, 188, 195, 197, 198, 199, 202, 209, 210, 212, 238, 240, 247], "densiti": [5, 11, 127, 247], "seawat": 5, "displac": 5, "land": [5, 127, 226, 246, 247, 248, 256, 267], "landicedraft": 5, "equal": [5, 234, 238, 242, 264], "entri": [5, 47, 80, 102, 103], "alwai": [5, 7, 10, 15, 50, 127, 226, 235, 238, 242, 243, 247, 248], "own": [5, 6, 9, 10, 16, 32, 238, 240, 242, 243, 245, 247, 248, 260, 266, 267], "line": [5, 8, 30, 32, 83, 84, 94, 238, 239, 242, 243, 246, 266], "type": [5, 12, 14, 16, 20, 89, 96, 119, 207, 210, 212, 238, 240, 241, 242, 243, 244, 245, 247, 248, 259, 260, 262, 263, 264, 265, 268], "side": 5, "colon": 5, "doubl": [5, 127, 238, 239, 247], "back": [5, 247, 250, 266], "quot": 5, "interfer": 5, "abil": 5, "find": [5, 51, 63, 85, 226, 242, 243, 244, 247, 248, 266], "arg": [5, 10, 32, 83, 84, 238], "indic": [5, 6, 12, 14, 15, 32, 33, 103, 110, 112, 221, 236, 238, 244, 247, 248, 256, 264], "On": [5, 11, 243, 253], "next": [5, 241, 247, 256, 266], "indent": [5, 238], "obviou": [5, 12, 247], "none": [5, 12, 15, 19, 22, 23, 29, 32, 33, 34, 39, 41, 48, 51, 55, 56, 58, 60, 67, 73, 77, 86, 87, 88, 91, 92, 95, 97, 99, 103, 104, 108, 109, 110, 111, 112, 114, 118, 129, 130, 142, 143, 170, 185, 186, 197, 199, 200, 209, 238, 247, 256, 259, 260, 262, 263, 264, 265], "replac": [5, 7, 12, 20, 21, 22, 23, 24, 25, 41, 53, 79, 104, 114, 115, 132, 144, 151, 240, 242, 247, 248, 266], "els": [5, 6, 238, 247], "true": [5, 7, 11, 12, 15, 16, 19, 42, 51, 53, 110, 111, 112, 115, 120, 121, 122, 123, 125, 127, 129, 210, 228, 238, 240, 241, 243, 247, 248, 249, 250, 251, 252, 253, 254, 259, 266, 267], "further": [5, 240, 241, 254, 265], "necessari": [5, 11, 235, 247], "rais": [5, 7, 15, 32, 35, 51, 53, 110, 127, 238, 240, 241, 242, 247], "list_cas": 6, "list_machin": [6, 242], "list_suit": 6, "anywher": [6, 10, 243], "setup_cas": [6, 7], "object": [6, 10, 14, 21, 22, 23, 79, 100, 104, 109, 110, 113, 114, 118, 119, 183, 197, 235, 240, 241, 242, 247], "later": [6, 15, 19, 29, 32, 39, 50, 110, 129, 238, 247, 248], "contrast": 6, "read": [6, 17, 21, 22, 23, 32, 33, 41, 52, 78, 79, 113, 127, 228, 238, 240, 247], "properti": [6, 12, 228, 238, 253, 260], "clean_cas": 6, "delet": [6, 242, 243, 244, 266], "constant": [6, 60, 67, 68, 127, 228, 247, 259, 260, 262, 264, 265], "setup_suit": 6, "clean_suit": 6, "write": [6, 10, 11, 13, 16, 113, 217, 238, 240, 243, 247], "out": [6, 11, 81, 85, 112, 236, 238, 242, 243, 248, 256, 266], "proven": [6, 8, 50, 246, 248], "save": [6, 16, 51, 75, 229, 238, 240, 241, 247, 253, 258, 259], "dictionari": [6, 7, 12, 16, 17, 20, 22, 23, 25, 32, 33, 36, 41, 45, 50, 79, 82, 86, 103, 104, 110, 113, 114, 115, 132, 230, 238, 240, 241, 242, 247, 260], "target": [6, 9, 14, 19, 34, 53, 55, 87, 124, 127, 129, 229, 232, 233, 238, 240, 247, 260], "minimum": [6, 55, 112, 127, 129, 229, 232, 233, 238, 247, 248, 256, 259, 260, 262, 263, 264, 265], "determin": [6, 11, 12, 16, 34, 38, 41, 119, 127, 133, 229, 230, 232, 233, 238, 241, 247, 256, 259, 260, 262, 263, 265, 266], "maximum": [6, 15, 110, 112, 247, 248, 256], "product": 6, "ntask": [6, 12, 14, 19, 29, 32, 36, 39, 83, 84, 87, 127, 129, 142, 185, 199, 209, 238, 240, 247], "cpus_per_task": [6, 12, 32, 36, 39, 83, 84, 238], "attribut": [6, 10, 11, 12, 15, 38, 91, 97, 232, 233, 241, 247], "quickli": 6, "caveat": 6, "sit": 6, "idl": 6, "fraction": [6, 247, 256, 259, 260, 262, 263, 264, 265], "runtim": [6, 24, 38, 127, 130, 143, 144, 151, 170, 171, 186, 187, 200, 201, 238, 240, 247], "min_task": [6, 12, 14, 19, 29, 32, 39, 83, 84, 87, 127, 129, 142, 185, 199, 209, 238, 240, 247], "min_cpus_per_task": [6, 12, 32, 39, 83, 84, 238], "fewest": 6, "least": [6, 11, 15, 235, 243], "fail": [6, 12, 15, 19, 29, 32, 39, 41, 51, 110, 129, 142, 185, 199, 209, 238, 246, 247, 248, 260, 262, 263], "run_test": [6, 238, 240], "run_single_step": 6, "oper": [6, 40, 147, 157, 238, 240, 268], "log": [6, 8, 15, 16, 32, 41, 84, 110, 111, 112, 238, 240, 243, 246, 266], "figur": [6, 234, 236, 238, 241, 248], "cpu": [6, 12, 124, 238, 247, 266], "per": [6, 12, 19, 29, 31, 32, 39, 83, 84, 127, 129, 238, 247, 248, 249, 250, 251, 252, 253, 254, 259, 260, 262, 263, 265], "method": [6, 7, 11, 12, 14, 17, 19, 24, 25, 32, 33, 37, 38, 41, 42, 43, 44, 45, 50, 59, 60, 64, 67, 68, 69, 73, 74, 87, 93, 113, 127, 128, 129, 130, 132, 135, 136, 138, 140, 142, 143, 144, 145, 148, 150, 151, 152, 155, 158, 160, 162, 163, 166, 169, 170, 171, 172, 174, 176, 177, 178, 179, 181, 183, 185, 186, 187, 188, 190, 192, 193, 195, 197, 199, 200, 201, 202, 204, 206, 207, 209, 210, 212, 214, 229, 230, 232, 233, 235, 238, 240, 242, 247, 260, 265], "wa": [6, 15, 51, 109, 110, 124, 137, 139, 141, 149, 154, 159, 182, 196, 208, 211, 238, 240, 242, 243, 244, 247, 248, 256, 266], "retriev": [6, 244], "store": [6, 15, 43, 127, 232, 233, 238, 240, 247, 266], "dure": [6, 9, 12, 24, 32, 41, 127, 130, 143, 144, 151, 170, 171, 186, 187, 200, 201, 238, 240, 242, 243, 247, 248, 266, 267, 268], "txt": [6, 108, 239, 244], "case_output": [6, 10], "individu": [6, 7, 16, 110, 240, 242, 247, 253, 254, 259, 266, 267], "involv": [6, 12, 15, 110, 238, 240, 245, 247], "implement": [6, 7, 229, 230, 232, 233, 234, 242, 259, 260, 262, 263], "termin": [6, 15, 238, 243, 247], "window": 6, "update_cach": 6, "_cached_fil": [6, 238], "map": [6, 14, 17, 25, 67, 68, 87, 111, 112, 132, 174, 176, 230, 243, 248], "origin": [6, 48, 243, 247, 266], "enabl": [6, 16, 238, 244, 248, 254, 262, 263], "consum": [6, 238, 240, 247, 268], "faster": [6, 243], "debug": [6, 120, 121, 122, 123, 125, 247, 249, 250, 251, 252, 254], "parser": [7, 50], "here": [7, 10, 12, 14, 15, 229, 232, 233, 234, 237, 238, 240, 241, 242, 243, 247, 248, 249, 250, 251, 252, 253, 254, 264, 265, 266, 268], "mpas_tool": [7, 10, 11, 72, 229, 232, 233, 234, 238, 247], "mpasconfigpars": 7, "polarisconfigpars": [7, 32, 41, 51, 54, 55, 82, 85, 86, 100, 111, 183, 197, 216, 218, 219, 220, 224, 225, 247], "certain": [7, 15, 50, 238, 243, 248, 265], "add_from_packag": [7, 242, 247], "content": [7, 12, 104, 106, 119, 236, 238, 242, 247, 266], "found": [7, 12, 114, 242, 243, 246, 247, 249, 250, 251, 252, 253, 254], "make_diagnostics_fil": 7, "makediagnosticsfil": 7, "self": [7, 9, 10, 12, 14, 16, 43, 75, 127, 235, 238, 240, 241, 242, 247, 248], "cfg": [7, 43, 235, 240, 241, 242, 247, 248, 266], "except": [7, 15, 32, 35, 51, 110, 238, 242, 247], "first": [7, 12, 102, 103, 229, 232, 233, 234, 238, 240, 241, 242, 243, 244, 247, 249, 250, 251, 252, 253, 254, 259, 260, 264, 266], "second": [7, 11, 12, 142, 209, 234, 238, 242, 259, 264], "know": [7, 9, 11, 127, 238, 242, 243, 247], "behavior": [7, 12, 99, 238, 239, 240, 243, 247], "noth": [7, 244, 260], "being": [7, 24, 32, 41, 98, 103, 110, 130, 143, 144, 151, 170, 171, 186, 187, 200, 201, 238, 240, 241, 242, 243, 247, 256], "test_group": [7, 17, 18, 32, 41, 136, 138, 140, 148, 152, 158, 163, 181, 195, 207, 210, 238, 240, 241, 247], "fals": [7, 11, 12, 15, 16, 19, 32, 34, 42, 48, 56, 58, 98, 99, 103, 108, 110, 112, 127, 129, 212, 214, 228, 238, 240, 241, 247, 248, 250, 252, 254, 259], "happen": [7, 10, 12, 14, 110, 238, 240, 247, 260], "class": [7, 9, 11, 12, 14, 16, 17, 19, 27, 32, 37, 41, 45, 50, 59, 60, 67, 73, 87, 113, 127, 128, 129, 135, 136, 138, 140, 142, 145, 148, 150, 152, 155, 158, 160, 162, 163, 166, 169, 172, 174, 176, 177, 178, 179, 181, 183, 185, 188, 190, 192, 193, 195, 197, 199, 202, 204, 206, 207, 209, 210, 212, 214, 226, 229, 230, 232, 233, 234, 235, 238, 240, 241, 247], "larg": [7, 15, 238, 240, 247, 249], "those": [7, 12, 15, 41, 109, 110, 124, 240, 241, 242, 243, 246, 247, 260, 265, 268], "configpars": [7, 83, 84, 241], "getinteg": 7, "getfloat": [7, 10, 12, 14, 238, 247], "getboolean": [7, 238, 247], "getlist": [7, 247], "comma": [7, 260], "integ": [7, 11], "boolean": [7, 112, 221], "etc": [7, 12, 105, 108, 235, 238, 240, 259], "getexpress": 7, "tupl": 7, "rang": [7, 112, 247, 260], "numpi": [7, 11, 61, 68, 69, 75, 111, 127, 134, 216, 217, 238, 247], "linspac": [7, 16, 230, 260], "arang": 7, "arrai": [7, 61, 68, 69, 75, 111, 127, 216, 217, 219, 220, 221, 222, 247], "One": [7, 11, 247, 266, 268], "advantag": [7, 12, 124, 242, 247, 253], "track": [7, 19, 238, 240, 243], "associ": [7, 11, 12, 16, 218, 224, 225, 229, 240, 241, 243, 245], "belong": [8, 10, 12, 19, 29, 32, 39, 41, 45, 60, 67, 73, 87, 129, 135, 136, 138, 140, 142, 145, 148, 150, 152, 155, 158, 160, 162, 163, 166, 169, 172, 174, 176, 178, 179, 181, 185, 188, 190, 192, 193, 195, 199, 202, 204, 206, 207, 209, 210, 212, 214, 235, 238, 240, 241, 242, 247, 268], "command": [8, 13, 30, 32, 38, 83, 84, 86, 94, 238, 242, 243, 245, 246, 247, 250, 253, 254, 266], "while": [8, 14, 16, 228, 229, 238, 241, 244, 245, 247], "meant": [8, 242, 248], "simplifi": 8, "verifi": [8, 239, 248], "io": [8, 238, 240, 242, 246, 247, 248, 257], "remap": [8, 16, 174, 230, 246, 260, 265], "visual": [8, 11, 14, 166, 190, 204, 230, 232, 233, 238, 240, 241, 245, 246, 260, 262, 263, 265], "lot": [9, 127, 238, 242, 247], "o": [9, 10, 104, 106, 119, 242, 243, 247, 248, 266], "relat": [9, 11, 12, 127, 226, 229, 232, 233, 234, 238, 241, 242, 243, 244, 247, 248, 249, 250, 251, 252, 253, 254, 256, 257, 259, 260, 264, 265, 266], "handl": [9, 10, 240, 243, 247, 253], "intern": [9, 19, 41, 238, 243, 244], "lower": [9, 240, 247, 259], "directli": [9, 11, 12, 14, 32, 236, 238, 242, 245, 246, 247, 250], "aren": [9, 32, 33, 238, 242, 243, 247, 268], "readm": [9, 240], "importlib": [9, 240], "resourc": [9, 12, 29, 36, 39, 52, 82, 83, 84, 130, 142, 143, 170, 186, 200, 209, 229, 232, 233, 238, 240, 247], "import": [9, 10, 11, 12, 14, 16, 235, 238, 240, 241, 242, 243, 245, 247], "files_for_e3sm": [9, 240, 248], "str": [9, 12, 17, 19, 20, 21, 22, 23, 26, 32, 33, 34, 35, 41, 45, 48, 51, 53, 54, 55, 56, 60, 67, 73, 77, 79, 83, 84, 86, 87, 88, 89, 90, 91, 92, 95, 96, 97, 99, 100, 101, 102, 103, 104, 108, 109, 110, 111, 112, 113, 114, 116, 118, 119, 129, 134, 136, 142, 150, 167, 169, 172, 174, 176, 209, 217, 238, 240, 241, 247], "did": [9, 15, 110, 247], "add_input_fil": [9, 14, 33, 238, 240, 247], "collect": [9, 45, 90, 128, 235, 237, 245, 247], "though": [9, 32, 240, 242, 247], "whenev": [9, 238, 247], "flexibl": [9, 230, 240, 243, 247], "care": [9, 11, 238, 241, 243, 247], "No": [9, 246, 262, 263], "step_dir": 9, "database_root": [9, 238, 248, 249, 250, 251, 252, 253, 254, 266], "download_path": 9, "join": [9, 247], "bathymetry_databas": [9, 238, 248], "remote_filenam": 9, "bedmachineantarctica_and_gebco_2019_0": 9, "05_degre": 9, "200128": 9, "local_filenam": 9, "topographi": [9, 221, 238, 241, 247, 256, 259, 260, 262, 263, 264, 265, 267], "url": [9, 34, 51, 238, 244, 248], "web": [9, 238, 248], "anl": [9, 238, 248], "gov": [9, 238, 244, 248, 250, 254], "mpas_standalonedata": [9, 248, 253], "dest_path": [9, 51], "remot": [9, 34, 243], "bathymetri": [9, 238, 248], "strategi": 10, "stderr": [10, 32, 41, 238], "loggingcontext": 10, "check_cal": [10, 238], "most": [10, 38, 124, 226, 235, 238, 241, 242, 243, 245, 247, 248, 253, 254, 256, 257, 267], "won": [10, 242, 247, 248], "logger": [10, 32, 41, 59, 84, 238, 240, 247], "full": [10, 32, 83, 99, 219, 220, 229, 230, 238, 240, 243, 246, 247, 253, 256, 258, 259, 260, 262, 263, 264, 265, 266], "although": 10, "captur": 10, "insid": [10, 238, 242], "good": [10, 32, 238, 243, 247], "idea": [10, 247], "explicit": [10, 242], "go": [10, 238, 240, 241, 242, 243, 247, 254], "even": [10, 11, 12, 15, 34, 50, 124, 238, 242, 243, 247, 248, 253, 266], "subprocess": [10, 32, 83, 84, 98, 238, 242, 244], "produc": [10, 12, 14, 16, 32, 33, 35, 48, 127, 138, 148, 158, 229, 230, 232, 233, 234, 238, 242, 243, 247, 262, 263, 266], "otherwis": [10, 15, 238, 240, 247, 249, 250, 251, 252, 253, 254, 259], "intent": 10, "desir": [10, 11, 12, 15, 16, 110, 127, 230, 238, 239, 247, 248, 266], "trick": [10, 238], "direct": [10, 11, 12, 72, 183, 197, 229, 232, 233, 240, 247, 254, 259, 262, 263], "snippet": [10, 247], "dome": [10, 59, 238, 240, 241, 245, 266, 267], "setup_mesh": [10, 238], "setupmesh": [10, 238, 240], "create_landice_grid_from_generic_mpas_grid": 10, "py": [10, 12, 59, 124, 235, 241, 242, 243, 245, 247, 248], "mpas_grid": [10, 238], "landice_grid": [10, 238, 247], "l": [10, 110, 247, 254], "sever": [10, 238, 240, 241, 242, 243, 245, 246, 247, 265, 266, 268], "global": [11, 14, 45, 91, 92, 97, 162, 163, 230, 238, 239, 241, 242, 245, 246, 247, 248, 254, 260, 265, 266, 267], "quasiuniformsphericalmeshstep": [11, 230], "icosahedralmeshstep": [11, 230], "jigsaw": [11, 60, 64, 66, 67, 69, 71, 73, 163, 166, 238], "complex": [11, 15, 68, 240, 242, 247], "build_cell_width_lat_lon": [11, 67], "opt": [11, 73], "make_jigsaw_mesh": [11, 67], "icosahedr": [11, 60, 62, 163, 166, 260], "significantli": [11, 256], "smooth": 11, "cell": [11, 12, 16, 60, 61, 62, 63, 67, 68, 69, 72, 75, 89, 96, 127, 129, 130, 143, 167, 170, 183, 184, 186, 197, 198, 200, 218, 219, 220, 221, 224, 225, 229, 232, 233, 238, 240, 241, 256, 259, 260, 262, 263, 264, 265], "quasi": [11, 67, 248, 260, 265], "hand": [11, 92, 242], "restrict": [11, 247, 265], "resolut": [11, 12, 14, 60, 63, 67, 68, 72, 88, 92, 95, 136, 138, 140, 142, 145, 148, 150, 152, 155, 158, 163, 166, 167, 169, 179, 185, 188, 190, 193, 195, 199, 202, 204, 207, 209, 210, 212, 229, 230, 232, 233, 234, 236, 238, 240, 241, 248, 259, 260, 262, 263, 264, 265, 267], "subdivis": [11, 60, 61, 62, 63, 64], "icosahedron": [11, 61, 62, 63, 64], "tabl": [11, 243, 253, 266], "approxim": [11, 60, 62, 63, 67, 127, 130, 143, 170, 186, 200, 243, 247], "width": [11, 60, 61, 62, 67, 68, 69, 75, 247, 259], "km": [11, 60, 61, 62, 63, 67, 68, 69, 72, 75, 136, 138, 140, 142, 145, 148, 150, 152, 155, 158, 169, 185, 188, 195, 199, 202, 209, 210, 212, 229, 230, 232, 233, 247, 248, 259, 260, 262, 263, 264, 265, 267], "5": [11, 62, 127, 152, 229, 230, 238, 239, 240, 242, 244, 247, 248, 259, 260, 265, 266], "240": [11, 62, 230, 248, 260], "6": [11, 62, 238, 247, 257, 259, 264, 266], "120": [11, 62, 239, 260], "7": [11, 62, 247, 254, 260, 266], "60": [11, 12, 62, 230, 256, 260], "8": [11, 62, 229, 240, 243, 247, 248, 259, 260, 262, 263, 266], "30": [11, 62, 241, 247, 254, 259, 260, 264, 265], "9": [11, 16, 62, 230, 247, 260, 266], "15": [11, 12, 62, 229, 247, 259, 260, 264, 265, 266], "10": [11, 15, 62, 226, 229, 232, 233, 240, 241, 247, 248, 253, 256, 259, 262, 263, 264, 267], "11": [11, 62, 247, 266], "3": [11, 62, 229, 238, 239, 241, 243, 244, 247, 248, 253, 254, 256, 259, 260, 262, 263, 265, 266], "12": [11, 62, 247, 250], "13": [11, 62, 247, 259], "94": [11, 62], "spherical_mesh": [11, 68], "cell_width": [11, 60, 61, 62, 63, 67, 68, 69, 75], "icosahedral_method": 11, "jigsaw_mesh_filenam": 11, "msh": 11, "jigsaw_geom_filenam": 11, "geom": 11, "jigsaw_jcfg_filenam": 11, "jig": 11, "jigsaw_hfun_filenam": 11, "spac": 11, "triangles_filenam": 11, "mesh_triangl": 11, "mpas_mesh_filenam": 11, "base_mesh": [11, 60, 67, 238, 247], "plot": [11, 75, 111, 112, 127, 155, 160, 174, 214, 229, 230, 232, 233, 260, 262, 263, 267], "plot_cell_width": 11, "cell_width_filenam": [11, 75], "cellwidthvslatlon": 11, "cell_width_image_filenam": 11, "cellwidthglob": 11, "cell_width_colormap": 11, "3wbgy5": 11, "add_mesh_dens": 11, "vtk": 11, "convert_to_vtk": 11, "vtk_dir": 11, "base_mesh_vtk": 11, "extract": 11, "lat": [11, 14, 61, 67, 68, 69, 75, 88, 90, 92, 95, 111, 174, 230, 248, 260], "lon": [11, 14, 61, 67, 68, 69, 75, 88, 90, 92, 95, 111, 174, 230, 248, 260], "sphere": [11, 230, 260], "vtk_lat_lon": 11, "far": [11, 218, 224, 225, 242, 247], "But": [11, 124, 238, 241, 242, 243, 247, 248, 253], "hexagon": [11, 72, 247, 262, 263], "planar_hex": [11, 72, 229, 232, 233, 234, 238, 247], "make_planar_hex_mesh": [11, 72, 229, 232, 233, 234, 238, 247], "x": [11, 16, 61, 68, 69, 72, 75, 91, 97, 112, 134, 183, 197, 238, 240, 247, 259, 262, 263, 264], "y": [11, 12, 16, 72, 91, 97, 112, 183, 197, 229, 232, 233, 238, 240, 247, 254, 259, 262, 263], "nx": [11, 72, 238, 241, 247], "ny": [11, 72, 238, 241, 247], "dc": [11, 238, 241, 247], "distanc": [11, 72, 247, 259], "adjac": [11, 256], "center": [11, 16, 72, 183, 197, 241, 247, 256, 259], "admittedli": 11, "oddli": 11, "period": [11, 228, 229, 232, 233, 238, 247, 259, 262, 263], "nonperiodic_x": [11, 238, 247], "nonperiodic_i": [11, 238, 247], "consider": [11, 218, 224, 225, 228], "compute_planar_hex_nx_ni": [11, 247], "lx": [11, 72, 247, 259, 262, 263, 264], "ly": [11, 72, 247, 259, 264], "explan": 11, "subtleti": 11, "account": [11, 72, 243, 247, 249, 250, 252, 253, 254, 266], "behav": 11, "stagger": [11, 72], "strictli": [11, 242, 247], "physic": [11, 72, 247], "howev": [11, 238, 239, 240, 243, 247], "np": [11, 16, 230, 247, 260], "sqrt": [11, 262], "domain": [11, 19, 26, 72, 112, 127, 129, 134, 228, 241, 247, 259, 260, 262, 263, 264, 265, 267], "extra": [11, 243], "factor": 11, "500e3": 11, "160e3": 11, "1e3": [11, 241, 247], "max": [11, 127, 238, 247, 259, 260], "int": [11, 12, 19, 20, 29, 32, 39, 54, 55, 56, 60, 61, 62, 63, 64, 72, 83, 84, 87, 112, 129, 130, 142, 143, 163, 166, 167, 169, 170, 179, 185, 186, 190, 193, 199, 200, 204, 209, 238, 247, 264], "ds_mesh": [11, 16, 112, 247], "creation": [11, 238, 248], "build_mesh": 11, "build_planar_mesh": 11, "too": [11, 12, 19, 29, 32, 39, 83, 84, 129, 238, 241, 242, 247], "distant": 11, "futur": [11, 38, 238, 242, 245, 246, 247, 248, 264, 266, 267], "descend": [12, 14, 127, 235, 238, 240, 241, 242, 247], "modelstep": [12, 127, 238, 240, 247], "update_pio": [12, 19, 129], "librari": [12, 120, 124, 243, 247, 249, 250, 251, 252, 253, 254, 266], "make_graph": [12, 19, 129], "mpi": [12, 14, 87, 120, 123, 124, 129, 131, 133, 229, 232, 233, 238, 243, 244, 246, 247, 249, 250, 251, 252, 254, 266], "construct": [12, 128, 216, 218, 219, 220, 224, 225, 228, 234, 235, 240, 241, 247, 259], "non": [12, 15, 228, 238, 247, 266], "At": [12, 32, 41, 236, 237, 247], "set_model_resourc": 12, "thread": [12, 19, 29, 32, 38, 39, 41, 84, 129, 142, 158, 185, 199, 209, 229, 238, 239, 245, 247, 248, 250, 254, 259], "openmp_thread": [12, 19, 29, 32, 39, 84, 129, 142, 185, 199, 209, 238, 240, 247], "definit": [12, 247], "prefix": [12, 34, 243, 248], "end": [12, 229, 238, 240, 242, 243, 245, 247, 250, 259, 260, 262, 263, 264], "yml": 12, "reason": [12, 14, 38, 238, 242, 247, 268], "add_namelist_fil": [12, 19, 127, 238, 240], "add_yaml_fil": [12, 19, 238, 240, 247], "add_model_config_opt": [12, 19, 238, 240, 247], "add_streams_fil": [12, 19, 127, 238, 240], "themselv": [12, 242, 246], "question": [12, 238, 248], "constructor": [12, 229, 232, 233, 235, 241, 247], "simpli": [12, 50, 140, 207, 210, 235, 238, 240, 241, 243, 247, 256, 266, 268], "safe": [12, 15, 238, 243, 259], "never": [12, 245], "hierarch": 12, "run_mod": 12, "config_ocean_run_mod": 12, "time_manag": [12, 247], "config_run_dur": [12, 240, 247], "0024_00": 12, "00": [12, 15, 240, 247, 254, 266], "ale_vertical_grid": 12, "config_vert_coord_mov": 12, "impermeable_interfac": 12, "decomposit": [12, 41, 138, 245, 247], "config_block_decomp_file_prefix": [12, 247], "time_integr": [12, 247], "config_time_integr": 12, "rk4": [12, 242, 268], "filename_templ": [12, 247], "restart": [12, 41, 148, 150, 229, 232, 233, 234, 239, 242, 245, 247, 259], "output_interv": [12, 247], "0030_00": 12, "clobber_mod": [12, 247], "truncat": [12, 247], "reference_tim": 12, "0001": [12, 247], "01": [12, 247, 264], "01_00": [12, 247], "tracer": [12, 16, 229, 230, 232, 233, 234, 247, 260, 262, 263, 264], "xtime": [12, 247], "normalveloc": [12, 15, 16, 139, 141, 149, 154, 159, 182, 196, 208, 228, 229, 232, 233, 234, 238, 247, 264], "layerthick": [12, 15, 127, 137, 139, 141, 149, 154, 159, 182, 196, 208, 218, 222, 223, 224, 225, 229, 232, 233, 234, 238, 240, 247], "refzmid": [12, 218, 224, 225, 238, 247], "reflayerthick": 12, "kineticenergycel": 12, "relativevorticitycel": 12, "unlik": [12, 15, 247], "clariti": [12, 238], "guarante": [12, 226, 243], "uniqu": [12, 240, 247], "global_converg": [12, 226, 231, 247, 257, 258, 261], "cosine_bel": [12, 247, 265], "substitut": 12, "config_write_output_on_startup": [12, 247], "0000_00": [12, 247], "config_use_mom_del2": [12, 247], "config_implicit_bottom_drag_coeff": [12, 247], "0e": [12, 263, 264], "config_use_cvmix_background": 12, "config_cvmix_background_diffus": [12, 247], "config_cvmix_background_viscos": [12, 247], "worri": 12, "sometim": [12, 218, 224, 225, 238, 240, 245, 247], "easier": [12, 238, 242, 243, 248, 266, 268], "togeth": [12, 245, 247, 268], "seem": [12, 247, 250, 254], "overkil": 12, "reli": [12, 238, 247], "differ": [12, 14, 15, 50, 64, 69, 110, 124, 127, 142, 152, 226, 229, 235, 236, 238, 239, 240, 241, 242, 245, 247, 248, 250, 254, 259, 260, 262, 263, 265], "along": [12, 16, 229, 238, 240, 246, 247], "could": [12, 14, 16, 230, 238, 239, 240, 242, 243, 247, 260], "nu": [12, 142, 155, 209, 229, 238, 240, 247], "viscos": [12, 142, 152, 155, 229, 238, 240, 242, 247, 259], "hmix": 12, "config_mom_del2": [12, 229, 238, 247], "bool": [12, 19, 20, 24, 32, 34, 41, 42, 48, 51, 53, 56, 98, 99, 102, 103, 108, 110, 111, 115, 129, 130, 142, 143, 144, 151, 163, 166, 170, 171, 186, 187, 200, 201, 209, 247], "cannot": [12, 15], "known": [12, 32, 33, 230, 238, 247], "beforehand": 12, "particularli": [12, 244, 247, 265], "openmp": [12, 19, 29, 32, 39, 84, 120, 122, 123, 129, 142, 185, 199, 209, 238, 247, 249, 250, 251, 252, 254], "update_namelist_at_runtim": 12, "update_yaml_at_runtim": 12, "config_pio_num_iotask": 12, "pio_num_iotask": 12, "config_pio_strid": 12, "pio_strid": 12, "out_nam": 12, "bit": [12, 242, 245, 247, 259, 266], "complic": [12, 241, 242, 243, 247], "xml": [12, 104, 106, 107, 119, 245], "slightli": [12, 15, 243], "sophist": 12, "immutable_stream": [12, 247], "var_struct": 12, "var": [12, 105, 247], "var_arrai": 12, "tag": [12, 246], "taken": [12, 19, 129, 230, 238, 247, 254, 266], "past": 12, "experi": [12, 124, 242, 256], "shown": [12, 236, 240, 264], "featur": [12, 242, 243, 245, 247, 248, 259, 264], "difficult": [12, 124, 253], "synchron": [12, 246], "equival": [12, 243, 247, 249], "try": [12, 53, 242, 243, 244, 247, 248, 250, 254, 266], "template_replac": [12, 22, 23], "treat": [12, 239, 242], "jinja2": [12, 22, 23, 104], "render": [12, 22, 23, 104], "d_": 12, "restart_interv": 12, "stream_replac": 12, "dynamic_adjust": [12, 248], "qu240dynamicadjust": 12, "seri": [12, 127, 155, 160, 214, 230, 232, 247, 258], "dynam": [12, 129, 162, 226, 234, 248, 259, 260, 264, 265], "adjust": [12, 127, 162, 226, 248], "durat": [12, 229, 232, 233, 234, 239, 247], "interv": 12, "spin": 12, "reus": [12, 238, 242, 243, 247, 248, 266], "qualit": [12, 15], "affect": [12, 15, 238, 243, 247], "update_streams_at_runtim": 12, "fairli": [12, 240, 242, 243, 247], "hour": [12, 232, 233, 239, 250, 254, 262, 263, 266], "turn": [12, 32, 49, 238, 244, 247, 264], "datetim": 12, "timedelta": 12, "3600": 12, "planar_converg": 12, "delta": [12, 256, 259, 264], "minut": [12, 229, 239, 259, 268], "dai": [12, 152, 229, 230, 234, 240, 247, 259, 260, 264], "03d": 12, "_": [12, 87, 238, 240, 243, 247, 264], "02d": 12, "forgotten": 12, "broken": [12, 238, 242], "immedi": [12, 59, 243, 247], "miss": [12, 15, 238, 247, 248], "detect": [12, 16, 248, 249, 251, 252, 253, 266], "gpmeti": [12, 248], "divid": [12, 256], "partition_graph": [12, 19, 129], "circumst": [12, 15, 32, 33, 238, 247], "wast": 12, "manual": [12, 15, 41, 42, 238, 240, 267], "update_namelist_pio": 12, "node": [12, 19, 31, 32, 36, 39, 54, 82, 83, 84, 124, 129, 238, 239, 242, 243, 247, 248, 249, 250, 251, 252, 253, 254, 266], "v1": [12, 256], "better": [12, 14, 124, 266], "v2": [12, 248, 256], "littl": [12, 242, 243, 246, 247], "feel": [12, 238, 247], "runtime_setup": [12, 14, 29, 39, 229, 232, 233, 240], "onc": [12, 229, 243, 247, 248, 260, 266], "yourself": [12, 247, 253], "fact": [12, 32], "culler": 12, "cull": [12, 229, 232, 233, 238, 247], "model_step": [12, 238], "make_graph_fil": [12, 238], "field": [12, 15, 75, 77, 112, 174, 218, 224, 225, 228, 229, 232, 233, 234, 247, 259, 260, 262, 263], "weight": [12, 14, 77, 218, 224, 225, 247, 256], "weight_field": [12, 77], "frequent": [14, 226], "observ": [14, 246], "dataset": [14, 112, 183, 197, 218, 224, 225, 238, 247], "region": [14, 16, 246, 248], "pyremap": [14, 93], "interpol": [14, 87, 230, 248], "hood": 14, "esmf_regridweightgen": 14, "best": [14, 238, 243], "mappingfilestep": [14, 16], "woa": 14, "2023": [14, 262, 263], "__init__": [14, 17, 19, 32, 41, 45, 50, 59, 60, 67, 73, 87, 113, 128, 129, 135, 136, 138, 140, 142, 145, 148, 150, 152, 155, 158, 160, 162, 163, 166, 169, 172, 174, 176, 178, 179, 181, 183, 185, 188, 190, 192, 193, 195, 197, 199, 202, 204, 206, 207, 209, 210, 212, 214, 235, 238, 240, 241, 242, 245, 247], "mytestcas": 14, "__int__": 14, "make_map": 14, "64": [14, 256], "bilinear": [14, 87, 230, 260, 265], "filenam": [14, 34, 35, 81, 88, 89, 90, 91, 95, 96, 97, 100, 110, 114, 116, 238, 243, 247], "woa23_decav_0": 14, "25_extrap": 14, "20230414": 14, "initial_condition_databas": [14, 248], "destin": [14, 87, 88, 89, 90, 91, 92, 93], "src_from_lon_lat": 14, "lon_var": [14, 88, 90, 95], "lat_var": [14, 88, 90, 95], "dst_from_mpa": 14, "mesh_nam": [14, 88, 89, 90, 91, 92, 95, 96, 97, 167, 169, 172, 174, 176], "qu60": 14, "subclass": [14, 64, 67, 68, 69, 74, 127, 247], "src_": 14, "dst_": 14, "pick": 14, "vizmap": [14, 163, 174, 230], "super": [14, 235, 238, 240, 241, 242, 247], "128": [14, 239, 250, 251, 254], "cosine_bell_viz": [14, 16, 230, 260, 265], "dlon": [14, 92, 230, 260, 265], "dlat": [14, 92, 230, 260, 265], "remap_method": [14, 230, 260, 265], "src_from_mpa": 14, "dst_global_lon_lat": 14, "lon_min": [14, 92], "With": [14, 243], "approach": [14, 238, 241, 242, 243, 244, 247, 256], "perhap": [14, 16, 35, 241], "cover": [14, 247], "nearli": [14, 238, 245, 246, 247], "situat": [14, 25, 132, 247, 266], "workflow": [14, 238, 243], "critic": [15, 247], "compare_vari": [15, 240, 247], "filename1": [15, 110, 240, 247], "filename2": [15, 110, 247], "simpl": [15, 242, 247, 266], "temperatur": [15, 137, 139, 141, 149, 154, 159, 208, 211, 228, 229, 233, 234, 238, 240, 247, 259, 260, 264, 265], "salin": [15, 137, 139, 141, 149, 154, 159, 208, 211, 228, 229, 234, 238, 240, 247, 259, 260, 264, 265], "prognost": [15, 259], "4proc": [15, 139, 247, 259], "8proc": [15, 139, 247, 259], "alter": [15, 219, 220, 238, 240, 246, 247, 256, 259, 260, 262, 263, 264, 265], "skip_if_step_not_run": [15, 110, 240], "possibli": [15, 238, 243, 247], "failur": 15, "valueerror": [15, 240, 241, 242], "quiet": [15, 99, 110, 115], "report": 15, "threshold": [15, 260, 262, 263], "l1": [15, 110], "00000000000000e": 15, "l2": [15, 110], "l_infin": 15, "linf": [15, 110], "home": [15, 243, 247, 248, 250, 253, 254], "xylar": [15, 247, 248, 253], "test_nightly_latest": 15, "10km": [15, 229, 240, 241, 247, 259, 266, 267, 268], "threads_test": [15, 247, 266, 268], "1thread": [15, 159, 229, 259], "2thread": [15, 159, 259], "test_20210616": 15, "further_valid": 15, "add_output_fil": [15, 33, 238, 240, 247], "disabl": [15, 16, 228, 260, 267], "check_output": [15, 110], "zero": [15, 219, 220, 221, 222, 223, 228, 229, 234, 247, 260, 264], "l1_norm": [15, 110], "l2_norm": [15, 110], "linf_norm": [15, 110], "nonzero": [15, 110], "easiest": [15, 243], "solut": [15, 123, 183, 184, 192, 193, 195, 197, 198, 199, 202, 204, 230, 232, 233, 239, 244, 247, 262, 263], "clobber": 15, "error": [15, 32, 41, 127, 167, 230, 232, 233, 238, 243, 246, 247, 262, 263], "judgment": 15, "enough": [15, 229, 238, 242, 247], "problem": [15, 238, 243, 244, 247], "compare_tim": 15, "integr": [15, 152, 229, 240, 242, 247, 259, 260, 265], "rundir1": [15, 109], "92264": 15, "82317": 15, "percent": 15, "781019682649793": 15, "speedup": 15, "1208377370409515": 15, "aspect": [16, 247], "often": [16, 32, 238, 239, 240, 241, 242, 243, 245, 247, 248, 267, 268], "analysi": [16, 127, 229, 240, 242, 245, 246, 248, 260, 262, 263, 267], "routin": 16, "viz": [16, 163], "plot_horiz_field": [16, 247], "patch": [16, 112, 247], "style": [16, 127, 246, 247], "edg": [16, 89, 92, 96, 112, 183, 197, 228, 247], "polygon": 16, "character": 16, "accordingli": [16, 85], "d": [16, 112, 183, 197, 218, 224, 225, 228, 238, 247, 264], "final_normalveloc": [16, 247], "t_index": [16, 112, 247], "vmin": [16, 112, 230, 247, 260], "max_veloc": [16, 247], "vmax": [16, 112, 230, 247, 260], "cmap": [16, 112, 247], "cmo": [16, 247], "balanc": [16, 247], "show_patch_edg": [16, 112, 247], "globe": [16, 230, 260], "plot_glob": 16, "plot_land": [16, 111], "contin": [16, 111], "overlain": 16, "usag": [16, 248, 250, 254], "cmocean": [16, 247], "noqa": [16, 59, 166, 169, 172, 190, 204, 247], "f401": [16, 247], "xr": [16, 183, 184, 197, 198, 247], "open_dataset": [16, 238, 247], "tracer1": 16, "isel": 16, "nvertlevel": [16, 112, 218, 224, 225, 238, 247, 256], "out_filenam": [16, 107, 111, 217], "colormap_sect": [16, 111], "titl": [16, 111, 112], "colormap": [16, 111, 112, 230, 247, 260], "cosin": [16, 166, 169, 172, 174, 176, 230, 260, 265], "bell": [16, 166, 169, 172, 174, 176, 230, 260, 265], "converg": [16, 190, 204, 230, 236, 239, 246, 247, 260, 265], "colormap_nam": [16, 111, 230, 260], "viridi": [16, 230, 247, 260], "norm": [16, 110, 111, 230, 260], "norm_typ": [16, 111, 230, 260], "linear": [16, 111, 112, 230, 232, 247, 259, 260, 262], "norm_arg": [16, 111, 230, 260], "colorbar": [16, 111, 112, 230, 260], "tick": [16, 111, 230, 260], "mark": [16, 230, 243, 260], "ll": [16, 230, 242, 247, 254, 260], "colorbar_tick": [16, 111, 230, 260], "matplotlib": [16, 247], "standard": [16, 242, 243, 247, 250, 266], "symlog": [16, 111], "symmetr": 16, "central": [16, 260], "logarithm": [16, 112], "color": [16, 112], "normal": [16, 183, 197, 228, 238, 239, 243, 247, 253], "symlognorm": 16, "lognorm": 16, "hous": 17, "seaic": [17, 34, 238, 266], "dict": [17, 20, 22, 23, 25, 32, 36, 41, 45, 79, 80, 82, 86, 87, 101, 103, 104, 111, 113, 114, 115, 132, 240, 247], "kei": [17, 41, 45, 103, 240], "cach": [17, 19, 32, 34, 102, 103, 129, 246, 248, 253, 258, 266, 268], "testgroup": [18, 32, 41, 241, 242, 247], "max_memori": [19, 29, 32, 39, 129], "mesh_filenam": [19, 77, 129], "graph_filenam": [19, 77, 129], "graph": [19, 26, 28, 38, 77, 129, 229, 232, 233, 238, 247, 248], "make_yaml": 19, "pio": [19, 28, 31, 129, 229, 232, 233], "stride": [19, 31, 129], "consist": [19, 31, 129, 226, 243, 247, 248, 259], "partit": [19, 28, 38, 54, 77, 129, 229, 232, 233, 238, 248, 249, 250, 251, 252, 254, 266], "model_config_data": 19, "streams_data": 19, "ideal": [19, 29, 32, 39, 83, 84, 87, 127, 129, 142, 185, 199, 209, 238, 241, 242, 246, 247, 248, 267], "accommod": [19, 29, 32, 39, 83, 84, 129], "fewer": [19, 29, 32, 39, 83, 84, 129, 142, 185, 199, 209, 238, 247, 266], "amount": [19, 29, 32, 39, 129, 238, 255, 264], "memori": [19, 29, 32, 39, 129, 238, 248], "mb": [19, 29, 32, 39, 129, 248], "placehold": [19, 29, 32, 39, 129, 238, 266], "at_setup": [24, 127, 130, 143, 144, 151, 170, 171, 186, 187, 200, 201, 247], "overridden": [25, 132, 238, 240, 247], "diverg": [25, 132], "counterpart": [25, 127, 132], "nest": [25, 113, 115, 132], "graph_fil": 26, "parent": [27, 235, 238, 241], "done": [29, 39, 238, 243, 247, 266], "run_as_subprocess": [32, 238], "smallest": [32, 238, 245, 256, 267], "unit": [32, 88, 92, 95, 238, 245, 259, 267], "term": [32, 245, 247, 262, 263], "necessarili": [32, 34, 245], "input_data": 32, "until": [32, 33, 238, 240, 266], "finish": [32, 33, 74, 247], "suffici": 32, "establish": [32, 33], "is_depend": 32, "combin": [32, 34, 41, 50, 55, 86, 113, 238, 239, 240, 244, 247, 248, 266], "machine_info": 32, "machineinfo": 32, "config_filenam": [32, 41, 100, 238, 240], "base_work_dir": [32, 41, 238, 240], "log_filenam": [32, 41, 238], "redirect": [32, 238], "extern": [32, 226, 235, 238, 257], "access": [33, 240, 242, 243, 247, 249, 253, 254], "database_compon": [34, 238], "work_dir_target": [34, 238], "come": [34, 238, 243, 247, 249, 250, 251, 252, 253, 254, 257], "root": [34, 167, 226, 230, 232, 233, 235, 238, 242, 243, 245, 248, 249, 250, 251, 252, 253, 254, 256, 262, 263, 266], "suffix": [34, 103, 238], "_database_root": 34, "append": 34, "available_resourc": [36, 82], "constrain": [36, 130, 143, 170, 186, 200, 229, 232, 233, 238, 247], "cores_per_nod": [36, 82, 85, 248, 249, 250, 251, 252, 253, 254, 266], "everi": [37, 177, 229, 238, 240, 242, 244, 245, 247, 259, 264], "child": [37, 177, 235, 238, 240, 242], "serial": [38, 238, 240, 246, 247, 266], "subtask": 39, "stdout_logg": 41, "goe": [41, 238, 247], "regardless": 41, "new_step_log_fil": 41, "whole": [41, 134, 240, 242, 247, 266], "statu": 41, "run_by_default": [42, 238, 240], "assum": [43, 104, 114, 240, 243, 247, 254, 259], "prior": [43, 238, 240], "greenland": [45, 241, 245, 246, 267], "eismint2": 45, "step_path": 48, "variant": [48, 229, 239, 241, 242, 243, 247, 253, 256, 259, 260], "uncach": 48, "datestamp": 48, "yymmdd": [48, 248], "dry": [48, 239], "meta": 50, "empti": [50, 238, 242, 243, 245, 247], "link_nam": 53, "overwrit": 53, "stackoverflow": [53, 247], "55742015": 53, "7728169": [53, 247], "symbol": [53, 238], "fileexistserror": 53, "unless": [53, 99, 243], "isadirectoryerror": 53, "slurm": [54, 85, 238, 246, 248, 249, 250, 251, 252, 254, 266], "qo": [54, 249, 250, 252, 253, 254, 266], "qualiti": [54, 249, 250, 252, 253, 254, 266], "servic": [54, 249, 250, 252, 253, 254, 266], "constraint": [54, 254, 266], "wall_tim": [54, 266], "wall": [54, 266], "target_cor": 55, "min_cor": 55, "decomposition_test": [59, 241, 266], "decompositiontest": [59, 241], "e501": [59, 166, 169, 172, 190, 204, 247], "turquois": [59, 250], "usr": [59, 250, 266], "climat": [59, 249, 250, 251, 253, 266], "mhoffman": 59, "latitud": [61, 68, 88, 90, 92, 95, 111, 230, 260, 265], "longitud": [61, 68, 69, 75, 88, 90, 92, 95, 111, 230, 260, 265], "ndarrai": [61, 68, 69, 75, 111, 134, 216, 217, 247], "degre": [61, 68, 69, 75, 92, 248, 259], "length": [61, 68, 69, 75], "180": [61, 68, 69, 75, 92, 260], "90": [61, 68, 69, 75, 238, 260], "static": [62, 63], "rule": 62, "thumb": 62, "achiev": [63, 239], "close": [63, 246, 260], "uniform": [67, 72, 169, 229, 230, 232, 233, 241, 247, 248, 259, 260, 262, 263, 264, 265], "natur": 72, "jigsawpi": [73, 238], "jigsaw_jig_t": 73, "meti": 77, "defaults_filenam": 78, "total": [82, 238, 239, 242, 247, 248, 250, 266], "substep": [83, 84], "command_line_arg": 83, "cpus_per_nod": 85, "map_filenam": 87, "src_grid_info": 87, "dst_grid_info": 87, "neareststod": [87, 230, 260, 265], "conserv": [87, 230, 260, 265], "map_": 87, "source_typ": 87, "dest_typ": 87, "1d": [88, 92, 95, 111, 127, 216, 217, 218, 219, 220, 221, 222, 224, 225], "2d": [88, 92, 95, 111], "5x0": [88, 92, 95], "5degre": [88, 92, 95], "coordin": [88, 90, 91, 95, 97, 111, 112, 183, 197, 218, 224, 225, 255, 257, 259, 260, 262, 263, 264, 265], "mesh_typ": [89, 96, 238, 240, 241], "vertex": [89, 96], "x_var": [91, 97], "y_var": [91, 97], "proj_attr": [91, 97], "proj_str": [91, 97], "proj": [91, 97], "left": [92, 127, 247, 256, 259, 260], "remapp": [93, 94], "remap_fil": 93, "step_is_subprocess": 98, "is_test_cas": 99, "steps_to_skip": 99, "progress": 99, "unpickl": [101, 238], "cached_step": 102, "copy_execut": [102, 103, 108, 266], "serv": [102, 103, 108, 241, 247], "_all": [102, 103], "streams_filenam": 104, "lxml": [104, 106, 119], "etre": [104, 106, 119], "new_child": 105, "children": 105, "sub": [105, 247], "new_tre": 106, "rundir2": 109, "infin": 110, "toler": 110, "exclud": [110, 266], "data_arrai": 111, "colorbar_label": 111, "subtitl": 111, "field_nam": 112, "out_file_nam": 112, "ax": 112, "z_index": 112, "cmap_set_und": 112, "cmap_scal": 112, "cmap_titl": 112, "horizont": [112, 127, 210, 228, 229, 232, 233, 234, 259, 262, 263, 264], "planar": [112, 127, 228, 247, 262, 263, 264, 265], "depth": [112, 127, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 247, 248, 256, 259, 260, 262, 263, 264, 265], "slice": 112, "fieldnam": 112, "present": [112, 243, 247], "visibl": 112, "bar": 112, "classmethod": 114, "jinja": 114, "namelist_templ": 118, "polarisyaml": [118, 119], "processed_registry_filenam": 119, "registri": [119, 228], "steam": 119, "load_dev_polaris_0": [120, 121, 122, 123, 124, 125, 247], "alpha": [120, 121, 122, 123, 124, 125, 247], "1_anvil_intel_impi": [120, 124], "sh": [120, 121, 122, 123, 124, 125, 243, 244, 247, 249, 250, 251, 252, 254, 266], "openmpi": [120, 124, 243, 246, 249, 251, 252, 266], "mvapich": [120, 124, 249], "impi": [120, 124, 249, 252], "ifort": [120, 122, 124, 247, 249, 251], "ve": [120, 121, 122, 123, 125, 238, 243, 247], "1_anvil_gnu_openmpi": 120, "gfortran": [120, 122, 123, 124, 243, 249, 251], "load": [121, 124, 125, 243, 246, 247, 248, 249, 250, 251, 252, 253, 254], "1_chicoma": 121, "cpu_gnu_mpich": [121, 125], "crai": [121, 124, 125, 250, 254], "1_chrysalis_intel_openmpi": 122, "1_chrysalis_gnu_openmpi": 122, "yet": [123, 127, 238, 242, 247], "again": [123, 226, 238, 243, 244, 266], "soon": [123, 247, 266], "1_compy_intel_impi": 123, "1_compy_gnu_openmpi": 123, "attempt": [124, 246, 253], "particular": [124, 241, 243, 246, 250, 253, 266], "activ": [124, 253, 254, 266], "load_polaris_env": [124, 243, 247, 266], "were": [124, 142, 209, 238, 242, 245, 247, 248, 252, 256], "job": [124, 243, 246, 247, 249, 250, 251, 252, 254], "right": [124, 127, 240, 243, 247, 248, 256, 259, 260, 266], "therefor": [124, 238, 245, 247], "gnu": [124, 243, 252, 253, 266], "lib": 124, "intel": [124, 253], "chicoma": [124, 253, 266], "mpich": [124, 243, 246, 250, 254, 266], "compi": [124, 252, 266], "pm": [124, 254, 266], "compymcnodefac": [124, 253], "perlmutt": [124, 250, 253, 266], "pretti": [124, 238, 242, 247, 248], "forg": [124, 246, 266], "linux": [124, 243, 253], "configure_polaris_env": [124, 243, 244, 247], "conda_path": [124, 243], "osx": [124, 253], "clang": [124, 243], "had": 124, "1_": 124, "1_pm": 125, "ever": [127, 242], "expand": [127, 256], "oceanmodelstep": [127, 247], "decid": [127, 247], "veri": [127, 235, 238, 242, 243, 247, 264], "earli": [127, 257, 266], "stage": [127, 228, 238, 240, 243, 257, 266], "map_yaml_to_namelist": 127, "count": [127, 239], "heurist": 127, "exact": [127, 183, 184, 197, 198, 230, 232, 233, 242, 262, 263], "algorithm": [127, 142, 209, 229, 232, 233, 238, 247], "200": [127, 232, 233, 240, 247, 259, 262, 263, 264], "round": [127, 260], "cell_count": [127, 130, 143, 170, 186, 200, 247], "goal_cells_per_cor": [127, 247, 260, 262, 263, 265], "pinch": 127, "2000": [127, 241, 247], "max_cells_per_cor": [127, 247, 260, 262, 263, 265], "seciton": 127, "control": [127, 230, 238, 248, 259, 260, 264, 266], "scale": [127, 259, 266], "tri": [127, 242], "apport": 127, "precis": [127, 238, 247], "caviti": [127, 242, 247, 248, 256], "frazil": 127, "flux": [127, 228, 264], "grid_1d": 127, "generate_1d_grid": 127, "vertical_grid": [127, 216, 218, 224, 225, 241, 247, 248, 256, 259, 260, 262, 263, 264, 265], "z": [127, 219, 220, 221, 222, 223, 224, 225, 247, 259, 260, 262, 263, 264, 265, 268], "star": [127, 223, 225, 247, 259, 260, 262, 263, 264, 265, 268], "init_vertical_coord": [127, 247], "minlevelcel": [127, 218, 220, 221, 222, 223, 224, 225, 247], "maxlevelcel": [127, 218, 219, 220, 221, 222, 223, 224, 225, 238, 247], "cellmask": [127, 218, 221, 224, 225, 247], "zmid": [127, 218, 224, 225, 247], "restingthick": [127, 218, 223, 224, 225, 238, 247], "bottomdepth": [127, 218, 219, 221, 222, 223, 224, 225, 238, 247], "entir": [127, 247, 259, 268], "petersen": [127, 243, 247, 259], "et": [127, 247, 256, 259, 260, 262, 263], "al": [127, 247, 256, 259, 260, 262, 263], "2015": [127, 247, 259], "int_": 127, "rho": 127, "dv": 127, "sort": [127, 236, 242, 243], "increas": [127, 242], "compute_rp": [127, 247], "csv": [127, 247], "dynamic_ntask": 129, "available_cor": 131, "estim": [131, 133, 247], "initial_state_file_nam": [134, 247], "output_fil": [134, 238, 247], "rest": [134, 223, 256, 260], "potenti": [134, 152, 238, 240, 247, 259], "energi": [134, 152, 240, 246, 247, 259], "netcdf": [134, 234, 248, 249, 250, 251, 252, 253, 254], "state": [134, 228, 229, 230, 232, 233, 234, 238, 239, 247, 260], "len": [134, 238, 247], "superclass": [136, 229, 238], "run_time_step": [142, 209, 247], "resources_fix": [142, 209], "shouldn": [142, 209, 247], "dt": [142, 209, 247, 259, 260, 262, 263, 265], "btr_dt": [142, 209, 247, 259], "barotrop": [142, 209, 247, 259, 264], "longer": [148, 229, 239, 247, 259, 260, 268], "shorter": [148, 239], "rpe": [152, 155, 160, 214, 240, 247, 259], "20": [152, 229, 239, 240, 247, 259, 264], "include_viz": 163, "less": [163, 166, 238, 256, 264], "globalocean": [163, 235], "cosinebel": [166, 169, 172, 230], "rmsevalu": 167, "squar": [167, 230, 232, 233, 262, 263], "ncell": [167, 238, 247], "viz_map": 174, "inerti": [178, 179, 181, 183, 185, 188, 190, 232, 257, 261], "graviti": [178, 179, 181, 183, 185, 188, 190, 232, 257, 261], "wave": [178, 179, 181, 183, 185, 188, 190, 197, 232, 238, 247, 257, 259, 261, 263], "analys": [179, 193], "inertialgravitywav": [181, 232], "angleedg": [183, 197], "angl": [183, 197], "posit": [183, 197, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 247, 256, 264], "xcell": [183, 197, 238, 247], "ycell": [183, 197, 238, 247], "xedg": [183, 197, 238, 247], "yedg": [183, 197], "f0": 183, "corioli": [183, 232, 233, 247, 259, 260, 263, 264], "eta0": [183, 197], "amplitid": [183, 197], "kx": [183, 197], "ky": [183, 197], "angular": [183, 197], "frequenc": [183, 197, 229], "evalu": [184, 198], "eta": [184, 198, 262, 263], "manufactur": [192, 193, 195, 197, 199, 202, 204, 233, 263], "manufacturedsolut": [195, 233], "column": [206, 207, 210, 212, 234, 243, 264, 266], "param": [207, 210, 212, 240, 241], "singlecolumn": [207, 210, 234], "iag": 211, "ideal_ag": [212, 214], "ivar": 212, "layer": [216, 217, 218, 222, 223, 224, 225, 228, 229, 232, 233, 234, 247, 248, 256, 259, 260, 262, 263, 264, 265], "meter": [216, 217], "bottom": [218, 219, 220, 221, 222, 223, 224, 225, 228, 247, 248, 256, 259, 260, 262, 263, 264, 265], "thick": [218, 222, 223, 224, 225, 229, 234, 247, 248, 256, 259, 262], "stretch": [218, 224, 225, 247, 256], "elev": [218, 224, 225, 247, 256], "midpoint": [218, 224, 225, 247], "reftopdepth": [218, 221, 222, 224, 225, 247], "down": [218, 219, 220, 221, 222, 223, 224, 225, 230, 247, 256, 260], "ref": [218, 224, 225, 247], "middl": [218, 224, 225, 247], "refbottomdepth": [218, 219, 220, 221, 222, 224, 225, 238, 247], "refinterfac": [218, 224, 225, 247], "element": [218, 224, 225, 247], "vertcoordmovementweight": [218, 224, 225, 238, 247], "movement": [218, 224, 225, 247], "partial": [219, 220, 247, 256, 259, 260, 262, 263, 264, 265], "seafloor": [219, 221, 222, 223, 256], "unstretch": 223, "shelv": [226, 248, 256], "ssh_adjust": [226, 238, 240, 248], "iter": [226, 248], "compass_branch": 226, "default_input": [226, 235, 247, 248], "ocean_model": [226, 243, 248], "submodul": [226, 235, 243, 247, 266], "latest": [226, 243, 246, 257, 266], "master": 226, "compat": [226, 243, 244, 246], "verison": 226, "maintain": [226, 266], "recurs": [226, 242, 243, 247, 266], "whichev": [226, 256], "inertial_gravity_wav": [226, 231, 262], "manufactured_solut": [226, 231, 257, 261], "single_column": [226, 231, 257, 261], "design": [227, 238, 240, 242, 246, 253, 259], "minim": 228, "fcell": [228, 238, 247, 260], "fedg": [228, 238, 247, 260], "fvertex": [228, 238, 247, 260], "free": [228, 247, 248], "slip": 228, "solid": [228, 259, 260], "tangenti": 228, "enforc": [228, 243], "nonperiod": 228, "drag": 228, "mass": 228, "momentum": [228, 229, 232, 233, 262, 263], "scalar": 228, "rigid": 228, "veloc": [228, 229, 232, 233, 240, 243, 247, 260, 264, 266], "solv": [228, 244, 256], "mid": [228, 259], "vari": [228, 230, 238, 244, 253, 256, 260], "consult": [228, 247], "tidal_forc": 228, "eddi": [229, 259], "addition": [229, 232, 233, 234, 249, 250, 251, 252, 254], "diffus": [229, 232, 233, 234], "50": [229, 232, 233, 241, 247, 259, 262, 263, 264], "prescrib": [229, 232, 233], "decomptest": [229, 247], "restarttest": [229, 241], "threadstest": 229, "thread_test": 229, "rpetest": [229, 240, 247], "intens": 229, "globalconverg": [230, 242, 247], "studi": [230, 260], "advect": [230, 260, 262, 263, 264], "qu": [230, 247, 248, 258, 260], "ico": [230, 247, 258, 260], "fix": [230, 241, 247], "spheric": [230, 260], "24": [230, 260], "shape": [230, 260], "blob": 230, "around": [230, 247, 248, 259, 260], "rate": [230, 232, 233, 247, 260, 262, 263, 264], "cosine_bell_with_viz": [230, 258], "distribut": 230, "dt_per_km": [230, 247, 259, 260, 262, 263, 265], "rmse": [230, 232, 233, 262, 263], "slow": [230, 260], "shallow": [232, 243, 260, 262, 263, 265], "water": [232, 247, 259, 260, 262, 263, 264, 265], "100": [232, 233, 234, 256, 262, 263, 264], "25": [232, 233, 262, 263, 264], "exactsolut": [232, 233], "obtain": [232, 233, 243, 250], "assign": [232, 233, 260], "simul": [232, 233, 238, 245, 247, 258, 259, 262, 263, 265, 266], "fall": [232, 233, 266], "accept": [232, 233], "bound": [232, 233], "calcul": [232, 238, 240], "accord": [233, 262, 263, 266], "exercis": [234, 260, 264], "kpp_test": 234, "mixedlayerdepthsoutput": 234, "enabel": 234, "idealagetrac": [234, 264], "dimens": [234, 259, 264], "single_column_forc": [234, 264], "profil": [234, 244, 264], "throughout": [234, 259, 264], "idealag": 234, "encompass": 235, "perspect": 235, "four": 235, "major": [235, 238], "add_test_group": [235, 242, 247], "variou": [235, 238, 243], "univers": 235, "mix": [235, 241, 262, 263, 264], "ice_shelf_2d": [235, 268], "iceshelf2d": 235, "ziso": [235, 256, 267, 268], "landice_model": [235, 243], "organ": [236, 239, 241, 246], "green": 236, "blue": [236, 249, 266], "orang": 236, "red": 236, "repositori": [236, 246, 247, 266], "laid": 236, "fig": 236, "among": [236, 241, 243, 247], "organiz": 236, "concept": [236, 242, 245, 247, 267], "multiprocess": [238, 242, 248], "outsid": [238, 243], "emploi": 238, "prevent": 238, "unwant": 238, "outer": 238, "inner": 238, "variable_resolut": [238, 241, 266], "dome_varres_grid": 238, "signific": [238, 239, 240], "neglig": 238, "convent": [238, 243, 247], "high": [238, 251, 253], "fit": [238, 248], "applic": [238, 242, 243, 265], "meshstep": 238, "getint": 238, "mesh_cpus_per_task": 238, "mesh_min_cpus_per_task": 238, "previous": [238, 247], "processor": [238, 259], "readi": [238, 247, 254], "write_netcdf": [238, 247], "convers": [238, 247], "generate_grid": 238, "dsmesh": 238, "graphinfofilenam": [238, 247], "use_dist": [238, 247, 259], "gradient_width_dist": [238, 247, 259], "gradient_width_frac": [238, 247, 259], "bottom_temperatur": [238, 247, 259], "surface_temperatur": [238, 247, 259, 264], "temperature_differ": [238, 247, 259], "coriolis_paramet": [238, 247, 259, 262, 263, 264], "bottom_depth": [238, 247, 248, 256, 259, 260, 262, 263, 264, 265], "vert_level": [238, 247, 248, 256, 259, 260, 262, 263, 264, 265], "ones_lik": [238, 247], "xmin": 238, "min": [238, 247, 259, 264], "xmax": 238, "ymin": 238, "ymax": 238, "ymid": 238, "xperturbmin": 238, "xperturbmax": 238, "perturbationwidth": 238, "yoffset": 238, "sin": [238, 247, 259, 262, 263], "pi": [238, 247, 256, 259, 260], "temp_vert": [238, 247], "frac": [238, 247, 256, 259, 262], "logical_and": [238, 247], "transpos": [238, 247], "3rd": [238, 247], "crest": [238, 247, 259], "expand_dim": [238, 247], "dim": [238, 247], "axi": [238, 247], "broadcast": [238, 247], "zeros_lik": [238, 247], "nedg": [238, 247], "dtype": [238, 247], "xvertex": [238, 247], "commandlin": 238, "explor": [238, 241, 247, 256], "harm": 238, "likewis": [238, 247], "subsequ": [238, 245, 268], "arisen": 238, "now": [238, 243, 247, 248, 253], "omit": [238, 266], "problemat": 238, "usual": [238, 240, 243, 247, 266], "isn": [238, 242, 247], "forwardstep": 238, "mesh_path": 238, "mesh_step": 238, "with_ice_shelf_cav": [238, 240], "initial_state_target": 238, "adjusted_init": [238, 240], "forcing_data": 238, "entha_analy_result": 238, "mat": 238, "enthalpy_benchmark": 238, "ourselv": 238, "reduc": 238, "firewal": 238, "bedmachineantarctica_v2_and_gebco_2022_0": 238, "05_degree_20220729": 238, "slate": 238, "icepresent_qu60km_polar": 238, "practic": [238, 242, 243], "u": [238, 247, 253, 254, 262, 263], "straightforward": 238, "commonli": [238, 245], "expens": [238, 239], "mechan": 238, "notat": [238, 265], "That": [238, 242, 245, 247, 266], "word": 238, "ff": 238, "quwisc240": [238, 242, 266, 268], "90c": 238, "91c": 238, "92": [238, 256], "91": 238, "sowisc12to60": [238, 266, 268], "performance_test": [238, 268], "effici": [238, 247], "transfer": 238, "feasibl": 238, "nor": [238, 247], "add_depend": 238, "overhead": 238, "philosophi": [239, 242, 247], "context": [239, 247], "namesak": 239, "256": [239, 250, 254], "quicker": 239, "32": [239, 266], "exce": 239, "limit": [239, 243, 259], "offer": 239, "benefit": [239, 246], "catch": 239, "bug": 239, "covereag": 239, "timestep": 239, "exhaust": 239, "recent": [239, 257], "merg": 239, "reach": 239, "steadi": 239, "encount": [239, 244], "wet": 239, "fundament": 240, "incorpor": 240, "deprec": 240, "constrain_resourc": [240, 247], "smoke_test": [240, 241], "smoketest": [240, 241], "velo_solv": 240, "sia": [240, 243], "fo": 240, "add_step": [240, 247], "runmodel": 240, "run_step": 240, "0200": 240, "00_00": [240, 247], "fine": [240, 247, 264], "recip": 240, "rpe_test": [240, 242, 247, 266], "res_param": [240, 241], "144": 240, "36": [240, 249, 253, 264, 266], "4km": [240, 241, 247, 259, 266], "unsupport": [240, 241, 243], "enumer": [240, 247], "rpe_test_": [240, 247], "_nu_": [240, 247], "deliber": 240, "chosen": [240, 264], "demonstr": [240, 247], "clumsi": [240, 242], "rpe_test_1_nu_1": [240, 247, 259], "rpe_test_2_nu_5": [240, 247, 259], "filesfore3sm": 240, "configure_global_ocean": 240, "with_bgc": 240, "po4": 240, "no3": 240, "sio3": 240, "nh4": 240, "fe": [240, 250], "o2": 240, "dic": 240, "dic_alt_co2": 240, "alk": 240, "dofe": 240, "dop": 240, "dopr": 240, "donr": 240, "zooc": 240, "spchl": 240, "spc": 240, "spfe": 240, "spcaco3": 240, "diatchl": 240, "diatc": 240, "diatf": 240, "diatsi": 240, "diazchl": 240, "diazc": 240, "diazf": 240, "phaeochl": 240, "phaeoc": 240, "phaeof": 240, "dm": 240, "dmsp": 240, "prot": 240, "poli": 240, "lip": 240, "conceptu": [241, 242], "realist": [241, 246, 267], "2000m": [241, 266], "34": [241, 266], "halfar": 241, "cism": 241, "dome_typ": 241, "closest": 241, "put_origin_on_a_cel": 241, "hydrologi": 241, "hydro": [241, 267], "dome_viz": 241, "time_slic": 241, "save_imag": 241, "hide": [241, 247], "hide_fig": 241, "add_test_cas": [241, 247], "restart_test": [241, 247, 266, 268], "talk": 241, "16": [241, 248, 264, 266], "10e3": 241, "40": [241, 252], "126": 241, "4e3": 241, "160": [241, 247, 259], "500": [241, 247, 248, 256, 259], "held": 241, "initial_condit": 242, "dig": [242, 248], "infrastructur": [242, 247], "background": 242, "behind": 242, "adher": [242, 247], "pep8": [242, 243], "bot": [242, 256], "violat": 242, "pleas": [242, 243, 247, 266], "consid": 242, "editor": 242, "pycharm": [242, 243, 247], "spyder": 242, "linter": 242, "flake8": [242, 243], "discourag": 242, "reformat": 242, "autopep8": 242, "undesir": 242, "util": [242, 263], "lint": 242, "wildcard": 242, "vim": [242, 247], "plugin": 242, "id": [242, 243], "commit": [242, 243], "why": 242, "sound": 242, "subpackag": 242, "understand": [242, 248], "releas": [242, 246, 253, 257, 266], "our": [242, 247, 266], "downstream": 242, "tutori": [242, 243], "clu": 242, "intro": 242, "docstr": [242, 246, 247], "strip": 242, "mpas_ocean": 242, "hidden": 242, "shortcut": [242, 266], "referenc": [242, 247], "mention": 242, "dot": 242, "charact": 242, "unix": [242, 246], "distinct": 242, "mayb": [242, 247], "machine_config": 242, "endswith": 242, "splitext": 242, "exactli": [242, 243, 247, 256], "move": [242, 243, 247, 265], "renam": 242, "visa": 242, "versa": 242, "comfort": [242, 247], "inherit": [242, 247], "orient": 242, "program": [242, 248], "led": 242, "felt": 242, "contribut": 242, "hesit": 242, "predecessor": [242, 245, 246], "harder": 242, "outcom": 242, "augment": 242, "explain": 242, "hope": 242, "dens": 242, "learn": [242, 247], "curv": 242, "worth": [242, 247], "skill": 242, "broadli": 242, "endeavor": 242, "readabl": 242, "manipul": 242, "get_available_cores_and_nod": 242, "theoret": 242, "dozen": 242, "split": 242, "theori": 242, "biogeochemistri": 242, "bash": [243, 244, 247, 266], "ksh": 243, "mac": [243, 246], "csh": 243, "tcsh": 243, "temporarili": 243, "bin": [243, 254, 266], "recogn": [243, 248, 266], "mambaforg": [243, 247, 253, 266], "permiss": 243, "miniconda3": 243, "unifi": [243, 254], "anyon": 243, "caus": [243, 250, 254, 256], "person": [243, 244], "base_path_to_install_or_update_conda": 243, "with_albani": 243, "with_netlib_lapack": 243, "with_petsc": 243, "flavor": [243, 247], "login": [243, 250, 254], "troubl": [243, 247], "recognit": 243, "trilino": 243, "downsid": 243, "unneed": 243, "laptop": [243, 247, 248], "workstat": 243, "deploy": 243, "hpc": [243, 250, 253], "touch": 243, "update_spack": 243, "reinstal": 243, "scorpio": [243, 253, 266], "esmf": [243, 266], "caution": 243, "deploi": [243, 249, 250, 251, 252, 253, 254], "load_": 243, "encod": 243, "load_dev_polaris_": [243, 247], "env_nam": 243, "dev_polaris_": [243, 244], "workdir": [243, 266], "unexpect": [243, 245, 247], "occur": [243, 244], "safest": 243, "rerun": 243, "echo": 243, "correct": 243, "checkout": [243, 247], "proceed": 243, "notic": 243, "conda_env": [243, 252, 266], "rememb": 243, "recreat": [243, 244], "incorrect": 243, "unus": 243, "session": [243, 247], "pip": 243, "substanti": 243, "risk": [243, 247], "rare": 243, "env_onli": 243, "mpas_make_target": [243, 266], "scientif": [243, 266], "_albani": 243, "instruct": [243, 247], "proce": 243, "es3m": 243, "compli": 243, "memor": 243, "guidelin": 243, "stai": 243, "complianc": 243, "checker": 243, "pre": 243, "isort": 243, "flynt": 243, "mypi": 243, "77": 243, "e302": 243, "blank": 243, "resolv": 243, "simpler": [243, 247], "mkdir": 243, "fetch": [243, 247], "new_branch_nam": 243, "put": [243, 247], "elsewher": 243, "disk": [243, 248, 250, 254], "respons": 243, "simplest": 243, "your_new_branch": 243, "suggest": 244, "geo": 244, "cartopi": 244, "14": 244, "np110py27_4": 244, "calledprocesserror": 244, "deploy_tmp": 244, "spec": [244, 254], "vpn": 244, "site": 244, "shell": [244, 246], "honor": 244, "wide": 244, "coupl": [244, 246], "spawn": 244, "usernam": [244, 247, 250, 254], "proxy_en": 244, "export": 244, "all_proxi": 244, "proxyout": 244, "8080": 244, "no_proxi": 244, "localhost": [244, 248, 253, 254, 266], "127": 244, "proxy_dis": 244, "unset": 244, "anytim": 244, "fatal": 244, "mpi_init": 244, "stack": 244, "mpir_init_thread": 244, "159": 244, "mpid_init": 244, "164": 244, "mpidi_ch3_init": 244, "95": 244, "mpid_nem_init": 244, "314": 244, "mpid_nem_tcp_init": 244, "173": 244, "mpid_nem_tcp_get_business_card": 244, "395": 244, "getsockinterfaceaddr": 244, "369": 244, "pn2034311": 244, "errno": 244, "host": [244, 248, 253, 266], "mpirun": [244, 248, 249, 250, 251, 252, 253, 254, 266], "srun": [244, 247, 248, 249, 250, 251, 252, 253, 254, 266], "parallel_execut": [244, 248, 249, 250, 251, 252, 253, 254, 266], "plu": 245, "autom": 246, "exascal": 246, "earth": 246, "kept": 246, "sens": [246, 247], "boundari": [246, 259, 267], "expert": 246, "team": 246, "launch": 246, "uncoupl": 246, "evolv": [246, 256, 260, 264], "quick": [246, 247, 257, 268], "queue": 246, "beginn": [246, 247], "worktre": [246, 247], "advanc": [246, 247], "mpas_to_yaml": 246, "troubleshoot": 246, "proxi": 246, "lanl": [246, 248, 250], "gethostbynam": 246, "glossari": 247, "port": [247, 254], "stick": 247, "miniconda": 247, "haven": 247, "3_chrysalis_intel_openmpi": 247, "switch": [247, 248], "strict": 247, "fork": 247, "push": 247, "lowercas": 247, "hyphen": 247, "settl": 247, "desktop": 247, "realli": [247, 254], "nice": [247, 254], "supercomput": 247, "yet_another_channel": 247, "vi": 247, "polaris_head": 247, "yetanotherchannel": 247, "instanc": 247, "repres": [247, 256, 260], "highli": 247, "camelcas": 247, "capit": 247, "letter": 247, "cap": 247, "awkward": 247, "encourag": 247, "enclos": 247, "briefli": 247, "alphabet": 247, "interest": 247, "anyth": 247, "probabl": [247, 253], "suppos": 247, "easili": 247, "tide": 247, "analyz": 247, "hard": [247, 259, 264], "sai": [247, 253], "res_str": 247, "1000": [247, 248, 256, 259, 262, 263], "still": [247, 257, 265, 266], "ti": 247, "loop": 247, "coarsest": [247, 248], "especi": 247, "anticip": 247, "promot": 247, "pattern": 247, "familiar": 247, "seen": 247, "brows": 247, "row": 247, "greater": 247, "disadvantag": 247, "foremost": 247, "magic": 247, "effect": [247, 265], "kind": 247, "pain": 247, "path_to_mpas_ocean": 247, "path_to_working_dir": 247, "sbatch": [247, 253, 266], "job_script": [247, 266], "cat": 247, "slurm_jobid": 247, "_run_test": 247, "gpf": 247, "fs1": 247, "ac": 247, "cbegeman": 247, "successfulli": 247, "x_cell": 247, "y_cell": 247, "grid_typ": [247, 248, 256, 259, 260, 262, 263, 264, 265], "coord_typ": [247, 256, 259, 260, 262, 263, 264, 265], "partial_cell_typ": [247, 256, 259, 260, 262, 263, 264, 265], "min_pc_fract": [247, 256, 259, 260, 262, 263, 264, 265], "everywher": 247, "depress": [247, 256], "x_min": 247, "x_max": 247, "y_min": 247, "y_max": 247, "y_mid": 247, "x_perturb_min": 247, "x_perturb_max": 247, "perturb_width": [247, 259], "y_offset": 247, "normal_veloc": 247, "attr": 247, "mostli": 247, "logic": [247, 259], "northern": [247, 259], "half": [247, 259], "southern": [247, 259], "halv": [247, 259], "gradient": [247, 259, 262, 263, 264], "08": [247, 259], "500km": [247, 259], "40e3": [247, 259], "35": [247, 259, 260, 264, 265, 266], "2e": [247, 259], "initial_temperatur": 247, "initial_normal_veloc": 247, "connect": [247, 254], "match": 247, "decomp_test": [247, 266, 268], "light": 247, "fast": 247, "e3sm_compon": 247, "interact": [247, 250, 253, 254, 266], "interrupt": 247, "pty": 247, "navig": 247, "newli": 247, "bunch": 247, "didn": 247, "mistak": 247, "finger": 247, "cross": 247, "initial_normalveloc": 247, "initial_salin": 247, "btr_dt_per_km": [247, 259], "obvious": 247, "stress": [247, 264], "steem": 247, "bring": 247, "landicemodelstep": 247, "huge": 247, "cp": 247, "config_dt": 247, "05": 247, "split_explicit_t": 247, "config_btr_dt": 247, "hmix_del2": 247, "bottom_drag": 247, "cvmix": 247, "0002": 247, "filename_interv": 247, "0100": 247, "input_interv": 247, "initial_onli": 247, "basicmesh": 247, "dayssincestart": 247, "surfacespe": 247, "lowersurfac": 247, "uppersurfac": 247, "ureconstructx": 247, "ureconstructi": 247, "great": 247, "remain": [247, 260, 264], "load_dataset": 247, "final_temperatur": 247, "ab": 247, "fresh": 247, "decomp": 247, "proc": 247, "area": 247, "markdown": 247, "users_guid": 247, "daunt": 247, "flesh": 247, "bonu": 247, "improv": 247, "introduc": 247, "techniqu": 247, "proport": [247, 256, 259, 260, 262, 263, 265], "1384565": 247, "strftime": 247, "gmtime": 247, "run_second": 247, "twice": 247, "guess": 247, "recomput": 247, "aim": 247, "becam": 247, "mainten": 247, "counter": 247, "thought": 247, "yet_another_channel_test_cas": 247, "yetanotherchanneltestcas": 247, "choic": [247, 260], "spuriou": [247, 259], "dissip": [247, 259], "pop": [247, 259], "mom": [247, 259], "mitgcm": [247, 259], "higher": 247, "heavi": 247, "analogi": 247, "tet": 247, "bear": 247, "me": 247, "late": 247, "_add_step": 247, "startswith": 247, "privat": 247, "break": [247, 259], "unusu": 247, "rpe_test_3_nu_10": 247, "rpe_test_4_nu_20": 247, "rpe_test_5_nu_200": 247, "_setup_step": 247, "20_00": 247, "0000": 247, "dayssincestartofsim": 247, "relativevort": 247, "pyplot": 247, "plt": 247, "output_": 247, "sections_yet_another_channel_": 247, "rpe_t": 247, "init_filenam": 247, "ds_init": 247, "_plot": 247, "compact": 247, "dirti": 247, "adopt": 247, "lesson": 247, "tricki": 247, "commun": 247, "nuanc": 247, "fake": 247, "wasn": 247, "fold": 247, "proper": 247, "third": 247, "extens": 248, "single_nod": [248, 249, 250, 251, 252, 253, 254, 266], "multinod": [248, 266], "hopefulli": 248, "explanatori": 248, "my_machin": 248, "extend": 248, "gitconfig": 248, "enter": 248, "author": 248, "asai": 248, "davi": 248, "email": 248, "pull_request": 248, "28": 248, "address": 248, "metadata": 248, "customize_config_pars": 248, "server_base_url": 248, "inej": 248, "check_siz": 248, "ssl": 248, "certif": 248, "core_path": 248, "partition_execut": 248, "dask": 248, "netcdf4": 248, "netcdf4_class": 248, "netcdf3_64bit": 248, "netcdf3_class": 248, "engin": 248, "scipi": 248, "mesh_databas": 248, "ocean_database_root": 248, "landice_database_root": 248, "mesh_cor": 248, "18": [248, 250], "mesh_min_cor": 248, "mesh_max_memori": 248, "mesh_max_disk": 248, "init_cor": 248, "init_min_cor": 248, "init_max_memori": 248, "init_max_disk": 248, "init_thread": 248, "forward_cor": 248, "forward_min_cor": 248, "forward_thread": 248, "forward_max_memori": 248, "forward_max_disk": 248, "add_metadata": 248, "ec": 248, "wc": 248, "mesh_descript": 248, "autodetect": 248, "bathy_descript": 248, "gebco": 248, "2022": 248, "bedmachin": 248, "antarctica": 248, "init_descript": 248, "e3sm_vers": 248, "increment": 248, "mesh_revis": 248, "finest": 248, "min_r": 248, "max_r": 248, "max_depth": 248, "creation_d": 248, "peopl": 248, "contact": 248, "temperaturemax": 248, "statist": 248, "temperature_max": 248, "33": [248, 266], "diagnost": [248, 249, 250, 252, 253, 254, 266], "enable_ocean_initial_condit": 248, "enable_ocean_graph_partit": 248, "enable_seaice_initial_condit": 248, "scrip": 248, "enable_scrip": 248, "transect": 248, "onlin": 248, "member": 248, "offlin": 248, "enable_diagnostics_fil": 248, "coarser": [248, 260], "finer": 248, "comparisonlatresolut": 248, "comparisonlonresolut": 248, "antarct": 248, "polar": [248, 249, 251, 256], "stereograph": 248, "comparisonantarcticstereowidth": 248, "6000": [248, 256], "comparisonantarcticstereoresolut": 248, "arctic": 248, "comparisonarcticstereowidth": 248, "comparisonarcticstereoresolut": 248, "tanh_dz": 248, "3000": 248, "min_layer_thick": [248, 256], "max_layer_thick": [248, 256], "retain": 248, "ecosystem": 249, "gain": 249, "confluenc": 249, "public_html": [249, 251, 253], "polaris_env": [249, 250, 251, 252, 253, 254], "soft": [249, 251, 253, 266], "mpi_intel": [249, 251, 252, 253], "mpi_gnu": [249, 250, 251, 252, 253, 254], "hdf5": [249, 250, 251, 252, 253, 254], "fortran": [249, 250, 251, 252, 253, 254], "pnetcdf": [249, 250, 251, 252, 253, 254], "use_e3sm_hdf5_netcdf": [249, 250, 251, 252, 253, 254], "cobalt": [249, 250, 251, 252, 253, 254], "condo": [249, 266], "acm": [249, 266], "medium": 249, "acme_high": 249, "load_latest_polaris_intel_impi": [249, 252], "load_latest_polaris_gnu_openmpi": [249, 251, 266], "dst": 250, "calendar": 250, "network": 250, "introduct": 250, "platform": 250, "batch": 250, "wtrw": 250, "ch": 250, "lustr": 250, "scratch4": 250, "scratch5": 250, "sacctmgr": 250, "assoc": 250, "cluster": 250, "45": 250, "my": 250, "sshare": 250, "grep": [250, 266], "sreport": 250, "accountutilizationbyus": 250, "2019": 250, "02": 250, "prioriti": 250, "yellow": 250, "chkhome": 250, "petabyt": 250, "df": 250, "bp": 250, "archiv": [250, 254], "hpss": [250, 254], "front": 250, "tn": 250, "storag": 250, "project_nam": 250, "salloc": [250, 253, 254], "account_nam": 250, "gpu": [250, 254], "hyperthread": [250, 254], "hang": [250, 254], "threads_per_cor": [250, 254], "modules_befor": [250, 254], "modules_aft": [250, 254], "shared_clim": [250, 266], "load_latest_polaris_gnu_mpich": [250, 254], "load_latest_polaris_intel_openmpi": 251, "compyf": 252, "app": [252, 266], "pmi2": 252, "submit": 253, "workload": 253, "squeue": 253, "my_usernam": [253, 254], "scancel": 253, "jobid": 253, "cancel": 253, "emtpi": 253, "three": 253, "mpi_mpich": [253, 266], "mpi_openmpi": [253, 266], "nompi": [253, 266], "p1": 254, "nersc": 254, "iri": 254, "filesystem": 254, "myquota": 254, "prjquota": 254, "projectid": 254, "m1795": 254, "hsi": 254, "htar": 254, "zstash": 254, "cf": [254, 266], "cdir": [254, 266], "premium": 254, "cray_compil": 254, "8844": 254, "monik": 254, "browser": 254, "grab": 254, "logon": 254, "kernel": 254, "myenv": 254, "ipykernel": 254, "kernelspec": 254, "u1": 254, "Be": 254, "interpret": 254, "argv": 254, "env": 254, "ipykernel_launch": 254, "connection_fil": 254, "display_nam": 254, "languag": 254, "2500": 256, "deepest": 256, "stewart": 256, "2017": 256, "z_2": 256, "z_1": 256, "mathrm": 256, "tanh": 256, "rightarrow": 256, "infti": 256, "z_k": 256, "z_0": 256, "z_": [256, 264], "k": 256, "finder": 256, "n_z": 256, "h_": 256, "210": [256, 260], "scienc": 256, "hydrograph": 256, "climatologi": 256, "250": 256, "5500": 256, "renorm": 256, "51": 256, "221": 256, "63": 256, "floor": 256, "flat": [256, 259], "collaps": 256, "adcroft": 256, "campin": 256, "2004": 256, "absenc": 256, "squash": 256, "watercolumn": 256, "press": 256, "batymetri": 256, "stair": 256, "month": 257, "year": 257, "websit": 257, "release_6": 257, "ilicak": 259, "2012": 259, "distinguish": 259, "zonal": [259, 264], "meridion": [259, 264], "psu": [259, 264], "cooler": 259, "north": 259, "sinusoid": 259, "perturb": [259, 260, 263], "t_0": 259, "t_b": 259, "t_": 259, "z_b": 259, "y_": 259, "l_x": 259, "warmer": 259, "ge": [259, 260], "gradient_width_fract": 259, "l_y": 259, "le": [259, 264], "flow": [259, 260], "stationari": [259, 264], "literatur": 259, "mk": 259, "celsiu": 259, "williamson": 260, "1992": 260, "sec": 260, "3a": 260, "skamarock": 260, "gassmann": 260, "bodi": 260, "rotat": [260, 262, 263], "transport": 260, "psi": 260, "proportion": 260, "icosohydr": 260, "480": 260, "150": 260, "nearest": 260, "insensit": [260, 264], "300": [260, 265], "passiv": 260, "psi_0": 260, "co": [260, 262, 263], "radiu": 260, "debug_tracers_1": 260, "equatori": 260, "u_0": 260, "tau": 260, "transit": 260, "equat": [260, 262, 263, 264], "vel_pd": 260, "tendenc": [260, 263], "multipli": 260, "rad": 260, "lat_cent": 260, "lon_cent": 260, "14159265": 260, "2123666": 260, "6667": 260, "hill": 260, "psi0": 260, "qu_conv_thresh": 260, "warn": [260, 262, 263], "qu_conv_max": 260, "icos_conv_thresh": 260, "icos_conv_max": 260, "roughli": 260, "propag": [262, 263], "doubli": [262, 263], "assess": [262, 263], "numer": [262, 263], "accuraci": [262, 263], "discret": [262, 263], "implemen": 262, "bishnu": [262, 263], "friction": [262, 263], "neglect": [262, 263], "nonlinear": [262, 263], "analyt": [262, 267], "k_x": [262, 263], "k_y": [262, 263], "availi": [262, 263], "10000": [262, 263], "coriloi": 262, "1e": 262, "amplitud": [262, 263], "ssh_amplitud": [262, 263], "wavelength": [262, 263], "n_wavelengths_x": [262, 263], "n_wavelengths_i": [262, 263], "conv_thresh": [262, 263], "conv_max": [262, 263], "embed": 263, "eta_0": 263, "span": 264, "arbitrarili": 264, "virtu": 264, "examin": 264, "400": 264, "phi": 264, "phi_0": 264, "dz": 264, "ml": 264, "mld": 264, "surface_x": 264, "x_gradient_mixed_lay": 264, "mixed_layer_depth_x": 264, "x_difference_across_mixed_lay": 264, "x_gradient_interior": 264, "spatial": 264, "degc": 264, "temperature_gradient_mixed_lay": 264, "temperature_difference_across_mixed_lay": 264, "temperature_gradient_interior": 264, "mixed_layer_depth_temperatur": 264, "surface_salin": 264, "salinity_gradient_mixed_lay": 264, "salinity_difference_across_mixed_lay": 264, "salinity_gradient_interior": 264, "mixed_layer_depth_salin": 264, "scheme": 264, "dictat": 264, "kpp": 264, "restor": 264, "piston": 264, "toward": 264, "temperature_surface_restoring_valu": 264, "temperature_piston_veloc": 264, "salinity_surface_restoring_valu": 264, "salinity_piston_veloc": 264, "temperature_interior_restoring_r": 264, "salinity_interior_restoring_r": 264, "net": 264, "latent": 264, "heat": 264, "bulk": 264, "latent_heat_flux": 264, "sensibl": 264, "sensible_heat_flux": 264, "solar": 264, "shortwav": 264, "shortwave_heat_flux": 264, "evapor": 264, "evaporation_flux": 264, "5e": 264, "rain": 264, "rain_flux": 264, "wind": 264, "wind_stress_zon": 264, "wind_stress_meridion": 264, "characterist": 265, "welcom": 265, "icosohedr": 265, "pertain": 265, "inher": 265, "warrant": 265, "investig": 265, "load_latest_polari": 266, "minu": 266, "create_polaris_load_script": 266, "load_polaris_1": 266, "0_mpich": 266, "wiki": 266, "circular_shelf": 266, "sia_smoke_test": 266, "sia_decomposition_test": 266, "sia_restart_test": 266, "fo_smoke_test": 266, "fo_decomposition_test": 266, "fo_restart_test": 266, "37": 266, "38": 266, "17": 266, "210131_test_new_branch": 266, "my_config": 266, "smaller": 266, "previous_workdir": 266, "paper": 266, "recompil": 266, "live": 266, "safer": 266, "preserv": 266, "test_subdir": 266, "whatev": 266, "clock": 266, "j": 266, "exclus": 266, "job_nam": 266, "fo_integr": [266, 268], "full_integr": [266, 268], "sia_integr": [266, 268], "cosine_bell_cached_init": [266, 268], "ec30to60": [266, 268], "ecwisc30to60": [266, 268], "qu240_for_e3sm": [266, 268], "quwisc240_for_e3sm": [266, 268], "wc14": [266, 268], "suitenam": 266, "radial": 267, "form": 267, "identifi": 267, "analysis_test": 268, "5km": 268, "20km": 268, "with_frazil": 268, "prohibit": 268}, "objects": {"polaris": [[17, 0, 1, "", "Component"], [19, 0, 1, "", "ModelStep"], [32, 0, 1, "", "Step"], [41, 0, 1, "", "TestCase"], [45, 0, 1, "", "TestGroup"]], "polaris.Component": [[17, 1, 1, "", "__init__"], [18, 1, 1, "", "add_test_group"]], "polaris.ModelStep": [[19, 1, 1, "", "__init__"], [20, 1, 1, "", "add_model_config_options"], [21, 1, 1, "", "add_namelist_file"], [22, 1, 1, "", "add_streams_file"], [23, 1, 1, "", "add_yaml_file"], [24, 1, 1, "", "dynamic_model_config"], [25, 1, 1, "", "map_yaml_to_namelist"], [26, 1, 1, "", "partition"], [27, 1, 1, "", "process_inputs_and_outputs"], [28, 1, 1, "", "runtime_setup"], [29, 1, 1, "", "set_model_resources"], [30, 1, 1, "", "setup"], [31, 1, 1, "", "update_namelist_pio"]], "polaris.Step": [[32, 1, 1, "", "__init__"], [33, 1, 1, "", "add_dependency"], [34, 1, 1, "", "add_input_file"], [35, 1, 1, "", "add_output_file"], [36, 1, 1, "", "constrain_resources"], [37, 1, 1, "", "run"], [38, 1, 1, "", "runtime_setup"], [39, 1, 1, "", "set_resources"], [40, 1, 1, "", "setup"]], "polaris.TestCase": [[41, 1, 1, "", "__init__"], [42, 1, 1, "", "add_step"], [43, 1, 1, "", "configure"], [44, 1, 1, "", "validate"]], "polaris.TestGroup": [[45, 1, 1, "", "__init__"], [46, 1, 1, "", "add_test_case"]], "polaris.__main__": [[47, 2, 1, "", "main"]], "polaris.cache": [[48, 2, 1, "", "update_cache"]], "polaris.components": [[49, 2, 1, "", "get_components"]], "polaris.config": [[50, 0, 1, "", "PolarisConfigParser"]], "polaris.config.PolarisConfigParser": [[50, 1, 1, "", "__init__"]], "polaris.io": [[51, 2, 1, "", "download"], [52, 3, 0, "-", "imp_res"], [53, 2, 1, "", "symlink"]], "polaris.job": [[54, 2, 1, "", "get_slurm_options"], [55, 2, 1, "", "write_job_script"]], "polaris.list": [[56, 2, 1, "", "list_cases"], [57, 2, 1, "", "list_machines"], [58, 2, 1, "", "list_suites"]], "polaris.logging": [[59, 2, 1, "", "log_method_call"]], "polaris.mesh": [[60, 0, 1, "", "IcosahedralMeshStep"], [67, 0, 1, "", "QuasiUniformSphericalMeshStep"]], "polaris.mesh.IcosahedralMeshStep": [[60, 1, 1, "", "__init__"], [61, 1, 1, "", "build_subdivisions_cell_width_lat_lon"], [62, 1, 1, "", "get_cell_width"], [63, 1, 1, "", "get_subdivisions"], [64, 1, 1, "", "make_jigsaw_mesh"], [65, 1, 1, "", "run"], [66, 1, 1, "", "setup"]], "polaris.mesh.QuasiUniformSphericalMeshStep": [[67, 1, 1, "", "__init__"], [68, 1, 1, "", "build_cell_width_lat_lon"], [69, 1, 1, "", "make_jigsaw_mesh"], [70, 1, 1, "", "run"], [71, 1, 1, "", "setup"]], "polaris.mesh.planar": [[72, 2, 1, "", "compute_planar_hex_nx_ny"]], "polaris.mesh.spherical": [[73, 0, 1, "", "SphericalBaseStep"]], "polaris.mesh.spherical.SphericalBaseStep": [[73, 1, 1, "", "__init__"], [74, 1, 1, "", "run"], [75, 1, 1, "", "save_and_plot_cell_width"], [76, 1, 1, "", "setup"]], "polaris.model_step": [[77, 2, 1, "", "make_graph_file"]], "polaris.namelist": [[78, 2, 1, "", "ingest"], [79, 2, 1, "", "parse_replacements"], [80, 2, 1, "", "replace"], [81, 2, 1, "", "write"]], "polaris.ocean": [[128, 0, 1, "", "Ocean"]], "polaris.ocean.Ocean": [[128, 1, 1, "", "__init__"]], "polaris.ocean.model": [[129, 0, 1, "", "OceanModelStep"]], "polaris.ocean.model.OceanModelStep": [[129, 1, 1, "", "__init__"], [130, 1, 1, "", "compute_cell_count"], [131, 1, 1, "", "constrain_resources"], [132, 1, 1, "", "map_yaml_to_namelist"], [133, 1, 1, "", "setup"]], "polaris.ocean.rpe": [[134, 2, 1, "", "compute_rpe"]], "polaris.ocean.tests.baroclinic_channel": [[135, 0, 1, "", "BaroclinicChannel"], [136, 0, 1, "", "BaroclinicChannelTestCase"]], "polaris.ocean.tests.baroclinic_channel.BaroclinicChannel": [[135, 1, 1, "", "__init__"]], "polaris.ocean.tests.baroclinic_channel.BaroclinicChannelTestCase": [[136, 1, 1, "", "__init__"], [137, 1, 1, "", "validate"]], "polaris.ocean.tests.baroclinic_channel.decomp_test": [[138, 0, 1, "", "DecompTest"]], "polaris.ocean.tests.baroclinic_channel.decomp_test.DecompTest": [[138, 1, 1, "", "__init__"], [139, 1, 1, "", "validate"]], "polaris.ocean.tests.baroclinic_channel.default": [[140, 0, 1, "", "Default"]], "polaris.ocean.tests.baroclinic_channel.default.Default": [[140, 1, 1, "", "__init__"], [141, 1, 1, "", "validate"]], "polaris.ocean.tests.baroclinic_channel.forward": [[142, 0, 1, "", "Forward"]], "polaris.ocean.tests.baroclinic_channel.forward.Forward": [[142, 1, 1, "", "__init__"], [143, 1, 1, "", "compute_cell_count"], [144, 1, 1, "", "dynamic_model_config"]], "polaris.ocean.tests.baroclinic_channel.initial_state": [[145, 0, 1, "", "InitialState"]], "polaris.ocean.tests.baroclinic_channel.initial_state.InitialState": [[145, 1, 1, "", "__init__"], [146, 1, 1, "", "run"], [147, 1, 1, "", "setup"]], "polaris.ocean.tests.baroclinic_channel.restart_test": [[148, 0, 1, "", "RestartTest"]], "polaris.ocean.tests.baroclinic_channel.restart_test.RestartTest": [[148, 1, 1, "", "__init__"], [149, 1, 1, "", "validate"]], "polaris.ocean.tests.baroclinic_channel.restart_test.restart_step": [[150, 0, 1, "", "RestartStep"]], "polaris.ocean.tests.baroclinic_channel.restart_test.restart_step.RestartStep": [[150, 1, 1, "", "__init__"], [151, 1, 1, "", "dynamic_model_config"]], "polaris.ocean.tests.baroclinic_channel.rpe_test": [[152, 0, 1, "", "RpeTest"]], "polaris.ocean.tests.baroclinic_channel.rpe_test.RpeTest": [[152, 1, 1, "", "__init__"], [153, 1, 1, "", "configure"], [154, 1, 1, "", "validate"]], "polaris.ocean.tests.baroclinic_channel.rpe_test.analysis": [[155, 0, 1, "", "Analysis"]], "polaris.ocean.tests.baroclinic_channel.rpe_test.analysis.Analysis": [[155, 1, 1, "", "__init__"], [156, 1, 1, "", "run"], [157, 1, 1, "", "setup"]], "polaris.ocean.tests.baroclinic_channel.threads_test": [[158, 0, 1, "", "ThreadsTest"]], "polaris.ocean.tests.baroclinic_channel.threads_test.ThreadsTest": [[158, 1, 1, "", "__init__"], [159, 1, 1, "", "validate"]], "polaris.ocean.tests.baroclinic_channel.viz": [[160, 0, 1, "", "Viz"]], "polaris.ocean.tests.baroclinic_channel.viz.Viz": [[160, 1, 1, "", "__init__"], [161, 1, 1, "", "run"]], "polaris.ocean.tests.global_convergence": [[162, 0, 1, "", "GlobalConvergence"]], "polaris.ocean.tests.global_convergence.GlobalConvergence": [[162, 1, 1, "", "__init__"]], "polaris.ocean.tests.global_convergence.cosine_bell": [[163, 0, 1, "", "CosineBell"]], "polaris.ocean.tests.global_convergence.cosine_bell.CosineBell": [[163, 1, 1, "", "__init__"], [164, 1, 1, "", "configure"], [165, 1, 1, "", "validate"]], "polaris.ocean.tests.global_convergence.cosine_bell.analysis": [[166, 0, 1, "", "Analysis"]], "polaris.ocean.tests.global_convergence.cosine_bell.analysis.Analysis": [[166, 1, 1, "", "__init__"], [167, 1, 1, "", "rmse"], [168, 1, 1, "", "run"]], "polaris.ocean.tests.global_convergence.cosine_bell.forward": [[169, 0, 1, "", "Forward"]], "polaris.ocean.tests.global_convergence.cosine_bell.forward.Forward": [[169, 1, 1, "", "__init__"], [170, 1, 1, "", "compute_cell_count"], [171, 1, 1, "", "dynamic_model_config"]], "polaris.ocean.tests.global_convergence.cosine_bell.init": [[172, 0, 1, "", "Init"]], "polaris.ocean.tests.global_convergence.cosine_bell.init.Init": [[172, 1, 1, "", "__init__"], [173, 1, 1, "", "run"]], "polaris.ocean.tests.global_convergence.cosine_bell.viz": [[174, 0, 1, "", "Viz"], [176, 0, 1, "", "VizMap"]], "polaris.ocean.tests.global_convergence.cosine_bell.viz.Viz": [[174, 1, 1, "", "__init__"], [175, 1, 1, "", "run"]], "polaris.ocean.tests.global_convergence.cosine_bell.viz.VizMap": [[176, 1, 1, "", "__init__"], [177, 1, 1, "", "run"]], "polaris.ocean.tests.inertial_gravity_wave": [[178, 0, 1, "", "InertialGravityWave"]], "polaris.ocean.tests.inertial_gravity_wave.InertialGravityWave": [[178, 1, 1, "", "__init__"]], "polaris.ocean.tests.inertial_gravity_wave.analysis": [[179, 0, 1, "", "Analysis"]], "polaris.ocean.tests.inertial_gravity_wave.analysis.Analysis": [[179, 1, 1, "", "__init__"], [180, 1, 1, "", "run"]], "polaris.ocean.tests.inertial_gravity_wave.convergence": [[181, 0, 1, "", "Convergence"]], "polaris.ocean.tests.inertial_gravity_wave.convergence.Convergence": [[181, 1, 1, "", "__init__"], [182, 1, 1, "", "validate"]], "polaris.ocean.tests.inertial_gravity_wave.exact_solution": [[183, 0, 1, "", "ExactSolution"]], "polaris.ocean.tests.inertial_gravity_wave.exact_solution.ExactSolution": [[183, 1, 1, "", "__init__"], [184, 1, 1, "", "ssh"]], "polaris.ocean.tests.inertial_gravity_wave.forward": [[185, 0, 1, "", "Forward"]], "polaris.ocean.tests.inertial_gravity_wave.forward.Forward": [[185, 1, 1, "", "__init__"], [186, 1, 1, "", "compute_cell_count"], [187, 1, 1, "", "dynamic_model_config"]], "polaris.ocean.tests.inertial_gravity_wave.initial_state": [[188, 0, 1, "", "InitialState"]], "polaris.ocean.tests.inertial_gravity_wave.initial_state.InitialState": [[188, 1, 1, "", "__init__"], [189, 1, 1, "", "run"]], "polaris.ocean.tests.inertial_gravity_wave.viz": [[190, 0, 1, "", "Viz"]], "polaris.ocean.tests.inertial_gravity_wave.viz.Viz": [[190, 1, 1, "", "__init__"], [191, 1, 1, "", "run"]], "polaris.ocean.tests.manufactured_solution": [[192, 0, 1, "", "ManufacturedSolution"]], "polaris.ocean.tests.manufactured_solution.ManufacturedSolution": [[192, 1, 1, "", "__init__"]], "polaris.ocean.tests.manufactured_solution.analysis": [[193, 0, 1, "", "Analysis"]], "polaris.ocean.tests.manufactured_solution.analysis.Analysis": [[193, 1, 1, "", "__init__"], [194, 1, 1, "", "run"]], "polaris.ocean.tests.manufactured_solution.convergence": [[195, 0, 1, "", "Convergence"]], "polaris.ocean.tests.manufactured_solution.convergence.Convergence": [[195, 1, 1, "", "__init__"], [196, 1, 1, "", "validate"]], "polaris.ocean.tests.manufactured_solution.exact_solution": [[197, 0, 1, "", "ExactSolution"]], "polaris.ocean.tests.manufactured_solution.exact_solution.ExactSolution": [[197, 1, 1, "", "__init__"], [198, 1, 1, "", "ssh"]], "polaris.ocean.tests.manufactured_solution.forward": [[199, 0, 1, "", "Forward"]], "polaris.ocean.tests.manufactured_solution.forward.Forward": [[199, 1, 1, "", "__init__"], [200, 1, 1, "", "compute_cell_count"], [201, 1, 1, "", "dynamic_model_config"]], "polaris.ocean.tests.manufactured_solution.initial_state": [[202, 0, 1, "", "InitialState"]], "polaris.ocean.tests.manufactured_solution.initial_state.InitialState": [[202, 1, 1, "", "__init__"], [203, 1, 1, "", "run"]], "polaris.ocean.tests.manufactured_solution.viz": [[204, 0, 1, "", "Viz"]], "polaris.ocean.tests.manufactured_solution.viz.Viz": [[204, 1, 1, "", "__init__"], [205, 1, 1, "", "run"]], "polaris.ocean.tests.single_column": [[206, 0, 1, "", "SingleColumn"]], "polaris.ocean.tests.single_column.SingleColumn": [[206, 1, 1, "", "__init__"]], "polaris.ocean.tests.single_column.cvmix": [[207, 0, 1, "", "CVMix"]], "polaris.ocean.tests.single_column.cvmix.CVMix": [[207, 1, 1, "", "__init__"], [208, 1, 1, "", "validate"]], "polaris.ocean.tests.single_column.forward": [[209, 0, 1, "", "Forward"]], "polaris.ocean.tests.single_column.forward.Forward": [[209, 1, 1, "", "__init__"]], "polaris.ocean.tests.single_column.ideal_age": [[210, 0, 1, "", "IdealAge"]], "polaris.ocean.tests.single_column.ideal_age.IdealAge": [[210, 1, 1, "", "__init__"], [211, 1, 1, "", "validate"]], "polaris.ocean.tests.single_column.initial_state": [[212, 0, 1, "", "InitialState"]], "polaris.ocean.tests.single_column.initial_state.InitialState": [[212, 1, 1, "", "__init__"], [213, 1, 1, "", "run"]], "polaris.ocean.tests.single_column.viz": [[214, 0, 1, "", "Viz"]], "polaris.ocean.tests.single_column.viz.Viz": [[214, 1, 1, "", "__init__"], [215, 1, 1, "", "run"]], "polaris.ocean.vertical.grid_1d": [[216, 2, 1, "", "generate_1d_grid"], [217, 2, 1, "", "write_1d_grid"]], "polaris.ocean.vertical": [[218, 2, 1, "", "init_vertical_coord"]], "polaris.ocean.vertical.partial_cells": [[219, 2, 1, "", "alter_bottom_depth"], [220, 2, 1, "", "alter_ssh"]], "polaris.ocean.vertical.zlevel": [[221, 2, 1, "", "compute_min_max_level_cell"], [222, 2, 1, "", "compute_z_level_layer_thickness"], [223, 2, 1, "", "compute_z_level_resting_thickness"], [224, 2, 1, "", "init_z_level_vertical_coord"]], "polaris.ocean.vertical.zstar": [[225, 2, 1, "", "init_z_star_vertical_coord"]], "polaris.parallel": [[82, 2, 1, "", "get_available_parallel_resources"], [83, 2, 1, "", "get_parallel_command"], [84, 2, 1, "", "run_command"], [85, 2, 1, "", "set_cores_per_node"]], "polaris.provenance": [[86, 2, 1, "", "write"]], "polaris.remap": [[87, 0, 1, "", "MappingFileStep"]], "polaris.remap.MappingFileStep": [[87, 1, 1, "", "__init__"], [88, 1, 1, "", "dst_from_lon_lat"], [89, 1, 1, "", "dst_from_mpas"], [90, 1, 1, "", "dst_from_points"], [91, 1, 1, "", "dst_from_proj"], [92, 1, 1, "", "dst_global_lon_lat"], [93, 1, 1, "", "get_remapper"], [94, 1, 1, "", "runtime_setup"], [95, 1, 1, "", "src_from_lon_lat"], [96, 1, 1, "", "src_from_mpas"], [97, 1, 1, "", "src_from_proj"]], "polaris.run.serial": [[98, 2, 1, "", "run_single_step"], [99, 2, 1, "", "run_tests"]], "polaris.run": [[100, 2, 1, "", "setup_config"], [101, 2, 1, "", "unpickle_suite"]], "polaris.setup": [[102, 2, 1, "", "setup_case"], [103, 2, 1, "", "setup_cases"]], "polaris.streams": [[104, 2, 1, "", "read"], [105, 2, 1, "", "update_defaults"], [106, 2, 1, "", "update_tree"], [107, 2, 1, "", "write"]], "polaris.suite": [[108, 2, 1, "", "setup_suite"]], "polaris.validate": [[109, 2, 1, "", "compare_timers"], [110, 2, 1, "", "compare_variables"]], "polaris.viz.globe": [[111, 2, 1, "", "plot_global"]], "polaris.viz": [[112, 2, 1, "", "plot_horiz_field"]], "polaris.yaml": [[113, 0, 1, "", "PolarisYaml"], [117, 2, 1, "", "main_mpas_to_yaml"], [118, 2, 1, "", "mpas_namelist_and_streams_to_yaml"], [119, 2, 1, "", "yaml_to_mpas_streams"]], "polaris.yaml.PolarisYaml": [[113, 1, 1, "", "__init__"], [114, 1, 1, "", "read"], [115, 1, 1, "", "update"], [116, 1, 1, "", "write"]]}, "objtypes": {"0": "py:class", "1": "py:method", "2": "py:function", "3": "py:module"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"], "2": ["py", "function", "Python function"], "3": ["py", "module", "Python module"]}, "titleterms": {"design": [0, 1], "document": [0, 3, 5, 247], "templat": [1, 12], "summari": 1, "requir": 1, "name": 1, "topic": 1, "here": 1, "algorithm": 1, "option": [1, 12, 127, 243, 247, 249, 250, 251, 252, 253, 254, 259, 260, 262, 263, 264, 265], "same": 1, "implement": 1, "test": [1, 126, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 231, 237, 239, 240, 241, 242, 247, 248, 258, 261, 266, 267, 268], "valid": [1, 2, 15, 44, 109, 110, 137, 139, 141, 149, 154, 159, 165, 182, 196, 208, 211, 240, 247, 266], "api": 2, "refer": [2, 126, 127], "compon": [2, 12, 17, 18, 49, 127, 226, 235, 242, 243, 257, 266], "polari": [2, 4, 6, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 238, 242, 243, 246, 266], "framework": [2, 8, 126, 127, 229, 232, 233, 234, 242, 255], "command": [2, 4, 6], "line": [2, 4], "interfac": [2, 4], "list": [2, 4, 6, 56, 57, 58], "setup": [2, 4, 6, 30, 40, 66, 71, 76, 102, 103, 133, 147, 157, 238], "suit": [2, 4, 6, 108, 239, 258, 266, 268], "run": [2, 6, 12, 37, 65, 70, 74, 98, 99, 100, 101, 127, 146, 156, 161, 168, 173, 175, 177, 180, 189, 191, 194, 203, 205, 213, 215, 238, 243, 259, 260, 262, 263, 264, 265, 266], "cach": [2, 4, 6, 48, 238], "mpas_to_yaml": [2, 4], "base": 2, "class": [2, 242], "testgroup": [2, 45, 46], "testcas": [2, 41, 42, 43, 44, 240], "step": [2, 32, 33, 34, 35, 36, 37, 38, 39, 40, 238, 247, 259, 260, 262, 263, 264, 265], "modelstep": [2, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31], "config": [2, 7, 12, 50, 127, 247, 248, 249, 250, 251, 252, 253, 254, 259, 260, 262, 263, 264, 265], "io": [2, 9, 51, 52, 53], "job": [2, 54, 55, 253, 266], "log": [2, 10, 59], "mesh": [2, 11, 12, 16, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 230, 247, 259, 260, 262, 263, 264, 265], "model_step": [2, 77], "namelist": [2, 12, 78, 79, 80, 81, 127], "parallel": [2, 82, 83, 84, 85], "proven": [2, 13, 86], "remap": [2, 14, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97], "stream": [2, 12, 104, 105, 106, 107, 127, 247], "viz": [2, 111, 112, 160, 161, 174, 175, 176, 177, 190, 191, 204, 205, 214, 215, 230, 232, 233, 234, 247], "yaml": [2, 12, 113, 114, 115, 116, 117, 118, 119, 127], "build": [3, 243, 266], "serial": [4, 6, 98, 99], "docstr": 5, "modul": [6, 242, 243], "clean": 6, "file": [7, 12, 127, 238, 247, 248], "comment": 7, "symlink": [9, 53, 238], "download": [9, 51, 238], "spheric": [11, 16, 73, 74, 75, 76], "planar": [11, 16, 72], "uniform": [11, 256], "gener": 11, "model": [12, 127, 129, 130, 131, 132, 133, 227, 247, 266], "an": [12, 127, 247], "e3sm": [12, 127, 243, 266], "ad": [12, 238, 247], "updat": [12, 115, 243], "runtim": 12, "input": [12, 238], "partit": [12, 26], "pio": 12, "make": [12, 247], "graph": 12, "variabl": 15, "norm": 15, "timer": 15, "visual": [16, 247], "horizont": [16, 247], "field": 16, "from": [16, 127, 238, 243, 253], "global": 16, "lat": 16, "lon": 16, "plot": [16, 247], "add_test_group": 18, "add_model_config_opt": 20, "add_namelist_fil": 21, "add_streams_fil": 22, "add_yaml_fil": 23, "dynamic_model_config": [24, 144, 151, 171, 187, 201], "map_yaml_to_namelist": [25, 132], "process_inputs_and_output": 27, "runtime_setup": [28, 38, 94, 238], "set_model_resourc": 29, "update_namelist_pio": 31, "add_depend": 33, "add_input_fil": 34, "add_output_fil": 35, "constrain_resourc": [36, 131, 238], "set_resourc": 39, "add_step": 42, "configur": [43, 153, 164, 240, 244], "add_test_cas": 46, "__main__": 47, "main": 47, "update_cach": 48, "get_compon": 49, "polarisconfigpars": 50, "imp_r": 52, "get_slurm_opt": 54, "write_job_script": 55, "list_cas": 56, "list_machin": 57, "list_suit": 58, "log_method_cal": 59, "icosahedralmeshstep": [60, 61, 62, 63, 64, 65, 66], "build_subdivisions_cell_width_lat_lon": 61, "get_cell_width": 62, "get_subdivis": 63, "make_jigsaw_mesh": [64, 69], "quasiuniformsphericalmeshstep": [67, 68, 69, 70, 71], "build_cell_width_lat_lon": 68, "compute_planar_hex_nx_ni": 72, "sphericalbasestep": [73, 74, 75, 76], "save_and_plot_cell_width": 75, "make_graph_fil": 77, "ingest": 78, "parse_replac": 79, "replac": 80, "write": [81, 86, 107, 116], "get_available_parallel_resourc": 82, "get_parallel_command": 83, "run_command": 84, "set_cores_per_nod": 85, "mappingfilestep": [87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97], "dst_from_lon_lat": 88, "dst_from_mpa": 89, "dst_from_point": 90, "dst_from_proj": 91, "dst_global_lon_lat": 92, "get_remapp": 93, "src_from_lon_lat": 95, "src_from_mpa": 96, "src_from_proj": 97, "run_single_step": 98, "run_test": 99, "setup_config": 100, "unpickle_suit": 101, "setup_cas": [102, 103], "read": [104, 114], "update_default": 105, "update_tre": 106, "setup_suit": 108, "compare_tim": 109, "compare_vari": 110, "globe": 111, "plot_glob": 111, "plot_horiz_field": 112, "polarisyaml": [113, 114, 115, 116], "main_mpas_to_yaml": 117, "mpas_namelist_and_streams_to_yaml": 118, "yaml_to_mpas_stream": 119, "anvil": [120, 249], "intel": [120, 122, 123, 249, 251, 252], "gnu": [120, 121, 122, 123, 125, 249, 250, 251, 254], "chicoma": [121, 250], "cpu": [121, 125, 250, 254], "chrysali": [122, 251], "compymcnodefac": [123, 252], "machin": [124, 243, 253, 266], "support": [124, 227, 243, 253, 266], "other": [124, 238, 247, 253, 266], "perlmutt": [125, 254], "pm": 125, "ocean": [126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 257], "group": [126, 231, 241, 242, 247, 261], "baroclinic_channel": [126, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 229, 259], "inertial_gravity_wav": [126, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 232], "global_converg": [126, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 230, 260], "cosine_bel": [126, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 230, 258, 260], "manufactured_solut": [126, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 233, 263], "single_column": [126, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 234, 264], "oceanmodelstep": [126, 129, 130, 131, 132, 133], "potenti": [126, 127], "energi": [126, 127], "rpe": [126, 127, 134], "vertic": [126, 127, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 247, 256, 259, 260, 262, 263, 264, 265], "coordin": [126, 127, 247, 256], "v": 127, "map": 127, "omega": 127, "mpa": [127, 228], "set": [127, 243, 266], "mpi": [127, 253], "resourc": 127, "rest": 127, "compute_cell_count": [130, 143, 170, 186, 200], "compute_rp": 134, "baroclinicchannel": 135, "baroclinicchanneltestcas": [136, 137], "decomp_test": [138, 139, 229, 259], "decomptest": [138, 139], "default": [140, 141, 229, 247, 259], "forward": [142, 143, 144, 169, 170, 171, 185, 186, 187, 199, 200, 201, 209, 229, 230, 232, 233, 234, 247], "initial_st": [145, 146, 147, 188, 189, 202, 203, 212, 213, 229, 232, 233, 234, 247], "initialst": [145, 146, 147, 188, 189, 202, 203, 212, 213], "restart_test": [148, 149, 150, 151, 229, 259], "restarttest": [148, 149], "restart_step": [150, 151], "restartstep": [150, 151], "rpe_test": [152, 153, 154, 155, 156, 157, 229, 259], "rpetest": [152, 153, 154], "analysi": [155, 156, 157, 166, 167, 168, 179, 180, 193, 194, 230, 232, 233, 247], "threads_test": [158, 159, 229], "threadstest": [158, 159], "globalconverg": 162, "cosinebel": [163, 164, 165], "rmse": 167, "init": [172, 173, 230], "vizmap": [176, 177], "inertialgravitywav": 178, "converg": [181, 182, 195, 196, 232, 233, 262, 263], "exact_solut": [183, 184, 197, 198, 232, 233], "exactsolut": [183, 184, 197, 198], "ssh": [184, 198], "manufacturedsolut": 192, "singlecolumn": 206, "cvmix": [207, 208, 234, 264], "ideal_ag": [210, 211], "idealag": [210, 211], "grid_1d": [216, 217], "generate_1d_grid": 216, "write_1d_grid": 217, "init_vertical_coord": 218, "partial_cel": [219, 220], "alter_bottom_depth": 219, "alter_ssh": 220, "zlevel": [221, 222, 223, 224], "compute_min_max_level_cel": 221, "compute_z_level_layer_thick": 222, "compute_z_level_resting_thick": 223, "init_z_level_vertical_coord": 224, "zstar": 225, "init_z_star_vertical_coord": 225, "initi": [228, 247, 259, 260, 262, 263, 264, 265], "condit": [228, 247, 259, 260, 262, 263, 264, 265], "boundari": 228, "forc": [228, 259, 260, 262, 263, 264, 265], "baroclinic_channel_test_cas": 229, "type": [230, 256], "ideal": [234, 264], "ag": [234, 264], "directori": 236, "structur": 236, "organ": 237, "attribut": [238, 240], "constructor": [238, 240], "output": [238, 247], "copi": 238, "depend": 238, "pull": 239, "request": 239, "pr": 239, "nightli": 239, "case": [240, 242, 247, 248, 266, 267], "overview": 242, "code": [242, 243, 247], "style": [242, 243], "packag": 242, "share": [242, 247], "within": 242, "quick": [243, 266], "start": [243, 247, 266], "develop": [243, 246, 247], "unix": 243, "shell": 243, "up": [243, 266], "repositori": 243, "beginn": 243, "conda": [243, 244, 253, 266], "environ": [243, 244, 266], "spack": [243, 266], "compil": 243, "system": 243, "albani": 243, "petsc": 243, "netlib": 243, "lapack": 243, "unknown": 243, "what": 243, "script": [243, 266], "doe": 243, "flag": 243, "activ": 243, "switch": 243, "between": [243, 247], "differ": 243, "troubleshoot": [243, 244], "creat": [243, 247], "onli": 243, "repo": 243, "worktre": 243, "advanc": 243, "user": [243, 246, 248, 266], "solver": 244, "error": 244, "when": 244, "proxi": 244, "lanl": 244, "mac": 244, "gethostbynam": 244, "fail": 244, "glossari": [245, 246], "": 246, "guid": 246, "tutori": [246, 247], "compass": 246, "new": 247, "get": 247, "vari": 247, "resolut": 247, "paramet": 247, "thing": 247, "out": 247, "defin": 247, "more": 247, "again": 247, "one": 247, "time": [247, 259, 260, 262, 263, 264, 265], "second": 247, "enhanc": 247, "dynam": 247, "comput": 247, "cell": 247, "count": 247, "superclass": 247, "studi": 247, "how": 247, "pass": 247, "data": [247, 254], "A": 248, "slurm": 253, "queue": 253, "mpich": 253, "openmpi": 253, "No": 253, "forg": 253, "jupyt": 254, "notebook": 254, "remot": 254, "1d": 256, "grid": [256, 259, 260, 262, 263, 264, 265], "tanh_dz": 256, "60layerphc": 256, "100layere3smv1": 256, "3d": 256, "z": 256, "star": 256, "level": 256, "cosine_bell_cached_init": 258, "descript": [259, 260, 262, 263, 264, 265], "durat": [259, 260, 262, 263, 264, 265], "core": [259, 260, 262, 263, 264, 265], "thread_test": 259, "cosine_bell_with_viz": 260, "inerti": 262, "graviti": 262, "wave": 262, "test_group_nam": 265, "test_case_nam": 265, "i": 266, "yet": 266, "load": 266, "standalon": 266}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.viewcode": 1, "sphinx": 57}, "alltitles": {"Design Documents": [[0, "design-documents"]], "Template": [[1, "template"]], "Summary": [[1, "summary"]], "Requirements": [[1, "requirements"]], "Requirement: name-of-topic-here": [[1, "requirement-name-of-topic-here"]], "Algorithm Design (optional)": [[1, "algorithm-design-optional"]], "Algorithm Design: name-of-topic-here (same as Requirement)": [[1, "algorithm-design-name-of-topic-here-same-as-requirement"]], "Implementation": [[1, "implementation"]], "Implementation: name-of-topic-here (same as Requirement)": [[1, "implementation-name-of-topic-here-same-as-requirement"]], "Testing": [[1, "testing"]], "Testing and Validation: name-of-topic-here (same as Requirement)": [[1, "testing-and-validation-name-of-topic-here-same-as-requirement"]], "API reference": [[2, "api-reference"]], "Components": [[2, "components"], [235, "components"]], "polaris framework": [[2, "polaris-framework"]], "Command-line interface": [[2, "command-line-interface"], [4, "command-line-interface"]], "list": [[2, "list"]], "setup": [[2, "setup"]], "suite": [[2, "suite"]], "run": [[2, "run"]], "cache": [[2, "cache"]], "mpas_to_yaml": [[2, "mpas-to-yaml"], [4, "mpas-to-yaml"]], "Base Classes": [[2, "base-classes"]], "Component": [[2, "component"]], "TestGroup": [[2, "testgroup"]], "TestCase": [[2, "testcase"]], "Step": [[2, "step"]], "ModelStep": [[2, "modelstep"]], "components": [[2, "id1"]], "config": [[2, "config"]], "io": [[2, "io"]], "job": [[2, "job"]], "logging": [[2, "logging"]], "mesh": [[2, "mesh"], [230, "mesh"], [259, "mesh"], [259, "id2"], [259, "id9"], [259, "id17"], [259, "id25"], [259, "id32"], [260, "mesh"], [262, "mesh"], [263, "mesh"], [264, "mesh"], [264, "id3"], [264, "id8"], [265, "mesh"]], "model_step": [[2, "model-step"]], "namelist": [[2, "namelist"]], "parallel": [[2, "parallel"]], "provenance": [[2, "provenance"]], "remap": [[2, "remap"]], "streams": [[2, "streams"]], "validate": [[2, "validate"]], "viz": [[2, "viz"], [230, "viz"], [232, "viz"], [233, "viz"], [234, "viz"]], "yaml": [[2, "yaml"]], "Building the Documentation": [[3, "building-the-documentation"]], "polaris list": [[4, "polaris-list"]], "polaris setup": [[4, "polaris-setup"]], "polaris suite": [[4, "polaris-suite"]], "polaris serial": [[4, "polaris-serial"]], "polaris cache": [[4, "polaris-cache"]], "Documentation": [[5, "documentation"], [247, "documentation"]], "Docstrings": [[5, "docstrings"]], "Modules for polaris commands": [[6, "modules-for-polaris-commands"]], "list module": [[6, "list-module"]], "setup module": [[6, "setup-module"]], "clean module": [[6, "clean-module"]], "suite module": [[6, "suite-module"]], "run.serial module": [[6, "run-serial-module"]], "cache module": [[6, "cache-module"]], "Config files": [[7, "config-files"]], "Comments in config files": [[7, "comments-in-config-files"]], "Framework": [[8, "framework"], [255, "framework"]], "IO": [[9, "io"]], "Symlinks": [[9, "symlinks"]], "Download": [[9, "download"]], "Logging": [[10, "logging"]], "Mesh": [[11, "mesh"]], "Spherical Meshes": [[11, "spherical-meshes"]], "Planar Meshes": [[11, "planar-meshes"]], "Uniform planar meshes": [[11, "uniform-planar-meshes"]], "General planar meshes": [[11, "general-planar-meshes"]], "Model": [[12, "model"], [127, "model"]], "Running an E3SM component": [[12, "running-an-e3sm-component"], [127, "running-an-e3sm-component"]], "Adding yaml, namelist and streams files": [[12, "adding-yaml-namelist-and-streams-files"]], "Adding a yaml file": [[12, "adding-a-yaml-file"]], "Adding a namelist file": [[12, "adding-a-namelist-file"]], "Adding model config options": [[12, "adding-model-config-options"]], "Updating namelist or yaml options at runtime": [[12, "updating-namelist-or-yaml-options-at-runtime"]], "Adding a streams file": [[12, "adding-a-streams-file"]], "Adding a template streams file": [[12, "adding-a-template-streams-file"]], "Updating a streams file at runtime": [[12, "updating-a-streams-file-at-runtime"]], "Adding E3SM component as an input": [[12, "adding-e3sm-component-as-an-input"]], "Partitioning the mesh": [[12, "partitioning-the-mesh"]], "Updating PIO namelist options": [[12, "updating-pio-namelist-options"]], "Making a graph file": [[12, "making-a-graph-file"]], "Provenance": [[13, "provenance"]], "Remapping": [[14, "remapping"]], "Validation": [[15, "validation"]], "Validating variables": [[15, "validating-variables"]], "Norms": [[15, "norms"]], "Validating timers": [[15, "validating-timers"]], "Visualization": [[16, "visualization"]], "horizontal fields from planar meshes": [[16, "horizontal-fields-from-planar-meshes"]], "global lat/lon plots from spherical meshes": [[16, "global-lat-lon-plots-from-spherical-meshes"]], "polaris.Component": [[17, "polaris-component"]], "polaris.Component.add_test_group": [[18, "polaris-component-add-test-group"]], "polaris.ModelStep": [[19, "polaris-modelstep"]], "polaris.ModelStep.add_model_config_options": [[20, "polaris-modelstep-add-model-config-options"]], "polaris.ModelStep.add_namelist_file": [[21, "polaris-modelstep-add-namelist-file"]], "polaris.ModelStep.add_streams_file": [[22, "polaris-modelstep-add-streams-file"]], "polaris.ModelStep.add_yaml_file": [[23, "polaris-modelstep-add-yaml-file"]], "polaris.ModelStep.dynamic_model_config": [[24, "polaris-modelstep-dynamic-model-config"]], "polaris.ModelStep.map_yaml_to_namelist": [[25, "polaris-modelstep-map-yaml-to-namelist"]], "polaris.ModelStep.partition": [[26, "polaris-modelstep-partition"]], "polaris.ModelStep.process_inputs_and_outputs": [[27, "polaris-modelstep-process-inputs-and-outputs"]], "polaris.ModelStep.runtime_setup": [[28, "polaris-modelstep-runtime-setup"]], "polaris.ModelStep.set_model_resources": [[29, "polaris-modelstep-set-model-resources"]], "polaris.ModelStep.setup": [[30, "polaris-modelstep-setup"]], "polaris.ModelStep.update_namelist_pio": [[31, "polaris-modelstep-update-namelist-pio"]], "polaris.Step": [[32, "polaris-step"]], "polaris.Step.add_dependency": [[33, "polaris-step-add-dependency"]], "polaris.Step.add_input_file": [[34, "polaris-step-add-input-file"]], "polaris.Step.add_output_file": [[35, "polaris-step-add-output-file"]], "polaris.Step.constrain_resources": [[36, "polaris-step-constrain-resources"]], "polaris.Step.run": [[37, "polaris-step-run"]], "polaris.Step.runtime_setup": [[38, "polaris-step-runtime-setup"]], "polaris.Step.set_resources": [[39, "polaris-step-set-resources"]], "polaris.Step.setup": [[40, "polaris-step-setup"]], "polaris.TestCase": [[41, "polaris-testcase"]], "polaris.TestCase.add_step": [[42, "polaris-testcase-add-step"]], "polaris.TestCase.configure": [[43, "polaris-testcase-configure"]], "polaris.TestCase.validate": [[44, "polaris-testcase-validate"]], "polaris.TestGroup": [[45, "polaris-testgroup"]], "polaris.TestGroup.add_test_case": [[46, "polaris-testgroup-add-test-case"]], "polaris.__main__.main": [[47, "polaris-main-main"]], "polaris.cache.update_cache": [[48, "polaris-cache-update-cache"]], "polaris.components.get_components": [[49, "polaris-components-get-components"]], "polaris.config.PolarisConfigParser": [[50, "polaris-config-polarisconfigparser"]], "polaris.io.download": [[51, "polaris-io-download"]], "polaris.io.imp_res": [[52, "module-polaris.io.imp_res"]], "polaris.io.symlink": [[53, "polaris-io-symlink"]], "polaris.job.get_slurm_options": [[54, "polaris-job-get-slurm-options"]], "polaris.job.write_job_script": [[55, "polaris-job-write-job-script"]], "polaris.list.list_cases": [[56, "polaris-list-list-cases"]], "polaris.list.list_machines": [[57, "polaris-list-list-machines"]], "polaris.list.list_suites": [[58, "polaris-list-list-suites"]], "polaris.logging.log_method_call": [[59, "polaris-logging-log-method-call"]], "polaris.mesh.IcosahedralMeshStep": [[60, "polaris-mesh-icosahedralmeshstep"]], "polaris.mesh.IcosahedralMeshStep.build_subdivisions_cell_width_lat_lon": [[61, "polaris-mesh-icosahedralmeshstep-build-subdivisions-cell-width-lat-lon"]], "polaris.mesh.IcosahedralMeshStep.get_cell_width": [[62, "polaris-mesh-icosahedralmeshstep-get-cell-width"]], "polaris.mesh.IcosahedralMeshStep.get_subdivisions": [[63, "polaris-mesh-icosahedralmeshstep-get-subdivisions"]], "polaris.mesh.IcosahedralMeshStep.make_jigsaw_mesh": [[64, "polaris-mesh-icosahedralmeshstep-make-jigsaw-mesh"]], "polaris.mesh.IcosahedralMeshStep.run": [[65, "polaris-mesh-icosahedralmeshstep-run"]], "polaris.mesh.IcosahedralMeshStep.setup": [[66, "polaris-mesh-icosahedralmeshstep-setup"]], "polaris.mesh.QuasiUniformSphericalMeshStep": [[67, "polaris-mesh-quasiuniformsphericalmeshstep"]], "polaris.mesh.QuasiUniformSphericalMeshStep.build_cell_width_lat_lon": [[68, "polaris-mesh-quasiuniformsphericalmeshstep-build-cell-width-lat-lon"]], "polaris.mesh.QuasiUniformSphericalMeshStep.make_jigsaw_mesh": [[69, "polaris-mesh-quasiuniformsphericalmeshstep-make-jigsaw-mesh"]], "polaris.mesh.QuasiUniformSphericalMeshStep.run": [[70, "polaris-mesh-quasiuniformsphericalmeshstep-run"]], "polaris.mesh.QuasiUniformSphericalMeshStep.setup": [[71, "polaris-mesh-quasiuniformsphericalmeshstep-setup"]], "polaris.mesh.planar.compute_planar_hex_nx_ny": [[72, "polaris-mesh-planar-compute-planar-hex-nx-ny"]], "polaris.mesh.spherical.SphericalBaseStep": [[73, "polaris-mesh-spherical-sphericalbasestep"]], "polaris.mesh.spherical.SphericalBaseStep.run": [[74, "polaris-mesh-spherical-sphericalbasestep-run"]], "polaris.mesh.spherical.SphericalBaseStep.save_and_plot_cell_width": [[75, "polaris-mesh-spherical-sphericalbasestep-save-and-plot-cell-width"]], "polaris.mesh.spherical.SphericalBaseStep.setup": [[76, "polaris-mesh-spherical-sphericalbasestep-setup"]], "polaris.model_step.make_graph_file": [[77, "polaris-model-step-make-graph-file"]], "polaris.namelist.ingest": [[78, "polaris-namelist-ingest"]], "polaris.namelist.parse_replacements": [[79, "polaris-namelist-parse-replacements"]], "polaris.namelist.replace": [[80, "polaris-namelist-replace"]], "polaris.namelist.write": [[81, "polaris-namelist-write"]], "polaris.parallel.get_available_parallel_resources": [[82, "polaris-parallel-get-available-parallel-resources"]], "polaris.parallel.get_parallel_command": [[83, "polaris-parallel-get-parallel-command"]], "polaris.parallel.run_command": [[84, "polaris-parallel-run-command"]], "polaris.parallel.set_cores_per_node": [[85, "polaris-parallel-set-cores-per-node"]], "polaris.provenance.write": [[86, "polaris-provenance-write"]], "polaris.remap.MappingFileStep": [[87, "polaris-remap-mappingfilestep"]], "polaris.remap.MappingFileStep.dst_from_lon_lat": [[88, "polaris-remap-mappingfilestep-dst-from-lon-lat"]], "polaris.remap.MappingFileStep.dst_from_mpas": [[89, "polaris-remap-mappingfilestep-dst-from-mpas"]], "polaris.remap.MappingFileStep.dst_from_points": [[90, "polaris-remap-mappingfilestep-dst-from-points"]], "polaris.remap.MappingFileStep.dst_from_proj": [[91, "polaris-remap-mappingfilestep-dst-from-proj"]], "polaris.remap.MappingFileStep.dst_global_lon_lat": [[92, "polaris-remap-mappingfilestep-dst-global-lon-lat"]], "polaris.remap.MappingFileStep.get_remapper": [[93, "polaris-remap-mappingfilestep-get-remapper"]], "polaris.remap.MappingFileStep.runtime_setup": [[94, "polaris-remap-mappingfilestep-runtime-setup"]], "polaris.remap.MappingFileStep.src_from_lon_lat": [[95, "polaris-remap-mappingfilestep-src-from-lon-lat"]], "polaris.remap.MappingFileStep.src_from_mpas": [[96, "polaris-remap-mappingfilestep-src-from-mpas"]], "polaris.remap.MappingFileStep.src_from_proj": [[97, "polaris-remap-mappingfilestep-src-from-proj"]], "polaris.run.serial.run_single_step": [[98, "polaris-run-serial-run-single-step"]], "polaris.run.serial.run_tests": [[99, "polaris-run-serial-run-tests"]], "polaris.run.setup_config": [[100, "polaris-run-setup-config"]], "polaris.run.unpickle_suite": [[101, "polaris-run-unpickle-suite"]], "polaris.setup.setup_case": [[102, "polaris-setup-setup-case"]], "polaris.setup.setup_cases": [[103, "polaris-setup-setup-cases"]], "polaris.streams.read": [[104, "polaris-streams-read"]], "polaris.streams.update_defaults": [[105, "polaris-streams-update-defaults"]], "polaris.streams.update_tree": [[106, "polaris-streams-update-tree"]], "polaris.streams.write": [[107, "polaris-streams-write"]], "polaris.suite.setup_suite": [[108, "polaris-suite-setup-suite"]], "polaris.validate.compare_timers": [[109, "polaris-validate-compare-timers"]], "polaris.validate.compare_variables": [[110, "polaris-validate-compare-variables"]], "polaris.viz.globe.plot_global": [[111, "polaris-viz-globe-plot-global"]], "polaris.viz.plot_horiz_field": [[112, "polaris-viz-plot-horiz-field"]], "polaris.yaml.PolarisYaml": [[113, "polaris-yaml-polarisyaml"]], "polaris.yaml.PolarisYaml.read": [[114, "polaris-yaml-polarisyaml-read"]], "polaris.yaml.PolarisYaml.update": [[115, "polaris-yaml-polarisyaml-update"]], "polaris.yaml.PolarisYaml.write": [[116, "polaris-yaml-polarisyaml-write"]], "polaris.yaml.main_mpas_to_yaml": [[117, "polaris-yaml-main-mpas-to-yaml"]], "polaris.yaml.mpas_namelist_and_streams_to_yaml": [[118, "polaris-yaml-mpas-namelist-and-streams-to-yaml"]], "polaris.yaml.yaml_to_mpas_streams": [[119, "polaris-yaml-yaml-to-mpas-streams"]], "Anvil": [[120, "anvil"], [249, "anvil"]], "intel": [[120, "intel"], [122, "intel"], [123, "intel"]], "gnu": [[120, "gnu"], [122, "gnu"], [123, "gnu"]], "Chicoma": [[121, "chicoma"], [250, "chicoma"]], "chicoma-cpu, gnu": [[121, "chicoma-cpu-gnu"]], "Chrysalis": [[122, "chrysalis"], [251, "chrysalis"]], "CompyMcNodeFace": [[123, "compymcnodeface"], [252, "compymcnodeface"]], "Machines": [[124, "machines"], [253, "machines"]], "Supported Machines": [[124, "supported-machines"], [253, "supported-machines"]], "Other Machines": [[124, "other-machines"], [253, "other-machines"]], "Perlmutter": [[125, "perlmutter"], [254, "perlmutter"]], "pm-cpu, gnu": [[125, "pm-cpu-gnu"]], "ocean": [[126, "ocean"]], "Test Groups": [[126, "test-groups"], [241, "test-groups"]], "baroclinic_channel": [[126, "baroclinic-channel"], [229, "baroclinic-channel"], [259, "baroclinic-channel"]], "inertial_gravity_wave": [[126, "inertial-gravity-wave"], [232, "inertial-gravity-wave"]], "global_convergence": [[126, "global-convergence"], [230, "global-convergence"], [260, "global-convergence"]], "cosine_bell": [[126, "cosine-bell"], [230, "cosine-bell"]], "manufactured_solution": [[126, "manufactured-solution"], [233, "manufactured-solution"], [263, "manufactured-solution"]], "single_column": [[126, "single-column"], [234, "single-column"], [264, "single-column"]], "Ocean Framework": [[126, "ocean-framework"]], "OceanModelStep": [[126, "oceanmodelstep"]], "Reference Potential Energy (RPE)": [[126, "reference-potential-energy-rpe"]], "Vertical coordinates": [[126, "vertical-coordinates"]], "Ocean framework": [[127, "ocean-framework"]], "YAML files vs. namelists and streams": [[127, "yaml-files-vs-namelists-and-streams"]], "Mapping from Omega to MPAS-Ocean config options": [[127, "mapping-from-omega-to-mpas-ocean-config-options"]], "Setting MPI resources": [[127, "setting-mpi-resources"]], "Model config options and streams": [[127, "model-config-options-and-streams"]], "Vertical coordinate": [[127, "vertical-coordinate"], [256, "vertical-coordinate"]], "reference (resting) potential energy (RPE)": [[127, "reference-resting-potential-energy-rpe"]], "polaris.ocean.Ocean": [[128, "polaris-ocean-ocean"]], "polaris.ocean.model.OceanModelStep": [[129, "polaris-ocean-model-oceanmodelstep"]], "polaris.ocean.model.OceanModelStep.compute_cell_count": [[130, "polaris-ocean-model-oceanmodelstep-compute-cell-count"]], "polaris.ocean.model.OceanModelStep.constrain_resources": [[131, "polaris-ocean-model-oceanmodelstep-constrain-resources"]], "polaris.ocean.model.OceanModelStep.map_yaml_to_namelist": [[132, "polaris-ocean-model-oceanmodelstep-map-yaml-to-namelist"]], "polaris.ocean.model.OceanModelStep.setup": [[133, "polaris-ocean-model-oceanmodelstep-setup"]], "polaris.ocean.rpe.compute_rpe": [[134, "polaris-ocean-rpe-compute-rpe"]], "polaris.ocean.tests.baroclinic_channel.BaroclinicChannel": [[135, "polaris-ocean-tests-baroclinic-channel-baroclinicchannel"]], "polaris.ocean.tests.baroclinic_channel.BaroclinicChannelTestCase": [[136, "polaris-ocean-tests-baroclinic-channel-baroclinicchanneltestcase"]], "polaris.ocean.tests.baroclinic_channel.BaroclinicChannelTestCase.validate": [[137, "polaris-ocean-tests-baroclinic-channel-baroclinicchanneltestcase-validate"]], "polaris.ocean.tests.baroclinic_channel.decomp_test.DecompTest": [[138, "polaris-ocean-tests-baroclinic-channel-decomp-test-decomptest"]], "polaris.ocean.tests.baroclinic_channel.decomp_test.DecompTest.validate": [[139, "polaris-ocean-tests-baroclinic-channel-decomp-test-decomptest-validate"]], "polaris.ocean.tests.baroclinic_channel.default.Default": [[140, "polaris-ocean-tests-baroclinic-channel-default-default"]], "polaris.ocean.tests.baroclinic_channel.default.Default.validate": [[141, "polaris-ocean-tests-baroclinic-channel-default-default-validate"]], "polaris.ocean.tests.baroclinic_channel.forward.Forward": [[142, "polaris-ocean-tests-baroclinic-channel-forward-forward"]], "polaris.ocean.tests.baroclinic_channel.forward.Forward.compute_cell_count": [[143, "polaris-ocean-tests-baroclinic-channel-forward-forward-compute-cell-count"]], "polaris.ocean.tests.baroclinic_channel.forward.Forward.dynamic_model_config": [[144, "polaris-ocean-tests-baroclinic-channel-forward-forward-dynamic-model-config"]], "polaris.ocean.tests.baroclinic_channel.initial_state.InitialState": [[145, "polaris-ocean-tests-baroclinic-channel-initial-state-initialstate"]], "polaris.ocean.tests.baroclinic_channel.initial_state.InitialState.run": [[146, "polaris-ocean-tests-baroclinic-channel-initial-state-initialstate-run"]], "polaris.ocean.tests.baroclinic_channel.initial_state.InitialState.setup": [[147, "polaris-ocean-tests-baroclinic-channel-initial-state-initialstate-setup"]], "polaris.ocean.tests.baroclinic_channel.restart_test.RestartTest": [[148, "polaris-ocean-tests-baroclinic-channel-restart-test-restarttest"]], "polaris.ocean.tests.baroclinic_channel.restart_test.RestartTest.validate": [[149, "polaris-ocean-tests-baroclinic-channel-restart-test-restarttest-validate"]], "polaris.ocean.tests.baroclinic_channel.restart_test.restart_step.RestartStep": [[150, "polaris-ocean-tests-baroclinic-channel-restart-test-restart-step-restartstep"]], "polaris.ocean.tests.baroclinic_channel.restart_test.restart_step.RestartStep.dynamic_model_config": [[151, "polaris-ocean-tests-baroclinic-channel-restart-test-restart-step-restartstep-dynamic-model-config"]], "polaris.ocean.tests.baroclinic_channel.rpe_test.RpeTest": [[152, "polaris-ocean-tests-baroclinic-channel-rpe-test-rpetest"]], "polaris.ocean.tests.baroclinic_channel.rpe_test.RpeTest.configure": [[153, "polaris-ocean-tests-baroclinic-channel-rpe-test-rpetest-configure"]], "polaris.ocean.tests.baroclinic_channel.rpe_test.RpeTest.validate": [[154, "polaris-ocean-tests-baroclinic-channel-rpe-test-rpetest-validate"]], "polaris.ocean.tests.baroclinic_channel.rpe_test.analysis.Analysis": [[155, "polaris-ocean-tests-baroclinic-channel-rpe-test-analysis-analysis"]], "polaris.ocean.tests.baroclinic_channel.rpe_test.analysis.Analysis.run": [[156, "polaris-ocean-tests-baroclinic-channel-rpe-test-analysis-analysis-run"]], "polaris.ocean.tests.baroclinic_channel.rpe_test.analysis.Analysis.setup": [[157, "polaris-ocean-tests-baroclinic-channel-rpe-test-analysis-analysis-setup"]], "polaris.ocean.tests.baroclinic_channel.threads_test.ThreadsTest": [[158, "polaris-ocean-tests-baroclinic-channel-threads-test-threadstest"]], "polaris.ocean.tests.baroclinic_channel.threads_test.ThreadsTest.validate": [[159, "polaris-ocean-tests-baroclinic-channel-threads-test-threadstest-validate"]], "polaris.ocean.tests.baroclinic_channel.viz.Viz": [[160, "polaris-ocean-tests-baroclinic-channel-viz-viz"]], "polaris.ocean.tests.baroclinic_channel.viz.Viz.run": [[161, "polaris-ocean-tests-baroclinic-channel-viz-viz-run"]], "polaris.ocean.tests.global_convergence.GlobalConvergence": [[162, "polaris-ocean-tests-global-convergence-globalconvergence"]], "polaris.ocean.tests.global_convergence.cosine_bell.CosineBell": [[163, "polaris-ocean-tests-global-convergence-cosine-bell-cosinebell"]], "polaris.ocean.tests.global_convergence.cosine_bell.CosineBell.configure": [[164, "polaris-ocean-tests-global-convergence-cosine-bell-cosinebell-configure"]], "polaris.ocean.tests.global_convergence.cosine_bell.CosineBell.validate": [[165, "polaris-ocean-tests-global-convergence-cosine-bell-cosinebell-validate"]], "polaris.ocean.tests.global_convergence.cosine_bell.analysis.Analysis": [[166, "polaris-ocean-tests-global-convergence-cosine-bell-analysis-analysis"]], "polaris.ocean.tests.global_convergence.cosine_bell.analysis.Analysis.rmse": [[167, "polaris-ocean-tests-global-convergence-cosine-bell-analysis-analysis-rmse"]], "polaris.ocean.tests.global_convergence.cosine_bell.analysis.Analysis.run": [[168, "polaris-ocean-tests-global-convergence-cosine-bell-analysis-analysis-run"]], "polaris.ocean.tests.global_convergence.cosine_bell.forward.Forward": [[169, "polaris-ocean-tests-global-convergence-cosine-bell-forward-forward"]], "polaris.ocean.tests.global_convergence.cosine_bell.forward.Forward.compute_cell_count": [[170, "polaris-ocean-tests-global-convergence-cosine-bell-forward-forward-compute-cell-count"]], "polaris.ocean.tests.global_convergence.cosine_bell.forward.Forward.dynamic_model_config": [[171, "polaris-ocean-tests-global-convergence-cosine-bell-forward-forward-dynamic-model-config"]], "polaris.ocean.tests.global_convergence.cosine_bell.init.Init": [[172, "polaris-ocean-tests-global-convergence-cosine-bell-init-init"]], "polaris.ocean.tests.global_convergence.cosine_bell.init.Init.run": [[173, "polaris-ocean-tests-global-convergence-cosine-bell-init-init-run"]], "polaris.ocean.tests.global_convergence.cosine_bell.viz.Viz": [[174, "polaris-ocean-tests-global-convergence-cosine-bell-viz-viz"]], "polaris.ocean.tests.global_convergence.cosine_bell.viz.Viz.run": [[175, "polaris-ocean-tests-global-convergence-cosine-bell-viz-viz-run"]], "polaris.ocean.tests.global_convergence.cosine_bell.viz.VizMap": [[176, "polaris-ocean-tests-global-convergence-cosine-bell-viz-vizmap"]], "polaris.ocean.tests.global_convergence.cosine_bell.viz.VizMap.run": [[177, "polaris-ocean-tests-global-convergence-cosine-bell-viz-vizmap-run"]], "polaris.ocean.tests.inertial_gravity_wave.InertialGravityWave": [[178, "polaris-ocean-tests-inertial-gravity-wave-inertialgravitywave"]], "polaris.ocean.tests.inertial_gravity_wave.analysis.Analysis": [[179, "polaris-ocean-tests-inertial-gravity-wave-analysis-analysis"]], "polaris.ocean.tests.inertial_gravity_wave.analysis.Analysis.run": [[180, "polaris-ocean-tests-inertial-gravity-wave-analysis-analysis-run"]], "polaris.ocean.tests.inertial_gravity_wave.convergence.Convergence": [[181, "polaris-ocean-tests-inertial-gravity-wave-convergence-convergence"]], "polaris.ocean.tests.inertial_gravity_wave.convergence.Convergence.validate": [[182, "polaris-ocean-tests-inertial-gravity-wave-convergence-convergence-validate"]], "polaris.ocean.tests.inertial_gravity_wave.exact_solution.ExactSolution": [[183, "polaris-ocean-tests-inertial-gravity-wave-exact-solution-exactsolution"]], "polaris.ocean.tests.inertial_gravity_wave.exact_solution.ExactSolution.ssh": [[184, "polaris-ocean-tests-inertial-gravity-wave-exact-solution-exactsolution-ssh"]], "polaris.ocean.tests.inertial_gravity_wave.forward.Forward": [[185, "polaris-ocean-tests-inertial-gravity-wave-forward-forward"]], "polaris.ocean.tests.inertial_gravity_wave.forward.Forward.compute_cell_count": [[186, "polaris-ocean-tests-inertial-gravity-wave-forward-forward-compute-cell-count"]], "polaris.ocean.tests.inertial_gravity_wave.forward.Forward.dynamic_model_config": [[187, "polaris-ocean-tests-inertial-gravity-wave-forward-forward-dynamic-model-config"]], "polaris.ocean.tests.inertial_gravity_wave.initial_state.InitialState": [[188, "polaris-ocean-tests-inertial-gravity-wave-initial-state-initialstate"]], "polaris.ocean.tests.inertial_gravity_wave.initial_state.InitialState.run": [[189, "polaris-ocean-tests-inertial-gravity-wave-initial-state-initialstate-run"]], "polaris.ocean.tests.inertial_gravity_wave.viz.Viz": [[190, "polaris-ocean-tests-inertial-gravity-wave-viz-viz"]], "polaris.ocean.tests.inertial_gravity_wave.viz.Viz.run": [[191, "polaris-ocean-tests-inertial-gravity-wave-viz-viz-run"]], "polaris.ocean.tests.manufactured_solution.ManufacturedSolution": [[192, "polaris-ocean-tests-manufactured-solution-manufacturedsolution"]], "polaris.ocean.tests.manufactured_solution.analysis.Analysis": [[193, "polaris-ocean-tests-manufactured-solution-analysis-analysis"]], "polaris.ocean.tests.manufactured_solution.analysis.Analysis.run": [[194, "polaris-ocean-tests-manufactured-solution-analysis-analysis-run"]], "polaris.ocean.tests.manufactured_solution.convergence.Convergence": [[195, "polaris-ocean-tests-manufactured-solution-convergence-convergence"]], "polaris.ocean.tests.manufactured_solution.convergence.Convergence.validate": [[196, "polaris-ocean-tests-manufactured-solution-convergence-convergence-validate"]], "polaris.ocean.tests.manufactured_solution.exact_solution.ExactSolution": [[197, "polaris-ocean-tests-manufactured-solution-exact-solution-exactsolution"]], "polaris.ocean.tests.manufactured_solution.exact_solution.ExactSolution.ssh": [[198, "polaris-ocean-tests-manufactured-solution-exact-solution-exactsolution-ssh"]], "polaris.ocean.tests.manufactured_solution.forward.Forward": [[199, "polaris-ocean-tests-manufactured-solution-forward-forward"]], "polaris.ocean.tests.manufactured_solution.forward.Forward.compute_cell_count": [[200, "polaris-ocean-tests-manufactured-solution-forward-forward-compute-cell-count"]], "polaris.ocean.tests.manufactured_solution.forward.Forward.dynamic_model_config": [[201, "polaris-ocean-tests-manufactured-solution-forward-forward-dynamic-model-config"]], "polaris.ocean.tests.manufactured_solution.initial_state.InitialState": [[202, "polaris-ocean-tests-manufactured-solution-initial-state-initialstate"]], "polaris.ocean.tests.manufactured_solution.initial_state.InitialState.run": [[203, "polaris-ocean-tests-manufactured-solution-initial-state-initialstate-run"]], "polaris.ocean.tests.manufactured_solution.viz.Viz": [[204, "polaris-ocean-tests-manufactured-solution-viz-viz"]], "polaris.ocean.tests.manufactured_solution.viz.Viz.run": [[205, "polaris-ocean-tests-manufactured-solution-viz-viz-run"]], "polaris.ocean.tests.single_column.SingleColumn": [[206, "polaris-ocean-tests-single-column-singlecolumn"]], "polaris.ocean.tests.single_column.cvmix.CVMix": [[207, "polaris-ocean-tests-single-column-cvmix-cvmix"]], "polaris.ocean.tests.single_column.cvmix.CVMix.validate": [[208, "polaris-ocean-tests-single-column-cvmix-cvmix-validate"]], "polaris.ocean.tests.single_column.forward.Forward": [[209, "polaris-ocean-tests-single-column-forward-forward"]], "polaris.ocean.tests.single_column.ideal_age.IdealAge": [[210, "polaris-ocean-tests-single-column-ideal-age-idealage"]], "polaris.ocean.tests.single_column.ideal_age.IdealAge.validate": [[211, "polaris-ocean-tests-single-column-ideal-age-idealage-validate"]], "polaris.ocean.tests.single_column.initial_state.InitialState": [[212, "polaris-ocean-tests-single-column-initial-state-initialstate"]], "polaris.ocean.tests.single_column.initial_state.InitialState.run": [[213, "polaris-ocean-tests-single-column-initial-state-initialstate-run"]], "polaris.ocean.tests.single_column.viz.Viz": [[214, "polaris-ocean-tests-single-column-viz-viz"]], "polaris.ocean.tests.single_column.viz.Viz.run": [[215, "polaris-ocean-tests-single-column-viz-viz-run"]], "polaris.ocean.vertical.grid_1d.generate_1d_grid": [[216, "polaris-ocean-vertical-grid-1d-generate-1d-grid"]], "polaris.ocean.vertical.grid_1d.write_1d_grid": [[217, "polaris-ocean-vertical-grid-1d-write-1d-grid"]], "polaris.ocean.vertical.init_vertical_coord": [[218, "polaris-ocean-vertical-init-vertical-coord"]], "polaris.ocean.vertical.partial_cells.alter_bottom_depth": [[219, "polaris-ocean-vertical-partial-cells-alter-bottom-depth"]], "polaris.ocean.vertical.partial_cells.alter_ssh": [[220, "polaris-ocean-vertical-partial-cells-alter-ssh"]], "polaris.ocean.vertical.zlevel.compute_min_max_level_cell": [[221, "polaris-ocean-vertical-zlevel-compute-min-max-level-cell"]], "polaris.ocean.vertical.zlevel.compute_z_level_layer_thickness": [[222, "polaris-ocean-vertical-zlevel-compute-z-level-layer-thickness"]], "polaris.ocean.vertical.zlevel.compute_z_level_resting_thickness": [[223, "polaris-ocean-vertical-zlevel-compute-z-level-resting-thickness"]], "polaris.ocean.vertical.zlevel.init_z_level_vertical_coord": [[224, "polaris-ocean-vertical-zlevel-init-z-level-vertical-coord"]], "polaris.ocean.vertical.zstar.init_z_star_vertical_coord": [[225, "polaris-ocean-vertical-zstar-init-z-star-vertical-coord"]], "Ocean component": [[226, "ocean-component"], [257, "ocean-component"]], "Models": [[227, "models"]], "Supported Models": [[227, "supported-models"]], "MPAS-Ocean": [[228, "mpas-ocean"]], "Initial conditions": [[228, "initial-conditions"]], "Boundary conditions": [[228, "boundary-conditions"]], "Forcing": [[228, "forcing"]], "framework": [[229, "framework"], [232, "framework"], [233, "framework"], [234, "framework"]], "baroclinic_channel_test_case": [[229, "baroclinic-channel-test-case"]], "initial_state": [[229, "initial-state"], [232, "initial-state"], [233, "initial-state"], [234, "initial-state"]], "forward": [[229, "forward"], [230, "forward"], [232, "forward"], [233, "forward"], [234, "forward"]], "default": [[229, "default"], [259, "default"]], "decomp_test": [[229, "decomp-test"], [259, "decomp-test"]], "restart_test": [[229, "restart-test"], [259, "restart-test"]], "threads_test": [[229, "threads-test"]], "rpe_test": [[229, "rpe-test"], [259, "rpe-test"]], "mesh types": [[230, "mesh-types"]], "init": [[230, "init"]], "analysis": [[230, "analysis"], [232, "analysis"], [233, "analysis"]], "Test groups": [[231, "test-groups"], [261, "test-groups"]], "exact_solution": [[232, "exact-solution"], [233, "exact-solution"]], "convergence": [[232, "convergence"], [233, "convergence"], [262, "convergence"], [263, "convergence"]], "cvmix": [[234, "cvmix"], [264, "cvmix"]], "ideal age": [[234, "ideal-age"], [264, "ocean-single-column-ideal-age"]], "Directory structure": [[236, "directory-structure"]], "Organization of Tests": [[237, "organization-of-tests"]], "Steps": [[238, "steps"]], "Step attributes": [[238, "step-attributes"]], "constructor": [[238, "constructor"], [240, "constructor"]], "constrain_resources()": [[238, "constrain-resources"]], "setup()": [[238, "setup"]], "runtime_setup()": [[238, "runtime-setup"]], "run()": [[238, "run"]], "inputs and outputs": [[238, "inputs-and-outputs"]], "Input files": [[238, "input-files"]], "Symlinks to input files": [[238, "symlinks-to-input-files"]], "Symlink to input files from polaris": [[238, "symlink-to-input-files-from-polaris"]], "Downloading and symlinking input files": [[238, "downloading-and-symlinking-input-files"]], "Copying input files": [[238, "copying-input-files"]], "Output files": [[238, "output-files"]], "Cached output files": [[238, "cached-output-files"]], "Adding other steps as dependencies": [[238, "adding-other-steps-as-dependencies"]], "Test Suites": [[239, "test-suites"], [266, "test-suites"], [268, "test-suites"]], "Pull-Request (PR) suite": [[239, "pull-request-pr-suite"]], "Nightly suite": [[239, "nightly-suite"]], "Test cases": [[240, "test-cases"]], "TestCase attributes": [[240, "testcase-attributes"]], "configure()": [[240, "configure"]], "validate()": [[240, "validate"]], "Overview": [[242, "overview"]], "Code Style": [[242, "code-style"]], "Packages and Modules": [[242, "packages-and-modules"]], "Packages": [[242, "packages"]], "Modules": [[242, "modules"]], "Classes": [[242, "classes"]], "Code sharing": [[242, "code-sharing"]], "\u2026in the polaris framework": [[242, "in-the-polaris-framework"]], "\u2026within a component": [[242, "within-a-component"]], "\u2026within a test group": [[242, "within-a-test-group"]], "\u2026within a test case": [[242, "within-a-test-case"]], "Quick Start for Developers": [[243, "quick-start-for-developers"]], "Unix Shell": [[243, "unix-shell"]], "Set up a polaris repository: for beginners": [[243, "set-up-a-polaris-repository-for-beginners"]], "polaris conda environment, spack environment, compilers and system modules": [[243, "polaris-conda-environment-spack-environment-compilers-and-system-modules"]], "Supported machines": [[243, "supported-machines"]], "Environments with Albany": [[243, "environments-with-albany"]], "Environments with PETSc and Netlib-LAPACK": [[243, "environments-with-petsc-and-netlib-lapack"]], "Unknown machines": [[243, "unknown-machines"]], "What the script does": [[243, "what-the-script-does"]], "Optional flags": [[243, "optional-flags"]], "Activating the environment": [[243, "activating-the-environment"]], "Switching between different polaris environments": [[243, "switching-between-different-polaris-environments"]], "Troubleshooting": [[243, "troubleshooting"], [244, "troubleshooting"]], "Creating/updating only the polaris environment": [[243, "creating-updating-only-the-polaris-environment"]], "Building E3SM components": [[243, "building-e3sm-components"]], "Running polaris from the repo": [[243, "running-polaris-from-the-repo"]], "Code style for polaris": [[243, "code-style-for-polaris"]], "Set up a polaris repository with worktrees: for advanced users": [[243, "set-up-a-polaris-repository-with-worktrees-for-advanced-users"]], "Solver errors when configuring conda environment": [[244, "solver-errors-when-configuring-conda-environment"]], "Proxy on LANL Macs": [[244, "proxy-on-lanl-macs"]], "gethostbyname failed": [[244, "gethostbyname-failed"]], "Glossary": [[245, "glossary"], [246, null]], "Polaris": [[246, "polaris"]], "User's guide": [[246, null]], "Developer's guide": [[246, null]], "Tutorials": [[246, null]], "Compass": [[246, "compass"]], "Developer Tutorial: Adding a new test group": [[247, "developer-tutorial-adding-a-new-test-group"]], "Getting started": [[247, "getting-started"]], "Making a new test group": [[247, "making-a-new-test-group"]], "Adding a \u201cdefault\u201d test case": [[247, "adding-a-default-test-case"]], "Varying resolution and other parameters": [[247, "varying-resolution-and-other-parameters"]], "Adding the initial_state step": [[247, "adding-the-initial-state-step"]], "Creating a horizontal mesh": [[247, "creating-a-horizontal-mesh"]], "Adding a config file": [[247, "adding-a-config-file"]], "Adding the step to the test case": [[247, "adding-the-step-to-the-test-case"]], "Creating a vertical coordinate": [[247, "creating-a-vertical-coordinate"]], "Creating an initial condition": [[247, "creating-an-initial-condition"]], "Adding plots": [[247, "adding-plots"]], "Adding step outputs": [[247, "adding-step-outputs"]], "Adding validation": [[247, "adding-validation"], [247, "id1"]], "Test things out!": [[247, "test-things-out"]], "Adding the forward step": [[247, "adding-the-forward-step"]], "Defining model config options and streams": [[247, "defining-model-config-options-and-streams"]], "Adding the forward step to the test case": [[247, "adding-the-forward-step-to-the-test-case"]], "Adding more validation": [[247, "adding-more-validation"]], "Test the test case again!": [[247, "test-the-test-case-again"]], "Adding a visualization step": [[247, "adding-a-visualization-step"]], "Adding the viz step to the test case": [[247, "adding-the-viz-step-to-the-test-case"]], "Test the test case one more time!": [[247, "test-the-test-case-one-more-time"]], "Adding a second test case": [[247, "adding-a-second-test-case"]], "Enhancements": [[247, "enhancements"]], "Adding model config options in code": [[247, "adding-model-config-options-in-code"]], "Adding dynamic model config options": [[247, "adding-dynamic-model-config-options"]], "Computing the cell count": [[247, "computing-the-cell-count"]], "Adding a shared \u201csuperclass\u201d for test cases": [[247, "adding-a-shared-superclass-for-test-cases"]], "Adding a parameter study": [[247, "adding-a-parameter-study"]], "Adding the steps to the test case": [[247, "adding-the-steps-to-the-test-case"]], "Adding the analysis step": [[247, "adding-the-analysis-step"]], "How to (and how not to) pass data between steps": [[247, "how-to-and-how-not-to-pass-data-between-steps"]], "Config Files": [[248, "config-files"]], "A \u201cuser\u201d config file": [[248, "a-user-config-file"]], "Test-case config files": [[248, "test-case-config-files"]], "config options": [[249, "config-options"], [250, "config-options"], [251, "config-options"], [252, "config-options"], [253, "config-options"], [254, "config-options"], [259, "config-options"], [259, "id7"], [259, "id14"], [259, "id22"], [259, "id30"], [259, "id37"], [260, "config-options"], [262, "config-options"], [263, "config-options"], [264, "config-options"], [264, "id1"], [264, "id6"], [264, "id13"], [265, "config-options"]], "Intel on Anvil": [[249, "intel-on-anvil"]], "Gnu on Anvil": [[249, "gnu-on-anvil"]], "Chicoma-CPU": [[250, "chicoma-cpu"]], "Gnu on Chicoma-CPU": [[250, "gnu-on-chicoma-cpu"]], "Intel on Chrysalis": [[251, "intel-on-chrysalis"]], "Gnu on Chrysalis": [[251, "gnu-on-chrysalis"]], "Intel on CompyMcNodeFace": [[252, "intel-on-compymcnodeface"]], "Slurm job queueing": [[253, "slurm-job-queueing"]], "MPICH": [[253, "mpich"]], "OpenMPI": [[253, "openmpi"]], "No MPI from conda-forge": [[253, "no-mpi-from-conda-forge"]], "Perlmutter-CPU": [[254, "perlmutter-cpu"]], "Gnu on Perlmutter-CPU": [[254, "gnu-on-perlmutter-cpu"]], "Jupyter notebook on remote data": [[254, "jupyter-notebook-on-remote-data"]], "1D Grid type": [[256, "d-grid-type"]], "uniform": [[256, "uniform"]], "tanh_dz": [[256, "tanh-dz"]], "60layerPHC": [[256, "layerphc"]], "100layerE3SMv1": [[256, "layere3smv1"]], "3D vertical coordinates": [[256, "d-vertical-coordinates"]], "z-star": [[256, "z-star"]], "z-level": [[256, "z-level"]], "Test suites": [[258, "test-suites"]], "cosine_bell and cosine_bell_cached_init test suite": [[258, "cosine-bell-and-cosine-bell-cached-init-test-suite"]], "description": [[259, "description"], [259, "id1"], [259, "id8"], [259, "id16"], [259, "id24"], [262, "description"], [263, "description"], [264, "description"], [264, "id2"], [264, "id7"], [265, "description"]], "vertical grid": [[259, "vertical-grid"], [259, "id3"], [259, "id10"], [259, "id18"], [259, "id26"], [259, "id33"], [260, "vertical-grid"], [262, "vertical-grid"], [263, "vertical-grid"], [264, "vertical-grid"], [264, "id4"], [264, "id9"], [265, "vertical-grid"]], "initial conditions": [[259, "initial-conditions"], [259, "id4"], [259, "id11"], [259, "id19"], [259, "id27"], [259, "id34"], [260, "initial-conditions"], [262, "initial-conditions"], [263, "initial-conditions"], [264, "initial-conditions"], [264, "id5"], [264, "id10"], [265, "initial-conditions"]], "forcing": [[259, "forcing"], [259, "id5"], [259, "id12"], [259, "id20"], [259, "id28"], [259, "id35"], [260, "forcing"], [262, "forcing"], [263, "forcing"], [264, "forcing"], [264, "id11"], [265, "forcing"]], "time step and run duration": [[259, "time-step-and-run-duration"], [259, "id6"], [259, "id13"], [259, "id21"], [259, "id29"], [259, "id36"], [260, "time-step-and-run-duration"], [262, "time-step-and-run-duration"], [263, "time-step-and-run-duration"], [264, "time-step-and-run-duration"], [264, "id12"], [265, "time-step-and-run-duration"]], "cores": [[259, "cores"], [259, "id15"], [259, "id23"], [259, "id31"], [259, "id38"], [260, "cores"], [262, "cores"], [263, "cores"], [264, "cores"], [264, "id14"], [265, "cores"]], "thread_test": [[259, "thread-test"]], "cosine_bell and cosine_bell_with_viz": [[260, "cosine-bell-and-cosine-bell-with-viz"]], "Description": [[260, "description"]], "inertial gravity wave": [[262, "inertial-gravity-wave"]], "test_group_name": [[265, "test-group-name"]], "test_case_name": [[265, "test-case-name"]], "Quick Start for Users": [[266, "quick-start-for-users"]], "Quick Start for Users is not yet valid": [[266, null]], "Loading polaris conda and spack environments": [[266, "loading-polaris-conda-and-spack-environments"]], "E3SM supported machines": [[266, "e3sm-supported-machines"]], "Other machines": [[266, "other-machines"]], "Building supported E3SM components as standalone models": [[266, "building-supported-e3sm-components-as-standalone-models"]], "Setting up test cases": [[266, "setting-up-test-cases"]], "Running a test case": [[266, "running-a-test-case"]], "Running with a job script": [[266, "running-with-a-job-script"]], "Test Cases": [[267, "test-cases"]]}, "indexentries": {"component (class in polaris)": [[17, "polaris.Component"]], "__init__() (polaris.component method)": [[17, "polaris.Component.__init__"]], "add_test_group() (polaris.component method)": [[18, "polaris.Component.add_test_group"]], "modelstep (class in polaris)": [[19, "polaris.ModelStep"]], "__init__() (polaris.modelstep method)": [[19, "polaris.ModelStep.__init__"]], "add_model_config_options() (polaris.modelstep method)": [[20, "polaris.ModelStep.add_model_config_options"]], "add_namelist_file() (polaris.modelstep method)": [[21, "polaris.ModelStep.add_namelist_file"]], "add_streams_file() (polaris.modelstep method)": [[22, "polaris.ModelStep.add_streams_file"]], "add_yaml_file() (polaris.modelstep method)": [[23, "polaris.ModelStep.add_yaml_file"]], "dynamic_model_config() (polaris.modelstep method)": [[24, "polaris.ModelStep.dynamic_model_config"]], "map_yaml_to_namelist() (polaris.modelstep method)": [[25, "polaris.ModelStep.map_yaml_to_namelist"]], "partition() (polaris.modelstep method)": [[26, "polaris.ModelStep.partition"]], "process_inputs_and_outputs() (polaris.modelstep method)": [[27, "polaris.ModelStep.process_inputs_and_outputs"]], "runtime_setup() (polaris.modelstep method)": [[28, "polaris.ModelStep.runtime_setup"]], "set_model_resources() (polaris.modelstep method)": [[29, "polaris.ModelStep.set_model_resources"]], "setup() (polaris.modelstep method)": [[30, "polaris.ModelStep.setup"]], "update_namelist_pio() (polaris.modelstep method)": [[31, "polaris.ModelStep.update_namelist_pio"]], "step (class in polaris)": [[32, "polaris.Step"]], "__init__() (polaris.step method)": [[32, "polaris.Step.__init__"]], "add_dependency() (polaris.step method)": [[33, "polaris.Step.add_dependency"]], "add_input_file() (polaris.step method)": [[34, "polaris.Step.add_input_file"]], "add_output_file() (polaris.step method)": [[35, "polaris.Step.add_output_file"]], "constrain_resources() (polaris.step method)": [[36, "polaris.Step.constrain_resources"]], "run() (polaris.step method)": [[37, "polaris.Step.run"]], "runtime_setup() (polaris.step method)": [[38, "polaris.Step.runtime_setup"]], "set_resources() (polaris.step method)": [[39, "polaris.Step.set_resources"]], "setup() (polaris.step method)": [[40, "polaris.Step.setup"]], "testcase (class in polaris)": [[41, "polaris.TestCase"]], "__init__() (polaris.testcase method)": [[41, "polaris.TestCase.__init__"]], "add_step() (polaris.testcase method)": [[42, "polaris.TestCase.add_step"]], "configure() (polaris.testcase method)": [[43, "polaris.TestCase.configure"]], "validate() (polaris.testcase method)": [[44, "polaris.TestCase.validate"]], "testgroup (class in polaris)": [[45, "polaris.TestGroup"]], "__init__() (polaris.testgroup method)": [[45, "polaris.TestGroup.__init__"]], "add_test_case() (polaris.testgroup method)": [[46, "polaris.TestGroup.add_test_case"]], "main() (in module polaris.__main__)": [[47, "polaris.__main__.main"]], "update_cache() (in module polaris.cache)": [[48, "polaris.cache.update_cache"]], "get_components() (in module polaris.components)": [[49, "polaris.components.get_components"]], "polarisconfigparser (class in polaris.config)": [[50, "polaris.config.PolarisConfigParser"]], "__init__() (polaris.config.polarisconfigparser method)": [[50, "polaris.config.PolarisConfigParser.__init__"]], "download() (in module polaris.io)": [[51, "polaris.io.download"]], "module": [[52, "module-polaris.io.imp_res"]], "polaris.io.imp_res": [[52, "module-polaris.io.imp_res"]], "symlink() (in module polaris.io)": [[53, "polaris.io.symlink"]], "get_slurm_options() (in module polaris.job)": [[54, "polaris.job.get_slurm_options"]], "write_job_script() (in module polaris.job)": [[55, "polaris.job.write_job_script"]], "list_cases() (in module polaris.list)": [[56, "polaris.list.list_cases"]], "list_machines() (in module polaris.list)": [[57, "polaris.list.list_machines"]], "list_suites() (in module polaris.list)": [[58, "polaris.list.list_suites"]], "log_method_call() (in module polaris.logging)": [[59, "polaris.logging.log_method_call"]], "icosahedralmeshstep (class in polaris.mesh)": [[60, "polaris.mesh.IcosahedralMeshStep"]], "__init__() (polaris.mesh.icosahedralmeshstep method)": [[60, "polaris.mesh.IcosahedralMeshStep.__init__"]], "build_subdivisions_cell_width_lat_lon() (polaris.mesh.icosahedralmeshstep method)": [[61, "polaris.mesh.IcosahedralMeshStep.build_subdivisions_cell_width_lat_lon"]], "get_cell_width() (polaris.mesh.icosahedralmeshstep static method)": [[62, "polaris.mesh.IcosahedralMeshStep.get_cell_width"]], "get_subdivisions() (polaris.mesh.icosahedralmeshstep static method)": [[63, "polaris.mesh.IcosahedralMeshStep.get_subdivisions"]], "make_jigsaw_mesh() (polaris.mesh.icosahedralmeshstep method)": [[64, "polaris.mesh.IcosahedralMeshStep.make_jigsaw_mesh"]], "run() (polaris.mesh.icosahedralmeshstep method)": [[65, "polaris.mesh.IcosahedralMeshStep.run"]], "setup() (polaris.mesh.icosahedralmeshstep method)": [[66, "polaris.mesh.IcosahedralMeshStep.setup"]], "quasiuniformsphericalmeshstep (class in polaris.mesh)": [[67, "polaris.mesh.QuasiUniformSphericalMeshStep"]], "__init__() (polaris.mesh.quasiuniformsphericalmeshstep method)": [[67, "polaris.mesh.QuasiUniformSphericalMeshStep.__init__"]], "build_cell_width_lat_lon() (polaris.mesh.quasiuniformsphericalmeshstep method)": [[68, "polaris.mesh.QuasiUniformSphericalMeshStep.build_cell_width_lat_lon"]], "make_jigsaw_mesh() (polaris.mesh.quasiuniformsphericalmeshstep method)": [[69, "polaris.mesh.QuasiUniformSphericalMeshStep.make_jigsaw_mesh"]], "run() (polaris.mesh.quasiuniformsphericalmeshstep method)": [[70, "polaris.mesh.QuasiUniformSphericalMeshStep.run"]], "setup() (polaris.mesh.quasiuniformsphericalmeshstep method)": [[71, "polaris.mesh.QuasiUniformSphericalMeshStep.setup"]], "compute_planar_hex_nx_ny() (in module polaris.mesh.planar)": [[72, "polaris.mesh.planar.compute_planar_hex_nx_ny"]], "sphericalbasestep (class in polaris.mesh.spherical)": [[73, "polaris.mesh.spherical.SphericalBaseStep"]], "__init__() (polaris.mesh.spherical.sphericalbasestep method)": [[73, "polaris.mesh.spherical.SphericalBaseStep.__init__"]], "run() (polaris.mesh.spherical.sphericalbasestep method)": [[74, "polaris.mesh.spherical.SphericalBaseStep.run"]], "save_and_plot_cell_width() (polaris.mesh.spherical.sphericalbasestep method)": [[75, "polaris.mesh.spherical.SphericalBaseStep.save_and_plot_cell_width"]], "setup() (polaris.mesh.spherical.sphericalbasestep method)": [[76, "polaris.mesh.spherical.SphericalBaseStep.setup"]], "make_graph_file() (in module polaris.model_step)": [[77, "polaris.model_step.make_graph_file"]], "ingest() (in module polaris.namelist)": [[78, "polaris.namelist.ingest"]], "parse_replacements() (in module polaris.namelist)": [[79, "polaris.namelist.parse_replacements"]], "replace() (in module polaris.namelist)": [[80, "polaris.namelist.replace"]], "write() (in module polaris.namelist)": [[81, "polaris.namelist.write"]], "get_available_parallel_resources() (in module polaris.parallel)": [[82, "polaris.parallel.get_available_parallel_resources"]], "get_parallel_command() (in module polaris.parallel)": [[83, "polaris.parallel.get_parallel_command"]], "run_command() (in module polaris.parallel)": [[84, "polaris.parallel.run_command"]], "set_cores_per_node() (in module polaris.parallel)": [[85, "polaris.parallel.set_cores_per_node"]], "write() (in module polaris.provenance)": [[86, "polaris.provenance.write"]], "mappingfilestep (class in polaris.remap)": [[87, "polaris.remap.MappingFileStep"]], "__init__() (polaris.remap.mappingfilestep method)": [[87, "polaris.remap.MappingFileStep.__init__"]], "dst_from_lon_lat() (polaris.remap.mappingfilestep method)": [[88, "polaris.remap.MappingFileStep.dst_from_lon_lat"]], "dst_from_mpas() (polaris.remap.mappingfilestep method)": [[89, "polaris.remap.MappingFileStep.dst_from_mpas"]], "dst_from_points() (polaris.remap.mappingfilestep method)": [[90, "polaris.remap.MappingFileStep.dst_from_points"]], "dst_from_proj() (polaris.remap.mappingfilestep method)": [[91, "polaris.remap.MappingFileStep.dst_from_proj"]], "dst_global_lon_lat() (polaris.remap.mappingfilestep method)": [[92, "polaris.remap.MappingFileStep.dst_global_lon_lat"]], "get_remapper() (polaris.remap.mappingfilestep method)": [[93, "polaris.remap.MappingFileStep.get_remapper"]], "runtime_setup() (polaris.remap.mappingfilestep method)": [[94, "polaris.remap.MappingFileStep.runtime_setup"]], "src_from_lon_lat() (polaris.remap.mappingfilestep method)": [[95, "polaris.remap.MappingFileStep.src_from_lon_lat"]], "src_from_mpas() (polaris.remap.mappingfilestep method)": [[96, "polaris.remap.MappingFileStep.src_from_mpas"]], "src_from_proj() (polaris.remap.mappingfilestep method)": [[97, "polaris.remap.MappingFileStep.src_from_proj"]], "run_single_step() (in module polaris.run.serial)": [[98, "polaris.run.serial.run_single_step"]], "run_tests() (in module polaris.run.serial)": [[99, "polaris.run.serial.run_tests"]], "setup_config() (in module polaris.run)": [[100, "polaris.run.setup_config"]], "unpickle_suite() (in module polaris.run)": [[101, "polaris.run.unpickle_suite"]], "setup_case() (in module polaris.setup)": [[102, "polaris.setup.setup_case"]], "setup_cases() (in module polaris.setup)": [[103, "polaris.setup.setup_cases"]], "read() (in module polaris.streams)": [[104, "polaris.streams.read"]], "update_defaults() (in module polaris.streams)": [[105, "polaris.streams.update_defaults"]], "update_tree() (in module polaris.streams)": [[106, "polaris.streams.update_tree"]], "write() (in module polaris.streams)": [[107, "polaris.streams.write"]], "setup_suite() (in module polaris.suite)": [[108, "polaris.suite.setup_suite"]], "compare_timers() (in module polaris.validate)": [[109, "polaris.validate.compare_timers"]], "compare_variables() (in module polaris.validate)": [[110, "polaris.validate.compare_variables"]], "plot_global() (in module polaris.viz.globe)": [[111, "polaris.viz.globe.plot_global"]], "plot_horiz_field() (in module polaris.viz)": [[112, "polaris.viz.plot_horiz_field"]], "polarisyaml (class in polaris.yaml)": [[113, "polaris.yaml.PolarisYaml"]], "__init__() (polaris.yaml.polarisyaml method)": [[113, "polaris.yaml.PolarisYaml.__init__"]], "read() (polaris.yaml.polarisyaml class method)": [[114, "polaris.yaml.PolarisYaml.read"]], "update() (polaris.yaml.polarisyaml method)": [[115, "polaris.yaml.PolarisYaml.update"]], "write() (polaris.yaml.polarisyaml method)": [[116, "polaris.yaml.PolarisYaml.write"]], "main_mpas_to_yaml() (in module polaris.yaml)": [[117, "polaris.yaml.main_mpas_to_yaml"]], "mpas_namelist_and_streams_to_yaml() (in module polaris.yaml)": [[118, "polaris.yaml.mpas_namelist_and_streams_to_yaml"]], "yaml_to_mpas_streams() (in module polaris.yaml)": [[119, "polaris.yaml.yaml_to_mpas_streams"]], "ocean (class in polaris.ocean)": [[128, "polaris.ocean.Ocean"]], "__init__() (polaris.ocean.ocean method)": [[128, "polaris.ocean.Ocean.__init__"]], "oceanmodelstep (class in polaris.ocean.model)": [[129, "polaris.ocean.model.OceanModelStep"]], "__init__() (polaris.ocean.model.oceanmodelstep method)": [[129, "polaris.ocean.model.OceanModelStep.__init__"]], "compute_cell_count() (polaris.ocean.model.oceanmodelstep method)": [[130, "polaris.ocean.model.OceanModelStep.compute_cell_count"]], "constrain_resources() (polaris.ocean.model.oceanmodelstep method)": [[131, "polaris.ocean.model.OceanModelStep.constrain_resources"]], "map_yaml_to_namelist() (polaris.ocean.model.oceanmodelstep method)": [[132, "polaris.ocean.model.OceanModelStep.map_yaml_to_namelist"]], "setup() (polaris.ocean.model.oceanmodelstep method)": [[133, "polaris.ocean.model.OceanModelStep.setup"]], "compute_rpe() (in module polaris.ocean.rpe)": [[134, "polaris.ocean.rpe.compute_rpe"]], "baroclinicchannel (class in polaris.ocean.tests.baroclinic_channel)": [[135, "polaris.ocean.tests.baroclinic_channel.BaroclinicChannel"]], "__init__() (polaris.ocean.tests.baroclinic_channel.baroclinicchannel method)": [[135, "polaris.ocean.tests.baroclinic_channel.BaroclinicChannel.__init__"]], "baroclinicchanneltestcase (class in polaris.ocean.tests.baroclinic_channel)": [[136, "polaris.ocean.tests.baroclinic_channel.BaroclinicChannelTestCase"]], "__init__() (polaris.ocean.tests.baroclinic_channel.baroclinicchanneltestcase method)": [[136, "polaris.ocean.tests.baroclinic_channel.BaroclinicChannelTestCase.__init__"]], "validate() (polaris.ocean.tests.baroclinic_channel.baroclinicchanneltestcase method)": [[137, "polaris.ocean.tests.baroclinic_channel.BaroclinicChannelTestCase.validate"]], "decomptest (class in polaris.ocean.tests.baroclinic_channel.decomp_test)": [[138, "polaris.ocean.tests.baroclinic_channel.decomp_test.DecompTest"]], "__init__() (polaris.ocean.tests.baroclinic_channel.decomp_test.decomptest method)": [[138, "polaris.ocean.tests.baroclinic_channel.decomp_test.DecompTest.__init__"]], "validate() (polaris.ocean.tests.baroclinic_channel.decomp_test.decomptest method)": [[139, "polaris.ocean.tests.baroclinic_channel.decomp_test.DecompTest.validate"]], "default (class in polaris.ocean.tests.baroclinic_channel.default)": [[140, "polaris.ocean.tests.baroclinic_channel.default.Default"]], "__init__() (polaris.ocean.tests.baroclinic_channel.default.default method)": [[140, "polaris.ocean.tests.baroclinic_channel.default.Default.__init__"]], "validate() (polaris.ocean.tests.baroclinic_channel.default.default method)": [[141, "polaris.ocean.tests.baroclinic_channel.default.Default.validate"]], "forward (class in polaris.ocean.tests.baroclinic_channel.forward)": [[142, "polaris.ocean.tests.baroclinic_channel.forward.Forward"]], "__init__() (polaris.ocean.tests.baroclinic_channel.forward.forward method)": [[142, "polaris.ocean.tests.baroclinic_channel.forward.Forward.__init__"]], "compute_cell_count() (polaris.ocean.tests.baroclinic_channel.forward.forward method)": [[143, "polaris.ocean.tests.baroclinic_channel.forward.Forward.compute_cell_count"]], "dynamic_model_config() (polaris.ocean.tests.baroclinic_channel.forward.forward method)": [[144, "polaris.ocean.tests.baroclinic_channel.forward.Forward.dynamic_model_config"]], "initialstate (class in polaris.ocean.tests.baroclinic_channel.initial_state)": [[145, "polaris.ocean.tests.baroclinic_channel.initial_state.InitialState"]], "__init__() (polaris.ocean.tests.baroclinic_channel.initial_state.initialstate method)": [[145, "polaris.ocean.tests.baroclinic_channel.initial_state.InitialState.__init__"]], "run() (polaris.ocean.tests.baroclinic_channel.initial_state.initialstate method)": [[146, "polaris.ocean.tests.baroclinic_channel.initial_state.InitialState.run"]], "setup() (polaris.ocean.tests.baroclinic_channel.initial_state.initialstate method)": [[147, "polaris.ocean.tests.baroclinic_channel.initial_state.InitialState.setup"]], "restarttest (class in polaris.ocean.tests.baroclinic_channel.restart_test)": [[148, "polaris.ocean.tests.baroclinic_channel.restart_test.RestartTest"]], "__init__() (polaris.ocean.tests.baroclinic_channel.restart_test.restarttest method)": [[148, "polaris.ocean.tests.baroclinic_channel.restart_test.RestartTest.__init__"]], "validate() (polaris.ocean.tests.baroclinic_channel.restart_test.restarttest method)": [[149, "polaris.ocean.tests.baroclinic_channel.restart_test.RestartTest.validate"]], "restartstep (class in polaris.ocean.tests.baroclinic_channel.restart_test.restart_step)": [[150, "polaris.ocean.tests.baroclinic_channel.restart_test.restart_step.RestartStep"]], "__init__() (polaris.ocean.tests.baroclinic_channel.restart_test.restart_step.restartstep method)": [[150, "polaris.ocean.tests.baroclinic_channel.restart_test.restart_step.RestartStep.__init__"]], "dynamic_model_config() (polaris.ocean.tests.baroclinic_channel.restart_test.restart_step.restartstep method)": [[151, "polaris.ocean.tests.baroclinic_channel.restart_test.restart_step.RestartStep.dynamic_model_config"]], "rpetest (class in polaris.ocean.tests.baroclinic_channel.rpe_test)": [[152, "polaris.ocean.tests.baroclinic_channel.rpe_test.RpeTest"]], "__init__() (polaris.ocean.tests.baroclinic_channel.rpe_test.rpetest method)": [[152, "polaris.ocean.tests.baroclinic_channel.rpe_test.RpeTest.__init__"]], "configure() (polaris.ocean.tests.baroclinic_channel.rpe_test.rpetest method)": [[153, "polaris.ocean.tests.baroclinic_channel.rpe_test.RpeTest.configure"]], "validate() (polaris.ocean.tests.baroclinic_channel.rpe_test.rpetest method)": [[154, "polaris.ocean.tests.baroclinic_channel.rpe_test.RpeTest.validate"]], "analysis (class in polaris.ocean.tests.baroclinic_channel.rpe_test.analysis)": [[155, "polaris.ocean.tests.baroclinic_channel.rpe_test.analysis.Analysis"]], "__init__() (polaris.ocean.tests.baroclinic_channel.rpe_test.analysis.analysis method)": [[155, "polaris.ocean.tests.baroclinic_channel.rpe_test.analysis.Analysis.__init__"]], "run() (polaris.ocean.tests.baroclinic_channel.rpe_test.analysis.analysis method)": [[156, "polaris.ocean.tests.baroclinic_channel.rpe_test.analysis.Analysis.run"]], "setup() (polaris.ocean.tests.baroclinic_channel.rpe_test.analysis.analysis method)": [[157, "polaris.ocean.tests.baroclinic_channel.rpe_test.analysis.Analysis.setup"]], "threadstest (class in polaris.ocean.tests.baroclinic_channel.threads_test)": [[158, "polaris.ocean.tests.baroclinic_channel.threads_test.ThreadsTest"]], "__init__() (polaris.ocean.tests.baroclinic_channel.threads_test.threadstest method)": [[158, "polaris.ocean.tests.baroclinic_channel.threads_test.ThreadsTest.__init__"]], "validate() (polaris.ocean.tests.baroclinic_channel.threads_test.threadstest method)": [[159, "polaris.ocean.tests.baroclinic_channel.threads_test.ThreadsTest.validate"]], "viz (class in polaris.ocean.tests.baroclinic_channel.viz)": [[160, "polaris.ocean.tests.baroclinic_channel.viz.Viz"]], "__init__() (polaris.ocean.tests.baroclinic_channel.viz.viz method)": [[160, "polaris.ocean.tests.baroclinic_channel.viz.Viz.__init__"]], "run() (polaris.ocean.tests.baroclinic_channel.viz.viz method)": [[161, "polaris.ocean.tests.baroclinic_channel.viz.Viz.run"]], "globalconvergence (class in polaris.ocean.tests.global_convergence)": [[162, "polaris.ocean.tests.global_convergence.GlobalConvergence"]], "__init__() (polaris.ocean.tests.global_convergence.globalconvergence method)": [[162, "polaris.ocean.tests.global_convergence.GlobalConvergence.__init__"]], "cosinebell (class in polaris.ocean.tests.global_convergence.cosine_bell)": [[163, "polaris.ocean.tests.global_convergence.cosine_bell.CosineBell"]], "__init__() (polaris.ocean.tests.global_convergence.cosine_bell.cosinebell method)": [[163, "polaris.ocean.tests.global_convergence.cosine_bell.CosineBell.__init__"]], "configure() (polaris.ocean.tests.global_convergence.cosine_bell.cosinebell method)": [[164, "polaris.ocean.tests.global_convergence.cosine_bell.CosineBell.configure"]], "validate() (polaris.ocean.tests.global_convergence.cosine_bell.cosinebell method)": [[165, "polaris.ocean.tests.global_convergence.cosine_bell.CosineBell.validate"]], "analysis (class in polaris.ocean.tests.global_convergence.cosine_bell.analysis)": [[166, "polaris.ocean.tests.global_convergence.cosine_bell.analysis.Analysis"]], "__init__() (polaris.ocean.tests.global_convergence.cosine_bell.analysis.analysis method)": [[166, "polaris.ocean.tests.global_convergence.cosine_bell.analysis.Analysis.__init__"]], "rmse() (polaris.ocean.tests.global_convergence.cosine_bell.analysis.analysis method)": [[167, "polaris.ocean.tests.global_convergence.cosine_bell.analysis.Analysis.rmse"]], "run() (polaris.ocean.tests.global_convergence.cosine_bell.analysis.analysis method)": [[168, "polaris.ocean.tests.global_convergence.cosine_bell.analysis.Analysis.run"]], "forward (class in polaris.ocean.tests.global_convergence.cosine_bell.forward)": [[169, "polaris.ocean.tests.global_convergence.cosine_bell.forward.Forward"]], "__init__() (polaris.ocean.tests.global_convergence.cosine_bell.forward.forward method)": [[169, "polaris.ocean.tests.global_convergence.cosine_bell.forward.Forward.__init__"]], "compute_cell_count() (polaris.ocean.tests.global_convergence.cosine_bell.forward.forward method)": [[170, "polaris.ocean.tests.global_convergence.cosine_bell.forward.Forward.compute_cell_count"]], "dynamic_model_config() (polaris.ocean.tests.global_convergence.cosine_bell.forward.forward method)": [[171, "polaris.ocean.tests.global_convergence.cosine_bell.forward.Forward.dynamic_model_config"]], "init (class in polaris.ocean.tests.global_convergence.cosine_bell.init)": [[172, "polaris.ocean.tests.global_convergence.cosine_bell.init.Init"]], "__init__() (polaris.ocean.tests.global_convergence.cosine_bell.init.init method)": [[172, "polaris.ocean.tests.global_convergence.cosine_bell.init.Init.__init__"]], "run() (polaris.ocean.tests.global_convergence.cosine_bell.init.init method)": [[173, "polaris.ocean.tests.global_convergence.cosine_bell.init.Init.run"]], "viz (class in polaris.ocean.tests.global_convergence.cosine_bell.viz)": [[174, "polaris.ocean.tests.global_convergence.cosine_bell.viz.Viz"]], "__init__() (polaris.ocean.tests.global_convergence.cosine_bell.viz.viz method)": [[174, "polaris.ocean.tests.global_convergence.cosine_bell.viz.Viz.__init__"]], "run() (polaris.ocean.tests.global_convergence.cosine_bell.viz.viz method)": [[175, "polaris.ocean.tests.global_convergence.cosine_bell.viz.Viz.run"]], "vizmap (class in polaris.ocean.tests.global_convergence.cosine_bell.viz)": [[176, "polaris.ocean.tests.global_convergence.cosine_bell.viz.VizMap"]], "__init__() (polaris.ocean.tests.global_convergence.cosine_bell.viz.vizmap method)": [[176, "polaris.ocean.tests.global_convergence.cosine_bell.viz.VizMap.__init__"]], "run() (polaris.ocean.tests.global_convergence.cosine_bell.viz.vizmap method)": [[177, "polaris.ocean.tests.global_convergence.cosine_bell.viz.VizMap.run"]], "inertialgravitywave (class in polaris.ocean.tests.inertial_gravity_wave)": [[178, "polaris.ocean.tests.inertial_gravity_wave.InertialGravityWave"]], "__init__() (polaris.ocean.tests.inertial_gravity_wave.inertialgravitywave method)": [[178, "polaris.ocean.tests.inertial_gravity_wave.InertialGravityWave.__init__"]], "analysis (class in polaris.ocean.tests.inertial_gravity_wave.analysis)": [[179, "polaris.ocean.tests.inertial_gravity_wave.analysis.Analysis"]], "__init__() (polaris.ocean.tests.inertial_gravity_wave.analysis.analysis method)": [[179, "polaris.ocean.tests.inertial_gravity_wave.analysis.Analysis.__init__"]], "run() (polaris.ocean.tests.inertial_gravity_wave.analysis.analysis method)": [[180, "polaris.ocean.tests.inertial_gravity_wave.analysis.Analysis.run"]], "convergence (class in polaris.ocean.tests.inertial_gravity_wave.convergence)": [[181, "polaris.ocean.tests.inertial_gravity_wave.convergence.Convergence"]], "__init__() (polaris.ocean.tests.inertial_gravity_wave.convergence.convergence method)": [[181, "polaris.ocean.tests.inertial_gravity_wave.convergence.Convergence.__init__"]], "validate() (polaris.ocean.tests.inertial_gravity_wave.convergence.convergence method)": [[182, "polaris.ocean.tests.inertial_gravity_wave.convergence.Convergence.validate"]], "exactsolution (class in polaris.ocean.tests.inertial_gravity_wave.exact_solution)": [[183, "polaris.ocean.tests.inertial_gravity_wave.exact_solution.ExactSolution"]], "__init__() (polaris.ocean.tests.inertial_gravity_wave.exact_solution.exactsolution method)": [[183, "polaris.ocean.tests.inertial_gravity_wave.exact_solution.ExactSolution.__init__"]], "ssh() (polaris.ocean.tests.inertial_gravity_wave.exact_solution.exactsolution method)": [[184, "polaris.ocean.tests.inertial_gravity_wave.exact_solution.ExactSolution.ssh"]], "forward (class in polaris.ocean.tests.inertial_gravity_wave.forward)": [[185, "polaris.ocean.tests.inertial_gravity_wave.forward.Forward"]], "__init__() (polaris.ocean.tests.inertial_gravity_wave.forward.forward method)": [[185, "polaris.ocean.tests.inertial_gravity_wave.forward.Forward.__init__"]], "compute_cell_count() (polaris.ocean.tests.inertial_gravity_wave.forward.forward method)": [[186, "polaris.ocean.tests.inertial_gravity_wave.forward.Forward.compute_cell_count"]], "dynamic_model_config() (polaris.ocean.tests.inertial_gravity_wave.forward.forward method)": [[187, "polaris.ocean.tests.inertial_gravity_wave.forward.Forward.dynamic_model_config"]], "initialstate (class in polaris.ocean.tests.inertial_gravity_wave.initial_state)": [[188, "polaris.ocean.tests.inertial_gravity_wave.initial_state.InitialState"]], "__init__() (polaris.ocean.tests.inertial_gravity_wave.initial_state.initialstate method)": [[188, "polaris.ocean.tests.inertial_gravity_wave.initial_state.InitialState.__init__"]], "run() (polaris.ocean.tests.inertial_gravity_wave.initial_state.initialstate method)": [[189, "polaris.ocean.tests.inertial_gravity_wave.initial_state.InitialState.run"]], "viz (class in polaris.ocean.tests.inertial_gravity_wave.viz)": [[190, "polaris.ocean.tests.inertial_gravity_wave.viz.Viz"]], "__init__() (polaris.ocean.tests.inertial_gravity_wave.viz.viz method)": [[190, "polaris.ocean.tests.inertial_gravity_wave.viz.Viz.__init__"]], "run() (polaris.ocean.tests.inertial_gravity_wave.viz.viz method)": [[191, "polaris.ocean.tests.inertial_gravity_wave.viz.Viz.run"]], "manufacturedsolution (class in polaris.ocean.tests.manufactured_solution)": [[192, "polaris.ocean.tests.manufactured_solution.ManufacturedSolution"]], "__init__() (polaris.ocean.tests.manufactured_solution.manufacturedsolution method)": [[192, "polaris.ocean.tests.manufactured_solution.ManufacturedSolution.__init__"]], "analysis (class in polaris.ocean.tests.manufactured_solution.analysis)": [[193, "polaris.ocean.tests.manufactured_solution.analysis.Analysis"]], "__init__() (polaris.ocean.tests.manufactured_solution.analysis.analysis method)": [[193, "polaris.ocean.tests.manufactured_solution.analysis.Analysis.__init__"]], "run() (polaris.ocean.tests.manufactured_solution.analysis.analysis method)": [[194, "polaris.ocean.tests.manufactured_solution.analysis.Analysis.run"]], "convergence (class in polaris.ocean.tests.manufactured_solution.convergence)": [[195, "polaris.ocean.tests.manufactured_solution.convergence.Convergence"]], "__init__() (polaris.ocean.tests.manufactured_solution.convergence.convergence method)": [[195, "polaris.ocean.tests.manufactured_solution.convergence.Convergence.__init__"]], "validate() (polaris.ocean.tests.manufactured_solution.convergence.convergence method)": [[196, "polaris.ocean.tests.manufactured_solution.convergence.Convergence.validate"]], "exactsolution (class in polaris.ocean.tests.manufactured_solution.exact_solution)": [[197, "polaris.ocean.tests.manufactured_solution.exact_solution.ExactSolution"]], "__init__() (polaris.ocean.tests.manufactured_solution.exact_solution.exactsolution method)": [[197, "polaris.ocean.tests.manufactured_solution.exact_solution.ExactSolution.__init__"]], "ssh() (polaris.ocean.tests.manufactured_solution.exact_solution.exactsolution method)": [[198, "polaris.ocean.tests.manufactured_solution.exact_solution.ExactSolution.ssh"]], "forward (class in polaris.ocean.tests.manufactured_solution.forward)": [[199, "polaris.ocean.tests.manufactured_solution.forward.Forward"]], "__init__() (polaris.ocean.tests.manufactured_solution.forward.forward method)": [[199, "polaris.ocean.tests.manufactured_solution.forward.Forward.__init__"]], "compute_cell_count() (polaris.ocean.tests.manufactured_solution.forward.forward method)": [[200, "polaris.ocean.tests.manufactured_solution.forward.Forward.compute_cell_count"]], "dynamic_model_config() (polaris.ocean.tests.manufactured_solution.forward.forward method)": [[201, "polaris.ocean.tests.manufactured_solution.forward.Forward.dynamic_model_config"]], "initialstate (class in polaris.ocean.tests.manufactured_solution.initial_state)": [[202, "polaris.ocean.tests.manufactured_solution.initial_state.InitialState"]], "__init__() (polaris.ocean.tests.manufactured_solution.initial_state.initialstate method)": [[202, "polaris.ocean.tests.manufactured_solution.initial_state.InitialState.__init__"]], "run() (polaris.ocean.tests.manufactured_solution.initial_state.initialstate method)": [[203, "polaris.ocean.tests.manufactured_solution.initial_state.InitialState.run"]], "viz (class in polaris.ocean.tests.manufactured_solution.viz)": [[204, "polaris.ocean.tests.manufactured_solution.viz.Viz"]], "__init__() (polaris.ocean.tests.manufactured_solution.viz.viz method)": [[204, "polaris.ocean.tests.manufactured_solution.viz.Viz.__init__"]], "run() (polaris.ocean.tests.manufactured_solution.viz.viz method)": [[205, "polaris.ocean.tests.manufactured_solution.viz.Viz.run"]], "singlecolumn (class in polaris.ocean.tests.single_column)": [[206, "polaris.ocean.tests.single_column.SingleColumn"]], "__init__() (polaris.ocean.tests.single_column.singlecolumn method)": [[206, "polaris.ocean.tests.single_column.SingleColumn.__init__"]], "cvmix (class in polaris.ocean.tests.single_column.cvmix)": [[207, "polaris.ocean.tests.single_column.cvmix.CVMix"]], "__init__() (polaris.ocean.tests.single_column.cvmix.cvmix method)": [[207, "polaris.ocean.tests.single_column.cvmix.CVMix.__init__"]], "validate() (polaris.ocean.tests.single_column.cvmix.cvmix method)": [[208, "polaris.ocean.tests.single_column.cvmix.CVMix.validate"]], "forward (class in polaris.ocean.tests.single_column.forward)": [[209, "polaris.ocean.tests.single_column.forward.Forward"]], "__init__() (polaris.ocean.tests.single_column.forward.forward method)": [[209, "polaris.ocean.tests.single_column.forward.Forward.__init__"]], "idealage (class in polaris.ocean.tests.single_column.ideal_age)": [[210, "polaris.ocean.tests.single_column.ideal_age.IdealAge"]], "__init__() (polaris.ocean.tests.single_column.ideal_age.idealage method)": [[210, "polaris.ocean.tests.single_column.ideal_age.IdealAge.__init__"]], "validate() (polaris.ocean.tests.single_column.ideal_age.idealage method)": [[211, "polaris.ocean.tests.single_column.ideal_age.IdealAge.validate"]], "initialstate (class in polaris.ocean.tests.single_column.initial_state)": [[212, "polaris.ocean.tests.single_column.initial_state.InitialState"]], "__init__() (polaris.ocean.tests.single_column.initial_state.initialstate method)": [[212, "polaris.ocean.tests.single_column.initial_state.InitialState.__init__"]], "run() (polaris.ocean.tests.single_column.initial_state.initialstate method)": [[213, "polaris.ocean.tests.single_column.initial_state.InitialState.run"]], "viz (class in polaris.ocean.tests.single_column.viz)": [[214, "polaris.ocean.tests.single_column.viz.Viz"]], "__init__() (polaris.ocean.tests.single_column.viz.viz method)": [[214, "polaris.ocean.tests.single_column.viz.Viz.__init__"]], "run() (polaris.ocean.tests.single_column.viz.viz method)": [[215, "polaris.ocean.tests.single_column.viz.Viz.run"]], "generate_1d_grid() (in module polaris.ocean.vertical.grid_1d)": [[216, "polaris.ocean.vertical.grid_1d.generate_1d_grid"]], "write_1d_grid() (in module polaris.ocean.vertical.grid_1d)": [[217, "polaris.ocean.vertical.grid_1d.write_1d_grid"]], "init_vertical_coord() (in module polaris.ocean.vertical)": [[218, "polaris.ocean.vertical.init_vertical_coord"]], "alter_bottom_depth() (in module polaris.ocean.vertical.partial_cells)": [[219, "polaris.ocean.vertical.partial_cells.alter_bottom_depth"]], "alter_ssh() (in module polaris.ocean.vertical.partial_cells)": [[220, "polaris.ocean.vertical.partial_cells.alter_ssh"]], "compute_min_max_level_cell() (in module polaris.ocean.vertical.zlevel)": [[221, "polaris.ocean.vertical.zlevel.compute_min_max_level_cell"]], "compute_z_level_layer_thickness() (in module polaris.ocean.vertical.zlevel)": [[222, "polaris.ocean.vertical.zlevel.compute_z_level_layer_thickness"]], "compute_z_level_resting_thickness() (in module polaris.ocean.vertical.zlevel)": [[223, "polaris.ocean.vertical.zlevel.compute_z_level_resting_thickness"]], "init_z_level_vertical_coord() (in module polaris.ocean.vertical.zlevel)": [[224, "polaris.ocean.vertical.zlevel.init_z_level_vertical_coord"]], "init_z_star_vertical_coord() (in module polaris.ocean.vertical.zstar)": [[225, "polaris.ocean.vertical.zstar.init_z_star_vertical_coord"]]}})